"use strict";(self.webpackChunkml_notebook=self.webpackChunkml_notebook||[]).push([[2731],{3905:(a,e,t)=>{t.d(e,{Zo:()=>o,kt:()=>h});var s=t(67294);function n(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function m(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(a);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,s)}return t}function p(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?m(Object(t),!0).forEach((function(e){n(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function r(a,e){if(null==a)return{};var t,s,n=function(a,e){if(null==a)return{};var t,s,n={},m=Object.keys(a);for(s=0;s<m.length;s++)t=m[s],e.indexOf(t)>=0||(n[t]=a[t]);return n}(a,e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(a);for(s=0;s<m.length;s++)t=m[s],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(n[t]=a[t])}return n}var l=s.createContext({}),i=function(a){var e=s.useContext(l),t=e;return a&&(t="function"==typeof a?a(e):p(p({},e),a)),t},o=function(a){var e=i(a.components);return s.createElement(l.Provider,{value:e},a.children)},N="mdxType",c={inlineCode:"code",wrapper:function(a){var e=a.children;return s.createElement(s.Fragment,{},e)}},k=s.forwardRef((function(a,e){var t=a.components,n=a.mdxType,m=a.originalType,l=a.parentName,o=r(a,["components","mdxType","originalType","parentName"]),N=i(t),k=n,h=N["".concat(l,".").concat(k)]||N[k]||c[k]||m;return t?s.createElement(h,p(p({ref:e},o),{},{components:t})):s.createElement(h,p({ref:e},o))}));function h(a,e){var t=arguments,n=e&&e.mdxType;if("string"==typeof a||n){var m=t.length,p=new Array(m);p[0]=k;var r={};for(var l in e)hasOwnProperty.call(e,l)&&(r[l]=e[l]);r.originalType=a,r[N]="string"==typeof a?a:n,p[1]=r;for(var i=2;i<m;i++)p[i]=t[i];return s.createElement.apply(null,p)}return s.createElement.apply(null,t)}k.displayName="MDXCreateElement"},98362:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>w,contentTitle:()=>d,default:()=>_,frontMatter:()=>h,metadata:()=>g,toc:()=>u});var s=t(3905),n=Object.defineProperty,m=Object.defineProperties,p=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,o=(a,e,t)=>e in a?n(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,N=(a,e)=>{for(var t in e||(e={}))l.call(e,t)&&o(a,t,e[t]);if(r)for(var t of r(e))i.call(e,t)&&o(a,t,e[t]);return a},c=(a,e)=>m(a,p(e)),k=(a,e)=>{var t={};for(var s in a)l.call(a,s)&&e.indexOf(s)<0&&(t[s]=a[s]);if(null!=a&&r)for(var s of r(a))e.indexOf(s)<0&&i.call(a,s)&&(t[s]=a[s]);return t};const h={title:"Swin Transformer - Hierarchical Vision Transformer using Shifted Windows",authors:["asthestarsfall"],tags:["attention-mechanism","transformer","inductive-bias"]},d=void 0,g={permalink:"/blog/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows",editUrl:"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows.md",source:"@site/blog/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows.md",title:"Swin Transformer - Hierarchical Vision Transformer using Shifted Windows",description:"\u5206\u5c42Local Vision Transformer\uff0c\u901a\u7528\u4e3b\u5e72\u7f51\u7edc\uff0c\u5404\u7c7b\u4e0b\u6e38\u4efb\u52a1\u5b9e\u73b0SOTA\u3002Best Paper Award!",date:"2023-12-31T09:31:53.000Z",formattedDate:"2023\u5e7412\u670831\u65e5",tags:[{label:"attention-mechanism",permalink:"/blog/tags/attention-mechanism"},{label:"transformer",permalink:"/blog/tags/transformer"},{label:"inductive-bias",permalink:"/blog/tags/inductive-bias"}],readingTime:20.445,hasTruncateMarker:!0,authors:[{name:"AsTheStarsFall",title:"None",url:"https://github.com/AsTheStarsFalll",imageURL:"https://github.yuuza.net/AsTheStarsFalll.png",key:"asthestarsfall"}],frontMatter:{title:"Swin Transformer - Hierarchical Vision Transformer using Shifted Windows",authors:["asthestarsfall"],tags:["attention-mechanism","transformer","inductive-bias"]},prevItem:{title:"PP-LCNet - A Lightweight CPU Convolutional Neural Network",permalink:"/blog/[44]PP-LCNet-A-Lightweight-CPU-Convolutional-Neural-Network"},nextItem:{title:"Demystifying Local Vision Transformer",permalink:"/blog/[46]Demystifying-Local-Vision-Transformer"}},w={authorsImageUrls:[void 0]},u=[{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",level:2},{value:"Method",id:"method",level:2},{value:"\u6574\u4f53\u7ed3\u6784",id:"\u6574\u4f53\u7ed3\u6784",level:3},{value:"Shifted Window based Self-Attention",id:"shifted-window-based-self-attention",level:3},{value:"Self-attention in non-overlapped windows",id:"self-attention-in-non-overlapped-windows",level:4},{value:"Shifted window partitioning in successive blocks",id:"shifted-window-partitioning-in-successive-blocks",level:4},{value:"Relative position bias",id:"relative-position-bias",level:4},{value:"Patch merging",id:"patch-merging",level:3},{value:"\u4ee3\u7801\u5206\u6790",id:"\u4ee3\u7801\u5206\u6790",level:2},{value:"Window operation",id:"window-operation",level:3},{value:"WindowAttention",id:"windowattention",level:3},{value:"SwinTransformer",id:"swintransformer",level:3},{value:"downsample",id:"downsample",level:3},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",level:3},{value:"\u901a\u7528\u578b\u7684\u4e3b\u5e72\u7f51\u7edc\u9700\u8981\u4ec0\u4e48\uff1f",id:"\u901a\u7528\u578b\u7684\u4e3b\u5e72\u7f51\u7edc\u9700\u8981\u4ec0\u4e48",level:2},{value:"local vision transformer",id:"local-vision-transformer",level:2}],f={toc:u},y="wrapper";function _(a){var e=a,{components:t}=e,n=k(e,["components"]);return(0,s.kt)(y,c(N(N({},f),n),{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u5206\u5c42Local Vision Transformer\uff0c\u901a\u7528\u4e3b\u5e72\u7f51\u7edc\uff0c\u5404\u7c7b\u4e0b\u6e38\u4efb\u52a1\u5b9e\u73b0SOTA\u3002Best Paper Award!"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u8bba\u6587\u540d\u79f0\uff1a",(0,s.kt)("a",N({parentName:"p"},{href:"https://arxiv.org/abs/2103.14030"}),"Swin Transformer: Hierarchical Vision Transformer using Shifted Windows")),(0,s.kt)("p",{parentName:"blockquote"},"\u4f5c\u8005\uff1aZe Liu \uff0cYutong Lin\uff0cYue Cao\uff0cHan Hu\uff0cYixuan Wei\uff0cZheng Zhang\uff0cStephen Lin\uff0cBaining Guo"),(0,s.kt)("p",{parentName:"blockquote"},"Code\uff1a",(0,s.kt)("a",N({parentName:"p"},{href:"https://github.com/microsoft/Swin-Transformer"}),"https://github.com/microsoft/Swin-Transformer"))),(0,s.kt)("h2",N({},{id:"\u4ecb\u7ecd"}),"\u4ecb\u7ecd"),(0,s.kt)("p",null,"\u81eaAlexNet\u4ee5\u6765\uff0cCNN\u4f5c\u4e3a\u9aa8\u5e72\uff08backbone\uff09\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u5e94\u7528\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u7f51\u7edc\u7ed3\u6784\u7684\u6f14\u53d8\u5219\u8d70\u4e86\u4e00\u6761\u4e0d\u540c\u7684\u9053\u8def\uff0c\u73b0\u5728\u7684\u4e3b\u6d41\u7ed3\u6784\u662fTransformer\u3002"),(0,s.kt)("p",null,"Transformer\u662f\u4e3a\u5e8f\u5217\u5efa\u6a21\u548c\u8f6c\u6362\u4efb\u52a1\u800c\u8bbe\u8ba1\u7684\uff0c\u5b83\u4ee5\u5173\u6ce8\u6570\u636e\u4e2d\u7684\u957f\u671f\u4f9d\u8d56\u5173\u7cfb\u800c\u8457\u79f0\u3002\u5176\u5728NLP\u9886\u57df\u7684\u5de8\u5927\u6210\u529f\u5438\u5f15\u4e86\u4eba\u4eec\u7814\u7a76\u5b83\u5bf9CV\u7684\u9002\u5e94\u6027\uff0c\u6700\u8fd1\u7684\u5b9e\u9a8c\u663e\u793a\u5176\u5728\u56fe\u50cf\u5206\u7c7b\u548c\u8054\u5408\u89c6\u89c9\u8bed\u8a00\u5efa\u6a21\u65b9\u9762\u6709\u6240\u6210\u6548\u3002"),(0,s.kt)("p",null,"\u672c\u6587\u7684\u4e3b\u8981\u8d21\u732e\u6709\uff1a"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\u63d0\u51fa\u4e86\u4e00\u79cd\u5206\u5c42Transformer\uff0c\u5176\u53ef\u4ee5\u4f5c\u4e3a\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u901a\u7528\u4e3b\u5e72\u7f51\u7edc\uff0c\u5e76\u4e14\u5728\u5404\u7c7b\u4e0b\u6e38\u4efb\u52a1\u4e0a\u53d6\u5f97SOTA\uff1b"),(0,s.kt)("li",{parentName:"ol"},"\u901a\u8fc7Shift Windows\u5b9e\u73b0\u4e86\u5bf9\u8f93\u5165\u56fe\u50cf\u5c3a\u5bf8\u7684\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002")),(0,s.kt)("img",{src:"https://gitee.com/Thedeadleaf/images/raw/master/image-20211020204110669.png",alt:"image-20211020204110669"}),(0,s.kt)("h2",N({},{id:"method"}),"Method"),(0,s.kt)("h3",N({},{id:"\u6574\u4f53\u7ed3\u6784"}),"\u6574\u4f53\u7ed3\u6784"),(0,s.kt)("img",{src:"https://gitee.com/Thedeadleaf/images/raw/master/image-20211018125415232.png",alt:"image-20211018125415232"}),(0,s.kt)("p",null,"\u4e0a\u56fe\u662fSwin Transformer\u4e2d\u6700\u5c0f\u7248\u672c\u7684\u53ef\u89c6\u5316\u7ed3\u6784\u56fe\uff0c\u5176\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\u901a\u8fc7Patch Partition\u5c06\u8f93\u5165\u7684RGB\u56fe\u50cf\u5206\u5272\u6210\u4e0d\u91cd\u53e0\u7684Patch\uff0c\u5806\u53e0\u8fdbB\u7ef4\u5ea6\uff1b"),(0,s.kt)("li",{parentName:"ol"},"\u4f7f\u7528Linear Embedding\u5c06\u901a\u9053\u6620\u5c04\u81f3C\uff1b"),(0,s.kt)("li",{parentName:"ol"},"\u7d27\u63a5\u7740\u4f7f\u7528\u4e24\u4e2a\u8fde\u7eed\u7684Swin Transformer Block\uff0c\u5c06\u4e0a\u8ff0\u7ec4\u5408\u79f0\u4e3aStage 1\uff1b"),(0,s.kt)("li",{parentName:"ol"},"\u4e3a\u4e86\u83b7\u5f97\u5206\u5c42\u8868\u793a\uff0c\u901a\u8fc7Patch Merging\u5bf9Stage 1\u7684\u8f93\u51fa\u7ee7\u7eed\u8fdb\u884c\u5206\u5757\uff0c\u5e76\u4e14\u540c\u6837\u4f1a\u4f7f\u7528Linear Layer\u8fdb\u884c\u901a\u9053\u964d\u7ef4\uff0c\u518d\u4f7f\u7528\u51e0\u4e2a\u8fde\u7eed\u7684Swin Transformer Block\uff1b\u5982\u6b64\uff0c\u4fbf\u80fd\u6784\u6210\u66f4\u591a\u7684Stage.")),(0,s.kt)("h3",N({},{id:"shifted-window-based-self-attention"}),"Shifted Window based Self-Attention"),(0,s.kt)("img",{src:"https://gitee.com/Thedeadleaf/images/raw/master/image-20211018165411438.png",alt:"image-20211018165411438"}),(0,s.kt)("p",null,"\u8fde\u7eed\u7684Swin Transformer\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5176\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u7b2c\u4e00\u4e2aSwin Transfromer Block\uff0c\u4f1a\u5148\u5bf9\u8f93\u5165",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"Z"),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1")))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"Z^{l-1}")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8491em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8491em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1"))))))))))))),"\u4f7f\u7528LayerNorm\uff0c\u7136\u540e\u4f7f\u7528W-MSA\uff08Window based Self-Attention\uff09\uff0c\u5e76\u4e14\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\u5f97\u5230",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mover",N({parentName:"msup"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"z"),(0,s.kt)("mo",{parentName:"mover"},"^")),(0,s.kt)("mi",{parentName:"msup"},"l"))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"\\hat z^l")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8491em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.6944em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.04398em"}}),"z")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1944em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8491em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l")))))))))))),"\uff0c\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a"),(0,s.kt)("div",N({parentName:"li"},{className:"math math-display"}),(0,s.kt)("span",N({parentName:"div"},{className:"katex-display"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mover",N({parentName:"msup"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"Z"),(0,s.kt)("mo",{parentName:"mover"},"^")),(0,s.kt)("mi",{parentName:"msup"},"l")),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"W"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mi",{parentName:"mrow"},"A"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"L"),(0,s.kt)("mi",{parentName:"mrow"},"N"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"Z"),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1"))),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"Z"),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1")))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"\\hat Z^l = W-MSA(LN(Z^{l-1}))+Z^{l-1}")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9468em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9468em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.2523em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1667em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"="),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.7667em",verticalAlign:"-0.0833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.13889em"}}),"W"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.1491em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05764em"}}),"MS"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"A"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"L"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"N"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1"))))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"))"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8991em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1"))))))))))))))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u63a5\u4e0b\u6765\u4f7f\u7528LN\u3001MLP\uff08\u4e24\u5c42\u3001GELU\u6fc0\u6d3b\u51fd\u6570\uff09\u548c\u6b8b\u5dee\u8fde\u63a5\u7684\u5f97\u5230\u6700\u7ec8\u8f93\u51fa",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"Z"),(0,s.kt)("mi",{parentName:"msup"},"l"))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"Z^l")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8491em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8491em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l")))))))))))),"\uff0c\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a"),(0,s.kt)("div",N({parentName:"li"},{className:"math math-display"}),(0,s.kt)("span",N({parentName:"div"},{className:"katex-display"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"Z"),(0,s.kt)("mi",{parentName:"msup"},"l")),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mi",{parentName:"mrow"},"L"),(0,s.kt)("mi",{parentName:"mrow"},"P"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"L"),(0,s.kt)("mi",{parentName:"mrow"},"N"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mover",N({parentName:"msup"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"Z"),(0,s.kt)("mo",{parentName:"mover"},"^")),(0,s.kt)("mi",{parentName:"msup"},"l")),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mover",N({parentName:"msup"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"Z"),(0,s.kt)("mo",{parentName:"mover"},"^")),(0,s.kt)("mi",{parentName:"msup"},"l"))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"Z^l=MLP(LN(\\hat Z^l))+\\hat Z^l")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8991em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"="),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.1968em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"L"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.13889em"}}),"P"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"L"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"N"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9468em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.2523em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1667em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"))"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9468em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9468em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.2523em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1667em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l")))))))))))))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u63a5\u4e0b\u6765\u7684Swin Transformer Block\uff0c\u4f1a\u5c06\u5176W-MSA\u66ff\u6362\u6210SW-MSA\uff08Shifted Window based Self-Attention\uff09\uff0c\u53ef\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a"),(0,s.kt)("div",N({parentName:"li"},{className:"math math-display"}),(0,s.kt)("span",N({parentName:"div"},{className:"katex-display"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mover",N({parentName:"msup"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"Z"),(0,s.kt)("mo",{parentName:"mover"},"^")),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"))),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mi",{parentName:"mrow"},"W"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mi",{parentName:"mrow"},"A"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"L"),(0,s.kt)("mi",{parentName:"mrow"},"N"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"Z"),(0,s.kt)("mi",{parentName:"msup"},"l")),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"Z"),(0,s.kt)("mi",{parentName:"msup"},"l")),(0,s.kt)("mspace",N({parentName:"mrow"},{linebreak:"newline"})),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"Z"),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"))),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mi",{parentName:"mrow"},"L"),(0,s.kt)("mi",{parentName:"mrow"},"P"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"L"),(0,s.kt)("mi",{parentName:"mrow"},"N"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mover",N({parentName:"msup"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"Z"),(0,s.kt)("mo",{parentName:"mover"},"^")),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"))),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mover",N({parentName:"msup"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"Z"),(0,s.kt)("mo",{parentName:"mover"},"^")),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("mi",{parentName:"mrow"},"l"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1")))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"\\hat Z^{l+1} = SW-MSA(LN(Z^{l}))+Z^{l}\\\\ Z^{l+1}=MLP(LN(\\hat Z^{l+1}))+\\hat Z^{l+1}")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9468em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9468em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.2523em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1667em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1"))))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"="),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.7667em",verticalAlign:"-0.0833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05764em"}}),"S"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.13889em"}}),"W"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.1491em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05764em"}}),"MS"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"A"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"L"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"N"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l"))))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"))"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8991em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l")))))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace newline"})),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8991em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1"))))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"="),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.1968em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"L"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.13889em"}}),"P"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"L"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"N"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9468em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.2523em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1667em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1"))))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"))"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9468em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9468em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"Z")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.2523em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1667em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8991em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"}}),"l"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1")))))))))))))))),(0,s.kt)("p",null,"\u81f3\u6b64\u4fbf\u5b8c\u6210\u4e86\u8fde\u7eed\u7684Swin Transformer Block\u7684\u6784\u5efa\uff0c\u7531\u4e8e\u9700\u8981\u5c06\u8fd9\u4e24\u79cd\u7ec4\u5408\u8d77\u6765\u8fbe\u5230\u4fe1\u606f\u4ea4\u6362\u7684\u76ee\u7684\uff0c\u56e0\u6b64\u5c42\u6570\u7684\u8bbe\u7f6e\u5e94\u4e3a\u5076\u6570\u3002"),(0,s.kt)("h4",N({},{id:"self-attention-in-non-overlapped-windows"}),"Self-attention in non-overlapped windows"),(0,s.kt)("p",null,"\u4e3a\u4e86\u5b9e\u73b0\u7ebf\u6027\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u63d0\u51fa\u5728Window\uff08\u7a97\u53e3\uff09\u4e2d\u8fdb\u884c\u5efa\u6a21\uff0c\u7a97\u53e3\u4ee5\u975e\u91cd\u53e0\u7684\u65b9\u5f0f\u5747\u5300\u5730\u5212\u5206\u56fe\u50cf\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5728\u5c40\u90e8\u7a97\u53e3\u4e2d\u8fdb\u884cPatch\u7684\u5173\u7cfb\u5efa\u6a21\uff0c\u8ba1\u7b97\u6ce8\u610f\u529b\u65f6\uff0c\u4f1a\u5c06Patch\u5c55\u54c1\u4e0e\u6807\u51c6\u591a\u5934\u81ea\u6ce8\u610f\u529b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5bf9\u6bd4\u5982\u4e0b\uff1a"),(0,s.kt)("div",N({},{className:"math math-display"}),(0,s.kt)("span",N({parentName:"div"},{className:"katex-display"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",N({parentName:"mrow"},{mathvariant:"normal"}),"\u03a9"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mi",{parentName:"mrow"},"A"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mn",{parentName:"mrow"},"4"),(0,s.kt)("mi",{parentName:"mrow"},"h"),(0,s.kt)("mi",{parentName:"mrow"},"w"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"C"),(0,s.kt)("mn",{parentName:"msup"},"2")),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"2"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"h"),(0,s.kt)("mi",{parentName:"mrow"},"w"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mo",N({parentName:"msup"},{stretchy:"false"}),")"),(0,s.kt)("mn",{parentName:"msup"},"2")),(0,s.kt)("mi",{parentName:"mrow"},"C"),(0,s.kt)("mspace",N({parentName:"mrow"},{linebreak:"newline"})),(0,s.kt)("mi",N({parentName:"mrow"},{mathvariant:"normal"}),"\u03a9"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"W"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mi",{parentName:"mrow"},"A"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mn",{parentName:"mrow"},"4"),(0,s.kt)("mi",{parentName:"mrow"},"h"),(0,s.kt)("mi",{parentName:"mrow"},"w"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"C"),(0,s.kt)("mn",{parentName:"msup"},"2")),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"2"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"M"),(0,s.kt)("mn",{parentName:"msup"},"2")),(0,s.kt)("mi",{parentName:"mrow"},"h"),(0,s.kt)("mi",{parentName:"mrow"},"w"),(0,s.kt)("mi",{parentName:"mrow"},"C")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"\\Omega(MSA)=4hwC^2+2(hw)^2C\\\\ \\Omega(W-MSA)=4hwC^2+2M^2hwC")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"\u03a9"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05764em"}}),"MS"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"A"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),")"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"="),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9474em",verticalAlign:"-0.0833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"4"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"h"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.02691em"}}),"w"),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"C"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8641em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"2")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.1141em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"2"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"h"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.02691em"}}),"w"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),")"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8641em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"2")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"C")),(0,s.kt)("span",N({parentName:"span"},{className:"mspace newline"})),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"\u03a9"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.13889em"}}),"W"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05764em"}}),"MS"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"A"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),")"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"="),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9474em",verticalAlign:"-0.0833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"4"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"h"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.02691em"}}),"w"),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"C"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8641em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"2")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8641em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"2"),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8641em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"2")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"h"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"wC")))))),(0,s.kt)("p",null,"\u5176\u4e2d\u8f93\u5165\u5305\u542b",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mi",{parentName:"mrow"},"M")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"M\\times M")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.7667em",verticalAlign:"-0.0833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\xd7"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.6833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"))))),"\u4e2aPatch\u3002"),(0,s.kt)("p",null,"\u7531\u4e8eM\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u6709W-MSA\u5bf9\u8f93\u5165\u56fe\u50cf\u5c3a\u5bf8\u7684\u590d\u6742\u5ea6\u5448\u7ebf\u6027\u3002"),(0,s.kt)("h4",N({},{id:"shifted-window-partitioning-in-successive-blocks"}),"Shifted window partitioning in successive blocks"),(0,s.kt)("p",null,"\u867d\u7136W-MSA\u89e3\u51b3\u4e86MSA\u65f6\u95f4\u590d\u6742\u5ea6\u968f\u8f93\u5165\u4e8c\u6b21\u589e\u957f\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u540c\u7a97\u53e3\u95f4\u6ca1\u6709\u4fe1\u606f\u4ea4\u6d41\uff0c\u8fd9\u663e\u7136\u4f1a\u9650\u5236\u6a21\u578b\u7684\u5efa\u6a21\u80fd\u529b\u3002"),(0,s.kt)("p",null,"\u4e3a\u4e86\u4fdd\u6301\u9ad8\u6548\u7684\u540c\u65f6\u8fdb\u884c\u6709\u6548\u5efa\u6a21\uff0c\u63d0\u51fa\u4e86Shifted Window\uff1a"),(0,s.kt)("img",{src:"https://gitee.com/Thedeadleaf/images/raw/master/image-20211019210948129.png",alt:"image-20211019210948129"}),(0,s.kt)("p",null,"\u901a\u8fc7\u63a7\u5236\u4e0d\u540c\u6846\u7684\u5927\u5c0f\uff0c\u5b9e\u73b0\u4e0a\u4e00\u5c42\u4e0d\u540cWindow\u4e4b\u95f4\u7684\u4fe1\u606f\u4ea4\u6d41\uff0c\u4f46\u662f\u8fd9\u6837\u8f83\u96be\u5b9e\u73b0\uff0c\u5e76\u4e14Window\u7684\u6570\u91cf\u4f1a\u4ece",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"["),(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"mfrac"},"h"),(0,s.kt)("mi",{parentName:"mfrac"},"M")),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"]"),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"["),(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"mfrac"},"w"),(0,s.kt)("mi",{parentName:"mfrac"},"M")),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"]")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"[\\frac hM]\\times[\\frac wM]")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.2251em",verticalAlign:"-0.345em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"["),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mopen nulldelimiter"})),(0,s.kt)("span",N({parentName:"span"},{className:"mfrac"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t vlist-t2"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8801em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-2.655em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}}),"M")))),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.23em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"frac-line",style:{borderBottomWidth:"0.04em"}}))),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.394em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight"}),"h"))))),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-s"}),"\u200b")),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.345em"}}),(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose nulldelimiter"}))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"]"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\xd7"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.095em",verticalAlign:"-0.345em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"["),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mopen nulldelimiter"})),(0,s.kt)("span",N({parentName:"span"},{className:"mfrac"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t vlist-t2"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.6954em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-2.655em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}}),"M")))),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.23em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"frac-line",style:{borderBottomWidth:"0.04em"}}))),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.394em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.02691em"}}),"w"))))),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-s"}),"\u200b")),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.345em"}}),(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose nulldelimiter"}))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"]"))))),"\u589e\u52a0\u5230",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"["),(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"mfrac"},"h"),(0,s.kt)("mi",{parentName:"mfrac"},"M")),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"]"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"["),(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"mfrac"},"w"),(0,s.kt)("mi",{parentName:"mfrac"},"M")),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"]"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"([\\frac hM]+1)\\times([\\frac wM]+1)")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.2251em",verticalAlign:"-0.345em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"(["),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mopen nulldelimiter"})),(0,s.kt)("span",N({parentName:"span"},{className:"mfrac"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t vlist-t2"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8801em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-2.655em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}}),"M")))),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.23em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"frac-line",style:{borderBottomWidth:"0.04em"}}))),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.394em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight"}),"h"))))),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-s"}),"\u200b")),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.345em"}}),(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose nulldelimiter"}))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"]"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"1"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),")"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\xd7"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.095em",verticalAlign:"-0.345em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"(["),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mopen nulldelimiter"})),(0,s.kt)("span",N({parentName:"span"},{className:"mfrac"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t vlist-t2"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.6954em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-2.655em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}}),"M")))),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.23em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"frac-line",style:{borderBottomWidth:"0.04em"}}))),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.394em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.02691em"}}),"w"))))),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-s"}),"\u200b")),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.345em"}}),(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose nulldelimiter"}))),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"]"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"1"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),")"))))),"\uff0c\u5e76\u4e14\u67d0\u4e9bWindow\u7684\u5927\u5c0f\u4f1a\u5c0f\u4e8e",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mi",{parentName:"mrow"},"M")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"M\\times M")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.7667em",verticalAlign:"-0.0833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\xd7"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.6833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"))))),"\uff0c\u56e0\u6b64\u63d0\u51fa\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff1a"),(0,s.kt)("img",{src:"https://gitee.com/Thedeadleaf/images/raw/master/image-20211019230354019.png",alt:"image-20211019230354019"}),(0,s.kt)("p",null,"\u5c06\u539f\u6709\u7684\u7a97\u53e3\u4ee5M/2\u7684\u5927\u5c0f\u8fdb\u884c\u504f\u79fb\uff0c\u5c06\u591a\u51fa\u7684\u90e8\u5206\u79fb\u52a8\u5230\u76f8\u5bf9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u4e0d\u540cWindow\u4e4b\u524d\u7684\u4fe1\u606f\u4ea4\u6d41\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5b9e\u9645\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u4f7f\u7528Mask\uff0c\u5c06\u4e0a\u56fe\u53f3\u4fa7\u79fb\u52a8\u8fc7\u6765\u7684\u4f4d\u7f6e\u7ed9\u76d6\u4f4f\uff0c\u539f\u56e0\u662f\u8fd9\u90e8\u5206\u7684\u6ce8\u610f\u529b\u6ca1\u6709\u610f\u4e49\u3002"),(0,s.kt)("h4",N({},{id:"relative-position-bias"}),"Relative position bias"),(0,s.kt)("p",null,"\u6dfb\u52a0\u4e86\u76f8\u5bf9\u4f4d\u7f6e\u504f\u7f6e",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"B"),(0,s.kt)("mo",{parentName:"mrow"},"\u2208"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",N({parentName:"msup"},{mathvariant:"double-struck"}),"R"),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"M"),(0,s.kt)("mn",{parentName:"msup"},"2")),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"M"),(0,s.kt)("mn",{parentName:"msup"},"2"))))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"B\\in \\mathbb R^{M^2\\times M^2}")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.7224em",verticalAlign:"-0.0391em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05017em"}}),"B"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"\u2208"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9869em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathbb"}),"R"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9869em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8913em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-2.931em",marginRight:"0.0714em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.5em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size3 size1 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"2")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"\xd7"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8913em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-2.931em",marginRight:"0.0714em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.5em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size3 size1 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"2")))))))))))))))))))),"\uff0c\u5176\u63cf\u8ff0\u6bcf\u4e2aWindow\u76f8\u5bf9\u4e8e\u5176\u5b83Window\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u6ce8\u610f\u529b\u516c\u5f0f\u53ef\u4ee5\u5199\u6210\uff1a"),(0,s.kt)("div",N({},{className:"math math-display"}),(0,s.kt)("span",N({parentName:"div"},{className:"katex-display"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"A"),(0,s.kt)("mi",{parentName:"mrow"},"t"),(0,s.kt)("mi",{parentName:"mrow"},"t"),(0,s.kt)("mi",{parentName:"mrow"},"e"),(0,s.kt)("mi",{parentName:"mrow"},"n"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"Q"),(0,s.kt)("mo",N({parentName:"mrow"},{separator:"true"}),","),(0,s.kt)("mi",{parentName:"mrow"},"K"),(0,s.kt)("mo",N({parentName:"mrow"},{separator:"true"}),","),(0,s.kt)("mi",{parentName:"mrow"},"V"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mi",{parentName:"mrow"},"o"),(0,s.kt)("mi",{parentName:"mrow"},"f"),(0,s.kt)("mi",{parentName:"mrow"},"t"),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mi",{parentName:"mrow"},"a"),(0,s.kt)("mi",{parentName:"mrow"},"x"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mi",{parentName:"mrow"},"Q"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"K"),(0,s.kt)("mi",{parentName:"msup"},"T")),(0,s.kt)("mi",N({parentName:"mrow"},{mathvariant:"normal"}),"/"),(0,s.kt)("msqrt",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msqrt"},"d")),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mi",{parentName:"mrow"},"B"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mi",{parentName:"mrow"},"V")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"Atten(Q,K,V)=SoftMax(QK^T/\\sqrt d +B)V")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"A"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"tt"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"e"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"n"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"Q"),(0,s.kt)("span",N({parentName:"span"},{className:"mpunct"}),","),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.1667em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"K"),(0,s.kt)("span",N({parentName:"span"},{className:"mpunct"}),","),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.1667em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.22222em"}}),"V"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),")"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"="),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.2311em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05764em"}}),"S"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"o"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10764em"}}),"f"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"tM"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"a"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"x"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"Q"),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.07153em"}}),"K"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.8913em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.113em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.13889em"}}),"T")))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"/"),(0,s.kt)("span",N({parentName:"span"},{className:"mord sqrt"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t vlist-t2"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9811em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"svg-align",style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{paddingLeft:"0.833em"}}),"d")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-2.9411em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"hide-tail",style:{minWidth:"0.853em",height:"1.08em"}}),(0,s.kt)("svg",N({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.08em",viewBox:"0 0 400000 1080",preserveAspectRatio:"xMinYMin slice"}),(0,s.kt)("path",N({parentName:"svg"},{d:"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z"})))))),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-s"}),"\u200b")),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.0589em"}}),(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05017em"}}),"B"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),")"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.22222em"}}),"V")))))),(0,s.kt)("p",null,"\u8be5\u76f8\u5bf9\u4f4d\u7f6e\u504f\u7f6e\u76f8\u8f83\u4e8e\u7edd\u5bf9\u4f4d\u7f6e\u5d4c\u5165\u62e5\u6709\u66f4\u597d\u7684\u6027\u80fd\u3002"),(0,s.kt)("p",null,"\u7531\u4e8e\u6bcf\u4e2a\u8f74\u4e0a\u7684\u76f8\u5bf9\u4f4d\u7f6e\u7684\u53d6\u503c\u8303\u56f4\u90fd\u662f",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"["),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",N({parentName:"mrow"},{separator:"true"}),","),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"]")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"[-M+1,M-1]")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mopen"}),"["),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"+"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"1"),(0,s.kt)("span",N({parentName:"span"},{className:"mpunct"}),","),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.1667em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"1"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose"}),"]"))))),"\uff0c\u4e8e\u662f\u751f\u6210\u4e00\u4e2a\u5c0f\u7684\u504f\u7f6e\u77e9\u9635",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mover",N({parentName:"mrow"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"B"),(0,s.kt)("mo",{parentName:"mover"},"^")),(0,s.kt)("mo",{parentName:"mrow"},"\u2208"),(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",N({parentName:"msup"},{mathvariant:"double-struck"}),"R"),(0,s.kt)("mrow",{parentName:"msup"},(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mn",{parentName:"mrow"},"2"),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")"),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),"("),(0,s.kt)("mn",{parentName:"mrow"},"2"),(0,s.kt)("mi",{parentName:"mrow"},"M"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",N({parentName:"mrow"},{stretchy:"false"}),")")))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"\\hat B\\in \\mathbb{R}^{(2M-1)\\times(2M-1)}")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9859em",verticalAlign:"-0.0391em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9468em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05017em"}}),"B")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.2523em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1667em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mrel"}),"\u2208"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2778em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.888em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathbb"}),"R"),(0,s.kt)("span",N({parentName:"span"},{className:"msupsub"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.888em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),(0,s.kt)("span",N({parentName:"span"},{className:"mopen mtight"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"2"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose mtight"}),")"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"\xd7"),(0,s.kt)("span",N({parentName:"span"},{className:"mopen mtight"}),"("),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"2"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal mtight",style:{marginRight:"0.10903em"}}),"M"),(0,s.kt)("span",N({parentName:"span"},{className:"mbin mtight"}),"\u2212"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mtight"}),"1"),(0,s.kt)("span",N({parentName:"span"},{className:"mclose mtight"}),")"))))))))))))),"\uff0c\u76f8\u5bf9\u4f4d\u7f6e\u504f\u7f6e",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"B")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"B")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.6833em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05017em"}}),"B"))))),"\u4ece",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mover",N({parentName:"mrow"},{accent:"true"}),(0,s.kt)("mi",{parentName:"mover"},"B"),(0,s.kt)("mo",{parentName:"mover"},"^"))),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"\\hat B")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"0.9468em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord accent"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-t"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist-r"}),(0,s.kt)("span",N({parentName:"span"},{className:"vlist",style:{height:"0.9468em"}}),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.05017em"}}),"B")),(0,s.kt)("span",N({parentName:"span"},{style:{top:"-3.2523em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"accent-body",style:{left:"-0.1667em"}}),(0,s.kt)("span",N({parentName:"span"},{className:"mord"}),"^"))))))))))),"\u4e2d\u91c7\u6837\u800c\u6765\u3002"),(0,s.kt)("h3",N({},{id:"patch-merging"}),"Patch merging"),(0,s.kt)("p",null,"Patch merging\u8d77\u5230\u4e00\u4e2a\u201c\u4e0b\u91c7\u6837\u201d\u7684\u4f5c\u7528\uff0c\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u662fCNN\u4e2d\u7a7a\u95f4\u5230\u6df1\u5ea6\u7684\u53d8\u6362\uff0c\u5c06\u7a7a\u95f4\u4fe1\u606f\u5806\u53e0\u8fdb\u901a\u9053\u4e2d\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u53d8\u76f8\u6269\u5927\u4e86Window\u7684\u5927\u5c0f"),(0,s.kt)("img",{src:"https://gitee.com/Thedeadleaf/images/raw/master/image-20211020114206242.png",alt:"image-20211020114206242"}),(0,s.kt)("h2",N({},{id:"\u4ee3\u7801\u5206\u6790"}),"\u4ee3\u7801\u5206\u6790"),(0,s.kt)("h3",N({},{id:"window-operation"}),"Window operation"),(0,s.kt)("p",null,"window_partition\uff1a"),(0,s.kt)("p",null,"\u5c06\u8f93\u5165\u56fe\u50cf\u5206\u5272\u6210",(0,s.kt)("span",N({parentName:"p"},{className:"math math-inline"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex"}),(0,s.kt)("span",N({parentName:"span"},{className:"katex-mathml"}),(0,s.kt)("math",N({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"w"),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mi",{parentName:"mrow"},"n"),(0,s.kt)("mi",{parentName:"mrow"},"d"),(0,s.kt)("mi",{parentName:"mrow"},"o"),(0,s.kt)("mi",{parentName:"mrow"},"w"),(0,s.kt)("mi",N({parentName:"mrow"},{mathvariant:"normal"}),"_"),(0,s.kt)("mi",{parentName:"mrow"},"s"),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mi",{parentName:"mrow"},"z"),(0,s.kt)("mi",{parentName:"mrow"},"e"),(0,s.kt)("mo",{parentName:"mrow"},"\xd7"),(0,s.kt)("mi",{parentName:"mrow"},"w"),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mi",{parentName:"mrow"},"n"),(0,s.kt)("mi",{parentName:"mrow"},"d"),(0,s.kt)("mi",{parentName:"mrow"},"o"),(0,s.kt)("mi",{parentName:"mrow"},"w"),(0,s.kt)("mi",N({parentName:"mrow"},{mathvariant:"normal"}),"_"),(0,s.kt)("mi",{parentName:"mrow"},"s"),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mi",{parentName:"mrow"},"z"),(0,s.kt)("mi",{parentName:"mrow"},"e")),(0,s.kt)("annotation",N({parentName:"semantics"},{encoding:"application/x-tex"}),"window\\_size\\times window\\_size")))),(0,s.kt)("span",N({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.0044em",verticalAlign:"-0.31em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.02691em"}}),"w"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"in"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"d"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"o"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.02691em"}}),"w"),(0,s.kt)("span",N({parentName:"span"},{className:"mord",style:{marginRight:"0.02778em"}}),"_"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"s"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"i"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"ze"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mbin"}),"\xd7"),(0,s.kt)("span",N({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222em"}}))),(0,s.kt)("span",N({parentName:"span"},{className:"base"}),(0,s.kt)("span",N({parentName:"span"},{className:"strut",style:{height:"1.0044em",verticalAlign:"-0.31em"}})),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.02691em"}}),"w"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"in"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"d"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"o"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal",style:{marginRight:"0.02691em"}}),"w"),(0,s.kt)("span",N({parentName:"span"},{className:"mord",style:{marginRight:"0.02778em"}}),"_"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"s"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"i"),(0,s.kt)("span",N({parentName:"span"},{className:"mord mathnormal"}),"ze"))))),"\u5927\u5c0f\u7684patch\uff0c\u5e76\u5806\u53e0\u8fdbBatch\u7ef4\u5ea6\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",N({parentName:"pre"},{className:"language-python"}),'def window_partition(x, window_size):\n    """\n    Args:\n        x: (B, H, W, C)\n        window_size (int): window size\n\n    Returns:\n        windows: (num_windows*B, window_size, window_size, C)\n    """\n    B, H, W, C = x.shape\n    x = x.view(B, H // window_size, window_size,\n               W // window_size, window_size, C)\n    windows = x.permute(0, 1, 3, 2, 4, 5).contiguous(\n    ).view(-1, window_size, window_size, C)\n    return windows\n')),(0,s.kt)("p",null,"window_reverse\uff1a"),(0,s.kt)("p",null,"\u6062\u590d\uff0c\u7528\u4e8e\u6b8b\u5dee\u8fde\u63a5\u4e4b\u524d\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",N({parentName:"pre"},{className:"language-python"}),'def window_reverse(windows, window_size, H, W):\n    """\n    Args:\n        windows: (num_windows*B, window_size, window_size, C)\n        window_size (int): Window size\n        H (int): Height of image\n        W (int): Width of image\n\n    Returns:\n        x: (B, H, W, C)\n    """\n    B = int(windows.shape[0] / (H * W / window_size / window_size))\n    x = windows.view(B, H // window_size, W // window_size,\n                     window_size, window_size, -1)\n    x = x.permute(0, 1, 3, 2, 4, 5).contiguous().view(B, H, W, -1)\n    return x\n')),(0,s.kt)("h3",N({},{id:"windowattention"}),"WindowAttention"),(0,s.kt)("p",null,"\u8be5\u90e8\u5206\u4ee3\u7801\u4e3aW-MSA\u548cSW-MSA\uff0c\u5177\u4f53\u5207\u6362\u4f9d\u8d56\u4e8e\u8f93\u5165\u6570\u636e\u548cmask\uff0c\u8be5\u6a21\u5757\u53ea\u8ba1\u7b97\u8d1f\u8d23Window\u5185\u7684\u81ea\u6ce8\u610f\u529b\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",N({parentName:"pre"},{className:"language-python"}),'class WindowAttention(nn.Module):\n    r""" Window based multi-head self attention (W-MSA) module with relative position bias.\n    It supports both of shifted and non-shifted window.\n\n    Args:\n        dim (int): Number of input channels.\n        window_size (tuple[int]): The height and width of the window.\n        num_heads (int): Number of attention heads.\n        qkv_bias (bool, optional):  If True, add a learnable bias to query, key, value. Default: True\n        qk_scale (float | None, optional): Override default qk scale of head_dim ** -0.5 if set\n        attn_drop (float, optional): Dropout ratio of attention weight. Default: 0.0\n        proj_drop (float, optional): Dropout ratio of output. Default: 0.0\n    """\n\n    def __init__(self, dim, window_size, num_heads, qkv_bias=True, qk_scale=None, attn_drop=0., proj_drop=0.):\n\n        super().__init__()\n        self.dim = dim\n        self.window_size = window_size  # Wh, Ww\n        self.num_heads = num_heads\n        head_dim = dim // num_heads\n        self.scale = qk_scale or head_dim ** -0.5\n\n        # define a parameter table of relative position bias\n        self.relative_position_bias_table = nn.Parameter(\n            torch.zeros((2 * window_size[0] - 1) * (2 * window_size[1] - 1), num_heads))  # 2*Wh-1 * 2*Ww-1, nH\n\n        # get pair-wise relative position index for each token inside the window\n        coords_h = torch.arange(self.window_size[0])\n        coords_w = torch.arange(self.window_size[1])\n        coords = torch.stack(torch.meshgrid([coords_h, coords_w]))  # 2, Wh, Ww\n        coords_flatten = torch.flatten(coords, 1)  # 2, Wh*Ww\n        relative_coords = coords_flatten[:, :, None] - \\\n            coords_flatten[:, None, :]  # 2, Wh*Ww, Wh*Ww\n        relative_coords = relative_coords.permute(\n            1, 2, 0).contiguous()  # Wh*Ww, Wh*Ww, 2\n        relative_coords[:, :, 0] += self.window_size[0] - \\\n            1  # shift to start from 0\n        relative_coords[:, :, 1] += self.window_size[1] - 1\n        relative_coords[:, :, 0] *= 2 * self.window_size[1] - 1\n        relative_position_index = relative_coords.sum(-1)  # Wh*Ww, Wh*Ww\n        self.register_buffer("relative_position_index",\n                             relative_position_index)\n\n        self.qkv = nn.Linear(dim, dim * 3, bias=qkv_bias)#\u4f7f\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42\u751f\u6210QKV\uff0c\u4f7f\u7528\u5207\u7247\u5206\u5f00\n        self.attn_drop = nn.Dropout(attn_drop)\n        self.proj = nn.Linear(dim, dim)#\u5bf9\u8f93\u51fa\u8fdb\u884c\u6620\u5c04\n        self.proj_drop = nn.Dropout(proj_drop)\n\n        trunc_normal_(self.relative_position_bias_table, std=.02)\n        self.softmax = nn.Softmax(dim=-1)\n\n    def forward(self, x, mask=None):\n        """\n        Args:\n            x: input features with shape of (num_windows*B, N, C)\n            mask: (0/-inf) mask with shape of (num_windows, Wh*Ww, Wh*Ww) or None\n        """\n        B_, N, C = x.shape\n        qkv = self.qkv(x).reshape(B_, N, 3, self.num_heads, C //\n                                  self.num_heads).permute(2, 0, 3, 1, 4)\n        # make torchscript happy (cannot use tensor as tuple)\n        q, k, v = qkv[0], qkv[1], qkv[2]\n\n        q = q * self.scale #\u610f\u4e49\u4e0d\u660e\n        attn = (q @ k.transpose(-2, -1))\n\n        relative_position_bias = self.relative_position_bias_table[self.relative_position_index.view(-1)].view(\n            self.window_size[0] * self.window_size[1], self.window_size[0] * self.window_size[1], -1)  # Wh*Ww,Wh*Ww,nH\n        relative_position_bias = relative_position_bias.permute(\n            2, 0, 1).contiguous()  # nH, Wh*Ww, Wh*Ww\n        attn = attn + relative_position_bias.unsqueeze(0)\n\n        if mask is not None: #\u5f53\u4f7f\u7528SW-MSA\u65f6\uff0c\u4f1a\u4f7f\u7528mask\n            nW = mask.shape[0]\n            attn = attn.view(B_ // nW, nW, self.num_heads, N,\n                             N) + mask.unsqueeze(1).unsqueeze(0)\n            attn = attn.view(-1, self.num_heads, N, N)\n            attn = self.softmax(attn)\n        else:\n            attn = self.softmax(attn)\n\n        attn = self.attn_drop(attn)\n\n        x = (attn @ v).transpose(1, 2).reshape(B_, N, C)\n        x = self.proj(x)\n        x = self.proj_drop(x)\n        return x\n\n    def extra_repr(self) -> str:\n        return f\'dim={self.dim}, window_size={self.window_size}, num_heads={self.num_heads}\'\n\n    def flops(self, N):\n        # calculate flops for 1 window with token length of N\n        flops = 0\n        # qkv = self.qkv(x)\n        flops += N * self.dim * 3 * self.dim\n        # attn = (q @ k.transpose(-2, -1))\n        flops += self.num_heads * N * (self.dim // self.num_heads) * N\n        #  x = (attn @ v)\n        flops += self.num_heads * N * N * (self.dim // self.num_heads)\n        # x = self.proj(x)\n        flops += N * self.dim * self.dim\n        return flops\n\n')),(0,s.kt)("h3",N({},{id:"swintransformer"}),"SwinTransformer"),(0,s.kt)("p",null,"SwinTransformerBlock\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",N({parentName:"pre"},{className:"language-python"}),'class SwinTransformerBlock(nn.Module):\n    r""" Swin Transformer Block.\n\n    Args:\n        dim (int): Number of input channels.\n        input_resolution (tuple[int]): Input resulotion.\n        num_heads (int): Number of attention heads.\n        window_size (int): Window size.\n        shift_size (int): Shift size for SW-MSA.\n        mlp_ratio (float): Ratio of mlp hidden dim to embedding dim.\n        qkv_bias (bool, optional): If True, add a learnable bias to query, key, value. Default: True\n        qk_scale (float | None, optional): Override default qk scale of head_dim ** -0.5 if set.\n        drop (float, optional): Dropout rate. Default: 0.0\n        attn_drop (float, optional): Attention dropout rate. Default: 0.0\n        drop_path (float, optional): Stochastic depth rate. Default: 0.0\n        act_layer (nn.Module, optional): Activation layer. Default: nn.GELU\n        norm_layer (nn.Module, optional): Normalization layer.  Default: nn.LayerNorm\n    """\n\n    def __init__(self, dim, input_resolution, num_heads, window_size=7, shift_size=0,\n                 mlp_ratio=4., qkv_bias=True, qk_scale=None, drop=0., attn_drop=0., drop_path=0.,\n                 act_layer=nn.GELU, norm_layer=nn.LayerNorm):\n        super().__init__()\n        self.dim = dim\n        self.input_resolution = input_resolution\n        self.num_heads = num_heads\n        self.window_size = window_size\n        self.shift_size = shift_size\n        self.mlp_ratio = mlp_ratio\n        if min(self.input_resolution) <= self.window_size:\n            # if window size is larger than input resolution, we don\'t partition windows\n            self.shift_size = 0\n            self.window_size = min(self.input_resolution)\n        assert 0 <= self.shift_size < self.window_size, "shift_size must in 0-window_size"\n\n        self.norm1 = norm_layer(dim)\n        self.attn = WindowAttention(\n            dim, window_size=to_2tuple(self.window_size), num_heads=num_heads,\n            qkv_bias=qkv_bias, qk_scale=qk_scale, attn_drop=attn_drop, proj_drop=drop)\n\n        self.drop_path = DropPath(\n            drop_path) if drop_path > 0. else nn.Identity()\n        self.norm2 = norm_layer(dim)\n        mlp_hidden_dim = int(dim * mlp_ratio)\n        self.mlp = Mlp(in_features=dim, hidden_features=mlp_hidden_dim,\n                       act_layer=act_layer, drop=drop)\n\n        if self.shift_size > 0:  # shift_size\u8868\u793a\u4f7f\u7528SW-MSA\n            # calculate attention mask for SW-MSA\n            H, W = self.input_resolution\n            img_mask = torch.zeros((1, H, W, 1))  # 1 H W 1\n            h_slices = (slice(0, -self.window_size),\n                        slice(-self.window_size, -self.shift_size),\n                        slice(-self.shift_size, None))\n            w_slices = (slice(0, -self.window_size),\n                        slice(-self.window_size, -self.shift_size),\n                        slice(-self.shift_size, None))\n            cnt = 0\n            for h in h_slices:\n                for w in w_slices:\n                    img_mask[:, h, w, :] = cnt\n                    cnt += 1\n\n            # nW, window_size, window_size, 1\n            mask_windows = window_partition(img_mask, self.window_size)\n            mask_windows = mask_windows.view(-1,\n                                             self.window_size * self.window_size)\n            attn_mask = mask_windows.unsqueeze(1) - mask_windows.unsqueeze(2)\n            attn_mask = attn_mask.masked_fill(\n                attn_mask != 0, float(-100.0)).masked_fill(attn_mask == 0, float(0.0))\n        else:\n            attn_mask = None\n\n        self.register_buffer("attn_mask", attn_mask)\n\n    def forward(self, x):\n        H, W = self.input_resolution\n        B, L, C = x.shape\n        assert L == H * W, "input feature has wrong size"\n\n        shortcut = x\n        x = self.norm1(x)\n        x = x.view(B, H, W, C)\n\n        # cyclic shift\n        if self.shift_size > 0:\n            shifted_x = torch.roll(\n                x, shifts=(-self.shift_size, -self.shift_size), dims=(1, 2))\n        else:\n            shifted_x = x\n\n        # partition windows\n        # nW*B, window_size, window_size, C\n        x_windows = window_partition(shifted_x, self.window_size)\n        # nW*B, window_size*window_size, C\n        x_windows = x_windows.view(-1, self.window_size * self.window_size, C)\n\n        # W-MSA/SW-MSA\n        # nW*B, window_size*window_size, C\n        attn_windows = self.attn(x_windows, mask=self.attn_mask)\n\n        # merge windows\n        attn_windows = attn_windows.view(-1,\n                                         self.window_size, self.window_size, C)\n        shifted_x = window_reverse(\n            attn_windows, self.window_size, H, W)  # B H\' W\' C \uff0c\u8fd8\u539f\n\n        # reverse cyclic shift\n        if self.shift_size > 0:\n            x = torch.roll(shifted_x, shifts=(\n                self.shift_size, self.shift_size), dims=(1, 2))  # \u4f7f\u7528torch.roll\u5b9e\u73b0shift\n        else:\n            x = shifted_x\n        x = x.view(B, H * W, C)\n\n        # FFN\n        x = shortcut + self.drop_path(x)\n        x = x + self.drop_path(self.mlp(self.norm2(x)))\n\n        return x\n')),(0,s.kt)("p",null,"stage\uff1a"),(0,s.kt)("p",null,"\u4e0b\u9762\u7684\u4ee3\u7801\u7528\u6765\u5b9e\u73b0\u4e00\u4e2astage\uff0c\u6bcf\u4e2astage\u4e2d\u7684MSA\u90e8\u5206\u5305\u542b\u5076\u6570\u4e2aSwin Transformer Block"),(0,s.kt)("pre",null,(0,s.kt)("code",N({parentName:"pre"},{className:"language-python"}),'class BasicLayer(nn.Module):\n    """ A basic Swin Transformer layer for one stage.\n\n    Args:\n        dim (int): Number of input channels.\n        input_resolution (tuple[int]): Input resolution.\n        depth (int): Number of blocks.\n        num_heads (int): Number of attention heads.\n        window_size (int): Local window size.\n        mlp_ratio (float): Ratio of mlp hidden dim to embedding dim.\n        qkv_bias (bool, optional): If True, add a learnable bias to query, key, value. Default: True\n        qk_scale (float | None, optional): Override default qk scale of head_dim ** -0.5 if set.\n        drop (float, optional): Dropout rate. Default: 0.0\n        attn_drop (float, optional): Attention dropout rate. Default: 0.0\n        drop_path (float | tuple[float], optional): Stochastic depth rate. Default: 0.0\n        norm_layer (nn.Module, optional): Normalization layer. Default: nn.LayerNorm\n        downsample (nn.Module | None, optional): Downsample layer at the end of the layer. Default: None\n        use_checkpoint (bool): Whether to use checkpointing to save memory. Default: False.\n    """\n\n    def __init__(self, dim, input_resolution, depth, num_heads, window_size,\n                 mlp_ratio=4., qkv_bias=True, qk_scale=None, drop=0., attn_drop=0.,\n                 drop_path=0., norm_layer=nn.LayerNorm, downsample=None, use_checkpoint=False):\n\n        super().__init__()\n        self.dim = dim\n        self.input_resolution = input_resolution\n        self.depth = depth\n        self.use_checkpoint = use_checkpoint\n\n        # build blocks\n        # \u5076\u6570\u5c42\u4f7f\u7528Shift\uff0c\u5947\u6570\u5c42\u4e0d\u7528\n        self.blocks = nn.ModuleList([\n            SwinTransformerBlock(dim=dim, input_resolution=input_resolution,\n                                 num_heads=num_heads, window_size=window_size,\n                                 shift_size=0 if (\n                                     i % 2 == 0) else window_size // 2,\n                                 mlp_ratio=mlp_ratio,\n                                 qkv_bias=qkv_bias, qk_scale=qk_scale,\n                                 drop=drop, attn_drop=attn_drop,\n                                 drop_path=drop_path[i] if isinstance(\n                                     drop_path, list) else drop_path,\n                                 norm_layer=norm_layer)\n            for i in range(depth)])\n\n        # patch merging layer\n        if downsample is not None:\n            self.downsample = downsample(\n                input_resolution, dim=dim, norm_layer=norm_layer)\n        else:\n            self.downsample = None\n\n    def forward(self, x):\n        for blk in self.blocks:\n            if self.use_checkpoint:\n                x = checkpoint.checkpoint(blk, x)\n            else:\n                x = blk(x)\n        if self.downsample is not None:\n            x = self.downsample(x)\n        return x\n')),(0,s.kt)("p",null,"Swin Transformer\uff1a"),(0,s.kt)("p",null,"\u4e3b\u5e72\u4ee5\u53cahead\uff0c\u5c06\u591a\u4e2astage\u7ec4\u5408\u8d77\u6765\uff0c\u4f46\u662f\u5bf9\u5206\u5272\u4f3c\u4e4e\u4e0d\u592a\u53cb\u597d\uff0c\u56e0\u4e3aSwin Transformer\u53ea\u6709\u4e0b\u91c7\u6837\uff0c\u4e0a\u91c7\u6837\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528CNN\u7684\u65b9\u6cd5\u81ea\u884c\u5b9e\u73b0\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",N({parentName:"pre"},{className:"language-python"}),'class SwinTransformer(nn.Module):\n    r""" Swin Transformer\n        A PyTorch impl of : `Swin Transformer: Hierarchical Vision Transformer using Shifted Windows`  -\n          https://arxiv.org/pdf/2103.14030\n\n    Args:\n        img_size (int | tuple(int)): Input image size. Default 224\n        patch_size (int | tuple(int)): Patch size. Default: 4\n        in_chans (int): Number of input image channels. Default: 3\n        num_classes (int): Number of classes for classification head. Default: 1000\n        embed_dim (int): Patch embedding dimension. Default: 96\n        depths (tuple(int)): Depth of each Swin Transformer layer.\n        num_heads (tuple(int)): Number of attention heads in different layers.\n        window_size (int): Window size. Default: 7\n        mlp_ratio (float): Ratio of mlp hidden dim to embedding dim. Default: 4\n        qkv_bias (bool): If True, add a learnable bias to query, key, value. Default: True\n        qk_scale (float): Override default qk scale of head_dim ** -0.5 if set. Default: None\n        drop_rate (float): Dropout rate. Default: 0\n        attn_drop_rate (float): Attention dropout rate. Default: 0\n        drop_path_rate (float): Stochastic depth rate. Default: 0.1\n        norm_layer (nn.Module): Normalization layer. Default: nn.LayerNorm.\n        ape (bool): If True, add absolute position embedding to the patch embedding. Default: False\n        patch_norm (bool): If True, add normalization after patch embedding. Default: True\n        use_checkpoint (bool): Whether to use checkpointing to save memory. Default: False\n    """\n\n    def __init__(self, img_size=224, patch_size=4, in_chans=3, num_classes=1000,\n                 embed_dim=96, depths=[2, 2, 6, 2], num_heads=[3, 6, 12, 24],\n                 window_size=7, mlp_ratio=4., qkv_bias=True, qk_scale=None,\n                 drop_rate=0., attn_drop_rate=0., drop_path_rate=0.1,\n                 norm_layer=nn.LayerNorm, ape=False, patch_norm=True,\n                 use_checkpoint=False, **kwargs):\n        super().__init__()\n\n        self.num_classes = num_classes\n        self.num_layers = len(depths)\n        self.embed_dim = embed_dim\n        self.ape = ape\n        self.patch_norm = patch_norm\n        self.num_features = int(embed_dim * 2 ** (self.num_layers - 1))\n        self.mlp_ratio = mlp_ratio\n\n        # split image into non-overlapping patches\n        self.patch_embed = PatchEmbed(\n            img_size=img_size, patch_size=4, in_chans=in_chans, embed_dim=embed_dim,\n            norm_layer=norm_layer if self.patch_norm else None)\n        num_patches = self.patch_embed.num_patches\n        patches_resolution = self.patch_embed.patches_resolution\n        self.patches_resolution = patches_resolution\n\n        # absolute position embedding\n        if self.ape:\n            self.absolute_pos_embed = nn.Parameter(\n                torch.zeros(1, num_patches, embed_dim))\n            trunc_normal_(self.absolute_pos_embed, std=.02)\n\n        self.pos_drop = nn.Dropout(p=drop_rate)\n\n        # stochastic depth\n        dpr = [x.item() for x in torch.linspace(0, drop_path_rate,\n                                                sum(depths))]  # stochastic depth decay rule\n\n        # build layers\n        self.layers = nn.ModuleList()\n        for i_layer in range(self.num_layers):\n            layer = BasicLayer(dim=int(embed_dim * 2 ** i_layer),\n                               input_resolution=(patches_resolution[0] // (2 ** i_layer),\n                                                 patches_resolution[1] // (2 ** i_layer)),\n                               depth=depths[i_layer],\n                               num_heads=num_heads[i_layer],\n                               window_size=window_size,\n                               mlp_ratio=self.mlp_ratio,\n                               qkv_bias=qkv_bias, qk_scale=qk_scale,\n                               drop=drop_rate, attn_drop=attn_drop_rate,\n                               drop_path=dpr[sum(depths[:i_layer]):sum(\n                                   depths[:i_layer + 1])],\n                               norm_layer=norm_layer,\n                               downsample=PatchMerging if (\n                                   i_layer < self.num_layers - 1) else None,\n                               use_checkpoint=use_checkpoint)\n            self.layers.append(layer)\n\n        self.norm = norm_layer(self.num_features)\n        self.avgpool = nn.AdaptiveAvgPool1d(1)\n        self.head = nn.Linear(\n            self.num_features, num_classes) if num_classes > 0 else nn.Identity()\n\n        self.apply(self._init_weights)\n\n    def _init_weights(self, m):\n        if isinstance(m, nn.Linear):\n            trunc_normal_(m.weight, std=.02)\n            if isinstance(m, nn.Linear) and m.bias is not None:\n                nn.init.constant_(m.bias, 0)\n        elif isinstance(m, nn.LayerNorm):\n            nn.init.constant_(m.bias, 0)\n            nn.init.constant_(m.weight, 1.0)\n\n    @torch.jit.ignore\n    def no_weight_decay(self):\n        return {\'absolute_pos_embed\'}\n\n    @torch.jit.ignore\n    def no_weight_decay_keywords(self):\n        return {\'relative_position_bias_table\'}\n\n    def forward_features(self, x):\n        x = self.patch_embed(x)\n        if self.ape:\n            x = x + self.absolute_pos_embed\n        x = self.pos_drop(x)\n\n        for layer in self.layers:\n            x = layer(x)\n\n        x = self.norm(x)  # B L C\n        x = self.avgpool(x.transpose(1, 2))  # B C 1\n        x = torch.flatten(x, 1)\n        return x\n\n    def forward(self, x):\n        x = self.forward_features(x)\n        x = self.head(x)\n        return x\n\n')),(0,s.kt)("h3",N({},{id:"downsample"}),"downsample"),(0,s.kt)("p",null,"\u8fd9\u91cc\u7684\u4e0b\u91c7\u6837\u91c7\u7528\u7684\u662f\u7a7a\u95f4\u5230\u6df1\u5ea6\u7684\u8f6c\u6362\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",N({parentName:"pre"},{className:"language-python"}),'class PatchMerging(nn.Module):\n    r""" Patch Merging Layer.\n\n    Args:\n        input_resolution (tuple[int]): Resolution of input feature.\n        dim (int): Number of input channels.\n        norm_layer (nn.Module, optional): Normalization layer.  Default: nn.LayerNorm\n    """\n\n    def __init__(self, input_resolution, dim, norm_layer=nn.LayerNorm):\n        super().__init__()\n        self.input_resolution = input_resolution\n        self.dim = dim\n        self.reduction = nn.Linear(4 * dim, 2 * dim, bias=False)\n        self.norm = norm_layer(4 * dim)\n\n    def forward(self, x):\n        """\n        x: B, H*W, C\n        """\n        H, W = self.input_resolution\n        B, L, C = x.shape\n        assert L == H * W, "input feature has wrong size"\n        assert H % 2 == 0 and W % 2 == 0, f"x size ({H}*{W}) are not even."\n\n        x = x.view(B, H, W, C)\n\n        x0 = x[:, 0::2, 0::2, :]  # B H/2 W/2 C\n        x1 = x[:, 1::2, 0::2, :]  # B H/2 W/2 C\n        x2 = x[:, 0::2, 1::2, :]  # B H/2 W/2 C\n        x3 = x[:, 1::2, 1::2, :]  # B H/2 W/2 C\n        x = torch.cat([x0, x1, x2, x3], -1)  # B H/2 W/2 4*C\n        x = x.view(B, -1, 4 * C)  # B H/2*W/2 4*C\n\n        x = self.norm(x)\n        x = self.reduction(x)\n\n        return x\n')),(0,s.kt)("h3",N({},{id:"\u5176\u4ed6"}),"\u5176\u4ed6"),(0,s.kt)("p",null,"PatchEmbed\uff1a"),(0,s.kt)("p",null,"\u5bf9\u8f93\u5165\u56fe\u50cf\u4f7f\u7528PatchEmbed\u751f\u6210token\u8868\u793a\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",N({parentName:"pre"},{className:"language-python"}),'class PatchEmbed(nn.Module):\n    r""" Image to Patch Embedding\n\n    Args:\n        img_size (int): Image size.  Default: 224.\n        patch_size (int): Patch token size. Default: 4.\n        in_chans (int): Number of input image channels. Default: 3.\n        embed_dim (int): Number of linear projection output channels. Default: 96.\n        norm_layer (nn.Module, optional): Normalization layer. Default: None\n    """\n\n    def __init__(self, img_size=224, patch_size=4, in_chans=3, embed_dim=96, norm_layer=None):\n        super().__init__()\n        img_size = to_2tuple(img_size)\n        patch_size = to_2tuple(patch_size)\n        patches_resolution = [img_size[0] //\n                              patch_size[0], img_size[1] // patch_size[1]]\n        self.img_size = img_size\n        self.patch_size = patch_size\n        self.patches_resolution = patches_resolution\n        self.num_patches = patches_resolution[0] * patches_resolution[1]\n\n        self.in_chans = in_chans\n        self.embed_dim = embed_dim\n\n        self.proj = nn.Conv2d(in_chans, embed_dim,\n                              kernel_size=patch_size, stride=patch_size)\n        if norm_layer is not None:\n            self.norm = norm_layer(embed_dim)\n        else:\n            self.norm = None\n\n    def forward(self, x):\n        B, C, H, W = x.shape\n        # FIXME look at relaxing size constraints\n        assert H == self.img_size[0] and W == self.img_size[1], \\\n            f"Input image size ({H}*{W}) doesn\'t match model ({self.img_size[0]}*{self.img_size[1]})."\n        x = self.proj(x).flatten(2).transpose(1, 2)  # B Ph*Pw C\n        if self.norm is not None:\n            x = self.norm(x)\n        return x\n')),(0,s.kt)("h2",N({},{id:"\u901a\u7528\u578b\u7684\u4e3b\u5e72\u7f51\u7edc\u9700\u8981\u4ec0\u4e48"}),"\u901a\u7528\u578b\u7684\u4e3b\u5e72\u7f51\u7edc\u9700\u8981\u4ec0\u4e48\uff1f"),(0,s.kt)("p",null,"\u672c\u6587\u65e8\u5728\u4f7f\u7528Transformer\u6784\u5efa\u4e00\u4e2a\u901a\u7528\u7684\u4e3b\u5e72\u7f51\u7edc\uff0c\u90a3\u4e48\u4e00\u4e2a\u901a\u7528\u7684\u4e3b\u5e72\u7f51\u7edc\u9700\u8981\u4ec0\u4e48\u5462\uff1f"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"\u8f7b\u91cf"),(0,s.kt)("li",{parentName:"ol"},"\u5f3a\u5927\u7684\u7279\u5f81\u63d0\u53d6\u80fd\u529b"),(0,s.kt)("li",{parentName:"ol"},"\u591a\u5c3a\u5ea6")),(0,s.kt)("h2",N({},{id:"local-vision-transformer"}),"local vision transformer"),(0,s.kt)("p",null,"\u4f17\u6240\u5468\u77e5\uff0cTransformer\u662f\u4e00\u79cd\u81ea\u6ce8\u610f\u529b\uff0c\u800c\u81ea\u6ce8\u610f\u529b\u7684\u5173\u952e\u5c31\u662f\u8ba1\u7b97\u5168\u5c40\u4e2d\u6240\u6709token\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u4f3c\u4e4e\u4e0elocal\u6709\u5f88\u5927\u7684\u77db\u76fe\u3002"),(0,s.kt)("p",null,"\u6700\u8fd1\u8d8a\u6765\u8d8a\u591a\u7684\u5de5\u4f5c\u5bf9local vision transformer\u8fdb\u884c\u7814\u7a76\uff0c\u5176\u5b9e\u9645\u4e0a\u662f\u4e00\u79cdlocal attention\uff0c\u6bd4\u5982\u4e4b\u524d\u7684VOLO outlooker attention\uff0c\u5176\u4f18\u70b9\u4e3b\u8981\u5728\u4e8e\u8ba1\u7b97\u590d\u6742\u5ea6\u4f4e\uff0c\u76f8\u8f83\u4e8eTransformer\u7684\u5168\u5c40\u7c97\u7565\u5efa\u6a21\u80fd\u591f\u66f4\u7cbe\u7ec6\u5730\u5728\u5c40\u90e8\u8fdb\u884c\u5efa\u6a21\uff08VOLO\u7684\u89c2\u70b9\uff09\uff0c\u4f46\u662f\u5176\u5c40\u90e8\u7684\u5173\u6ce8\u4e0eTransformer\u662f\u76f8\u6096\u7684\uff0c\u56e0\u6b64\u63d0\u51fa\u4e86\u5404\u79cdCross Window\u7684\u4fe1\u606f\u4ea4\u6d41\u65b9\u5f0f\uff1a"),(0,s.kt)("p",null,"\u6bd4\u5982\u672c\u6587\u7684Shift Windows\uff0c\u7f8e\u56e2Twins\u7684local attention\u548cglobal attention\u7ed3\u5408\uff0c\u534e\u4e3aMSG-Transformer\u4f7f\u7528\u7684\u4fe1\u4f7ftoken\uff0c\u4ea4\u5927GG-Transformer\u4f7f\u7528\u7684AdaptivelyDilatedSplitting\u4f7f\u7528Dilate\u7684\u601d\u60f3\u6765\u4ece\u5168\u5c40\u91c7\u96c6Window\uff08\u7c7b\u4f3c\u4e8eshuffle\u52a0\u4e0a\u4ece\u6df1\u5ea6\u5230\u7a7a\u95f4\u7684\u8f6c\u6362\uff09\uff0c\u817e\u8baf\u7684Shuffle Transformer\uff08\u4e0eGG-Transformer\u7c7b\u4f3c\uff09\u7b49\uff0c\u4ee5\u53ca\u4e4b\u524d\u7684Recurrent Criss-Cross Attention\uff0c\u5176\u5229\u7528\u6a2a\u7eb5\u8f74\u4e0a\u4fe1\u606f\u8ba1\u7b97\u5168\u5c40\u6ce8\u610f\u529b\uff0c\u6216\u662f\u7c7b\u4f3c\u4e8eRCCA\u6a21\u5757\u7684CSWin Transformer\u3002"),(0,s.kt)("p",null,"\u8fd9\u4e9b\u90fd\u662flocal attention\uff0c\u4f46\u662f\u901a\u8fc7\u4e0d\u540c\u7684\u65b9\u6cd5\u589e\u5f3a\u4e86\u5176\u5168\u5c40\u5efa\u6a21\u7684\u80fd\u529b\uff0c\u5177\u4f53\u539f\u56e0\u53ef\u80fd\u662f\u56e0\u4e3alocal attention\u7684",(0,s.kt)("strong",{parentName:"p"},"\u7a00\u758f\u8fde\u63a5\u6027"),"\uff0c\u8fd9\u4e5f\u662fVOLO\u7684\u601d\u60f3\u6240\u5728\uff0c\u5e76\u4e14\u9664\u4e86\u4e0a\u8ff0\u7f51\u7edc\uff0c\u4e5f\u5728\u5f88\u591a\u7f51\u7edc\u4e2d\u5f97\u4ee5\u4f53\u73b0\uff0c\u6bd4\u5982ECANet\u9488\u5bf9SENet\u7684\u6539\u8fdb\uff0c\u5176\u4f7f\u7528\u4e00\u7ef4\u5377\u79ef\u83b7\u5f97\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u4f46\u662f\u53d6\u5f97\u4e86\u66f4\u597d\u7684\u6548\u679c\u3002"),(0,s.kt)("p",null,"\u5173\u4e8e\u8fd9\u70b9\u5c06\u5728",(0,s.kt)("a",N({parentName:"p"},{href:"file:///D:/UserData/Desktop/%E8%AE%BA%E6%96%87/Attention%20or%20Conv/2106.04263.pdf"}),"Demystifying Local Vision Transformer: Sparse Connectivity, Weight Sharing, and Dynamic Weight"),"\u8fdb\u884c\u8ba8\u8bba\u2014\u2014Local vision transformer work\u7684\u539f\u56e0\u7a76\u7adf\u662f\u4ec0\u4e48\uff1f"))}_.isMDXComponent=!0}}]);