"use strict";(self.webpackChunkml_notebook=self.webpackChunkml_notebook||[]).push([[1477],{30010:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/[00]unlimited-paper-works","metadata":{"permalink":"/blog/[00]unlimited-paper-works","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[00]unlimited-paper-works.md","source":"@site/blog/[00]unlimited-paper-works.md","title":"\u6b22\u8fce\u6765\u5230\u9b54\u6cd5\u90e8\u65e5\u5fd7","description":"\u5982\u679c\u4f60\u770b\u5230\u4e86\u8fd9\u91cc\uff0c\u8bf4\u660e\u4f60\u5df2\u7ecf\u51c6\u5907\u597d\u5f00\u59cb\u63a2\u6c42\u8fd9\u4e2a\u9886\u57df\u4e8b\u7269\u7684\u89c4\u5f8b\u4ee5\u53ca\u8fd9\u4e9b\u89c4\u5f8b\u7684\u672c\u6e90\u4e86\u3002\u4f5c\u4e3a\u4e00\u4e2a\u672c\u79d1\u751f\uff0c\u6700\u9002\u5408\u4f60\u5165\u5751\u7684\u5c31\u662f\u5f00\u59cb\u4e60\u60ef\u6027\u9605\u8bfb\u9886\u57df\u5185\u8bba\u6587\u3002\u5927\u7ea6\u5728\u6211\u7684\u5927\u4e8c\u7684\u4e0b\u534a\u5b66\u671f\uff0c\u6211\u548c\u6211\u7684\u670b\u53cb\u4eec\u5f00\u59cb\u5171\u540c\u9605\u8bfb\u8bba\u6587\u5e76\u5199\u4e0b\u7b14\u8bb0\u3002\u8fd9\u4e9b\u7b14\u8bb0\u7c97\u6d45\u3001\u5e7c\u7a1a\uff0c\u751a\u81f3\u4f1a\u51fa\u73b0\u4e00\u4e9b\u7406\u89e3\u4e0a\u7684\u9519\u8bef\u2014\u2014\u4e07\u4e8b\u5f00\u5934\u96be\u3002\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u60f3\u628a\u8fd9\u4e9b\u7b14\u8bb0\u6574\u7406\u8d77\u6765\u2014\u2014\u8fd9\u4fbf\u662f\u9b54\u6cd5\u90e8\u65e5\u5fd7\u7684\u5f00\u59cb\u3002\u5728\u6211\u65b0\u5efa\u6587\u4ef6\u5939\u7684\u65f6\u5019\uff0c\u9b54\u6cd5\u90e8\u65e5\u5fd7\u7684\u6587\u4ef6\u5939\u540d\u79f0\u662f\u201cunlimited paper works\u201d\uff0c\u5728\u6210\u4e3a\u7406\u6027\u7684\u6000\u7591\u8005\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u638c\u63e1\u8fd9\u4e2a\u79d1\u7814\u9886\u57df\u3002\u6211\u4eec\u505a\u597d\u4e86\u957f\u671f\u6295\u5165\u7684\u51c6\u5907\uff0c\u5e76\u5e0c\u671b\u628a\u7b80\u5355\u7684\u4e8b\u60c5\u505a\u5230\u51fa\u4eba\u610f\u6599\u5f97\u7cbe\u5f69\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[],"readingTime":39.125,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"\u6b22\u8fce\u6765\u5230\u9b54\u6cd5\u90e8\u65e5\u5fd7","authors":["visualdust"],"tags":[]},"nextItem":{"title":"The Devil is in the Decoder - Classification, Regression and GANs","permalink":"/blog/[01]The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs"}},"content":"\u5982\u679c\u4f60\u770b\u5230\u4e86\u8fd9\u91cc\uff0c\u8bf4\u660e\u4f60\u5df2\u7ecf\u51c6\u5907\u597d\u5f00\u59cb\u63a2\u6c42\u8fd9\u4e2a\u9886\u57df\u4e8b\u7269\u7684\u89c4\u5f8b\u4ee5\u53ca\u8fd9\u4e9b\u89c4\u5f8b\u7684\u672c\u6e90\u4e86\u3002\u4f5c\u4e3a\u4e00\u4e2a\u672c\u79d1\u751f\uff0c\u6700\u9002\u5408\u4f60\u5165\u5751\u7684\u5c31\u662f\u5f00\u59cb\u4e60\u60ef\u6027\u9605\u8bfb\u9886\u57df\u5185\u8bba\u6587\u3002\u5927\u7ea6\u5728\u6211\u7684\u5927\u4e8c\u7684\u4e0b\u534a\u5b66\u671f\uff0c\u6211\u548c\u6211\u7684\u670b\u53cb\u4eec\u5f00\u59cb\u5171\u540c\u9605\u8bfb\u8bba\u6587\u5e76\u5199\u4e0b\u7b14\u8bb0\u3002\u8fd9\u4e9b\u7b14\u8bb0\u7c97\u6d45\u3001\u5e7c\u7a1a\uff0c\u751a\u81f3\u4f1a\u51fa\u73b0\u4e00\u4e9b\u7406\u89e3\u4e0a\u7684\u9519\u8bef\u2014\u2014\u4e07\u4e8b\u5f00\u5934\u96be\u3002\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u60f3\u628a\u8fd9\u4e9b\u7b14\u8bb0\u6574\u7406\u8d77\u6765\u2014\u2014\u8fd9\u4fbf\u662f\u9b54\u6cd5\u90e8\u65e5\u5fd7\u7684\u5f00\u59cb\u3002\u5728\u6211\u65b0\u5efa\u6587\u4ef6\u5939\u7684\u65f6\u5019\uff0c\u9b54\u6cd5\u90e8\u65e5\u5fd7\u7684\u6587\u4ef6\u5939\u540d\u79f0\u662f\u201cunlimited paper works\u201d\uff0c\u5728\u6210\u4e3a\u7406\u6027\u7684\u6000\u7591\u8005\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u638c\u63e1\u8fd9\u4e2a\u79d1\u7814\u9886\u57df\u3002\u6211\u4eec\u505a\u597d\u4e86\u957f\u671f\u6295\u5165\u7684\u51c6\u5907\uff0c\u5e76\u5e0c\u671b\u628a\u7b80\u5355\u7684\u4e8b\u60c5\u505a\u5230\u51fa\u4eba\u610f\u6599\u5f97\u7cbe\u5f69\u3002\\n\\n\u52a0\u5165\u9b54\u6cd5\u90e8\u65e5\u5fd7\u4e5f\u4e0d\u662f\u4ec0\u4e48\u96be\u4e8b\uff0c\u4f60\u53ea\u9700\u8981\u70ed\u8eab\u4e00\u4e0b\uff0c\u8bfb\u5b8c\u4e0b\u9762\u7684\u4e00\u7bc7\u5f15\u5bfc\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86(\u4ee5\u4e0b\u5185\u5bb9\u5df2\u901a\u8fc7\u8bed\u6cd5\u68c0\u67e5\u5de5\u5177[PaperCube](https://github.com/PaperCube)\u7684\u68c0\u67e5)\u3002\\n\\n## How to Read and Comprehend Scientific Research Articles\\n\\nScientific articles are how scholars and researchers communicate with each other. Reading scientific articles helps you to participate in your comprehension by wondering how the researchers explain their ideas. Books, websites, papers, scientific magazines are general places to start with.\\n\\nThis tutorial will discuss:\\n\\n- How to read a scientific article\\n- How to find the main points of an article\\n- How to take effective notes\\n\\n\x3c!--truncate--\x3e\\n\\n### How to read a scientific article\\n\\nThe least effective way to read scientific articles is from the start to finish. Instead, expert researchers scan the article skimming for key findings. The structured scientific articles are defined by several distinct sections. Most articles like lab reports are divided into five sections:\\n\\n- Abstract\\n- Introduction\\n- Methods \\n- Results\\n- Discussion\\n\\nAnd the most effective way to read a scientific article is to follow this order: Abstract, Discussion, Introduction, Results, Methods. The difference between the original structure and suggested reading order are listed below:\\n\\n| The original structure | Order suggested |\\n| ---------------------- | --------------- |\\n| Abstract               | Abstract        |\\n| Introduction           | Discussion      |\\n| Methods                | Introduction    |\\n| Results                | Results         |\\n| Discussion             | Methods         |\\n\\nBy reading in the suggested order, you can quickly find the information you need to determine if the article is useful for you. After you read each section, asking yourself whether the article is interesting and relevant enough to your research assignment will help you to decide whether to continue reading it.\\n\\n#### The Abstract\\n\\nAbstract usually contains four kinds of information:\\n\\n- Purpose of the study (why they did it)\\n- Methodology (how they did it)\\n- Results (what they have found)\\n- Conclusion (what it means)\\n\\nAfter reading these sections, think about whether you should continue your reading.\\n\\n#### The Discussion\\n\\nThis section usually contains things below:\\n\\n- Clear answers about the question posed in the introduction\\n- Explanations about how the results supports the conclusions\\n\\nAfter reading this sections ask yourself whether you understand and believe the author(s)\' claims.\\n\\n#### The Introduction\\n\\nThe introduction serves two purposes:\\n\\n- Stimulating and interests the subject\\n- Putting the article in the large context\\n\\nGenerally introductions achieve these goals by leading the reader from the `General`(what is already known to the topic), to the `Specific`(what is not yet known), to the `Focused Question`(what the authors are asking). Thus, the authors describe previous works and how they are related to it.\\n\\nBefore we move on to the next section, ask yourself why the authors did this study, and, does the researched question match up with the conclusions in the discussion?\\n\\n#### The results\\n\\nThe results\' section states:\\n\\n- What the author has found\\n- Key data, often shown in figures or tables\\n\\nAsk yourself if the data collected are appropriate to answer the researched question before moving on to the next section.\\n\\n#### The methods\\n\\nThe method sections tells the reader:\\n\\n- What experiments were done to answer the question stated in the introduction\\n\\nThis section can be difficult to read for students due to the technical language used and complex details listed. However, you can fully understand what happened by reading it carefully.\\n\\n### How to find the main points of an article\\n\\nWhile you are reading the article, also distinguish the author\'s main points. It can be difficult to distinguish between the main point and less relevant sub-points.\\n\\nKey places to look for the main points include:\\n\\n- The article title\\n- The abstract\\n- Keywords\\n- Figure and Table titles\\n- The first and the last sentences of the Introduction\\n\\nThe keywords to look out for the main points include:\\n\\n- \\"We hypothesize that...\\"\\n- \\"We propose...\\"\\n- \\"We introduce...\\"\\n\\n### How to take effective notes\\n\\nAnother important part of reading and comprehending a scientific article is to take notes. Effective note-taking will save your time and help you clarify your thoughts.\\n\\nCreating a standard template for taking note will help you organize your research and enable you to make quick comparisons and will save your time re-reading articles. \\n\\nA possible template of reading articles can be:\\n\\n| Article title        |      |\\n| -------------------- | ---- |\\n| Author(s)            |      |\\n| Journal              |      |\\n| Date                 |      |\\n| Pages/Volume         |      |\\n| Issues               |      |\\n| URL                  |      |\\n| Main concepts        |      |\\n| My critical response |      |\\n\\n### Summary\\n\\nSo we know that reading a paper in the proper order, making full understand of the author\'s main points, and taking effective notes can be a effective way to do your research.\\n\\n\u597d\u4e86\uff0c\u4f60\u53ef\u4ee5\u542f\u7a0b\u4e86\u3002\\n\\n---\\n\\n\\n\\n## \u5199\u4f5c\u4e00\u7bc7\u79d1\u6280\u7c7b\u8bba\u6587\uff1f\\n\\n\u6ce8\uff1a\u8fd9\u4e00\u90e8\u5206\u662f\u5728\u542c\u4e86\u9648\u5173\u8363\u6559\u6388\u7684\u5206\u4eab\u540e\u5199\u4e0b\u7684\u3002\\n\\n### \u8ba4\u771f\u5199\u4f5c\u7684\u91cd\u8981\u6027\\n\\n\u8bf7\u8ba4\u771f\u5199\u4f5c\u3002\\n\\n![image-20210607125125488](./src/unlimited-paper-works/image-20210607125125488.png)\\n\\n\u4e0a\u56fe\u662f\u4e0d\u8ba4\u771f\u5199\u4f5c\u7684\u7ed3\u679c\u3002\\n\\n### \u4e00\u7bc7\u79d1\u6280\u8bba\u6587\u5178\u578b\u7684\u7ed3\u6784\\n\\n| Content                 | \u63cf\u8ff0                                                         |\\n| ----------------------- | ------------------------------------------------------------ |\\n| Title\uff08\u9898\u76ee\uff09           | \u6587\u732e\u7684\u9898\u76ee\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6587\u732e\u7684\u9898\u76ee\u5e94\u8be5\u7b80\u5355\u3001\u51c6\u786e\u3001\u7cbe\u70bc\u3001\u5f15\u4eba\u6ce8\u76ee\uff0c\u8868\u8fbe\u6587\u7ae0\u4e3b\u8981\u5185\u5bb9\u6216\u601d\u60f3\u3002 |\\n| Author\uff08\u4f5c\u8005\uff09          | \u6587\u732e\u7684\u4f5c\u8005\u3002\uff08\u5343\u4e07\u4e0d\u80fd\u672a\u7ecf\u540c\u610f\u548c\u8bb8\u53ef\u5c31\u968f\u4fbf\u5730\u628a\u522b\u4eba\u4f8b\u5982\u5bfc\u5e08\u7684\u540d\u5b57\u52a0\u5230\u6587\u7ae0\u4e0a\u5355\u65b9\u9762\u53bb\u6295\u7a3f\uff09 |\\n| Abstract\uff08\u6458\u8981\uff09        | \u6587\u732e\u7684\u6458\u8981\uff0c\u8981\u5168\u9762\u51c6\u786e\u3001\u7b80\u660e\u63e1\u8981\u3002\u6458\u8981\u662f\u4f9b\u51fa\u7248\u793e\u3001\u56fe\u4e66\u9986\u3001\u4fe1\u606f\u5e93\u68c0\u7d22\u7528\u7684\uff0c\u901a\u5e38\u8981\u5355\u72ec\u520a\u767b\uff0c\u56e0\u6b64\uff0c\u8981\u81ea\u6211\u5b8c\u5907\uff0c\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u6570\u5b66\u516c\u5f0f\u3001\u6570\u5b66\u7b26\u53f7\u3001\u65b9\u7a0b\u5e8f\u53f7\u3001 \u5f15\u6587\u5e8f\u53f7\u3001\u56fe\u8868\u7b49\u7b49\u3002 |\\n| Keywords\uff08\u5173\u952e\u8bcd\uff09      | \u6587\u7ae0\u7684\u5173\u952e\u5b57\uff0c\u6587\u7ae0\u6240\u5305\u542b\u7684\u7814\u7a76\u9886\u57df\u6216\u65b9\u5411\uff0c\u5e76\u4e14\u5e94\u8be5\u7528\u5355\u6570\uff08\u4f8b\u5982\uff1a\u201cattractor\u201d \u800c\u4e0d\u662f \u201cattractors\u201d\uff09\u3002SCI \u7cfb\u7edf\u5229\u7528\u5173\u952e\u8bcd\u6765\u5206\u7c7b\u6587\u732e\uff0c\u5e76\u4e14\u8bfb\u8005\u5229\u7528\u5173\u952e\u8bcd\u6765\u641c\u7d22\u6587\u7ae0\u3002 \u5173\u952e\u8bcd\u4e0d\u5168\u9762\u53ef\u80fd\u5bfc\u81f4\u68c0\u7d22\u9057\u6f0f\u548c\u5f15\u7528\u51cf\u5c11\u3002 |\\n| Introduction\uff08\u5f15\u8a00\uff09    | \u5f15\u8a00\u5e94\u8be5\u5168\u9762\u3001\u5ba2\u89c2\u3001\u51c6\u786e\u5730\u4ecb\u7ecd\u95ee\u9898\u7684\u80cc\u666f\u548c\u5386\u53f2\u53d1\u5c55\uff0c \u4ed6\u4eba\u4ee5\u53ca\u81ea\u5df1\u7684\u8d21\u732e\uff0c\u672c\u6587\u7684\u52a8\u56e0\u548c\u4e3b\u8981\u6210\u679c\u3002\u6ce8\u610f\uff0c\u77ed\u6587\u5728\u5f15\u8a00\u90e8\u5206\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u8bf4\u660e\u6587\u7ae0\u7684\u57fa\u672c\u7ed3\u6784\u3002 |\\n| Sections\uff08\u6bb5\u843d\uff09        | \u6587\u7ae0\u7684\u5185\u5bb9\u5206\u4e3a\u5f88\u591a\u6bb5\u843d\u3002\u8fd9\u4e9b\u6bb5\u843d\u7684\u6807\u9898\u3001\u7f16\u53f7\u548c\u683c\u5f0f\u5e94\u8be5\u5c3d\u91cf\u7edf\u4e00\uff1b\u5728\u5199\u4f5c\u65f6\uff0c\u8981\u5c3d\u91cf\u907f\u514d\u5197\u957f\u7684\u53e5\u5b50\u3001\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u7b26\u53f7\u548c\u5b9a\u4e49\u3001\u907f\u514d\u592a\u591a\u592a\u6ee5\u7684\u7f29\u5199\u3001\u907f\u514d\u592a\u591a\u592a\u6ee5\u7684\u65b9\u7a0b\u53f7\u7801\u3002 |\\n| Conclusion\uff08\u7ed3\u8bba\uff09      | \u6587\u7ae0\u7684\u7ed3\u8bba\u3002\u7ed3\u8bba\u4e2d\u4e0d\u8981\u7b80\u5355\u5730\u6539\u5199\u751a\u81f3\u91cd\u590d\u6587\u7ae0\u7684\u6458\u8981\uff1b\u548c\u6458\u8981\u90e8\u5206\u4e00\u6837\uff0c\u7ed3\u8bba\u90e8\u5206\u4e0d\u8981\u63f4\u5f15\u524d\u6587\u4e2d\u51fa\u73b0\u8fc7\u7684\u65b9\u7a0b\u53f7\u7801\u3001\u56fe\u8868\u53f7\u7801\uff0c \u4e0d\u8981\u91cd\u65b0\u8ba8\u8bba\u6570\u5b66\u516c\u5f0f\u3001\u7ed9\u51fa\u5b9a\u7406\u8865\u5145\u8bc1\u660e\u4e4b\u7c7b\u3002 |\\n| Acknowledgement\uff08\u81f4\u8c22\uff09 | \u5728\u8fd9\u90e8\u5206\u53ef\u4ee5\u611f\u8c22\u8ba4\u771f\u800c\u53c8\u6709\u5b9e\u8d28\u6027\u5efa\u8bae\u7684\u533f\u540d\u5ba1\u7a3f\u4eba\u3001\u8ba4\u771f\u800c\u53c8\u6709\u5b9e\u8d28\u6027\u5efa\u8bae\u7684\u670b\u53cb\u3001\u4ee5\u53ca\u6709\u5173\u79d1\u7814\u57fa\u91d1\u3002 |\\n| References\uff08\u53c2\u8003\u6587\u732e\uff09  | \u8fd9\u90e8\u5206\u5217\u8868\u5448\u73b0\u5199\u4f5c\u65f6\u53c2\u8003\u7684\u6587\u732e\u3002\u8bf7\u6ce8\u610f\u4e25\u683c\u4f7f\u7528\u6807\u51c6\u683c\u5f0f\u3002\u5173\u4e8e\u683c\u5f0f\uff0c\u8bf7\u4f7f\u7528\u7edf\u4e00\u683c\u5f0f\uff0c\u6216\u4f7f\u7528\u4f60\u6253\u7b97\u6295\u7a3f\u7684\u90a3\u4e2a\u6742\u5fd7\u7684\u683c\u5f0f\u3002\u6587\u732e\u7684\u591a\u5c11\u8981\u6070\u5f53\uff1a\u4e0d\u8981\u6f0f\u6389\u91cd\u8981\u548c\u5fc5\u8981\u7684\u6587\u732e\uff0c\u53c8\u4e0d\u8981\u7f57\u5217\u591a\u4f59\u4e14\u6beb\u4e0d\u76f8\u5173\u7684\u6587\u7ae0\u3002 |\\n| Appendix\uff08\u9644\u5f55\uff09        | \u9644\u5f55\u901a\u5e38\u53ef\u4ee5\u653e\u4e00\u4e9b\u6bd4\u8f83\u957f\u7684\u5f15\u7406\u548c\u5b9a\u7406\u7684\u8bc1\u660e\uff0c\u65b9\u4fbf\u8bfb\u8005\u5728\u9605\u8bfb\u7b80\u6d01\u7684\u539f\u6587\u540e\u67e5\u9605\u3002 |\\n\\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u5de5\u5177\u6765\u89c4\u8303\u4f60\u7684\u5199\u4f5c\u3002\\n\\n### Abstract\u7684\u5199\u4f5c\u6280\u5de7\\n\\n\u4ee5\u4e0b\u5185\u5bb9\u6458\u6284\u81ea\u7f51\u7edc\uff1a\\n\\n> \u5957\u8def\u4e00\u822c\u662f\uff0c\u5148\u8bf4\u5927\u73af\u5883\u4e0b\u672c\u9886\u57df\u7684\u53d1\u5c55\uff0c\u5206\u7c7b\uff0c\u6781\u5176\u5bf9\u5176\u4ed6\u9886\u57df\u7684\u4f5c\u7528\u3002\u8fdb\u800c\u8f6c\u5230\u5176\u4e2d\u67d0\u67d0\u6a21\u5757(\u4f60\u9488\u5bf9\u7684\u6a21\u5757)\u5bf9\u6574\u4f53\u7684\u6027\u80fd\u81f3\u5173\u91cd\u8981\u3002\u8be5\u6a21\u5757\u5df2\u88ab\u591a\u4e2a\u5176\u4ed6\u9886\u57df\u5e94\u7528\uff0c\u5982U,V,W(\u5217\u51fa\u53c2\u8003\u6587\u732e)\u3002\u9488\u5bf9\u8be5\u6a21\u5757\uff0c\u5927\u5bb6\u90fd\u4f7f\u7528\u7684\u65b9\u6cd5\u662fZ\uff0c\u8fd1\u5341\u5e74\u6765\u4e00\u76f4\u5982\u6b64\u3002\u540e\u7eed\u9488\u5bf9\u4f20\u7edf\u65b9\u6cd5Z\u7684\u4e0d\u8db3\uff0c\u8fd1\u51e0\u5e74\u6709\u5b66\u8005\u63d0\u51fa\u4e86D\u65b9\u6cd5(ECCV2017)\uff0c\u7528\u4ee5\u6539\u5584XXXX\u3002\u63a5\u7740\u9488\u5bf9D\u65b9\u6cd5\u7684\u4e0d\u8db3\uff0c\u53c8\u6709\u4eba\u63d0\u51fa\u4e86E\uff0c\u89e3\u51b3\u4e86D\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u63d0\u9ad8D\u7684\u901f\u5ea6\uff0c\u6216\u8005D\u7684\u7a33\u5b9a\u6027\uff0c\u6216\u8005\u662fD\u7684\u63a8\u5e7f\u7248\u672c\u3002E\u662f\u76f8\u5f53\u7ecf\u5178\u7684\uff0c\u8fd9\u4e48\u591a\u5e74\u4ee5\u6765\u6210\u4e3a\u4e86\u4e3b\u5bfc\uff0c\u53ef\u8c13\u4eba\u5c3d\u7686\u77e5\u3002\u6700\u65b0\u7684\u7814\u7a76\u8fdb\u5c55\u4e2d\uff0c\u6709\u5b66\u8005\u8fd8\u63d0\u51fa\u4e86F, H\u7b49\u53d8\u4f53\uff0c\u5206\u522b\u8003\u8651\u4e86XXXX\uff0c\u6709\u7684\u8fd8\u5e94\u7528\u5728\u5176\u4ed6\u9886\u57df\u4e2d\u3002\u4f46\u662f(\u5173\u952e\u6765\u4e86)\uff0c\u4e0a\u8ff0\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u90fd\u4ec5\u4ec5\u8003\u8651\u4e86XXXX\u5c42\u9762\uff0c\u56e0\u7d20\u3002However, we observed that......\uff0cthey may suffer from\u2026\u2026\uff0cthey face the problem of\u2026\u2026\u8fd9\u4e2a\u5730\u65b9\u6700\u597d\u9700\u8981\u4f60\u7528\u4e00\u53e5\u795e\u6765\u4e4b\u7b14\u7684\u89c2\u70b9\u8bf4\u51fa\u8fd9\u4e9b\u65b9\u6cd5\u7684\u95ee\u9898\uff0c\u4ece\u800c\u8ba9\u4eba\u773c\u524d\u4e00\u4eae\uff0c\u8ba9\u4eba\u604d\u609f\u597d\u50cf\u8fd9\u4e9b\u65b9\u6cd5\u786e\u5b9e\u662f\u8fd9\u4e48\u4e00\u56de\u4e8b\uff0c\u751a\u81f3\u8ba9\u4eba\u604d\u609f\u539f\u6765E\u65b9\u6cd5\u80fd\u6709\u63d0\u5347\u662f\u51fa\u4e8e\u80cc\u540e\u8fd9\u4e48\u4e2a\u539f\u56e0\u3002\u603b\u4e4b\u4f60\u82e5\u80fd\u603b\u7ed3\u5230\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u6df1\u523b\u9053\u7406\uff0c\u90a3\u57fa\u672c\u4e0a\u5ba1\u7a3f\u4eba\u5bf9\u4f60\u8bba\u6587\u7684\u770b\u6cd5\u5c31\u662fvery novel\u3002\u52a0\u4e4b\u4f60\u7684\u63d0\u5347\u67091.5\u4e2a\u70b9\u8fd9\u4e48\u591a\uff0c\u90a3\u4e48\u5ba1\u7a3f\u4eba\u5bf9\u4f60\u5b9e\u9a8c\u7ed3\u679c\u7684\u770b\u6cd5\u4e5f\u5c06\u662fsignificant\u6216very convincing\u3002\\n\\n- \u4e3a\u4e86\u6d41\u7545\u5730\u4e66\u5199Abstract\uff0c\u4f60\u9700\u8981\u6709\u8db3\u591f\u7684\u6587\u732e\u50a8\u5907\uff0c\u8fd9\u6837\u624d\u80fd\u505a\u5230\u4fe1\u624b\u62c8\u6765\u3002\\n- \u6ce8\u610f\u8bed\u8a00\u8868\u8fbe\u8981\u5ba2\u89c2\uff0c\u8981\u5c0a\u91cd\uff0c\u8fd8\u8981\u7280\u5229\u3002\\n\\n### \u8bba\u6587\u7684\u6295\u7a3f\u6d41\u7a0b\\n\\n- Have an idea \uff08\u4f60\u6709\u4e00\u4e2a\u60f3\u6cd5\uff09\\n- Do your research \uff08\u5b8c\u6210\u4f60\u7684\u7814\u7a76\u548c\u5b9e\u9a8c\uff09\\n- Write your paper \uff08\u8fdb\u884c\u8bba\u6587\u5199\u4f5c\uff09\\n- Identify  a journal \uff08\u9009\u62e9\u8981\u53d1\u8868\u7684\u671f\u520a\u3002\u8001\u624b\u7684\u4e00\u4e9b\u60f3\u6cd5\u662f\u6709\u60f3\u6cd5\u4e4b\u540e\u5148\u9009\u62e9\u671f\u520a\u518d\u8fdb\u884c\u8bba\u6587\u5199\u4f5c\uff0c\u6709\u8bb8\u591a\u76f4\u63a5\u88ab\u62d2\u7684\u8bba\u6587\u4e0d\u662f\u5199\u7684\u4e0d\u597d\u800c\u662f\u627e\u9519\u4e86\u5730\u65b9\u3002\uff09\\n- Submit your paper \uff08\u63d0\u4ea4\u4f60\u7684\u8bba\u6587\uff09\\n- Receive reviewers\' comments \uff08\u6536\u5230\u5ba1\u7a3f\u4eba\u8bc4\u4ef7\uff09\\n- Revise and submit \uff08\u4fee\u6539\u540e\u91cd\u65b0\u63d0\u4ea4\uff09\\n- Receive further comments \uff08\u6536\u5230\u540e\u7eed\u5ba1\u7a3f\u610f\u89c1\uff09\\n- Revise and submit \uff08\u4fee\u6539\u540e\u91cd\u65b0\u63d0\u4ea4\uff09\\n- ......\\n- Get accepted and published \uff08\u88ab\u63a5\u53d7\u5e76\u53d1\u8868\uff09\\n\\n### \u8bba\u6587\u7684\u5ba1\u7a3f\u6d41\u7a0b\\n\\n- Editor-in-Chief receives manuscript \uff08\u4e3b\u7f16\u6536\u5230\u8bba\u6587\uff09\\n- Checks for quality, scope \uff08\u68c0\u67e5\u8bba\u6587\u8d28\u91cf\u3002Desk rejection \u4e5f\u5c31\u662f\u62d2\u7a3f\u5f80\u5f80\u662f\u5728\u8fd9\u4e00\u6b65\u53d1\u751f\u7684\uff09\\n- Assigns to an editor including the EIC herself \uff08\u5206\u914d\u7ed9\u7f16\u8f91\u5ba1\u9605\uff09\\n- Handling editor invites reviewers \uff08\u7f16\u8f91\u9080\u8bf7\u5ba1\u7a3f\u4eba\uff09\\n- May or may not use suggested reviewers \uff08\u63a5\u53d7\u6216\u8005\u4e0d\u63a5\u53d7\u8be5\u5ba1\u7a3f\u4eba\u8bc4\u9605\uff09\\n- Receives reviewers\' comments \uff08\u6536\u5230\u5ba1\u7a3f\u4eba\u610f\u89c1\uff09\\n- Makes decision : Reject, major revision, minor revision or accept \uff08\u505a\u51b3\u5b9a\uff1a\u62d2\u7edd\uff0c\u91cd\u5927\u4fee\u6539\uff0c\u8f7b\u5fae\u4fee\u6539\uff0c\u8fd8\u662f\u63a5\u53d7\u8bba\u6587\uff09\\n- reject and resubmit \uff08\u62d2\u7edd\u5e76\u91cd\u65b0\u63d0\u4ea4\uff09\\n- Receives revised manuscript \uff08\u63a5\u6536\u4fee\u6539\u540e\u7684\u8bba\u6587\uff09\\n- Invites reviewers \uff08\u9080\u8bf7\u8bc4\u9605\uff09\\n- Likely the previous reviewers, but could also be new reviewers \uff08\u53ef\u80fd\u662f\u4e4b\u524d\u7684\u5ba1\u7a3f\u4eba\uff0c\u4e5f\u53ef\u80fd\u662f\u65b0\u7684\u5ba1\u7a3f\u4eba\uff09\\n- Receives reviewers\' comments \uff08\u6536\u5230\u5ba1\u7a3f\u4eba\u610f\u89c1\uff09\\n- ......\\n- Accepts \uff08\u63a5\u53d7\uff09\\n\\n### \u5e38\u89c1\u7684\u7b80\u5355\u5ba1\u7a3f\u610f\u89c1\uff08\u5728\u5199\u4f5c\u671f\u5c31\u53ef\u4ee5\u907f\u514d\uff09\\n\\n|          \u5ba1\u7a3f\u610f\u89c1          | \u5ba1\u7a3f\u610f\u89c1\u5168\u6587                                                 | \u53c2\u8003\u4e2d\u6587                                                     | \u4e3e\u4f8b                                                         |\\n| :------------------------: | :----------------------------------------------------------- | :----------------------------------------------------------- | :----------------------------------------------------------- |\\n|      \u53c2\u8003\u6587\u732e\u4e0d\u8981\u624e\u5806      | Eliminate multiple references. After that please check the manuscript thoroughly and eliminate all the lumps in the manuscript. This should be done by characterizing each reference individually. This can be done by mentioning 1 or 2 phrases per reference to show how it is different from the others and why it deserves mentioning | \u6d88\u9664\u51fa\u73b0\u5728\u540c\u4e2a\u4f4d\u7f6e\u7684\u591a\u4e2a\u5f15\u7528\u3002\u5728\u90a3\u4e4b\u540e\uff0c\u8bf7\u5f7b\u5e95\u68c0\u67e5\u624b\u7a3f\uff0c\u6d88\u9664\u6240\u6709\u7684\u624e\u5806\u6587\u732e\u3002\u8fd9\u5e94\u8be5\u901a\u8fc7\u5355\u72ec\u63cf\u8ff0\u6bcf\u4e2a\u5f15\u7528\u6765\u5b9e\u73b0\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5728\u6bcf\u6b21\u5f15\u7528\u4e2d\u63d0\u52301\u62162\u4e2a\u77ed\u8bed\u6765\u8bf4\u660e\u5b83\u4e0e\u5176\u4ed6\u7684\u4e0d\u540c\u4e4b\u5904\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u503c\u5f97\u63d0\u5230\u3002 | \u4fee\u6539\u5982\u201c\u524d\u4eba\u7684\u5de5\u4f5c\u6709\\\\[1\\\\]\\\\[2\\\\]\\\\[3\\\\]\\\\[4\\\\]\\\\[5\\\\]\\\\[6\\\\]\\\\[7\\\\]\u201d\u7684\u5927\u91cf\u5f15\u7528\uff0c\u4ec5\u4fdd\u7559\u5fc5\u8981\u7684\u3002 |\\n|  \u7ed3\u8bba\u4e2d\u589e\u52a0\u610f\u4e49\u91cf\u5316\u53ca\u5bf9\u6bd4  | In the conclusions, in addition to summarizing the actions taken and results, please strengthen the explanation of their significance. It is recommended to use quantitative reasoning comparing with appropriate benchmarks, especially those stemming from previous work. | \u5728\u7ed3\u8bba\u4e2d\uff0c\u9664\u4e86\u603b\u7ed3\u6240\u91c7\u53d6\u7684\u884c\u52a8\u548c\u7ed3\u679c\u5916\uff0c\u8bf7\u52a0\u5f3a\u5bf9\u5176\u91cd\u8981\u6027\u7684\u89e3\u91ca\u3002\u5efa\u8bae\u4f7f\u7528\u5b9a\u91cf\u63a8\u7406\u4e0e\u9002\u5f53\u7684\u57fa\u51c6\u8fdb\u884c\u6bd4\u8f83\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u6e90\u4e8e\u4ee5\u524d\u5de5\u4f5c\u7684\u57fa\u51c6\u3002 | \u589e\u52a0\u5982\u201c\u6211\u4eec\u5728\u524d\u4eba\u63d0\u51fa\u7684xxx\u4e4b\u4e0a\u53c8\u505a\u51fa\u4e86\u600e\u6837\u7684\u8d21\u732e\u201d\u7684\u8bed\u53e5\u3002    |\\n|  \u7ed3\u8bba\u4e2d\u589e\u52a0\u610f\u4e49\u91cf\u5316\u53ca\u5bf9\u6bd4  | Please revise the conclusion in paragraphs. Conclusions are not just about summarizing the key results of the study, it should highlights the insights and the applicability of your findings/results for further work. Please make it more concise and show only the high impact outcomes. Report your Conclusions in one or maximum 2 paragraph. Avoid [bullet form](https://en.wikipedia.org/wiki/Bullet_(typography))). | \u8bf7\u5728\u6bb5\u843d\u4e2d\u4fee\u6539\u7ed3\u8bba\u3002\u7ed3\u8bba\u4e0d\u4ec5\u4ec5\u662f\u603b\u7ed3\u7814\u7a76\u7684\u5173\u952e\u7ed3\u679c\uff0c\u5b83\u5e94\u8be5\u7a81\u51fa\u4f60\u7684\u53d1\u73b0\u7ed3\u679c\u5bf9\u8fdb\u4e00\u6b65\u5de5\u4f5c\u7684\u6d1e\u5bdf\u529b\u548c\u9002\u7528\u6027\u3002\u8bf7\u8ba9\u5b83\u66f4\u7b80\u6d01\uff0c\u53ea\u663e\u793a\u9ad8\u5f71\u54cd\u7684\u7ed3\u679c\u3002\u4e00\u6bb5\u6216\u6700\u591a\u4e24\u6bb5\u62a5\u544a\u4f60\u7684\u7ed3\u8bba\u3002\u907f\u514d[\u5b50\u5f39\u5f62\u5f0f](https://en.wikipedia.org/wiki/Bullet_(typography))\u3002 | \u4e00\u822c\u7ed3\u8bba\u4e0d\u8d85\u8fc7\u534a\u9875\u7eb8\u3002\u8bf7\u4e0d\u8981\u5728\u7ed3\u8bba\u91cc\u4f7f\u7528\u5206\u6761\u5206\u70b9\u7684\u6bb5\u843d\u5f62\u5f0f\u3002 |\\n|       \u5220\u9664\u591a\u4f59\u7684\u865a\u8bcd       | Eliminate the use of redundant words, e.g. in this way, recently, respectively, therefore, currently, thus, hence, finally, to do this, first, in order, however, moreover, nowadays, consequently, in addition, additionally, furthermore. Revise all similar cases, as removing these term(s) would not significantly affect the meaning of the sentence. | \u6d88\u9664\u591a\u4f59\u865a\u8bcd\u7684\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a\u8fd9\u6837\u505a\u3001\u6700\u8fd1\u3001\u5206\u522b\u3001\u76ee\u524d\u3001\u56e0\u4e3a\u3001\u56e0\u6b64\uff0c\u6700\u540e\u3001\u8fd9\u4ef6\u4e8b\u3001\u9996\u5148\u3001\u987a\u5e8f\u3001\u7136\u800c\u3001\u6b64\u5916\u3001\u5982\u4eca\u3001\u56e0\u6b64\u3001\u6b64\u5916\u7b49\u8bcd\u6c47\u3002\u4fee\u6539\u6216\u5220\u9664\u8fd9\u4e9b\u201c\u5220\u9664\u540e\u4e0d\u4f1a\u5bf9\u53e5\u5b50\u7684\u610f\u601d\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u201d\u7684\u8bcd\u3002 | \u5220\u9664\u8bf8\u5982\u201c\u5173\u4e8e\u8fd9\u4ef6\u4e8b...\u201d\u7b49\u65e0\u5173\u8bed\u4e49\u7684\u8fde\u63a5\uff0c\u5bf9\u5404\u79cd\u865a\u8bcd\u7684\u4f7f\u7528\u4ec5\u4fdd\u7559\u5fc5\u8981\u7684\u90e8\u5206\u3002 |\\n| \u5bf9\u4e00\u5343\u4ee5\u4e0a\u7684\u6570\u5b57\u589e\u52a0\u5206\u9694\u7b26 | Add a separator for the numbers over 1,000. Check all numbers including those in the tables/figures. | \u4e3a\u8d85\u8fc71000\u7684\u6570\u5b57\u6dfb\u52a0\u5206\u9694\u7b26\u3002\u68c0\u67e5\u6240\u6709\u6570\u5b57\u5305\u62ec\u8868/\u56fe\u4e2d\u7684\u6570\u5b57\u3002  | \u4f8b\u5982\u5c06\u201c1000\u201d\u6539\u4e3a\u201c1,000\u201d\u3002                                    |\\n|        \u68c0\u67e5\u4e0b\u6807\u683c\u5f0f        | Check all format, e.g. \\"SO2\\" in Fig.5, 2 should be in subscript, check all\u3002 | \u5728Fig.5\u4e2d\uff0c2\u5e94\u8be5\u662f\u4e0b\u6807\uff0c\u8bf7\u68c0\u67e5\u5168\u90e8\u683c\u5f0f\u3002                     | \u4f8b\u5982\u4e8c\u6c27\u5316\u786b$SO_2$\u4e0d\u5c0f\u5fc3\u5199\u6210\u4e86$SO2$\uff0c\u8bf7\u68c0\u67e5\u5e76\u6539\u6b63\u3002          |\\n|      \u8bf7\u4f7f\u7528\u56fd\u9645\u5236\u5355\u4f4d      | Please use SI unit. E,g, m instead of meter, t instead of tons. d instead of day, y instead of years or yr, h instead of hours, M instead of million, kg instead of kilogram or Kg (including those in figures/tables) and leave a space between the value and unit. Please check all. | \u8bf7\u4f7f\u7528\u56fd\u9645\u5236\u5355\u4f4d\u3002\u4f8b\u5982\uff0c\u201cm\u201d\u4ee3\u66ff\u7c73\uff0c\u7528\u201ct\u201d\u4ee3\u66ff\u5428\u3002\u7528\u201cd\u201d\u4ee3\u66ff\u201c\u5929\u201d\uff0c\u7528\u201cy\u201d\u4ee3\u66ff\u201c\u5e74\u201d\u7528\u201ch\u201d\u4ee3\u66ff\u201c\u5c0f\u65f6\u201d\u7528\u201cM\u201d\u4ee3\u66ff\u201c\u767e\u4e07\u201d\uff0c\u7528\u201ckg\u201d\u4ee3\u66ff\u201c\u516c\u65a4\u201d\u6216\u201cKg\u201d(\u5305\u62ec\u56fe\u8868\u4e2d\u7684\u5355\u4f4d)\uff0c\u5e76\u5728\u6570\u503c\u548c\u5355\u4f4d\u4e4b\u95f4\u7559\u4e00\u4e2a\u7a7a\u683c\u3002 | \u539f\u6587\u4e2d\u5df2\u7ecf\u8db3\u591f\u4e3e\u4f8b\u3002                                         |\\n|     \u6ca1\u6709\u6dfb\u52a0\u9875\u7801\u6216\u884c\u53f7     | I suggest the authors add page and line numbers when they re-submit it. It will be easier for reviewers to make comments. | \u6211\u5efa\u8bae\u4f5c\u8005\u5728\u91cd\u65b0\u63d0\u4ea4\u65f6\u6dfb\u52a0\u9875\u7801\u548c\u884c\u53f7\u3002\u8bc4\u5ba1\u8005\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u53d1\u8868\u8bc4\u8bba\u3002 | \u52a0\u4e0a\u9875\u7801\uff0c\u9700\u8981\u884c\u53f7\u7684\u4f4d\u7f6e\u589e\u52a0\u884c\u53f7\u3002                           |\\n|        \u56fe\u8868\u7f3a\u5c11\u6458\u8981        | Please provide a graphical abstracts.                        | \u8bf7\u63d0\u4f9b\u56fe\u8868\u6458\u8981\u3002                                             | \u4e00\u5f20\u6ca1\u6709\u4efb\u4f55\u6587\u5b57\u63cf\u8ff0\u7684\u56fe\u8868\u3002                                 |\\n\\n\\n\\n### \u5e38\u89c1\u7684\u590d\u6742\u5ba1\u7a3f\u610f\u89c1\\n\\n|           \u5ba1\u7a3f\u610f\u89c1           | \u5ba1\u7a3f\u610f\u89c1\u5168\u6587                                                 | \u53c2\u8003\u4e2d\u6587                                                     |\\n| :--------------------------: | ------------------------------------------------------------ | ------------------------------------------------------------ |\\n|         \u6587\u7ae0\u4eae\u70b9\u95ee\u9898         | This is not a highlight of the research.                     | \u8fd9\u4e0d\u662f\u7814\u7a76\u7684\u91cd\u70b9\u3002                                           |\\n|         \u6587\u7ae0\u7f3a\u5c11\u4eae\u70b9         | I think highlights are mandatory for this journal, and they are missing in this paper. | \u6211\u8ba4\u4e3a\u672c\u671f\u520a\u8bba\u6587\u5fc5\u987b\u5177\u5907Highlight\u7684\u90e8\u5206\uff0c\u4f46\u662f\u8fd9\u7bc7\u8bba\u6587\u4e2d\u6ca1\u6709  |\\n| \u6587\u7ae0\u7c7b\u578b\u6bd4\u8f83\u50cf\u62a5\u544a\u800c\u4e0d\u662f\u8bba\u6587 | On the whole, the manuscript is more like a thesis or a report rather than a scientific research. In my understanding, this is not acceptable in a scientific paper of this field of knowledge. The paper is well-written and organized. However, it seems more a technical report than a scientific contribution at this moment. I\'m not sure about the SCIENTIFIC CONTRIBUTION of this paper, since most of the results and discussions seems to be more TECHNICAL than SCIENTIFIC. | \u603b\u7684\u6765\u8bf4\uff0c\u7a3f\u4ef6\u66f4\u50cf\u662f\u7406\u8bba\u6216\u62a5\u544a\uff0c\u800c\u4e0d\u662f\u79d1\u5b66\u7814\u7a76\u3002(\u8fd9\u79cd\u5f62 \u5f0f)\u5728\u8fd9\u4e00\u77e5\u8bc6\u9886\u57df\u7684\u5b66\u672f\u8bba\u6587\u4e2d\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002\u8fd9\u7bc7\u8bba\u6587\u5199\u5f97\u5f88\u597d\uff0c\u6761\u7406\u6e05\u6670\u3002\u7136\u800c\uff0c\u76ee\u524d\u770b\u6765\uff0c\u5b83\u66f4\u50cf\u662f\u4e00\u4efd\u6280\u672f\u62a5\u544a\uff0c\u800c\u4e0d\u662f\u4e00\u4efd\u5b66\u672f\u6210\u679c\u3002\u6211\u4e0d\u786e\u5b9a\u8fd9\u7bc7\u8bba\u6587\u7684\u5b66\u672f\u8d21\u732e\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7ed3\u679c\u548c\u8ba8\u8bba\u4f3c\u4e4e\u7f3a\u4e4f\u5b66\u672f\u6027\u3002 |\\n| \u6587\u7ae0\u7c7b\u578b\u6bd4\u8f83\u50cf\u62a5\u544a\u800c\u4e0d\u662f\u8bba\u6587 | This existing review article makes few relevant contributions to the academic environment. The whole article looks like a technical report, rather than a scientific one. Please tell readers, what the research gaps are, what the scientific contributions are. Then, pls. re-organize the text. | \u73b0\u6709\u7684\u7efc\u8ff0\u6587\u7ae0\u5bf9\u5b66\u672f\u73af\u5883\u7684\u76f8\u5173\u8d21\u732e\u5f88\u5c11\u3002\u6574\u7bc7\u6587\u7ae0\u770b\u8d77\u6765\u50cf\u662f\u4e00\u7bc7\u6280\u672f\u62a5\u544a\uff0c\u800c\u4e0d\u662f\u5b66\u672f\u8bba\u6587\u3002\u8bf7\u544a\u8bc9\u8bfb\u8005(\u8fd9\u4e00\u9886\u57df\u7684)\u7814\u7a76\u7a7a\u767d\u662f\u4ec0\u4e48\uff0c\u79d1\u5b66\u8d21\u732e\u662f\u4ec0\u4e48\uff0c\u5e76\u91cd\u65b0\u7ec4\u7ec7\u6587\u7ae0\u3002 |\\n|        \u6587\u7ae0\u65b0\u9896\u6027\u4e0d\u8db3        | My first and primary concern lies in the novelty of this work, as \\\\|feel that the novelty issue has not been sufficiently. | \u6211\u9996\u5148\u5173\u6ce8\u7684\u662f\u8fd9\u4e2a\u4f5c\u54c1\u7684\u65b0\u9896\u6027\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u8fd9\u4e2a\u65b0\u9896\u6027\u95ee\u9898\u5728\u76ee\u524d\u7684\u7248\u672c\u4e2d\u6ca1\u6709\u5f97\u5230\u5145\u5206\u7684\u5f3a\u8c03\u3002\u5e94\u8be5\u56de\u7b54\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898:\u8fd9\u9879\u5de5\u4f5c\u662f\u5426\u586b\u8865\u4e86\u4e00\u4e9b\u4ee5\u524d\u7684\u6587\u7ae0\u4e0d\u80fd\u89e3\u51b3\u7684\u77e5\u8bc6\u7a7a\u767d\uff1f |\\n|       \u8bba\u6587\u4ef7\u503c\u4f53\u73b0\u4e0d\u8db3       | The author needs to provide the contributions of this study more specific. | \u4f5c\u8005\u9700\u8981\u66f4\u5177\u4f53\u5730\u63d0\u4f9b\u672c\u7814\u7a76\u7684\u8d21\u732e\u3002                           |\\n|     \u6ca1\u6709\u4f53\u73b0\u7814\u7a76\u7684\u91cd\u8981\u6027     | The second major concern is related to the significance of this work, that is, how the results derived from the work be benefitting to the WEEE management? A list of issues can be proposed. | \u7b2c\u4e8c\u4e2a\u4e3b\u8981\u7684\u5173\u6ce8\u70b9\u4e0e\u8fd9\u9879\u5de5\u4f5c\u7684\u610f\u4e49\u6709\u5173\uff0c\u5373\u8fd9\u9879\u5de5\u4f5c\u7684\u7ed3\u679c\u5982\u4f55\u6709\u76ca\u4e8eWEEE\u7ba1\u7406\u53ef\u4ee5\u63d0\u51fa\u4e00\u7cfb\u5217\u95ee\u9898\u3002 |\\n|     \u6ca1\u6709\u4f53\u73b0\u7814\u7a76\u7684\u91cd\u8981\u6027     | The discussion is related to the theory, but the relevance of the findings to the modernization of the state of art is not clear. The : methodology is well designed, but there are missing elements that relate the proposed to what was actually found by the authors. Contributions are unclear. | \u8ba8\u8bba\u4e0e\u7406\u8bba\u6709\u5173\uff0c\u4f46\u7814\u7a76\u7ed3\u679c\u4e0e\u5f53\u524d\uff08\u7814\u7a76\u7684\uff09\u6280\u672f\u65b9\u6cd5\u6c34\u5e73\u7684\u76f8\u5173\u6027\u5e76\u4e0d\u6e05\u695a\u3002\u8be5\u65b9\u6cd5\u8bbe\u8ba1\u5f97\u5f88\u597d\uff0c\u4f46\u662f\u7f3a\u5c11\u4e00\u4e9b\u4e0e\u4f5c\u8005\u5b9e\u9645\u53d1\u73b0\u7684\u5185\u3002\u5bb9\u76f8\u5173\u7684\u5143\u7d20\u3002\u8d21\u732e\u5c1a\u4e0d\u6e05\u695a\u3002 |\\n|        \u6458\u8981\u9700\u8981\u91cd\u65b0\u5199        | The format of the abstract is not correct. Please read the author guidelines. Is too descriptive and lengthy. Please add some quantities to it and shorten it through focusing on the main point. | \u6458\u8981\u7684\u683c\u5f0f\u4e0d\u6b63\u786e\u3002\u8bf7\u9605\u8bfb\u4f5c\u8005\u6307\u5357\u3002\u592a\u63cf\u8ff0\u6027\u548c\u5197\u957f\u3002\u8bf7\u589e\u52a0\u4e00\u4e9b\u5b9a\u91cf\u63cf\u8ff0\uff0c\u5e76\u901a\u8fc7\u4e3b\u8981\u89c2\u70b9\u6765\u7f29\u51cf\u6458\u8981\u5185\u5bb9\u3002 |\\n|        \u6458\u8981\u9700\u8981\u91cd\u65b0\u5199        | \\\\| suggest the authors to rewrite the abstract with a focus on background, objectives, methodology, main findings and conclusion. Please add a sentence which shows the necessity of the study. | \u6211\u5efa\u8bae\u4f5c\u8005\u91cd\u5199\u6458\u8981\uff0c\u91cd\u70b9\u5173\u6ce8\u80cc\u666f\u3001\u76ee\u6807\u3001\u65b9\u6cd5\u3001\u4e3b\u8981\u53d1\u73b0\u548c\u7ed3\u8bba\u3002\u8bf7\u8bf4\u660e\u7814\u7a76\u7684\u5fc5\u8981\u6027\u3002 |\\n|         \u5f15\u8a00\u6709\u4e9b\u8dd1\u9898         | Actually, it is a little far from the topic of this study. Literature review - this section is quite extensive in its coverage, but tends to summarize disaggregate studies of EV adoption derived from surveys. The research has seemingly overlooked the existing literature which applies spatial models to EV registrations, which is surprising given that this is the focus of the work. I\'d advise the authors to examine the following papers as they [a] might find them useful for results comparisons and [b] demonstrate that the association between EV registrations and charge point availability has been considered. | \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79bb\u672c\u7814\u7a76\u7684\u4e3b\u9898\u6709\u4e9b\u504f\u79bb\u3002\u6587\u732e\u7efc\u8ff0-\u672c\u8282\u6db5\u76d6\u8303\u56f4\u76f8\u5f53\u5e7f\u6cdb\uff0c\u4f46\u503e\u5411\u4e8e\u603b\u7ed3\u4ece\u8c03\u67e5\u4e2d\u5f97\u51fa\u7684\u91c7\u7528\u7535\u52a8\u6c7d\u8f66\u7684\u7814\u7a76\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u8fd9\u9879\u7814\u7a76\u4f3c\u4e4e\u5ffd\u7565\u4e86\uff08\u603b\u7ed3\uff09\u5c06\u7a7a\u95f4\u6a21\u578b\u5e94\u7528\u4e8e\u7535\u52a8\u6c7d\u8f66\u767b\u8bb0\u7684\u73b0\u6709\u6587\u732e\uff0c\u56e0\u4e3a\u8fd9\u662f\u5de5\u4f5c\u7684\u91cd\u70b9\u3002\u6211\u5efa\u8bae\u4f5c\u8005\u4eec\u68c0\u67e5\u4e00\u4e0b\u4e0b\u9762\u7684\u8bba\u6587\uff0c\u56e0\u4e3a\u4ed6\u4eec[a]\u53ef\u80fd\u4f1a\u53d1\u73b0\u5b83\u4eec\u6709\u5229\u4e8e\u7ed3\u679c\u5bf9\u6bd4\uff0c\u5e76\u4e14[b]\u8bc1\u660e\u4e86\u7535\u52a8\u6c7d\u8f66\u6ce8\u518c\u548c\u5145\u7535\u6869\u53ef\u7528\u6027\u4e4b\u95f4\u7684\u5173\u8054\u3002 |\\n|        \u5f15\u8a00\u601d\u8def\u4e0d\u6e05\u6670        | I do not think the authors make it very clear of their contributions to this field. | \u6211\u8ba4\u4e3a\u4f5c\u8005\u6ca1\u6709\u5f88\u6e05\u695a\u5730\u5bf9\u4ed6\u4eec\u5728\u8fd9\u4e2a\u9886\u57df\u7684\u8d21\u732e\u8fdb\u884c\u8bf4\u660e\u3002       |\\n|        \u5f15\u8a00\u601d\u8def\u4e0d\u6e05\u6670        | In the \\"Introduction\\" and \\"Literature review\\" section, I do not think the authors make it very clear of their contributions to this field. They have citied almost 90 papers about the relevant studies at the city scale, which is quite a lot. But it is still not clear to me, what specific research questions the authors are asking and how they contribute to the existing studies. | \u5728\u201c\u4ecb\u7ecd\u201d\u548c\u201c\u6587\u732e\u7efc\u8ff0\u201d\u90e8\u5206\uff0c\u6211\u8ba4\u4e3a\u4f5c\u8005\u5e76\u6ca1\u6709\u5f88\u6e05\u695a\u5730\u8bf4\u660e\u4ed6\u4eec\u5bf9\u8fd9\u4e2a\u9886\u57df\u7684\u8d21\u732e\u3002\u4ed6\u4eec\u5f15\u7528\u4e86\u8fd190\u7bc7\u57ce\u5e02\u5c3a\u5ea6\u7684\u76f8\u5173\u7814\u7a76\u8bba\u6587\uff0c\u6570\u91cf\u76f8\u5f53\u53ef\u89c2\u3002\u4f46\u6211\u4ecd\u7136\u4e0d\u6e05\u695a\uff0c\u4f5c\u8005\u7814\u7a76\u4e86\u54ea\u4e9b\u5177\u4f53\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u4ed6\u4eec\u6709\u4f55\u8d21\u732e\u3002 |\\n|       \u7814\u7a76\u65b9\u6cd5\u4ecb\u7ecd\u4e0d\u591f       | Methodology - the preliminary focus groups are an interesting component to the work, but are not outlined in sufficient detail. l\'d advise that more clarity is offered concerning [a] who participated, [b] how the narratives were analyzed, [c] the main findings. | \u65b9\u6cd5-\u521d\u6b65\u7684\u7126\u70b9\u5c0f\u7ec4\u662f\u5de5\u4f5c\u4e2d\u7684\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u6ca1\u6709(\u5bf9\u6b64)\u7ed9\u51fa\u5145\u5206\u7684\u63cf\u8ff0\u3002\u6211\u5efa\u8bae\uff0c\u5e94\u8be5\u5c31[a]\u53c2\u4e0e\u7684\u4eba\uff0c[b]\u5982\u4f55\u5206\u6790\u7684\uff0c[c]\u4e3b\u8981\u53d1\u73b0\uff0c\u8fdb\u884c\u66f4\u6e05\u6670\u7684\u8bf4\u660e\u3002 |\\n|      \u5e94\u7528\u5bf9\u8c61\u65b0\u4f46\u65b9\u6cd5\u65e7      | While this is the first application in XXXX, such an approach has been utilized in the past. | \u867d\u7136\u8fd9\u662f\u5728XXXX\u9886\u57df\u7684\u7b2c\u4e00\u6b21\u5e94\u7528\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u5728\u8fc7\u53bb\u4e5f\u88ab\u4f7f\u7528\u8fc7\u3002 |\\n|           \u7f3a\u4e4f\u5bf9\u6bd4           | The author should provide the advantages of this paper compared to other types of works. | \u4f5c\u8005\u5e94\u8be5\u63d0\u4f9b\u8fd9\u7bc7\u8bba\u6587\u76f8\u8f83\u4e8e\u5176\u4ed6\u5de5\u4f5c\u7684\u4f18\u70b9\u3002                   |\\n|         \u8ba8\u8bba\u4e0d\u591f\u6df1\u5165         | I read the results and discussion section completely. The discussion section is the main part of a paper, but this manuscript mainly reported the data of the modelling without discussing it through adding available reasoning for justifying the result. I recommend author adding several reasoning and comparison through available publications in the literature. | \u6211\u5b8c\u6574\u5730\u9605\u8bfb\u4e86\u7ed3\u679c\u548c\u8ba8\u8bba\u90e8\u5206\u3002\u8ba8\u8bba\u90e8\u5206\u662f\u8bba\u6587\u7684\u4e3b\u8981\u90e8\u5206\uff0c\u4f46\u8fd9\u7bc7\u7a3f\u4ef6\u4e3b\u8981\u63cf\u8ff0\u4e86\u6a21\u578b\u7684\u6570\u636e\uff0c\u5e76\u6ca1\u6709\u901a\u8fc7\u589e\u52a0\u53ef\u7528\u7684\u63a8\u7406\u6765\u5bf9\u7ed3\u679c\u8fdb\u884c\u8ba8\u8bba\u3002\u6211\u5efa\u8bae\u4f5c\u8005\u5728\u7ed3\u5408\u6587\u732e\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u4e9b\u63a8\u7406\u548c\u6bd4\u8f83\u3002 |\\n|     \u8ba8\u8bba\u90e8\u5206\u5efa\u8bae\u4e0d\u591f\u8be6\u7ec6     | Please discuss qualitatively and quantitatively for \\"Suggestions for further improvements\\" in detail. | \u8bf7\u5c31\u201c\u8fdb\u4e00\u6b65\u6539\u8fdb\u7684\u5efa\u8bae\u201d\u8fdb\u884c\u8be6\u7ec6\u7684\u5b9a\u6027\u548c\u5b9a\u91cf\u8ba8\u8bba\u3002             |\\n|     \u8ba8\u8bba\u90e8\u5206\u7f3a\u4e4f\u542f\u793a\u610f\u4e49     | Please insert a section on the implications of the study. Who benefits with it? What problem can the study help to solve? What\' s next? | \u8bf7\u63d2\u5165\u4e00\u4e2a\u90e8\u5206\u8ba8\u8bba\u8be5\u7814\u7a76\u7684\u5f71\u54cd\u3002\u8c01\u4ece\u4e2d\u53d7\u76ca\u4e86?\u8fd9\u9879\u7814\u7a76\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898?\u4e0b\u4e00\u6b65\u662f\u4ec0\u4e48? |\\n|         \u7ed3\u8bba\u9700\u8981\u7cbe\u70bc         | The conclusion part should be more refined to make the findings and contributions of the paper clearer. Furthermore, please note the difference between the conclusions and abstract. | \u7ed3\u8bba\u90e8\u5206\u5e94\u8be5\u66f4\u52a0\u7cbe\u70bc\uff0c\u4f7f\u8bba\u6587\u7684\u53d1\u73b0\u548c\u8d21\u732e\u66f4\u52a0\u6e05\u6670\u3002\u6b64\u5916\uff0c\u8bf7\u6ce8\u610f\u7ed3\u8bba\u548c\u6458\u8981\u4e4b\u95f4\u7684\u533a\u522b\u3002 |\\n|         \u7ed3\u8bba\u9700\u8981\u7cbe\u70bc         | I believe that this result can be obtained without too much analysis. As an alternative, it is recommended to use quantitative reasoning comparing with appropriate benchmarks. | \u6211\u76f8\u4fe1\u8fd9\u4e2a\u7ed3\u679c\u4e0d\u9700\u8981\u592a\u591a\u7684\u5206\u6790\u5c31\u53ef\u4ee5\u5f97\u5230\u3002\u4f5c\u4e3a\u4e00-\u79cd\u66ff\u4ee3\u65b9\u6cd5\uff0c\u5efa\u8bae\u4f7f\u7528\u5b9a\u91cf\u63a8\u7406\u4e0e\u9002\u5f53\u7684\u57fa\u51c6\u8fdb\u884c\u6bd4\u8f83\u3002 |\\n|       \u6587\u7ae0\u8d21\u732e\u4e0d\u591f\u660e\u786e       | So a clearer illustration of contribution or innovation should be further provided in the introduction and conclusion. | \u56e0\u6b64\u5728\u5f15\u8a00\u548c\u7ed3\u8bba\u4e2d\u5e94\u8be5\u8fdb\u4e00\u6b65\u63d0\u4f9b\u4e00\u4e2a\u66f4\u6e05\u6670\u7684\u8d21\u732e\u6216\u521b\u65b0\u7684\u8bf4\u660e\u3002 |\\n|       \u8bed\u8a00\u4f7f\u7528\u9700\u8981\u4fee\u7f2e       | The presentation should be further improved by native speakers, especially for those grammatical errors, typographical errors, and bad structured sentences. | \u6587\u732e\u5e94\u8be5\u7531\u6bcd\u8bed\u8005\u8fdb\u4e00\u6b65\u6539\u8fdb\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u8bed\u6cd5\u9519\u8bef\u3001\u6392\u7248\u9519\u8bef\u3001\u53e5\u5b50\u7ed3\u6784\u6709\u95ee\u9898\u7684\u5730\u65b9\u3002 |\\n\\n\\n\\n# \u4fee\u6539\u539f\u7a3f\\n\\nSubmit the original manuscript showing clearly all textual changes using track changes. Just highlighting textual changes in yellow (or other color) is not acceptable. This includes all edits related to reviewer(s) comments and the Editorial points. Do also submit the clean revised version of the manuscript.\\n\\n\u8bf7\u4f7f\u7528\u4fee\u8ba2\u6a21\u5f0f\u4fee\u6539\u539f\u7a3f\uff0c\u6216\u4f7f\u7528\u5176\u4ed6\u989c\u8272\u6807\u6ce8\u4fee\u6539\u7684\u90e8\u5206\u3002\u4e5f\u8bf7\u63d0\u4ea4\u4e00\u4efd\u5e72\u51c0\u7684\u5b8c\u5168\u4fee\u6539\u7248\u3002\\n\\n\\n\\n---\\n\\n## Q&A\\n\\n1. Q\uff1a\u4e3a\u4ec0\u4e48\u6bcf\u7bc7\u7b14\u8bb0\u540e\u9762\u9996\u5148\u4f1a\u8ddf\u4e00\u4e2a\u7b14\u8bb0\u4f5c\u8005\u7684\u4fe1\u606f\u7684\u4e09\u7ea7\u6807\u9898\uff1f\\n\\n   A\uff1a\u4e3a\u4e86\u5efa\u7acb\u9759\u6001\u7d22\u5f15\u3002\u8fd9\u6837\u4f60\u5728\u641c\u7d22\u6846\u91cc\u5c31\u80fd\u76f4\u63a5\u901a\u8fc7\u641c\u7d22\u7b14\u8bb0\u4f5c\u8005\u7684\u540d\u79f0\u6765\u627e\u5230\u4ed6/\u5979\u5199\u4e0b\u7684\u5168\u90e8\u7b14\u8bb0\u3002\u8fd9\u6837\u505a\u53ea\u662f\u4e34\u65f6\u7684\uff0c\u65b0\u7684\u529e\u6cd5\u8fd8\u6ca1\u6709\u627e\u5230\u3002\\n\\n2. Q\uff1a\u4e3a\u4ec0\u4e48\u7b14\u8bb0\u7684\u683c\u5f0f\u4e0d\u7edf\u4e00\uff1f\\n\\n   A\uff1a\u56e0\u4e3a\u672c\u90e8\u5206\u662f\u53c8\u5f88\u591a\u4eba\u4e00\u8d77\u5199\u4e0b\u7684\u7b14\u8bb0\u3002\u5927\u5bb6\u5199\u7b14\u8bb0\u7684\u98ce\u683c\u90fd\u4e0d\u4e00\u6837\u3002\\n\\n   Q\uff1a\u90a3\u600e\u6837\u8bfb\u5230\u9002\u5408\u81ea\u5df1\u7684\u7b14\u8bb0\u683c\u5f0f\uff1f\\n\\n   A\uff1a\u5982\u679c\u4f60\u66f4\u503e\u5411\u4e8e\u9605\u8bfb\u67d0\u4f4d\u7b14\u8bb0\u4f5c\u8005\u7684\u7b14\u8bb0\uff0c\u53ef\u4ee5\u5728\u7f51\u9875\u53f3\u4e0a\u65b9\u7684\u641c\u7d22\u6846\u641c\u7d22\u5176\u540d\u79f0\u3002\\n\\n3. Q\uff1a\u8fd9\u4e9b\u7b14\u8bb0\u7684\u6392\u5217\u6709\u4ec0\u4e48\u987a\u5e8f\u5417\uff1f\\n\\n   A\uff1a\u6709\uff0c\u65f6\u95f4\u987a\u5e8f\u3002\u8d8a\u65b0\u7684\u7b14\u8bb0\u8d8a\u9760\u4e0b\u3002\u5c06\u6765unlimited-paper-works\u5c06\u4f1a\u4eceml.akasaki.space\u8fc1\u79fb\u51fa\u53bb\uff0c\u5230\u65f6\u5019\u4f1a\u4f7f\u7528\u66f4\u5408\u7406\u7684\u6392\u5217\u987a\u5e8f\u3002\\n\\n4. Q\uff1a\u8bfb\u4e86\u8fd9\u4e9b\u7b14\u8bb0\u5c31\u4e00\u5b9a\u61c2\u4e86\u8fd9\u4e9b\u8bba\u6587\u5417\uff1f\\n\\n   A\uff1a\u5e76\u4e0d\u3002\u6709\u673a\u4f1a\u8bf7\u9605\u8bfb\u539f\u8bba\u6587\u3002\u8fd9\u4e9b\u7b14\u8bb0\u5e76\u4e0d\u4fdd\u8bc1\u5b8c\u5584\uff0c\u751a\u81f3\u53ef\u80fd\u51fa\u73b0\u9519\u8bef\u3002\\n\\n---\\n\\n## \u968f\u65f6\u4f1a\u53d8\u7684\u6ca1\u4ec0\u4e48\u7528\u7684\u5185\u5bb9\\n\\n\u8fd9\u6b21\u7684\u6ca1\u4ec0\u4e48\u7528\u5185\u5bb9\u662f\u6211\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e00\u4e9b\u56f0\u60d1\uff0c\u4ee5\u53ca\u6211\u7684\u7262\u9a9a\u3002\u7b80\u8ff0\u4e4b\u5c31\u662f\uff1a\u624d\u758f\u5b66\u6d45\uff0c\u9886\u57df\u53c8\u53d1\u5c55\u592a\u5feb\uff0c\u611f\u89c9\u51fa\u73b0\u4e86\u6ce1\u6cab\uff0c\u627e\u4e0d\u5230\u65b9\u5411\u3002\\n\\n> \u73b0\u5728\u8d8a\u770b\u8d8a\u89c9\u5f97\u9664\u4e86\u90a3\u4e9b\u521b\u65b0backbone\u7684\u8bba\u6587\uff0c\u5176\u4ed6\u8fd9\u4e9b\u8bba\u6587\u65b0\u6280\u672f\u5929\u5929\u51fa\uff0c\u4f46\u662f\u90fd\u611f\u89c9\u5728\u54ea\u4f3c\u66fe\u76f8\u8bc6\uff08\u4f3c\u4e4e\u5c31\u662f\u4ee5\u524d\u770b\u8fc7\u7684\u54ea\u51e0\u4e2a\u8bba\u6587\u4e1c\u62fc\u897f\u51d1\u4e00\u4e0b\uff09\uff0c\u770b\u5b8c\u4e86\u611f\u89c9\u4f3c\u4e4e\u81ea\u5df1\u4e5f\u80fd\u60f3\u51fa\u6765\uff08\u4f46\u5176\u5b9e\u5b8c\u5168\u60f3\u4e0d\u51fa\u6765\uff09\uff0c\u8bba\u6587\u6548\u679c\u4f3c\u4e4e\u5f88\u597d\uff0c\u7ed3\u679c\u8dd1\u4e86\u53d1\u73b0\u5b8c\u5168\u8dd1\u4e0d\u5230\uff0c\u7b49\u5dee\u4e0d\u591a\u5feb\u8dd1\u5230\u4e86\u65b0\u6280\u672f\u53c8\u51fa\u4e86\u3002\\n\\n\u6211\u6700\u8fd1\u4e3b\u8981\u7684\u5b66\u4e60\u65b9\u5411\u662f\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60(deep learning)\u6280\u672f\u7684\u8ba1\u7b97\u673a\u89c6\u89c9(CV, computer vision)\u5206\u5272(segmentation)\u4efb\u52a1\u3002\u53ef\u80fd\u662f\u56e0\u4e3a\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u53d1\u5c55\u7684\u592a\u5feb\u4e86\uff0c\u5c24\u5176\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(CNN, convolutional neural network)\u4e4b\u540e\uff0c\u4e00\u76f4\u5230\u4e0d\u4e45\u524dGAN(generative adversarial network)\u5f00\u59cb\u6d41\u884c\u4e8e\u5404\u4e2a\u4efb\u52a1\uff0c\u4ec5\u4ec5\u82b1\u4e86\u4e0d\u5230\u5341\u5e74\u3002\\n\\n\u5728[Yizeng Han](https://arxiv.org/search/cs?searchtype=author&query=Han%2C+Y)\u7b49\u7684\u7efc\u8ff0\u8bba\u6587[Dynamic Neural Networks: A Survey]([08]Dynamic-Neural-Networks-A-Survey)\u4e2d\uff0c\u4f5c\u8005\u5c06\u89c6\u89c9\u9886\u57df\u7684\u795e\u7ecf\u7f51\u7edc\u8fd1\u5341\u5e74\u7684\u53d1\u5c55\u5206\u4e3a\u8fd9\u6837\u51e0\u4e2a\u9636\u6bb5\uff1a\\n\\n1. \u5feb\u901f\u53d1\u5c55\u9636\u6bb5\uff08Fast developing stage\uff09\uff0c2012~2015\\n\\n   \u795e\u7ecf\u7f51\u7edc\u7684\u8bbe\u8ba1\u53d8\u5f97\u591a\u6837\u5316\uff0c\u51fa\u73b0\u4e86\u5305\u62ecAlexNet\u3001VGG\u3001GoogLeNet\u5728\u5185\u7684\u4e00\u7cfb\u5217\u4ee3\u8868\u6027\u7f51\u7edc\u7ed3\u6784\u3002\\n\\n2. \u53d1\u5c55\u6210\u719f\u9636\u6bb5\uff08Mature stage\uff09\uff0c2015~2017\\n\\n   \u8fd9\u4e2a\u9636\u6bb5\u51fa\u73b0\u4e86\u5f88\u591a\u81f3\u4eca\u90fd\u8d77\u5230\u4e86\u5f88\u91cd\u8981\u7684\u5f71\u54cd\u7684\u6216\u662f\u4f9d\u7136\u88ab\u5927\u5bb6\u7ecf\u5e38\u4f7f\u7528\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u4f8b\u5982ResNet\u3001DenseNet\u7b49\\n\\n3. \u7e41\u8363\u53d1\u5c55\u9636\u6bb5\uff08Properous stage\uff09\uff0c2017~Now\\n\\n   \u4eba\u4eec\u8bbe\u8ba1\u4e86\u5f88\u591a\u591a\u6837\u5316\u7684\u6548\u679c\u4f18\u79c0\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4e14\u5927\u91cf\u51fa\u73b0\u4e86\u5f88\u591a\u65b0\u578b\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u4f8b\u5982\u8f7b\u91cf\u7ea7\u7f51\u7edcCondenseNet\u3001ShuffleNet\uff0c\u5229\u7528\u81ea\u52a8\u641c\u7d22\u6280\u672f\u8bbe\u8ba1\u7684\u6a21\u578bNASNet\u3001DARTS\uff0c\u8fd8\u6709\u8fd9\u7bc7\u8bba\u6587\u60f3\u8981\u4ecb\u7ecd\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edcMSDNet\u3001Block-Drop\u3001Glance and Focus\u7b49\uff0c\u4ee5\u53ca\u7a81\u7136\u5c31\u706b\u8d77\u6765\u7684Transformer\u3002\\n\\n\u5728\u4e4b\u524d\u51e0\u5341\u5e74\u7684AI\u53d1\u5c55\u4e2d\uff0c\u5927\u90e8\u5206\u65f6\u5019\u56fe\u50cf\u5904\u7406\u8d70\u7684\u90fd\u5f88\u6162\u3002\u4f46\u662f\u5728\u5f53\u524d\u9636\u6bb5\uff0c\u60f3\u8981\u518d\u505a\u54ea\u6015\u4e00\u70b9\u70b9improvement\u90fd\u5f88\u96be\u3002\\n\\n\u4e00\u4e9b\u5f00\u521b\u6027\u7684\u5de5\u4f5c\u6bd4\u5982[Sergey Ioffe](https://arxiv.org/search/cs?searchtype=author&query=Ioffe%2C+S)\u7b49\u4eba\u7684[Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift](https://arxiv.org/abs/1502.03167)\uff0c\u6216\u662f\u4e00\u4e9b\u975e\u7ebf\u6027\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u6216\u662f[Yann LeCun](http://yann.lecun.com/)\u7b49\u4eba\u5728[Gradient-Based Learning Applied to Document Recognition](../ch2p2/[1]LeNet)\uff08LeNet\uff09\u4e2d\u7b2c\u4e00\u6b21\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u624b\u5199\u6570\u5b57\u8bc6\u522b\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u90fd\u8981\u53bb\u4ece\u6570\u5b66\u90a3\u4e00\u5757\u627e\u65b0\u4e1c\u897f\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u6709\u7684\u4ee5\u524d\u53ef\u80fd\u53ea\u5728\u7406\u8bba\u4e0a\u51fa\u73b0\u8fc7\uff0c\u5e76\u4e14\u96be\u4ee5\u88ab\u7406\u89e3\u6216\u8bc1\u660e\u6709\u6548\u6027\uff0c\u6295\u5165\u5b9e\u9a8c\u540e\u4e5f\u4e0d\u4e00\u5b9a\u80fdwork\uff0c\u4e0a\u8ff0\u8fd9\u4e9b\u5de5\u4f5c\u901a\u8fc7\u5b9e\u9a8c\u8bc1\u660e\u4e86\u5176\u6709\u6548\u6027\uff0c\u540e\u4eba\u5c31\u5f00\u59cb\u5728\u5176\u57fa\u7840\u4e0a\u5f00\u5c55\u5de5\u4f5c\u4e86\u3002\u5f88\u9057\u61be\u7684\u662f\u8fd9\u4e9b\u4e00\u65e6\u51fa\u73b0\u5c31\u4f1a\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u7684\u5de5\u4f5c\u4e0d\u4f1a\u7ecf\u5e38\u51fa\u73b0\u3002\\n\\n\u5f88\u591a\u5bf9\u540e\u4eba\u5177\u6709\u91cd\u8981\u4e14\u6df1\u8fdc\u5f71\u54cd\u7684\u5de5\u4f5c\u4f8b\u5982[Karen Simonyan](https://arxiv.org/search/cs?searchtype=author&query=Simonyan%2C+K)\u7b49\u4eba\u7684[Very Deep Convolutional Networks for Large-Scale Image Recognition](../ch2p2/[7]VGGNet)\uff08\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u7684\u521d\u6b65\u63a2\u7d22\uff09\u4ee5\u53ca[Kaiming He](https://arxiv.org/search/cs?searchtype=author&query=He%2C+K)\u7b49\u4eba\u7684[Deep Residual Learning for Image Recognition](../ch2p2/[11]ResNet)\uff08\u9996\u6b21\u63d0\u51fa\u6b8b\u5dee\u7f51\u7edc\u7ed3\u6784\uff09\u90fd\u5177\u6709\u5de8\u5927\u7684\u521b\u65b0\uff1a\u6bd4\u5982\u4f7f\u7528\u4e86\u5168\u65b0\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u6216\u662f\u5168\u65b0\u7684\u76ee\u6807\u51fd\u6570\uff08loss function, \u6216\u79f0\u4e3a\u635f\u5931\u51fd\u6570\uff09\uff0c\u6216\u8005\u5f88\u65b0\u7684\u6b63\u5219\u5316\uff08regularizer\uff09\u65b9\u6cd5\u3002\u6700\u8fd1\u4e5f\u6709\u4e00\u4e9b\u5177\u6709\u91cd\u5927\u5f71\u54cd\u7684\u65b0\u7ed3\u6784\uff0c\u4f8b\u5982[Ashish Vaswani](https://arxiv.org/search/cs?searchtype=author&query=Vaswani%2C+A)\u7b49\u4eba\u7684[Attention Is All You Need](https://arxiv.org/abs/1706.03762)\u4e5f\u5c31\u662fTransformer\u4e2d\uff0c\u7ed3\u5408\u4e86\u6700\u65b0\u7684\u795e\u7ecf\u7f51\u7edc\u6ce8\u610f\u529b(Attention)\u673a\u5236\uff0c\u629b\u5f03\u4e86\u7684CNN\u548cRNN\u7ed3\u6784\uff0c\u6574\u4e2a\u7f51\u7edc\u7ed3\u6784\u5b8c\u5168\u662f\u7531Attention\u673a\u5236\u7ec4\u6210\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5f80\u5f80\u9700\u8981\u5927\u91cf\u7684\u79ef\u7d2f\u548c\u5b9e\u9a8c\uff0c\u4e0d\u53ef\u80fd\u7ecf\u5e38\u505a\u51fa\u3002\\n\\n\u6700\u65b0\u7684\u5de5\u4f5c\u5b83\u4eec\u4e4b\u95f4\u5f80\u5f80\u5177\u6709\u5f88\u5927\u7684\u76f8\u5173\u6027\uff0c\u5373\u4fbf\u5b83\u4eec\u51fa\u81ea\u4e0d\u540c\u7684\u4f5c\u8005\u3002\u4f8b\u5982\uff0c[Changqian Yu](https://arxiv.org/search/cs?searchtype=author&query=Yu%2C+C)\u7b49\u4eba\u7684\u8bba\u6587[BiSeNet: Bilateral Segmentation Network for Real-time Semantic Segmentation](./[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation)\u4e2d\uff0c\u6709\u8bb8\u591a\u601d\u60f3\u53c2\u8003\u4e86[Jie Hu](https://arxiv.org/search/cs?searchtype=author&query=Hu%2C+J)\u7b49\u4eba\u7684[Squeeze-and-Excitation Networks](./[23]Squeeze-and-Excitation-Networks)\u3002\u6839\u636e\u67d0\u9879\u521b\u65b0\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u66f4\u591a\u7c7b\u4f3c\u7684\u521b\u65b0\uff0c\u5e94\u7528\u4e8e\u540c\u9886\u57df\u4f1a\u5e94\u7528\u4e8e\u5176\u4ed6\u9886\u57df\u3002\u8fd9\u7c7b\u5de5\u4f5c\u7684\u51fa\u73b0\u901f\u5ea6\u975e\u5e38\u4e4b\u5feb\uff1a\u7814\u7a76\u8005\u5728\u9605\u8bfb\u524d\u4eba\u5de5\u4f5c\u65f6\u53d1\u73b0\u4e0d\u505a\u6216\u53ef\u4ee5\u4fee\u6539\u7684\u70b9\uff0c\u5c31\u4f1a\u8fdb\u884c\u5b9e\u9a8c\u5e76\u8fc5\u901f\u53d1\u51fa\u4e00\u7bc7\u8bba\u6587\u3002\u5728\u7ed3\u679c\u4e2d\uff0c\u7814\u7a76\u8005\u5f80\u5f80\u4f1a\u6ce8\u660e\u65b0\u7684\u7814\u7a76\u8fbe\u5230\u4e86\u591a\u9ad8\u7684\u7cbe\u5ea6\uff0c\u6709\u65f6\u8fd8\u4f1a\u9644\u8d60\u4e00\u4efd\u6e90\u4ee3\u7801\u3002\u4f46\u662f\u5176\u4ed6\u4eba\u5c1d\u8bd5\u8fd9\u4efd\u6e90\u4ee3\u7801\u65f6\uff0c\u5374\u53d1\u73b0\u7cbe\u5ea6\u8fdc\u8fdc\u8fbe\u4e0d\u5230\u8bba\u6587\u4e2d\u63d0\u53ca\u7684\u6c34\u5e73\u3002\u5b9e\u9645\u4e0a\uff0c\u6a21\u578b\u7684\u8868\u73b0\u4e0d\u786e\u5b9a\u56e0\u7d20\u5b9e\u5728\u662f\u592a\u591a\u3002\\n\\n\u5c31\u4e2d\u56fd\u4eba\u7684\u6570\u91cf\u6765\u8bf4\uff0c\u5982\u679c\u6bcf\u4e2a\u7814\u7a76\u751f\u90fd\u8981\u6c34\u51fa\u4e00\u7bc7\u8bba\u6587\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9886\u57df\u5185\u8bba\u6587\u5e73\u5747\u8d28\u91cf\u7684\u4e0b\u964d\u3002\u8fd9\u4e2a\u9886\u57df\u518d\u4e5f\u56de\u4e0d\u5230\u6bcf\u7bc7\u8bba\u6587\u90fd\u5177\u6709\u5f88\u5927\u521b\u65b0\u548c\u5f71\u54cd\u7684\u65f6\u4ee3\u4e86\u3002\\n\\n> \u6709\u7814\u7a76\u8005\u7f51\u53cb\u6253\u8da3\u5730\u8bf4\uff1a\u8ba1\u7b97\u673a\u89c6\u89c9\u65b9\u9762\u7684\u8bba\u6587\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a\u300c\u53ea\u60f3\u6d51\u4e2a\u6587\u51ed\u300d\u3001\u300c\u6559\u7535\u8111\u751f\u6210\u66f4\u591a\u732b\u7684\u7167\u7247\u300d\u3001\u300cImageNet\u4e0a\u8bd5\u9a8c\u7ed3\u679c\u7cbe\u5ea6\u63d0\u53470.1%\u300d\u3001\u300c\u624b\u91cc\u6709\u5f88\u68d2\u7684\u6570\u636e\u96c6\u4f46\u5e76\u4e0d\u6253\u7b97\u516c\u5f00\u300d\u3001\u300c3\u5e74\u8fc7\u53bb\u4e86\uff0c\u4ee3\u7801\u8fd8\u5728\u8d76\u6765\u7684\u8def\u4e0a\u300d\u3001\u300c\u5b9e\u9a8c\u8bc1\u660e\u8fd8\u662f\u8001\u7684baseline\u66f4\u597d\u300d\u3001\u300c\u6211\u4eec\u7684\u6570\u636e\u96c6\u66f4\u5927\u300d\u3001\u300c\u82b1\u94b1\u8d8a\u591a\uff0c\u6548\u679c\u8d8a\u597d\u300d...\\n\\n\u672c\u4eba\u662f\u4e00\u4e2a\u540d\u4e0d\u89c1\u7ecf\u4f20\u5927\u5b66\u7684\u672c\u79d1\u751f\uff0c\u65e2\u6ca1\u6709\u5353\u8d8a\u7684\u80fd\u529b\uff0c\u4e5f\u6ca1\u6709\u8fdc\u89c1\u7684\u773c\u5149\u3002\u60f3\u7814\u7a76\u4e00\u4e2a\u65b9\u5411\uff0c\u53ea\u80fd\u6478\u7d22\u7740\u6765\u3002\u4e5f\u8bb8\u6709\u7684\u65f6\u5019\u52aa\u529b\u65b9\u5411\u662f\u9519\u7684\uff0c\u4f46\u662f\u5b8c\u5168\u4e0d\u80fd\u81ea\u77e5\u3002\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u732e\u662f\u5927\u91cf\u7684\uff0c\u4f46\u5176\u4e2d\u5305\u542b\u7684\u6709\u7528\u7684\u4fe1\u606f\u603b\u91cf\u5374\u4e0d\u9ad8\u3002\u5bf9\u4e8e\u5f53\u524d\u8fd9\u4e2a\u65b9\u5411\u4f1a\u600e\u6837\u7ee7\u7eed\u53d1\u5c55\u3001\u5e94\u8be5\u4ece\u54ea\u91cc\u7740\u624b\u521b\u65b0\uff0c\u65e2\u6ca1\u6709\u795e\u660e\u73b0\u8eab\u8bf4\u6cd5\uff0c\u4e5f\u662f\u624d\u758f\u5b66\u6d45\u7684\u6211\u6240\u4e0d\u80fd\u81ea\u5df1\u77e5\u6653\u7684\u2014\u2014\u8fd9\u79cd\u5177\u6709\u72ec\u7279\u98ce\u5473\u7684\u96be\u53d7\u4e5f\u8bb8\u53ea\u6709\u83dc\u9e21\u624d\u80fd\u6df1\u6709\u4f53\u4f1a\u5427\u3002\\n\\n\u7b49\u4e00\u4f4d\u8d35\u4eba\u70b9\u9192\u65e0\u77e5\u7684\u6211\u3002\u6211\u7684\u90ae\u7bb1\uff1a$miya@akasaki.space$\u3002"},{"id":"/[01]The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs","metadata":{"permalink":"/blog/[01]The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[01]The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs.md","source":"@site/blog/[01]The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs.md","title":"The Devil is in the Decoder - Classification, Regression and GANs","description":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u5404\u79cd\u5404\u6837\u89e3\u7801\u5668\u7684\u8bba\u6587\u3002\u539f\u8bba\u6587\uff08The Devil is in the Decoder: Classification, Regression and GANs\uff09\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"survey","permalink":"/blog/tags/survey"},{"label":"decoder","permalink":"/blog/tags/decoder"},{"label":"segmentation","permalink":"/blog/tags/segmentation"}],"readingTime":14.695,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"The Devil is in the Decoder - Classification, Regression and GANs","authors":["visualdust"],"tags":["survey","decoder","segmentation"]},"prevItem":{"title":"\u6b22\u8fce\u6765\u5230\u9b54\u6cd5\u90e8\u65e5\u5fd7","permalink":"/blog/[00]unlimited-paper-works"},"nextItem":{"title":"Threat of Adversarial Attacks on Deep Learning in Computer Vision - A Survey","permalink":"/blog/[02]Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u5404\u79cd\u5404\u6837\u89e3\u7801\u5668\u7684\u8bba\u6587\u3002[\u539f\u8bba\u6587\uff08The Devil is in the Decoder: Classification, Regression and GANs\uff09](https://arxiv.org/pdf/1707.05847.pdf)\u3002\\n\\n\u7531\u4e8e\u201c\u89e3\u7801\u5668\uff08decoder\uff0c\u6709\u4e9b\u65f6\u5019\u4e5f\u88ab\u79f0\u4e3afeature extractor\uff09\u201d\u7684\u6982\u5ff5\u4e0e\u50cf\u7d20\u7ea7\u7684\u5206\u7c7b\u3001\u56de\u5f52\u7b49\u95ee\u9898\u591a\u591a\u5c11\u5c11\u90fd\u6709\u74dc\u845b\u3002\u4ee5\u4e0b\u662fdecoder\u88ab\u5e94\u7528\u4e8e\u50cf\u7d20\u7ea7\u7684\u4efb\u52a1\uff1a\\n\\n- \u5206\u7c7b\uff1a\u8bed\u4e49\u5206\u5272\u3001\u8fb9\u7f18\u68c0\u6d4b\u3002\\n- \u56de\u5f52\uff1a\u4eba\u4f53\u5173\u952e\u70b9\u68c0\u6d4b\u3001\u6df1\u5ea6\u9884\u6d4b\u3001\u7740\u8272\u3001\u8d85\u5206\u8fa8\u3002\\n- \u5408\u6210\uff1a\u5229\u7528\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u751f\u6210\u56fe\u50cf\u7b49\u3002\\n\\n\u6240\u4ee5decoder\u662f\u7a20\u5bc6\u9884\u6d4b\uff08Dence prediction\uff0c\u50cf\u7d20\u7ea7\u522b\u7684\u5f88\u591a\u95ee\u9898\u90fd\u53ef\u4ee5\u53eb\u505a\u7a20\u5bc6\u7684\uff09\u95ee\u9898\u7684\u5173\u952e\u3002\\n\\n# Abstract\uff08\u6458\u8981\uff09\\n\\n> Image semantic segmentation is more and more being of interest for computer vision and machine learning researchers. Many applications on the rise need accurate and efficient segmentation mechanisms: autonomous driving, indoor navigation, and even virtual or augmented reality systems to name a few. This demand coincides with the rise of deep learning approaches in almost every field or application target related to computer vision, including semantic segmentation or scene understanding. This paper provides a review on deep learning methods for semantic segmentation applied to various application areas. Firstly, we describe the terminology of this field as well as mandatory background concepts. Next, the main datasets and challenges are exposed to help researchers decide which are the ones that best suit their needs and their targets. Then, existing methods are reviewed, highlighting their contributions and their significance in the field. Finally, quantitative results are given for the described methods and the datasets in which they were evaluated, following up with a discussion of the results. At last, we point out a set of promising future works and draw our own conclusions about the state of the art of semantic segmentation using deep learning techniques.\\n\\n\u6211\u770b\u4e86\u8fd9\u7bc7\u7efc\u8ff0\u53d7\u76ca\u532a\u6d45\uff0c\u5982\u679c\u6709\u65f6\u95f4\u7684\u8bdd\u8bf7\u9605\u8bfb[\u539f\u4f5c](/papers/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs.pdf)\u3002\u672c\u6587\u53ea\u662f\u5bf9\u539f\u4f5c\u9605\u8bfb\u7684\u7c97\u6d45\u7b14\u8bb0\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n\u200b\\t\\t\u8bed\u4e49\u5206\u5272\u3001\u6df1\u5ea6\u9884\u6d4b\u7b49\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u5f80\u5f80\u9700\u8981\u5bf9\u8f93\u5165\u8fdb\u884c\u9010\u50cf\u7d20\u7684\u9884\u6d4b\uff0c\u7528\u4e8e\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\u7684\u6a21\u5757\u901a\u5e38\u7531\u7f16\u7801\u5668\u7ec4\u6210\u3002\u7f16\u7801\u5668\uff08\u884c\u4e3a\u4e0a\u662f\u4e0b\u91c7\u6837\u7684\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u5377\u79ef\u3001\u6c60\u5316\u7ec4\u6210\u7684\uff09\u5728\u5b66\u4e60\u9ad8\u7ef4\u5ea6\u7279\u5f81\u7684\u540c\u65f6\u4f1a\u964d\u4f4e\u8f93\u5165\u56fe\u50cf\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\uff1b\u5728\u8fd9\u4e4b\u540e\u662f\u5c06\u5176\u6062\u590d\u539f\u59cb\u5206\u8fa8\u7387\u7684\u89e3\u7801\u5668\uff08\u884c\u4e3a\u662f\u4e0a\u91c7\u6837\u7684\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u662f\u8f6c\u7f6e\u5377\u79ef\u7b49\u64cd\u4f5c\u7ec4\u6210\u7684\uff09\uff1a\\n\\n```\\n\u7f16\u7801\u5668\uff08\u7279\u5f81\u63d0\u53d6\u5668\uff0c\u964d\u4f4e\u7279\u5f81\u56fe\u5206\u8fa8\u7387\uff09---\u89e3\u7801\u5668\uff08\u63d0\u9ad8\u7279\u5f81\u56fe\u5206\u8fa8\u7387\uff09\\n```\\n\\n## \u76f8\u5173\u7814\u7a76\uff08Related works\uff09\\n\\n\u200b\\t\\t\u8fd9\u7bc7\u8bba\u6587\u4e3b\u8981\u7684\u5185\u5bb9\u662f\u9488\u5bf9\u5404\u79cd\u50cf\u7d20\u7ea7\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\uff0c\u5bf9\u5404\u79cd\u89e3\u7801\u5668\u8fdb\u884c\u4e86\u8f83\u4e3a\u5e7f\u6cdb\u7684\u6bd4\u8f83\u3002\u4ee5\u4e0b\u662f\u8fd9\u7bc7\u8bba\u6587\u7684\u4e3b\u8981\u8d21\u732e\uff1a\\n\\n1. \u63d0\u51fa\u9009\u62e9\u4e0d\u540c\u7c7b\u578b\u7684\u89e3\u7801\u5668\u5bf9\u6548\u679c\u7684\u5f71\u54cd\u975e\u5e38\u5de8\u5927\\n2. \u4e3a\u89e3\u7801\u5668\u5f15\u5165\u4e86\u7c7b\u4f3c\u6b8b\u5dee\uff08residual connection\uff09\u7684\u65b0\u8fde\u63a5\\n3. \u4ecb\u7ecd\u4e86\u4e00\u79cd\u6bd4\u8f83\u65b0\u9896\u7684\u89e3\u7801\u5668\uff1a\u53cc\u7ebf\u6027\u52a0\u548c\u4e0a\u91c7\u6837\uff08bilinear additive upsampaling\uff09\\n4. prediction artifacts\uff08\u771f\u7684\u6ca1\u60f3\u597d\u600e\u4e48\u7ffb\u8bd1\uff09\\n\\n---\\n\\n![image-20210502073352860](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502073352860.png)\\n\\n\u6211\u4eec\u5c06\u9700\u8981\u9010\u50cf\u7d20\u9884\u6d4b\u7684\u95ee\u9898\u6210\u4e3a\u5bc6\u96c6\u9884\u6d4b\uff08dence prediction\uff09\u7684\u95ee\u9898\u3002\u901a\u5e38\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ed3\u6784\u662f\u7528\u4e8e\u89e3\u51b3\u8fd9\u79cd\u5bc6\u96c6\u9884\u6d4b\u95ee\u9898\u7684\uff1a\u9996\u5148\uff0c\u7f16\u7801\u5668\uff08\u7279\u5f81\u63d0\u53d6\u5668\uff09\u5728\u589e\u52a0\u901a\u9053\u6570\u91cf\u7684\u540c\u65f6\u964d\u4f4e\u4e86\u56fe\u50cf\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\uff08\u901a\u5e38\u4e3a8~32\u500d\uff09\uff1b\u7136\u540e\uff0c\u89e3\u7801\u5668\u8fdb\u884c\u4e0a\u91c7\u6837\u6062\u590d\u5230\u8f93\u5165\u539f\u56fe\u5927\u5c0f\u3002\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u6b64\u7c7b\u89e3\u7801\u5668\u53ef\u4ee5\u88ab\u89c6\u4e3a\u548c\u7f16\u7801\u5668\u76f8\u53cd\u7684\u64cd\u4f5c\uff1a\u4e00\u4e2a\u89e3\u7801\u5668\u81f3\u5c11\u7531\u4e00\u4e2a\u63d0\u9ad8\u7a7a\u95f4\u5206\u8fa8\u7387\u7684\u5c42\uff08\u901a\u5e38\u79f0\u4e3a\u4e0a\u91c7\u6837\u5c42\uff09\u4ee5\u53ca\u53ef\u80fd\u4fdd\u6301\u7a7a\u95f4\u5206\u8fa8\u7387\u7684\u5c42\uff08\u4f8b\u5982\u5355\u4f4d\u5377\u79ef\u3001\u6b8b\u5dee\u5feb\u6216\u662f\u8d77\u59cb\u5757\uff09\u7ec4\u6210\u3002\u5176\u4e2d \uff0c\u7528\u4e8e\u4fdd\u6301\u7a7a\u95f4\u5206\u8fa8\u7387\u7684\u5c42\u5df2\u7ecf\u6709\u4e86\u6bd4\u8f83\u6210\u719f\u7684\u7814\u7a76\uff0c\u6240\u4ee5\u8fd9\u4e00\u7bc7\u8bba\u6587\u53ea\u5206\u6790\u63d0\u5347\u7a7a\u95f4\u5206\u8fa8\u7387\u7684\u90e8\u5206\u3002\\n\\n\u76ee\u524d\u5728\u5355\u4e2a\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u5185\u4f7f\u7528\u6700\u591a\u7684\u662f\u8f6c\u7f6e\u5377\u79ef\uff08transposed convolution\uff09\uff0c\u5b83\u5728\u5206\u5272\u3001\u6df1\u5ea6\u9884\u6d4b\u3001\u8d85\u5206\u8fa8\u91cd\u5efa\u7b49\u4efb\u52a1\u4e2d\u90fd\u6709\u6bd4\u8f83\u8be6\u7ec6\u7684\u8bba\u6587\u8fdb\u884c\u7814\u7a76\u3002\u8be6\u89c1\u539f\u8bba\u6587\u4e2d\u7684\u76f8\u5173\u5b57\u6bb5\u3002\\n\\n\u8fd8\u6709\u4e00\u4e9b\u4e3a\u4e86\u52a0\u5feb\u6a21\u578b\u901f\u5ea6\u8fdb\u884c\u7684\u7814\u7a76\uff0c\u4f8b\u5982\uff1a\u4e8c\u7ef4\u5377\u79ef\u5728\u56fe\u50cf\u5206\u7c7b\u548c\u8bed\u4e49\u5206\u5272\u7684\u80cc\u666f\u4e0b\u88ab\u5206\u89e3\u6210\u4e24\u4e2a\u4e00\u7ef4\u5377\uff1b\u8fd8\u6709\u4e00\u4e9b\u6bd4\u8f83\u65b0\u9896\u7684\u5806\u53e0\u7684\u6c99\u6f0f\u7ed3\u6784\uff08\u4f3c\u4e4e\u4e5f\u53ef\u4ee5\u53eb\u91d1\u5b57\u5854\u7ed3\u6784\uff09\uff0c\u5b83\u662f\u7531\u5806\u53e0\u7684\u591a\u4e2a\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ec4\u6210\u3002\\n\\n## \u73b0\u5b58\u7684\u4e0a\u91c7\u6837\u5c42\u8bbe\u8ba1Existing upsampling layers\uff09\\n\\n### \u8f6c\u7f6e\u5377\u79ef\uff08Transposed Convolution\uff09\\n\\n\u8f6c\u7f6e\u5377\u79ef\u662f\u6700\u5e38\u7528\u7684\u4e0a\u91c7\u6837\u5c42\uff0c\u6709\u7684\u65f6\u5019\u4e5f\u88ab\u79f0\u4e3a\u201c\u53cd\u5377\u79ef\u201d\u6216\u662f\u201c\u4e0a\u5377\u79ef\u201d\u3002\u5728\u8f93\u5165\u548c\u8f93\u51fa\u7684\u5173\u8054\u5173\u7cfb\u4e0a\uff0c\u8f6c\u7f6e\u5377\u79ef\u53ef\u4ee5\u770b\u4f5c\u662f\u5377\u79ef\u7684\u4e00\u79cd\u53cd\u5411\u64cd\u4f5c\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u5e76\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u7684\u9006\u8fd0\u7b97\uff0c\u9006\u8fd0\u7b97\u5e94\u8be5\u662f\u53ef\u4ee5\u88ab\u7cbe\u786e\u8ba1\u7b97\u7684\uff0c\u800c\u8f6c\u7f6e\u5377\u79ef\u7684\u8ba1\u7b97\u7ed3\u679c\u5e76\u4e0d\u662f\u7cbe\u786e\u7ed3\u679c\u3002\u8f6c\u7f6e\u5377\u79ef\u7684\u4e00\u79cd\u793a\u610f\u5982\u4e0b\u56fe\uff1a\\n\\n![image-20210502090940399](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502090940399.png)\\n\\n\u5982\u56fe\uff0c\u5e38\u89c1\u7684\u8f6c\u7f6e\u5377\u79ef\u4e00\u822c\u4f1a\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u5728\u8f93\u5165\u4e2d\u586b\u51450\uff0c\u4ee5\u83b7\u5f97\u4e00\u5f20\u66f4\u5927\u7684\u7279\u5f81\u56fe\uff0c\u5176\u540e\u4f7f\u7528\u4e00\u4e2a\u6807\u51c6\u7684\u5377\u79ef\u8fd0\u7b97\u83b7\u5f97\u4e00\u4e2a\u6bd4\u6700\u521d\u59cb\u7684\u8f93\u5165\u5927\u4e00\u4e9b\u7684\u7279\u5f81\u56fe\u4f5c\u4e3a\u8f93\u51fa\u3002\\n\\n### \u5206\u89e3\u7684\u8f6c\u7f6e\u5377\u79ef\uff08Decomposed transposed convolution\uff09\\n\\n\u5206\u89e3\u7684\u8f6c\u7f6e\u5377\u79ef\u548c\u8f6c\u7f6e\u5377\u79ef\u662f\u76f8\u4f3c\u7684\uff1a\\n\\n![image-20210502091343561](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502091343561.png)\\n\\n\u53ea\u4e0d\u8fc7\u5206\u89e3\u7684\u8f6c\u7f6e\u5377\u79ef\u5c06\u4e3b\u5377\u79ef\u8fd0\u7b97\u5206\u4e3a\u591a\u4e2a\u4f4e\u79e9\u5377\u79ef\u3002\u4f8b\u5982\uff0c\u5728\u56fe\u50cf\u4e2d\uff0c\u5206\u89e3\u7684\u8f6c\u7f6e\u5377\u79ef\u901a\u8fc7\u4e24\u4e2a\u4e00\u7ef4\u7684\u5377\u79ef\u5bf9\u4e8c\u7ef4\u7684\u5377\u79ef\u8fdb\u884c\u6a21\u62df\u3002\u4f8b\u5982\u4e0a\u56fe\u4e2d\uff0c\u5bf9\u4e8e\u8f93\u5165\uff0c\u5148\u5728\u884c\u4e0a\u8fdb\u884c\u9694\u884c\u586b\u5145\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u7ef4\u7684\u5377\u79ef\u6838\u8fdb\u884c\u5377\u79ef\uff0c\u518d\u5728\u5217\u4e0a\u8fdb\u884c\u9694\u5217\u586b\u5145\uff0c\u518d\u4f7f\u7528\u4e00\u7ef4\u7684\u5377\u79ef\u6838\u8fdb\u884c\u5377\u79ef\u3002\\n\\n\u5206\u89e3\u7684\u8f6c\u7f6e\u5377\u79ef\u4e25\u683c\u610f\u4e49\u4e0a\u662f\u8f6c\u7f6e\u5377\u79ef\u7684\u5b50\u96c6\u3002\\n\\n![image-20210502091954758](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502091954758.png)\\n\\n\u5982\u4e0a\u56fe\uff0c\u8fd9\u6837\u505a\u7684\u4f18\u52bf\u662f\u964d\u4f4e\u4e86\u53ef\u8bad\u7ec3\u53d8\u91cf\u7684\u6570\u91cf\uff08\u964d\u4f4e\u4e86\u53c2\u6570\u91cf\uff09\u3002\\n\\n\u5206\u89e3\u7684\u8f6c\u7f6e\u5377\u79ef\u5df2\u7ecf\u5728inception\u7ed3\u6784\u4e2d\u83b7\u5f97\u4e86\u6210\u529f\uff1a\u5728ILSVRC2012\u5206\u7c7b\u8d5b\u4e2d\u83b7\u5f97\u4e86the state of the art\u7684\u6210\u679c\u3002\\n\\n### \u6df1\u5ea6\u5230\u7a7a\u95f4\u7684\u8f6c\u6362\uff08Depth-to-space\uff09\\n\\n\u8fd9\u79cd\u65b9\u6cd5\uff08Depth to space\uff09\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a\u201csubpixel convolution\u201d\u7684\u57fa\u672c\u601d\u8def\u662f\u5c06\u7279\u5f81\u901a\u9053\u79fb\u5165\u7a7a\u95f4\u57df\uff1a\\n\\n![image-20210502092533184](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502092533184.png)\\n\\n\u5982\u4e0a\u56fe\uff0c\u672c\u5e94\u5806\u53e0\u5728channel\u7ef4\u5ea6\u7684\u4e0d\u540c\u7279\u5f81\u88ab\u878d\u5408\u8fdb\u4e00\u4e2a\u6df1\u5ea6\u4e3a1\u7684\u5e73\u9762\u7279\u5f81\u56fe\u3002\u8fd9\u79cd\u65b9\u6cd5\u80fd\u591f\u5f88\u597d\u5730\u4fdd\u7559\u7a7a\u95f4\u7279\u5f81\uff0c\u56e0\u4e3a\u5b83\u6240\u505a\u7684\u4ec5\u4ec5\u662f\u6539\u53d8\u5b83\u4eec\u7684\u4f4d\u7f6e\u800c\u4e0d\u662f\u5c06\u5b83\u4eec\u5806\u53e0\u8fdbchannel\uff0c\u800c\u8fd9\u79cd\u65b9\u6cd5\u7684\u7f3a\u70b9\u662f\u5f15\u5165\u4e86\u5bf9\u9f50\u4f2a\u50cf\u3002\u4e3a\u4e86\u80fd\u591f\u548c\u5176\u4ed6\u51e0\u4e2a\u4e0a\u91c7\u6837\u65b9\u6cd5\u8fdb\u884c\u6a2a\u5411\u5bf9\u6bd4\uff0c\u8fd9\u7bc7\u8bba\u6587\u5728\u8fdb\u884c\u4ece\u6df1\u5ea6\u5230\u7a7a\u95f4\u7684\u8f6c\u6362\u5b9e\u9a8c\u4e4b\u524d\u7684\u4e0b\u91c7\u6837\u5377\u79ef\u6bd4\u5176\u4ed6\u4e0a\u91c7\u6837\u5c42\u7684\u8f93\u51fa\u901a\u9053\u591a\u4e86\u56db\u500d\u3002\\n\\n### \u63d2\u503c\u6cd5\uff08Interpolation\uff09\\n\\n#### \u6700\u4e34\u8fd1\u63d2\u503c\u6cd5\uff08Nearest Interpolation\uff09\\n\\n![image-20210502104856704](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502104856704.png)\\n\\n\u6700\u8fd1\u90bb\u6cd5\u4e0d\u9700\u8981\u8ba1\u7b97\u53ea\u9700\u8981\u5bfb\u627e\u539f\u56fe\u4e2d\u5bf9\u5e94\u7684\u70b9\uff0c\u6240\u4ee5\u6700\u8fd1\u90bb\u6cd5\u901f\u5ea6\u6700\u5feb\uff0c\u4f46\u662f\u4f1a\u7834\u574f\u539f\u56fe\u50cf\u4e2d\u50cf\u7d20\u7684\u6e10\u53d8\u5173\u7cfb\uff0c\u539f\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u70b9\u7684\u503c\u662f\u6e10\u53d8\u7684\uff0c\u4f46\u662f\u5728\u65b0\u56fe\u50cf\u4e2d\u5c40\u90e8\u7834\u574f\u4e86\u8fd9\u79cd\u6e10\u53d8\u5173\u7cfb\u3002\\n\\n#### \u7ebf\u6027\u63d2\u503c\u6cd5\uff08linear interpolation\uff09\\n\\n\u7ebf\u6027\u63d2\u503c\u6cd5\uff08\u5355\u7ebf\u6027\u63d2\u503c\u6cd5\uff09\u662f\u6307\u4f7f\u7528\u8fde\u63a5\u4e24\u4e2a\u5df2\u77e5\u91cf\u7684\u76f4\u7ebf\u6765\u786e\u5b9a\u5728\u8fd9\u4e2a\u4e24\u4e2a\u5df2\u77e5\u91cf\u4e4b\u95f4\u7684\u4e00\u4e2a\u672a\u77e5\u91cf\u7684\u503c\u7684\u65b9\u6cd5\u3002 \\n\\n![image-20210502110046370](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502110046370.png)\\n\\n\u6839\u636e\u521d\u4e2d\u7684\u77e5\u8bc6\uff0c2\u70b9\u6c42\u4e00\u6761\u76f4\u7ebf\u516c\u5f0f\uff0c\u8fd9\u662f\u53cc\u7ebf\u6027\u63d2\u503c\u6240\u9700\u8981\u7684\u552f\u4e00\u7684\u57fa\u7840\u516c\u5f0f\u3002\\n\\n#### \u53cc\u7ebf\u6027\u63d2\u503c\uff08Bilinear interpolation\uff09\\n\\n\u53cc\u7ebf\u6027\u63d2\u503c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fdb\u884c\u4e86\u4e24\u6b21\u5355\u7ebf\u6027\u63d2\u503c\uff1a\\n\\n![image-20210502110140524](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502110140524.png)\\n\\n\u5148\u5728x\u65b9\u5411\u6c422\u6b21\u5355\u7ebf\u6027\u63d2\u503c\uff0c\u83b7\u5f97R1(x, y1)\u3001R2(x, y2)\u4e24\u4e2a\u4e34\u65f6\u70b9\uff0c\u518d\u5728y\u65b9\u5411\u8ba1\u7b971\u6b21\u5355\u7ebf\u6027\u63d2\u503c\u5f97\u51faP(x, y)\uff08\u5b9e\u9645\u4e0a\u8c03\u63622\u6b21\u8f74\u7684\u65b9\u5411\u5148y\u540ex\u4e5f\u662f\u4e00\u6837\u7684\u7ed3\u679c\uff09\\n\\n### \u53cc\u7ebf\u6027\u4e0a\u91c7\u6837+\u5377\u79ef\uff08Bilinear upsampling + Convolution\uff09\\n\\n\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837+\u5377\u79ef\u7684\u610f\u601d\u5c31\u662f\u5728\u53cc\u7ebf\u6027\u63d2\u503c\u4e4b\u540e\u8fdb\u884c\u5377\u79ef\u8fd0\u7b97\u3002\u4e3a\u4e86\u548c\u5176\u4ed6\u4e0a\u91c7\u6837\u65b9\u6cd5\u6bd4\u8f83\uff0c\u8fd9\u7bc7\u8bba\u6587\u4e2d\u5047\u8bbe\u5728\u4e0a\u91c7\u6837\u4e4b\u540e\u8fd8\u8981\u8fdb\u884c\u989d\u5916\u7684\u5377\u79ef\u8fd0\u7b97\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u7f3a\u70b9\u662f\u5360\u7528\u4e86\u5927\u91cf\u5185\u5b58\u548c\u8ba1\u7b97\u7a7a\u95f4\uff1a\u53cc\u7ebf\u6027\u63d2\u503c\u4f1a\u4e8c\u6b21\u589e\u52a0\u7279\u5f81\u91cf\uff0c\u4f46\u540c\u65f6\u4fdd\u6301\u539f\u6765\u7684\u201c\u4fe1\u606f\u91cf\u201d\u3002\u7531\u4e8e\u5047\u8bbe\u4e86\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u4e4b\u540e\u63a5\u6709\u5377\u79ef\u8fd0\u7b97\uff0c\u56e0\u6b64\u8fd9\u79cd\u65b9\u6cd5\u7406\u8bba\u4e0a\u6bd4\u8f6c\u7f6e\u5377\u79ef\u65b9\u6cd5\u7684\u5f00\u9500\u9ad8\u56db\u500d\u3002\\n\\n### \u53cc\u7ebf\u6027\u4e0a\u91c7\u6837+\u53ef\u5206\u79bb\u5377\u79ef\uff08Bilinear upsampling+Separable convolution\uff09\\n\\n\u53ef\u5206\u79bb\u7684\u5377\u79ef\u7528\u4e8e\u6784\u5efa\u7b80\u5355\u4e14\u540c\u8d28\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u5176\u7ed3\u679c\u4f18\u4e8eInceptionV3\u3002\\n\\n![image-20210502111611626](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502111611626.png)\\n\\n\u5982\u4e0a\u56fe\uff1a\u4e00\u4e2a\u53ef\u5206\u79bb\u7684\u5377\u79ef\u53c8\u4e24\u4e2a\u64cd\u4f5c\u7ec4\u6210\uff1a\u4e00\u4e2a\u662f\u5bf9\u6bcf\u4e2a\u901a\u9053\u7684\u5377\u79ef\uff0c\u53e6\u4e00\u4e2a\u662f\u4f7f\u7528`(1x1)`\u5377\u79ef\u6838\u7684\u9010\u70b9\u5377\u79ef\u5bf9\u901a\u9053\u8fdb\u884c\u201c\u6df7\u5408\u201d\u3002\\n\\n### \u53cc\u7ebf\u6027\u52a0\u6027\u4e0a\u91c7\u6837\uff08Bilinear additive upsampleing\uff09\\n\\n\u8fd9\u4e2a\u65b9\u6cd5\u662f\u8fd9\u7bc7\u8bba\u6587\u5728\u5bf9\u4e0a\u8ff0\u73b0\u5b58\u7684\u65b9\u6cd5\u8fdb\u884c\u4e86\u53d9\u8ff0\u540e\u63d0\u51fa\u7684\u65b0\u65b9\u6cd5\u3002\\n\\n\u8be5\u8bba\u6587\u5efa\u8bae\u7ee7\u7eed\u4f7f\u7528\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\uff0c\u4f46\u662f\u8be5\u8bba\u6587\u8fd8\u5c06\u6bcfN\u4e2a\u8fde\u7eed\u7684\u901a\u9053\u76f8\u52a0\uff0c\u4ece\u800c\u5c06\u8f93\u51fa\u964d\u4f4e\u4e86N\u500d\uff1a\\n\\n![image-20210502112224648](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502112224648.png)\\n\\n\u5982\u4e0a\u56fe\uff0c\u8be5\u65b9\u6cd5\u7684\u8fc7\u7a0b\u662f\u786e\u5b9a\u6027\u7684\uff0c\u552f\u4e00\u53ef\u8c03\u7684\u53c2\u6570\u662fN\u3002\u867d\u7136\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u50cf\u662f\u4e4b\u524d\u8bf4\u7684\u201c\u6df1\u5ea6\u5230\u7a7a\u95f4\u7684\u8f6c\u6362\uff08Depth-to-space\uff09\u201d\uff0c\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u7a7a\u95f4\u4f2a\u50cf\u7684\u51fa\u73b0\uff0c\u4e5f\u5c31\u662f\u4e0d\u9700\u8981\u8003\u8651\u5bf9\u9f50\u64cd\u4f5c\u3002\\n\\n\u5728\u8fd9\u7bc7\u8bba\u6587\u7684\u5b9e\u9a8c\u4e2d\uff0c\u4f5c\u8005\u9009\u62e9\u53c2\u6570N\u7684\u6807\u51c6\u662f\u8ba9\u8fdb\u884c\u53cc\u7ebf\u6027\u52a0\u6027\u4e0a\u91c7\u6837\u540e\u548c\u4e4b\u524d\u7684\u6d6e\u70b9\u6570\u76f8\u7b49\uff0c\u8fd9\u4f7f\u5f97\u8fd9\u79cd\u4e0a\u91c7\u6837\u7684\u6027\u80fd\u5f00\u9500\u7c7b\u4f3c\u4e8e\u8f6c\u7f6e\u5377\u79ef\u3002\\n\\n## \u8de8\u5c42\u8fde\u63a5\u548c\u6b8b\u5dee\u8fde\u63a5\u65b9\u6cd5\uff08Skip connections and residual connections\uff09\\n\\n### \u8de8\u5c42\u8fde\u63a5\uff08Skip connections\uff09\\n\\n\u8de8\u5c42\u8fde\u63a5\u6709\u65f6\u4e5f\u88ab\u53eb\u505a\u8df3\u8dc3\u8fde\u63a5\u3002\u8fd9\u79cd\u65b9\u6cd5\u5df2\u7ecf\u5728\u5f88\u591a\u89e3\u7801\u5668\u7ed3\u6784\u4e2d\u83b7\u5f97\u6210\u529f\uff0c\u5e76\u4e14\u5728\u5f88\u591a\u5176\u4ed6\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u4e2d\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u6210\u7ee9\u3002\\n\\n![image-20210502113600719](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502113600719.png)\\n\\n\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u89e3\u7801\u5668\u7684\u6bcf\u4e00\u5c42\u8f93\u5165\u6709\u4e24\u4e2a\u6765\u6e90\uff1a\u7b2c\u4e00\u4e2a\u662f\u4e0a\u5c42\u89e3\u7801\u5668\u5f97\u5230\u7684\u8f93\u51fa\uff1b\u7b2c\u4e8c\u4e2a\u662f\u5728\u7f16\u7801\u5668\u4e2d\u8f93\u51fa\u5927\u5c0f\u548c\u81ea\u8eab\u8f93\u5165\u5927\u5c0f\u5339\u914d\u7684\u4e00\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u3002\\n\\n### \u89e3\u7801\u5668\u7684\u6b8b\u5dee\u8fde\u63a5\uff08Residual connections for decoders\uff09\\n\\n\u6b8b\u5dee\u8fde\u63a5\u5df2\u7ecf\u5728\u5f88\u591a\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u4e2d\u88ab\u8bc1\u660e\u662f\u6709\u6548\u7684\uff08\u6765\u6e90\u662fResNet\uff09\u3002\u4f46\u662f\uff0c\u6b8b\u5dee\u8fde\u63a5\u5e76\u4e0d\u80fd\u76f4\u63a5\u5e94\u7528\u4e8e\u89e3\u7801\u5668\uff1a\u5728\u89e3\u7801\u5668\u4e2d\uff0c\u4e0b\u4e00\u5c42\u6bd4\u4e0a\u4e00\u5c42\u5177\u6709\u66f4\u5927\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u548c\u66f4\u5c11\u7684\u901a\u9053\u6570\uff0c\u8fd9\u548c\u8d77\u521d\u6b8b\u5dee\u88ab\u63d0\u51fa\u65f6\u7684\u6761\u4ef6\u6070\u597d\u76f8\u53cd\u3002\u6240\u4ee5\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u8f6c\u6362\u65b9\u6cd5\uff1a\u7279\u522b\u662f\u4e0a\u9762\u63d0\u51fa\u7684\u53cc\u7ebf\u6027\u52a0\u6027\u4e0a\u91c7\u6837\uff08Bilinear additive upsampleing\uff09\u65b9\u6cd5\u5c06\u8f93\u5165\u8f6c\u5316\u4e3a\u6240\u9700\u7684\u7a7a\u95f4\u5927\u5c0f\u548c\u6240\u9700\u7684\u901a\u9053\u6570\u800c\u65e0\u9700\u63d0\u4f9b\u4efb\u4f55\u989d\u5916\u7684\u53c2\u6570\u3002\u5176\u8f6c\u5316\u7684\u7279\u5f81\u5305\u542b\u4e86\u539f\u59cb\u7279\u5f81\u7684\u5f88\u591a\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u8f6c\u6362\u65b9\u6cd5\uff08\u4e0d\u8fdb\u884c\u989d\u5916\u7684\u5377\u79ef\uff09\u8fdb\u884c\u8f6c\u6362\uff0c\u7136\u540e\u5c06\u8f6c\u6362\u7ed3\u679c\u8f93\u5165\u5230\u4efb\u4f55\u4e0a\u91c7\u6837\u5c42\u7684\u8f93\u51fa\u4e2d\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u4e0a\u91c7\u6837\u5c42\u7684\u8f93\u5165\uff0c\u4ece\u800c\u5f62\u6210\u7c7b\u4f3c\u6b8b\u5dee\u7684\u8fde\u63a5\uff1a\\n\\n![image-20210502114838945](./src/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs/image-20210502114838945.png)\\n\\n\u4e0a\u56fe\u662f\u5bf9\u8fd9\u79cd\u65b9\u6cd5\u8fdb\u884c\u7684\u56fe\u5f62\u5316\u89e3\u91ca\u3002\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u8fd9\u7bc7\u8bba\u6587\u901a\u8fc7\u5b9e\u9a8c\u8bc1\u660e\u4e86\u8fd9\u79cd\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002\\n\\n## \u5b9e\u9a8c\u548c\u5b9e\u9a8c\u8bbe\u7f6e\uff08Task and experimental setups\uff09\\n\\n\u5b9e\u9a8c\u90e8\u5206\u8bf7\u67e5\u770b[\u539f\u8bba\u6587](/papers/The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs.pdf)\u3002"},{"id":"/[02]Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey","metadata":{"permalink":"/blog/[02]Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[02]Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey.md","source":"@site/blog/[02]Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey.md","title":"Threat of Adversarial Attacks on Deep Learning in Computer Vision - A Survey","description":"\u8fd9\u662f\u4e00\u7bc7\u795e\u7ecf\u5bf9\u6297\u7684\u7efc\u8ff0\u6587\u7ae0\uff0c\u975e\u5e38\u975e\u5e38\u975e\u5e38\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86\u5f53\u524d\u795e\u7ecf\u5bf9\u6297\u653b\u51fb\u7684\u53d1\u5c55\u60c5\u51b5\u548c\u5df2\u6709\u7684\u653b\u51fb\u548c\u9632\u5fa1\u7b97\u6cd5\u3002\u539f\u8bba\u6587\uff1aThreat of Adversarial Attacks on Deep Learning in Computer Vision: A Survey","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"adversarial attacks","permalink":"/blog/tags/adversarial-attacks"},{"label":"survey","permalink":"/blog/tags/survey"},{"label":"robustness","permalink":"/blog/tags/robustness"}],"readingTime":101.815,"hasTruncateMarker":true,"authors":[{"name":"Sonder","title":"life is but a span, I use python","url":"https://github.com/AndSonder","email":"me@keter.top","imageURL":"https://github.com/AndSonder.png","key":"sonder"}],"frontMatter":{"title":"Threat of Adversarial Attacks on Deep Learning in Computer Vision - A Survey","authors":["sonder"],"tags":["adversarial attacks","survey","robustness"]},"prevItem":{"title":"The Devil is in the Decoder - Classification, Regression and GANs","permalink":"/blog/[01]The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs"},"nextItem":{"title":"Progressive Semantic Segmentation","permalink":"/blog/[03]Progressive-Semantic-Segmentation"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u795e\u7ecf\u5bf9\u6297\u7684\u7efc\u8ff0\u6587\u7ae0\uff0c\u975e\u5e38\u975e\u5e38\u975e\u5e38\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86\u5f53\u524d\u795e\u7ecf\u5bf9\u6297\u653b\u51fb\u7684\u53d1\u5c55\u60c5\u51b5\u548c\u5df2\u6709\u7684\u653b\u51fb\u548c\u9632\u5fa1\u7b97\u6cd5\u3002\u539f\u8bba\u6587\uff1a[Threat of Adversarial Attacks on Deep Learning in Computer Vision: A Survey](https://arxiv.org/pdf/1801.00553.pdf)\\n\\n> Deep learning is at the heart of the current rise of machine learning and artificial intelligence. In the field of Computer Vision, it has become the workhorse for applications ranging from self-driving cars to surveillance and security. Whereas deep neural networks have demonstrated phenomenal success (often beyond human capabilities) in solving complex problems, recent studies show that they are vulnerable to adversarial attacks in the form of subtle perturbations to inputs that lead a model to predict incorrect outputs. For images, such perturbations are often too small to be perceptible, yet they completely fool the deep learning models. Adversarial attacks pose a serious threat to the success of deep learning in practice. This fact has lead to a large influx of contributions in this direction. This article presents the first comprehensive survey on adversarial attacks on deep learning in Computer Vision. We review the works that design adversarial attacks, analyze the existence of such attacks and propose defenses against them. To emphasize that adversarial attacks are possible in practical conditions, we separately review the contributions that evaluate adversarial attacks in the real-world scenarios. Finally, we draw on the literature to provide a broader outlook of the research direction.\\n\\n\u672c\u6587\u4e3b\u8981\u5bf9\u6587\u7ae0\u8fdb\u884c\u7ffb\u8bd1\uff0c\u8fd8\u52a0\u5165\u4e86\u4e2a\u4eba\u5bf9\u4e00\u4e9b\u7b97\u6cd5\u7684\u7406\u89e3\u4e0e\u89e3\u91ca\u3002\u8fd9\u7bc7\u6587\u7ae0\u6211\u5927\u6982\u770b\u4e86\u4e00\u4e2a\u661f\u671f\u3002\u771f\u7684\u662f\u4e00\u7bc7\u975e\u5e38\u4e0d\u9519\u7684\u7efc\u8ff0\u8bba\u6587\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n\u6700\u8fd1\u7684\u7814\u7a76\u8868\u660e\uff0c\u5b83\u4eec\u5f88\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u6027\u653b\u51fb\uff0c\u56e0\u4e3a\u8f93\u5165\u7684\u7ec6\u5fae\u6270\u52a8\u4f1a\u5bfc\u81f4\u6a21\u578b\u9884\u6d4b\u4e0d\u6b63\u786e\u7684\u8f93\u51fa\u3002 \u5bf9\u4e8e\u56fe\u50cf\u6765\u8bf4\uff0c\u8fd9\u6837\u7684\u6270\u52a8\u5f80\u5f80\u592a\u5c0f\u800c\u96be\u4ee5\u5bdf\u89c9\uff0c\u4f46\u5b83\u4eec\u5b8c\u5168\u6b3a\u9a97\u4e86\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\\n\\n## Inroduction\\n\\n\u5c3d\u7ba1\u6df1\u5ea6\u5b66\u4e60\u4ee5\u975e\u51e1\u7684\u51c6\u786e\u6027\u6267\u884c\u5404\u79cd\u5404\u6837\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\uff0cSzegedy\u7b49\u4eba[22]\u9996\u5148\u53d1\u73b0\u4e86\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5728\u56fe\u50cf\u5206\u7c7b\u80cc\u666f\u4e0b\u7684\u4e00\u4e2a\u6709\u8da3\u7684\u5f31\u70b9\u3002\u4ed6\u4eec\u53d1\u73b0\uff0c\u5c3d\u7ba1\u73b0\u4ee3\u6df1\u5ea6\u7f51\u7edc\u7684\u51c6\u786e\u6027\u5f88\u9ad8\uff0c\u4f46\u5374\u4ee4\u4eba\u60ca\u8bb6\u5730\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u6027\u653b\u51fb\uff0c\u8fd9\u79cd\u653b\u51fb\u7684\u5f62\u5f0f\u662f\u5bf9\u4eba\u7c7b\u89c6\u89c9\u7cfb\u7edf(\u51e0\u4e4e)\u5bdf\u89c9\u4e0d\u5230\u7684\u56fe\u50cf\u7684\u5fae\u5c0f\u5e72\u6270\u3002\\n\\n\u5373\u4f7f\u662f3d\u6253\u5370\u73b0\u5b9e\u4e16\u754c\u7684\u7269\u4f53\u4e5f\u53ef\u4ee5\u6b3a\u9a97\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b\u5668\\n\\n\u5728\u7b2c2\u8282\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u7528\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u8bf4\u6cd5\u63cf\u8ff0\u4e86\u4e0e\u5bf9\u6297\u6027\u653b\u51fb\u6709\u5173\u7684\u5e38\u89c1\u672f\u8bed\u3002\u5728\u7b2c3\u8282\uff0c\u6211\u4eec\u56de\u987e\u4e86\u5bf9\u6297\u6027\u653b\u51fb\u4efb\u52a1\u7684\u56fe\u50cf\u5206\u7c7b\u548c\u8d85\u8d8a\u3002\u4e00\u4e2a\u5355\u72ec\u7684\u90e8\u5206\u662f\u5949\u732e\u7ed9\u5904\u7406\u5bf9\u6297\u653b\u51fb\u7684\u65b9\u6cd5\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u6761\u4ef6\u3002\u7b2c4\u8282\u5c06\u5ba1\u67e5\u8fd9\u4e9b\u65b9\u6cd5\u3002\u5728\u6587\u732e\u4e2d\uff0c\u4e5f\u6709\u4e3b\u8981\u5206\u6790\u5bf9\u6297\u6027\u653b\u51fb\u5b58\u5728\u6027\u7684\u8457\u4f5c\u3002\u6211\u4eec\u5c06\u5728\u7b2c5\u8282\u8ba8\u8bba\u8fd9\u4e9b\u8d21\u732e\u3002\u9632\u5fa1\u5bf9\u624b\u653b\u51fb\u7684\u65b9\u6cd5\u662f\\n\\n\\n\\n## \u5728adversarial attack\u4e2d\u7684\u5e38\u7528\u672f\u8bed\\n\\n- *Adversarial example/image* \uff1a\u88ab\u6545\u610f\u6270\u4e71\u7684\u5e72\u51c0\u56fe\u50cf\u7684\u4fee\u6539\u7248\u672c.\\n- *Threat model* \uff1a\u6307\u4e00\u79cd\u65b9\u6cd5\u6240\u8003\u8651\u7684\u6f5c\u5728\u653b\u51fb\u7c7b\u578b\uff0c\u4f8b\u5982\u9ed1\u76d2\u653b\u51fb.\\n- *Universal perturbation* : \u53ef\u4ee5\u5927\u6982\u7387\u5e72\u6270\u4efb\u4f55\u4e00\u5f20\u56fe\u7247\u8bc6\u522b\u7ed3\u679c\u7684\u5e72\u6270\\n- *White-box attacks* \uff1a\u5728\u77e5\u9053\u76ee\u6807\u6a21\u578b\u7684\u5b8c\u6574\u77e5\u8bc6\uff0c\u5305\u62ec\u5b83\u7684\u53c2\u6570\u503c\u3001\u67b6\u6784\u3001\u8bad\u7ec3\u65b9\u6cd5\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u6709\u5b83\u7684\u8bad\u7ec3\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u653b\u51fb.\\n- *Adversarial perturbation* \uff1a\u88ab\u52a0\u5728\u539f\u56fe\u50cf\u4e0a\u7684\u566a\u58f0\u4f7f\u539f\u56fe\u50cf\u6210\u4e3a\u5bf9\u6297\u6837\u672c\\n- *Adversarial training* \uff1a\u4f7f\u7528\u5bf9\u6297\u56fe\u50cf\u6837\u672c\u6765\u8fdb\u884c\u8bad\u7ec3\\n- *Adversary* \uff1a\u4e00\u822c\u6307\u521b\u9020\u5bf9\u6297\u6837\u672c\u7684\u4eba\uff0c\u6709\u65f6\u5019\u6837\u672c\u672c\u8eab\u4e5f\u53eb\u505a\u8fd9\u4e2a\\n- *Black-box attacks* \uff1a\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u5728\u4e0d\u4e86\u89e3\u8be5\u6a21\u578b\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u76ee\u6807\u6a21\u578b\u63d0\u4f9b\u751f\u6210\u7684\u5b9e\u4f8b\u7684\u653b\u51fb.\\n- *Fooling ratio/rate* \uff1a\u8868\u793a\u7ecf\u8fc7\u8bad\u7ec3\u7684\u6a21\u578b\u5728\u56fe\u50cf\u88ab\u6270\u52a8\u540e\u6539\u53d8\u5176\u9884\u6d4b\u6807\u7b7e\u7684\u767e\u5206\u6bd4\\n- *One-shot/one-step methods* \uff1a\u901a\u8fc7\u6267\u884c\u4e00\u6b65\u8ba1\u7b97\u4ea7\u751f\u4e00\u4e2a\u5bf9\u6297\u6027\u7684\u6270\u52a8\uff0c\u5982\u4e00\u6b21\u8ba1\u7b97\u6a21\u578b\u635f\u5931\u68af\u5ea6\u3002\u4e0e\u4e4b\u76f8\u53cd\u7684\u662f\u8fed\u4ee3\u65b9\u6cd5\uff0c\u5373\u591a\u6b21\u6267\u884c\u76f8\u540c\u7684\u8ba1\u7b97\u4ee5\u83b7\u5f97\u5355\u4e2a\u6270\u52a8\u3002\\n- *Quasi-imperceptible* \uff1a\u5bf9\u4e8e\u4eba\u7c7b\u7684\u611f\u77e5\u6765\u8bf4\uff0c\u5e72\u6270\u5bf9\u56fe\u50cf\u7684\u5f71\u54cd\u975e\u5e38\u8f7b\u5fae\u3002\\n- *Rectifier* \uff1a\u4fee\u6539\u4e00\u4e2a\u5bf9\u6297\u6027\u7684\u793a\u4f8b\uff0c\u4ee5\u5c06\u76ee\u6807\u6a21\u578b\u7684\u9884\u6d4b\u6062\u590d\u4e3a\u540c\u4e00\u793a\u4f8b\u7684\u5e72\u51c0\u7248\u672c\u4e0a\u7684\u9884\u6d4b\u3002\\n- *Targeted attacks* \uff1a\u9a97\u8fc7\u4e00\u4e2a\u6a21\u578b\uff0c\u8ba9\u5b83\u9519\u8bef\u5730\u9884\u6d4b\u51fa\u654c\u5bf9\u5f62\u8c61\u7684\u7279\u5b9a\u6807\u7b7e\u3002\\n\\n## 3. \u795e\u7ecf\u5bf9\u6297\u653b\u51fb\\n\\n\u7b2c\u4e09\u8282\u4e2d\u8bba\u6587\u4e3b\u8981\u5206\u4e3a\u4e24\u5927\u90e8\u5206\u6765\u8fdb\u884c\u4ecb\u7ecd\\n\\n\u5728\u7b2c3.1\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u56de\u987e\u4e86\u653b\u51fb\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u6267\u884c\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u6700\u5e38\u89c1\u7684\u4efb\u52a1\uff0c\u5373\u5206\u7c7b/\u8bc6\u522b\u3002\u5728\u7b2c3.2\u90e8\u5206\u4e2d\u8ba8\u8bba\u4e86\u4e3b\u8981\u7528\u4e8e\u653b\u51fb\u6df1\u5ea6\u5b66\u4e60\u7684\u65b9\u6cd5\u3002\\n\\n### 3.1 Attacks for classification\\n\\n#### 3.1.1 *Box-constrained L-BFGS*\\n\\n Szegedy\u7b49\u4eba\u9996\u5148\u8bc1\u660e\u4e86\u56fe\u50cf\u5b58\u5728\u5c0f\u6270\u52a8\uff0c\u5982\u6270\u52a8\u56fe\u50cf\u53ef\u4ee5\u6b3a\u9a97\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u4f7f\u5176\u8bef\u5206\u7c7b\u3002\u8bbeIc\u2208Rm\u8868\u793a\u4e00\u4e2a\u5411\u91cf\u5316\u7684\u5e72\u51c0\u56fe\u50cf\u2014\u2014\u4e0b\u6807\u2018c\u2019\u5f3a\u8c03\u8be5\u56fe\u50cf\u662f\u5e72\u51c0\u7684\u3002\u4e3a\u4e86\u8ba1\u7b97\u4e00\u4e2a\u53ef\u52a0\u6027\u6270\u52a8\u03c1\u2208Rm\uff0c\u5b83\u4f1a\u5bf9\u56fe\u50cf\u4ea7\u751f\u975e\u5e38\u8f7b\u5fae\u7684\u626d\u66f2\uff0c\u4ece\u800c\u6b3a\u9a97\u7f51\u7edc\uff0cSzegedy\u7b49\u4eba\u63d0\u51fa\u89e3\u51b3\u95ee\u9898\u7684\u516c\u5f0f:\\n$$\\n\\\\min _{\\\\boldsymbol{\\\\rho}}\\\\|\\\\boldsymbol{\\\\rho}\\\\|_{2} \\\\text { s.t. } \\\\mathcal{C}\\\\left(\\\\mathbf{I}_{c}+\\\\boldsymbol{\\\\rho}\\\\right)=\\\\ell ; \\\\mathbf{I}_{c}+\\\\boldsymbol{\\\\rho} \\\\in[0,1]^{m}\\n$$\\n\u5176\u4e2d$\' \\\\ell^{\\\\prime}$\u4e3a\u56fe\u50cf\u7684\u6807\u7b7e\uff0cC(.)\u4e3a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b\u5668\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0a\u5f0f\u6210\u4e3a\u4e00\u4e2a\u56f0\u96be\u7684\u95ee\u9898\u3002\u56e0\u6b64\u4ed6\u4eec\u5229\u7528box-constrained\u7684L-BFGS\u5bfb\u6c42\u4e00\u4e2a\u8fd1\u4f3c\u89e3\u3002\u8fd9\u662f\u901a\u8fc7\u627e\u5230\u6700\u5c0fc > 0\u6765\u5b9e\u73b0\u7684\uff0c\u5bf9\u4e8e\u5b83\uff0c\u4e0b\u9762\u95ee\u9898\u7684\u6700\u5c0f\u03c1\u6ee1\u8db3\u6761\u4ef6$\\\\mathcal{C}\\\\left(\\\\mathbf{I}_{c}+\\\\boldsymbol{\\\\rho}\\\\right)=\\\\ell$:\\n$$\\n\\\\min _{\\\\boldsymbol{\\\\rho}} c|\\\\boldsymbol{\\\\rho}|+\\\\mathcal{L}\\\\left(\\\\mathbf{I}_{c}+\\\\boldsymbol{\\\\rho}, \\\\ell\\\\right) \\\\text { s.t. } \\\\mathbf{I}_{c}+\\\\boldsymbol{\\\\rho} \\\\in[0,1]^{m}\\n$$\\n$\\\\mathcal{L}(., .)$\u8ba1\u7b97\u5206\u7c7b\u5668\u7684\u635f\u5931\u3002\u6211\u4eec\u6ce8\u610f\u5230\u4e0a\u5f0f\u4f7f\u5f97\u5177\u6709\u51f8\u635f\u5931\u51fd\u6570\u7684\u5206\u7c7b\u5668\u5177\u6709\u7cbe\u786e\u7684\u7ed3\u679c\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4\uff0c\u60c5\u51b5\u901a\u5e38\u4e0d\u662f\u8fd9\u6837\u3002\u8ba1\u7b97\u7684\u6270\u52a8\u53ea\u662f\u6dfb\u52a0\u5230\u56fe\u50cf\uff0c\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u5bf9\u6297\u7684\u4f8b\u5b50\u3002\\n\\n\u4e0a\u8ff0\u65b9\u6cd5\u80fd\u591f\u8ba1\u7b97\u5f53\u5c06\u566a\u58f0\u6dfb\u52a0\u5230\u5e72\u51c0\u56fe\u50cf\u65f6\u5bf9\u795e\u7ecf\u7f51\u7edc\u7684\u6270\u52a8\uff0c\u4f46\u662f\u5bf9\u6297\u6027\u56fe\u50cf\u770b\u8d77\u6765\u4e0e\u4eba\u7c7b\u89c6\u89c9\u7cfb\u7edf\u7684\u5e72\u51c0\u56fe\u50cf\u76f8\u4f3c\u3002Szegedy\u7b49\u4eba\u89c2\u5bdf\u5230\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u8ba1\u7b97\u7684\u6270\u52a8\u4e5f\u80fd\u591f\u6b3a\u9a97\u591a\u4e2a\u7f51\u7edc\u3002\u8fd9\u4e9b\u60ca\u4eba\u7684\u7ed3\u679c\u53d1\u73b0\u4e86\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u4e00\u4e2a\u76f2\u70b9\u3002\u5728\u8fd9\u4e2a\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u673a\u754c\u6b63\u5728\u8fc5\u901f\u9002\u5e94\u8fd9\u6837\u4e00\u79cd\u5370\u8c61\uff1a\u6df1\u5ea6\u5b66\u4e60\u7279\u5f81\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7a7a\u95f4\uff0c\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e2d\uff0c\u611f\u77e5\u8ddd\u79bb\u53ef\u4ee5\u5f88\u597d\u5730\u8fd1\u4f3c\u4e8e\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u76f8\u4e92\u77db\u76fe\u7684\u7ed3\u679c\u5f15\u53d1\u4e86\u7814\u7a76\u4eba\u5458\u5bf9\u8ba1\u7b97\u673a\u89c6\u89c9\u6df1\u5ea6\u5b66\u4e60\u5bf9\u6297\u6027\u653b\u51fb\u7684\u5e7f\u6cdb\u5174\u8da3\u3002\\n\\n---\\n\\n##### \u8865\u5145\u8bf4\u660e\uff1aL-BFGS\u7b97\u6cd5\\n\\n\u53c2\u8003\u535a\u5ba2\u94fe\u63a5\uff1ahttps://blog.csdn.net/weixin_39445556/article/details/84502260\\n\\n\u6211\u4eec\u77e5\u9053\u7b97\u6cd5\u5728\u8ba1\u7b97\u673a\u4e2d\u8fd0\u884c\u7684\u65f6\u5019\u662f\u9700\u8981\u5f88\u5927\u7684\u5185\u5b58\u7a7a\u95f4\u7684.\u5c31\u50cf\u6211\u4eec\u89e3\u51b3\u51fd\u6570\u6700\u4f18\u5316\u95ee\u9898\u5e38\u7528\u7684\u68af\u5ea6\u4e0b\u964d,\u5b83\u80cc\u540e\u7684\u539f\u7406\u5c31\u662f\u4f9d\u636e\u4e86\u6cf0\u52d2\u4e00\u6b21\u5c55\u5f00\u5f0f.\u6cf0\u52d2\u5c55\u5f00\u5f0f\u5c55\u5f00\u7684\u6b21\u6570\u8d8a\u591a,\u7ed3\u679c\u8d8a\u7cbe\u786e,\u6ca1\u6709\u4f7f\u7528\u4e09\u9636\u56db\u9636\u6216\u8005\u66f4\u9ad8\u9636\u5c55\u5f00\u5f0f\u7684\u539f\u56e0\u5c31\u662f\u76ee\u524d\u786c\u4ef6\u5185\u5b58\u4e0d\u8db3\u4ee5\u5b58\u50a8\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u6f14\u53d8\u51fa\u6765\u66f4\u590d\u6742\u4f53\u79ef\u66f4\u5e9e\u5927\u7684\u77e9\u9635.L-BFGS\u7b97\u6cd5\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u6709\u9650\u5185\u5b58\u4e2d\u8fdb\u884cBFGS\u7b97\u6cd5,L\u662flimited memory\u7684\u610f\u601d.\\n\\n\u7b97\u6cd5\u4e3a\u4ec0\u4e48\u53eb\u505aBFGS\u5462\uff1f\u8fd9\u5c31\u662f\u56db\u4e2a\u6570\u5b66\u5bb6\u540d\u5b57\u7684\u7b80\u79f0\u800c\u5df2\uff0c\u4e0d\u7528\u8fc7\u591a\u7684\u5728\u610f\\n\\n\u5b66\u4e60BFGS\u5fc5\u987b\u8981\u5148\u4e86\u89e3\u725b\u987f\u6cd5\u7684\u6c42\u6839\u95ee\u9898.\\n\\n**\u725b\u987f\u6cd5\u6c42\u6839\u95ee\u9898**\\n\\n \u725b\u987f\u53d1\u73b0,\u4e00\u4e2a\u51fd\u6570\u7684\u6839\u4ece\u7269\u7406\u7684\u89d2\u5ea6\u5c31\u53ef\u4ee5\u6839\u636e\u51fd\u6570\u56fe\u50cf\u8fed\u4ee3\u6c42\u5f97.\u725b\u987f\u6cd5\u6c42\u6839\u7684\u601d\u8def\u662f:\\n\\n\u200b    a.\u5728X\u8f74\u4e0a\u968f\u673a\u4e00\u70b9x1,\u7ecf\u8fc7x1\u505aX\u8f74\u7684\u5782\u7ebf,\u5f97\u5230\u5782\u7ebf\u4e0e\u51fd\u6570\u56fe\u50cf\u7684\u4ea4\u70b9f\uff08x1\uff09\\n\\n\u200b    b.\u901a\u8fc7f\uff08x1\uff09\u505a\u51fd\u6570\u7684\u5207\u7ebf,\u5f97\u5230\u5207\u7ebf\u4e0eX\u8f74\u7684\u4ea4\u70b9x2\\n\\n\u200b    c.\u8fed\u4ee3a/b\u4e24\u6b65.\\n\\n\u200b    \u4e0b\u9762\u9644\u4e0a\u4e00\u5f20\u52a8\u56fe\u65b9\u4fbf\u7406\u89e3:\\n\\n![](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/70-20210501181806130.gif)\\n\\n\u200b\\t\u901a\u8fc7\u56fe\u7247\u6211\u4eec\u53ef\u4ee5\u770b\u5230.\u5728X\u8f74\u4e0a\u53d6\u7684\u70b9\u4f1a\u968f\u7740\u8fed\u4ee3\u6b21\u6570\u7684\u589e\u52a0\u800c\u8d8a\u6765\u8d8a\u63a5\u8fd1\u51fd\u6570\u7684\u6839.\u7ecf\u8fc7\u65e0\u9650\u591a\u6b21\u7684\u8fed\u4ee3$x_n$,\u5c31\u7b49\u4e8e\u51fd\u6570f(x)\u7684\u6839.\u4f46\u725b\u987f\u6cd5\u5728\u5b9e\u9645\u5e94\u7528\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u4f1a\u8ba9\u7b97\u6cd5\u5c31\u8fd9\u4e48\u8fed\u4ee3\u4e0b\u53bb,\u6240\u4ee5\u5f53$x_{k-1}$\u548c$x_{k}$\u76f8\u540c\u6216\u8005\u4e24\u4e2a\u503c\u7684\u5dee\u5c0f\u4e8e\u4e00\u4e2a\u9608\u503c\u7684\u65f6\u5019,$x_{k}$\u5c31\u662f\u51fd\u6570$f(x)$\u7684\u6839.\\n\\n\u200b    \u90a3\u4e48\u95ee\u9898\u6765\u4e86,\u600e\u4e48\u6837\u627e\u5230$f(x)$\u7684\u5bfc\u51fd\u6570\u4e0eX\u8f74\u7684\u4ea4\u70b9.\u8bf7\u770b\u4e0b\u56fe:\\n\\n![](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806068.png)\\n\\n\u56fe\u7247\u662f\u4e0a\u8fb9\u52a8\u56fe\u4ece$x_{1}$\u5230$x_{2}$\u7684\u52a8\u4f5c.\u53ef\u4ee5\u770b\u5230,\u4e09\u89d2\u5f62\u7eff\u8272\u7684\u76f4\u89d2\u8fb9\u7684\u503c\u662f$x_{1} - x_{2}$ ,  $x_{1}$\u662f\u5df2\u77e5\u7684(\u968f\u673a\u51fa\u6765\u7684),\u800c\u4e14\u51fd\u6570\u8868\u8fbe\u5f0ff(x)\u4e5f\u662f\u5df2\u77e5\u7684(\u4e0d\u77e5\u9053\u8981\u6c42\u7684\u51fd\u6570\u54b1\u4eec\u6298\u817e\u5565\u5462).\u6240\u4ee5\u4e09\u89d2\u5f62\u7684\u53e6\u4e00\u6761\u76f4\u89d2\u8fb9$f(x_{1})$\u4e5f\u662f\u5df2\u77e5\u7684.\u6839\u636e\u5bfc\u51fd\u6570\u5b9a\u4e49,\u51fd\u6570f(x)\u5728$x_{1}$ \u70b9\u7684\u5bfc\u51fd\u6570\u5c31\u662f$f^{\'}(x) = \\\\frac{f(x_{1})}{x_{1} - x_{2}}$ (\u516c\u5f0f\u4e00).\\n\\n\u516c\u5f0f\u4e00\u53d8\u6362\u4e00\u4e0b\u5f97\u5230: $x_{2} =x_{1} - \\\\frac{ f(x_{1})}{f^{\'}(x_{1})}$ (\u516c\u5f0f\u4e8c ),\u540c\u7406\u53ef\u4ee5\u5f97\u51fa\u6bcf\u4e00\u6b21\u8fed\u4ee3$x_{k}$\u7684\u8868\u8fbe\u5f0f\u90fd\u662f $x_{k} =x_{k-1} - \\\\frac{ f(x_{k-1})}{f^{\'}(x_{k-1})}$ (\u516c\u5f0f\u4e09).\\n\\n\u6240\u4ee5,\u6839\u636e\u725b\u987f\u6cd5\u6c42\u6839\u7684\u601d\u8def,\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3(\u6a21\u4eff)\u4e00\u4e0b\u4f7f\u7528\u725b\u987f\u6cd5\u6c42\u6839\u7684\u6b65\u9aa4:\\n\\na.\u5df2\u77e5\u51fd\u6570f(x)\u7684\u60c5\u51b5\u4e0b,\u968f\u673a\u4ea7\u751f\u70b9$x_{0}$.\\n\\nb.\u7531\u5df2\u77e5\u7684$x_{0}$\u70b9\u6309\u7167$x_{k} =x_{k-1} - \\\\frac{ f(x_{k-1})}{f^{\'}(x_{k-1})}$\u7684\u516c\u5f0f\u8fdb\u884ck\u6b21\u8fed\u4ee3.\\n\\nc.\u5982\u679c$x_{k}$\u4e0e\u4e0a\u4e00\u6b21\u7684\u8fed\u4ee3\u7ed3\u679c$x_{k-1}$\u76f8\u540c\u6216\u8005\u76f8\u5dee\u7ed3\u679c\u5c0f\u4e8e\u4e00\u4e2a\u9608\u503c\u65f6,\u672c\u6b21\u7ed3\u679c$x_{k}$\u5c31\u662f\u51fd\u6570f(x)\u7684\u6839.\\n\\n\u4ee5\u4e0a\u4e3a\u725b\u987f\u6cd5\u7684\u6c42\u6839\u7684\u601d\u8def.\\n\\n**\u725b\u987f\u6cd5\u6c42\u51fd\u6570\u7684\u9a7b\u70b9**\\n\\n\u6211\u4eec\u77e5\u9053,\u673a\u5668\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u51fd\u6570\u6700\u4f18\u5316\u95ee\u9898,\u5927\u90e8\u5206\u4f18\u5316\u7684\u90fd\u662f\u76ee\u6807\u51fd\u6570\u7684\u5bfc\u51fd\u6570,\u6211\u4eec\u8981\u6c42\u5f97\u5bfc\u51fd\u6570\u4e3a\u96f6\u65f6\u7684\u70b9\u6216\u8fd1\u4f3c\u70b9\u6765\u4f5c\u4e3a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u8868\u73b0\u6700\u597d\u7684\u70b9.\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86\u725b\u987f\u6c42\u6839\u6cd5,\u90a3\u628a\u725b\u987f\u6c42\u6839\u6cd5\u7684\u51fd\u6570\u6362\u6210\u54b1\u4eec\u8981\u4f18\u5316\u7684\u5bfc\u51fd\u6570\u4e0d\u5c31\u884c\u4e86\u4e48.\u8981\u6c42\u7684\u7684\u5bfc\u51fd\u6570\u4e3a\u96f6\u7684\u70b9\u53eb\u505a\u9a7b\u70b9.\u6240\u4ee5\u7528\u725b\u987f\u6cd5\u6c42\u51fd\u6570\u9a7b\u70b9\u540c\u6c42\u51fd\u6570\u7684\u6839\u662f\u6ca1\u6709\u4efb\u4f55\u533a\u522b\u7684.\u53ea\u662f\u516c\u5f0f\u4e8c\u4e2d\u7684$f(x)$\u53d8\u4e3a\u4e86$f^{\'}(x)$,\u539f\u6765\u7684$f^{\'}(x)$\u53d8\u6210\u4e86\u4e00\u9636\u5bfc\u51fd\u6570$f^{\'}(x)$\u7684\u5bfc\u51fd\u6570\u4e5f\u5c31\u662f\u4e8c\u9636\u5bfc\u51fd\u6570$f^{\'\'}(x)$,\u6c42$x_{k}$\u7684\u8fed\u4ee3\u516c\u5f0f\u5982\u4e0b:\\n\\n$x_{k} = x_{k-1} - \\\\frac{f^{\'}(x_{k-1})}{f^{\'\'}(x_{k-1})}$    (\u516c\u5f0f\u56db)\\n\\n\u8fd9\u6837,\u6211\u4eec\u901a\u8fc7\u51e0\u4f55\u76f4\u89c9,\u5f97\u5230\u4e86\u6c42\u89e3\u51fd\u6570\u6839\u7684\u529e\u6cd5,\u90a3\u8fd9\u4e48\u5389\u5bb3\u7684\u4e00\u4e2a\u60f3\u6cd5,\u6709\u6ca1\u6709\u4ec0\u4e48\u7406\u8bba\u4f9d\u636e\u4f5c\u4e3a\u652f\u6491\u5462?\u5f53\u7136\u6709\u4e86,\u8981\u4e0d\u6211\u4e5f\u4e0d\u8fd9\u4e48\u95ee.\\n\\n**\u725b\u987f\u6cd5\u6c42\u9a7b\u70b9\u7684\u672c\u8d28**\\n\\n\u725b\u987f\u6cd5\u6c42\u9a7b\u70b9\u7684\u672c\u8d28\u5176\u5b9e\u662f\u4e8c\u9636\u6cf0\u52d2\u5c55\u5f00.\u6211\u4eec\u6765\u770b\u4e8c\u9636\u6cf0\u52d2\u5c55\u5f00\u5f0f:\\n\\n$$\\n\\\\varphi(x)=f\\\\left(x_{k}\\\\right)+f^{\\\\prime}\\\\left(x_{k}\\\\right)\\\\left(x-x_{k}\\\\right)+\\\\frac{1}{2} f^{\\\\prime \\\\prime}\\\\left(x_{k}\\\\right)\\\\left(x-x_{k}\\\\right)^{2}\\n$$\\n\\n$\\\\varphi (x)$\u662f\u6211\u4eec\u8981\u6c42\u89e3\u7684\u539f\u51fd\u6570\u7684\u8fd1\u4f3c\u5f0f.\u5f53\u6211\u4eec\u8981\u5bf9\u539f\u51fd\u6570\u6c42\u89e3\u65f6,\u53ef\u4ee5\u76f4\u63a5\u6c42\u5f97$\\\\varphi (x)$\u7684\u5bfc\u51fd\u6570$\\\\varphi^{\'} (x)$ \u4ee4$\\\\varphi^{\'} (x) = 0$\u65f6\u7684\u7ed3\u679c\u5c31\u662f\u539f\u51fd\u6570\u7684\u89e3.\u6240\u4ee5\u5bf9$\\\\varphi (x)$\u6c42\u5bfc,\u6d88\u53bb\u5e38\u6570\u9879\u540e\u5f97\u5230\u516c\u5f0f\u5982\u4e0b:\\n\\n$$\\nf^{\\\\prime}\\\\left(x_{k}\\\\right)+f^{\\\\prime \\\\prime}\\\\left(x_{k}\\\\right)\\\\left(x-x_{k}\\\\right)=0\\n$$\\n\\n\u7ecf\u8fc7\u53d8\u6362\u540e\u6240\u5f97\u7684\u516c\u5f0f\u5c31\u662f\u4e0a\u8fb9\u7684**\u516c\u5f0f\u56db**.\u6240\u4ee5,\u725b\u987f\u6cd5\u6c42\u9a7b\u70b9\u7684\u672c\u8d28\u5c31\u662f\u5bf9\u51fd\u6570\u8fdb\u884c\u4e8c\u9636\u6cf0\u52d2\u5c55\u5f00\u540e\u53d8\u6362\u6240\u5f97\u5230\u7684\u7ed3\u679c.\\n\\n\u5728\u4e00\u5143\u51fd\u6570\u6c42\u89e3\u7684\u95ee\u9898\u4e2d,\u6211\u4eec\u53ef\u4ee5\u5f88\u6109\u5feb\u7684\u4f7f\u7528\u725b\u987f\u6cd5\u6c42\u9a7b\u70b9,\u4f46\u6211\u4eec\u77e5\u9053,\u5728\u673a\u5668\u5b66\u4e60\u7684\u4f18\u5316\u95ee\u9898\u4e2d,\u6211\u4eec\u8981\u4f18\u5316\u7684\u90fd\u662f\u591a\u5143\u51fd\u6570,\u6240\u4ee5x\u5f80\u5f80\u4e0d\u662f\u4e00\u4e2a\u5b9e\u6570,\u800c\u662f\u4e00\u4e2a\u5411\u91cf.\u6240\u4ee5\u5c06\u725b\u987f\u6c42\u6839\u6cd5\u5229\u7528\u5230\u673a\u5668\u5b66\u4e60\u4e2d\u65f6,x\u662f\u4e00\u4e2a\u5411\u91cf,$f^{\'}(x)$\u4e5f\u662f\u4e00\u4e2a\u5411\u91cf,\u4f46\u662f\u5bf9$f^{\'}(x)$\u6c42\u5bfc\u4ee5\u540e\u5f97\u5230\u7684$f^{\'\'}(x)$\u662f\u4e00\u4e2a\u77e9\u9635,\u53eb\u505a**Hessian\u77e9\u9635**.\u7b49\u4ef7\u516c\u5f0f\u5982\u4e0b:\\n\\n$$\\n\\\\mathbf{x}_{k+1}=\\\\mathbf{x}_{k}-H_{k}^{-1} \\\\cdot \\\\mathbf{g}_{k}, \\\\quad k=0,1, \\\\cdots\\n$$\\n\\n\u516c\u5f0f\u4e2d,$g_{k}$\u4e3a\u516c\u5f0f\u56db\u4e2d\u7684$f^{\'}(x),H_{k}^{-1}$\u4ee3\u8868\u4e8c\u9636\u5bfc\u51fd\u6570\u7684\u5012\u6570.\\n\\n\u5f53x\u7684\u7ef4\u5ea6\u7279\u522b\u591a\u7684\u65f6\u5019,\u6211\u4eec\u60f3\u6c42\u5f97$f^{\'\'}(x)$\u662f\u975e\u5e38\u56f0\u96be\u7684.\u800c\u725b\u987f\u6cd5\u6c42\u9a7b\u70b9\u53c8\u662f\u4e00\u4e2a\u8fed\u4ee3\u7b97\u6cd5,\u6240\u4ee5\u8fd9\u4e2a\u56f0\u96be\u6211\u4eec\u8fd8\u8981\u9762\u4e34\u65e0\u9650\u591a\u6b21,\u5bfc\u81f4\u4e86\u725b\u987f\u6cd5\u6c42\u9a7b\u70b9\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u65e0\u6cd5\u4f7f\u7528.\u6709\u6ca1\u6709\u4ec0\u4e48\u89e3\u51b3\u529e\u6cd5\u5462?\\n\\n**BFGS\u7b97\u6cd5**\\n\\nBFGS\u7b97\u6cd5\u662f\u901a\u8fc7\u8fed\u4ee3\u6765\u903c\u8fd1$H_{k}^{-1}$\u7684\u7b97\u6cd5.\u903c\u8fd1\u7684\u65b9\u5f0f\u5982\u4e0b(\u516c\u5f0f\u4e94):\\n\\n$$\\nD_{k+1}=\\\\left(I-\\\\frac{\\\\varepsilon_{k} \\\\mathbf{y}_{k}^{T}}{\\\\mathbf{y}_{k}^{T} \\\\mathbf{s}_{k}}\\\\right) D_{k}\\\\left(I-\\\\frac{\\\\mathbf{y}_{\\\\mathbf{s}} \\\\mathbf{s}_{k}^{T}}{\\\\mathbf{y}_{k}^{T} \\\\mathbf{s}_{k}}\\\\right)+\\\\frac{\\\\mathbf{s}_{k} \\\\mathbf{s}^{T}}{\\\\mathbf{y}_{k}^{T} \\\\mathbf{s}_{k}}\\n$$\\n\u516c\u5f0f\u4e94\u4e2d\u7684 $D_{k}$\u5c31\u662f$H_{k}^{-1}.s_{k} = x_{k+1} - x_{k},y_{k} = g_{k+1} - g_{k}$.  $g_{k}$\u662f\u539f\u51fd\u6570\u7684\u5bfc\u51fd\u6570.\\n\\n$D_{k}$\u7684\u8fed\u4ee3\u516c\u5f0f\u590d\u6742\u65e0\u6bd4,\u8fd8\u597d\u6211\u4eec\u4e0d\u7528\u8bb0\u4f4f\u5b83.BFGS\u662f\u901a\u8fc7\u8fed\u4ee3\u6765\u903c\u8fd1$H_{k}^{-1}$\u77e9\u9635,\u7b2c\u4e00\u6b65\u7684D\u77e9\u9635\u662f\u5355\u4f4d\u77e9\u9635.\\n\\n\u6211\u4eec\u8981\u901a\u8fc7\u725b\u987f\u6c42\u9a7b\u70b9\u6cd5\u548cBFGS\u7b97\u6cd5\u6765\u6c42\u5f97\u4e00\u4e2a\u51fd\u6570\u7684\u6839,\u4e24\u4e2a\u7b97\u6cd5\u90fd\u9700\u8981\u8fed\u4ee3,\u6240\u4ee5\u6211\u4eec\u5e72\u8106\u8ba9\u4ed6\u4fe9\u4e00\u8d77\u8fed\u4ee3\u5c31\u597d\u4e86.\u4e24\u4e2a\u7b97\u6cd5\u90fd\u662f\u6162\u6162\u903c\u8fd1\u51fd\u6570\u6839,\u6240\u4ee5\u7ecf\u8fc7k\u6b21\u8fed\u4ee3\u4ee5\u540e,\u6240\u5f97\u5230\u7684\u89e3\u5c31\u662f\u673a\u5668\u5b66\u4e60\u4e2d\u76ee\u6807\u51fd\u6570\u5bfc\u51fd\u6570\u7684\u6839.\u8fd9\u79cd\u4e24\u4e2a\u7b97\u6cd5\u5171\u540c\u8fed\u4ee3\u7684\u8ba1\u7b97\u65b9\u5f0f,\u6211\u4eec\u79f0\u4e4b\u4e3aOn The Fly.\u4e2a\u4eba\u7ffb\u8bd1:\u8ba9\u5b50\u5f39\u98de~\\n\\n\u56de\u987e\u4e00\u4e0b\u68af\u5ea6\u4e0b\u964d\u7684\u8868\u8fbe\u5f0f$\\\\Theta_{k} = \\\\Theta_{k+1} - \\\\alpha \\\\cdot g$ ,\u5728BFGS\u7b97\u6cd5\u8fed\u4ee3\u7684\u7b2c\u4e00\u6b65,\u5355\u4f4d\u77e9\u9635\u4e0e\u68af\u5ea6g\u76f8\u4e58,\u5c31\u7b49\u4e8e\u68af\u5ea6g,\u5f62\u5f0f\u4e0a\u540c\u68af\u5ea6\u4e0b\u964d\u7684\u8868\u8fbe\u5f0f\u662f\u76f8\u540c\u7684.\u6240\u4ee5BFGS\u7b97\u6cd5\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ece\u68af\u5ea6\u4e0b\u964d\u9010\u6b65\u8f6c\u6362\u4e3a\u725b\u987f\u6cd5\u6c42\u51fd\u6570\u89e3\u7684\u4e00\u4e2a\u7b97\u6cd5.\\n\\n\u867d\u7136\u6211\u4eec\u4f7f\u7528\u4e86BFGS\u7b97\u6cd5\u6765\u5229\u7528\u5355\u4f4d\u77e9\u9635\u9010\u6b65\u903c\u8fd1H\u77e9\u9635,\u4f46\u662f\u6bcf\u6b21\u8ba1\u7b97\u7684\u65f6\u5019\u90fd\u8981\u5b58\u50a8D\u77e9\u9635,D\u77e9\u9635\u6709\u591a\u5927\u5462.\u5047\u8bbe\u6211\u4eec\u7684\u6570\u636e\u96c6\u6709\u5341\u4e07\u4e2a\u7ef4\u5ea6(\u4e0d\u7b97\u7279\u522b\u5927),\u90a3\u4e48\u6bcf\u6b21\u8fed\u4ee3\u6240\u8981\u5b58\u50a8D\u77e9\u9635\u7684\u7ed3\u679c\u662f74.5GB.\u6211\u4eec\u65e0\u6cd5\u4fdd\u5b58\u5982\u6b64\u5de8\u5927\u7684\u77e9\u9635\u5185\u5bb9,\u5982\u4f55\u89e3\u51b3\u5462?\\n\\n**\u4f7f\u7528L-BFGS\u7b97\u6cd5.**\\n\\n**L-BFGS\u7b97\u6cd5:**\\n\\n\u6211\u4eec\u6bcf\u4e00\u6b21\u5bf9D\u77e9\u9635\u7684\u8fed\u4ee3,\u90fd\u662f\u901a\u8fc7\u8fed\u4ee3\u8ba1\u7b97$s_{k}$\u548c$y_{k}$\u5f97\u5230\u7684.\u65e2\u7136\u5b58\u4e0d\u4e0bD\u77e9\u9635,\u90a3\u4e48\u6211\u4eec\u5b58\u50a8\u4e0b\u6240\u6709\u7684$s_{k}$\u548c$y_{k}$\u60f3\u8981\u5f97\u5230$D_{10}$\u5c31\u7528\u5355\u4f4d\u77e9\u9635\u540c\u5b58\u50a8\u4e0b\u7684$s_{1}$\u548c$y_{1}$\u5230$s_{10}$\u548c$y_{10}$\u8ba1\u7b97\u5c31\u53ef\u4ee5\u4e86.\u8fd9\u6837\u4e00\u4e2a\u65f6\u95f4\u6362\u7a7a\u95f4\u7684\u529e\u6cd5\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u6570\u636e\u96c6\u670910000\u4e2a\u7ef4\u5ea6\u7684\u60c5\u51b5\u4e0b,\u7531\u5b58\u50a810000 x 10000\u7684\u77e9\u9635\u53d8\u4e3a\u4e86\u5b58\u50a8\u5341\u4e2a1 x 10000\u768410\u4e2a\u5411\u91cf,\u6709\u6548\u8282\u7701\u4e86\u5185\u5b58\u7a7a\u95f4.\\n\\n\u4f46\u662f,\u4ec5\u4ec5\u662f\u8fd9\u6837\u8fd8\u662f\u4e0d\u591f\u7684,\u56e0\u4e3a\u5f53\u8fed\u4ee3\u6b21\u6570\u975e\u5e38\u5927\u7684\u65f6\u5019,\u6211\u4eec\u7684\u5185\u5b58\u540c\u6837\u5b58\u4e0d\u4e0b.\u8fd9\u4e2a\u65f6\u5019\u53ea\u80fd\u4e22\u6389\u4e00\u4e9b\u5b58\u4e0d\u4e0b\u7684\u6570\u636e.\u5047\u8bbe\u6211\u4eec\u8bbe\u7f6e\u7684\u5b58\u50a8\u5411\u91cf\u6570\u4e3a100,\u5f53s\u548cy\u8fed\u4ee3\u8d85\u8fc7100\u65f6,\u5c31\u4f1a\u6254\u6389\u7b2c\u4e00\u4e2as\u548cy,\u5b58\u50a8s_{2}\u5230s_{101}\u548cy_{2}\u5230y_{101},\u6bcf\u591a\u4e00\u6b21\u8fed\u4ee3\u5c31\u5bf9\u5e94\u7684\u6254\u6389\u6700\u524d\u8fb9\u7684s\u548cy.\u8fd9\u6837\u867d\u7136\u635f\u5931\u4e86\u7cbe\u5ea6,\u4f46\u786e\u53ef\u4ee5\u4fdd\u8bc1\u4f7f\u7528\u6709\u9650\u7684\u5185\u5b58\u5c06\u51fd\u6570\u7684\u89e3\u901a\u8fc7BFGS\u7b97\u6cd5\u6c42\u5f97\u5230.\\n\\n**\u6240\u4ee5L-BFGS\u7b97\u6cd5\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9BFGS\u7b97\u6cd5\u7684\u53c8\u4e00\u6b21\u8fd1\u4f3c.**\\n\\n\\n---\\n\\n#### *3.1.2 Fast Gradient Sign Method (FGSM)*\\n\\nFGSM\u662f\u4e00\u79cd\u767d\u76d2\u653b\u51fb\uff1b\\n\\nSzegedy\u7b49\u4eba[22]\u89c2\u5bdf\u5230\uff0c\u5bf9\u6297\u6027\u8bad\u7ec3\u53ef\u4ee5\u63d0\u9ad8\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u5bf9\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u9c81\u68d2\u6027\u3002\uff08\u5bf9\u6297\u6027\u8bad\u7ec3\u5c31\u662f\u6307\u5c06\u751f\u6210\u7684\u5bf9\u6297\u6027\u6837\u672c\u52a0\u5165\u5230\u8bad\u7ec3\u96c6\u5f53\u4e2d\u6765\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u8bad\u7ec3\uff09\\n\\n\u4e3a\u4e86\u5b9e\u73b0\u6709\u6548\u7684\u5bf9\u6297\u6027\u8bad\u7ec3\uff0cGoodfello\u7b49\u4eba[23]\u5f00\u53d1\u4e86\u901a\u8fc7\u89e3\u51b3\u4ee5\u4e0b\u95ee\u9898\uff0c\u6709\u6548\u8ba1\u7b97\u7ed9\u5b9a\u56fe\u50cf\u7684\u5bf9\u6297\u6027\u6270\u52a8\u7684\u65b9\u6cd5\uff1a\\n$$\\n\\\\rho=\\\\epsilon \\\\operatorname{sign}\\\\left(\\\\nabla \\\\mathcal{J}\\\\left(\\\\boldsymbol{\\\\theta}, \\\\mathbf{I}_{c}, \\\\ell\\\\right)\\\\right)\\n$$\\n$\\\\nabla \\\\mathcal{J}(.,.,.)$\u8ba1\u7b97\u56f4\u7ed5\u6a21\u578b\u53c2\u6570\u5f53\u524d\u503c\u7684\u6210\u672c\u51fd\u6570\u7684\u68af\u5ea6;$\\\\epsilon$\u662f\u9650\u5236\u5fae\u6270\u8303\u6570\u7684\u5c0f\u6807\u91cf\u503c\u3002\u8fd9\u79cd\u65b9\u6cd5\u53eb\u505aFGSM\uff08Fast Gradient Sign Method\uff09\u7b97\u6cd5\u3002\\n\\n\u6709\u8da3\u7684\u662f\uff0cFGSM\u4ea7\u751f\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u5229\u7528\u4e86\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u6df1\u5c42\u7f51\u7edc\u6a21\u578b\u7684\u201c\u7ebf\u6027\u201d\uff0c\u800c\u8fd9\u79cd\u6a21\u578b\u5f53\u65f6\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u9ad8\u5ea6\u975e\u7ebf\u6027\u7684\u3002\u53e4\u5fb7\u8d39\u7f57\u7b49\u4eba[23]\u5047\u8bbe\uff0c\u73b0\u4ee3\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u8bbe\u8ba1\uff08\u6709\u610f\uff09\u4e3a\u8ba1\u7b97\u589e\u76ca\u5f15\u5165\u7ebf\u6027\u884c\u4e3a\uff0c\u4e5f\u4f7f\u5b83\u4eec\u5bb9\u6613\u53d7\u5230\u5ec9\u4ef7\u7684\u5206\u6790\u6270\u52a8\u3002\u5728\u76f8\u5173\u6587\u732e\u4e2d\uff0c\u8fd9\u4e00\u89c2\u70b9\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u7ebf\u6027\u5047\u8bbe\u201d\uff0c\u8fd9\u4e00\u70b9\u5f97\u5230\u4e86FGSM\u65b9\u6cd5\u7684\u8bc1\u5b9e\u3002\\n\\nFGSM\u5bf9\u56fe\u50cf\u8fdb\u884c\u6270\u52a8\uff0c\u4ee5\u589e\u52a0\u5206\u7c7b\u5668\u5728\u7ed3\u679c\u4e0a\u7684\u635f\u5931\u3002sign\u51fd\u6570\u4fdd\u8bc1\u4e86\u635f\u5931\u5927\u5c0f\u6700\u5927\u5316\uff0c\u800c\u03b5\u672c\u8d28\u4e0a\u9650\u5236\u4e86$\\\\ell_{\\\\infty}$ -norm\u7684\u6270\u52a8\u3002Miyato\u7b49\u4eba[103]\u63d0\u51fa\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n$$\\n\\\\boldsymbol{\\\\rho}=\\\\epsilon \\\\frac{\\\\nabla \\\\mathcal{J}\\\\left(\\\\boldsymbol{\\\\theta}, \\\\mathbf{I}_{c}, \\\\ell\\\\right)}{\\\\left\\\\|\\\\nabla \\\\mathcal{J}\\\\left(\\\\boldsymbol{\\\\theta}, \\\\mathbf{I}_{c}, \\\\ell\\\\right)\\\\right\\\\|_{2}}\\n$$\\n\u5728\u4e0a\u9762\u7684\u65b9\u7a0b\u4e2d\uff0c\u8ba1\u7b97\u7684\u68af\u5ea6\u7528$\\\\ell_2$\u8303\u6570\u6b63\u5219\u5316\u3002Kurakin\u7b49\u4eba[80]\u5c06\u8be5\u6280\u672f\u79f0\u4e3a\\"\u5feb\u901f\u68af\u5ea6L2\\"\u65b9\u6cd5\uff0c\u5e76\u63d0\u51fa\u4e86\u4f7f\u7528$\\\\ell_{\\\\infty}$\u8303\u6570\u8fdb\u884c\u5f52\u4e00\u5316\u7684\u66ff\u4ee3\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u88ab\u53eb\u505a\u201c\u5feb\u901f\u68af\u5ea6$\\\\ell_{\\\\infty}$\u201d\u65b9\u6cd5\u3002\u4ece\u5e7f\u4e49\u4e0a\u8bb2\uff0c\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u5bf9\u6297\u6027\u653b\u51fb\u7684\u76f8\u5173\u6587\u732e\u4e2d\uff0c\u6240\u6709\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u88ab\u53eb\u505a \u2018one-step\u2019 or \u2018one-shot\u2019 \u201c\u4e00\u6b65\u5f0f\u201d\u6216\u201c\u4e00\u6b21\u6027\u201d\u65b9\u6cd5\u3002\\n\\n---\\n\\n\u8865\u5145\u8bf4\u660e\uff1aFGSM\u7b97\u6cd5 \\n\\n\u53c2\u8003\u6587\u7ae0\uff1a [\u5e72\u8d27 | \u653b\u51fbAI\u6a21\u578b\u4e4bFGSM\u7b97\u6cd5](https://cloud.tencent.com/developer/article/1167792)\\n\\nFGSM\u6700\u65e9\u7531Goodfellow\u5728\u5176\u8bba\u6587\u300aExplaining and Harnessing Adversarial Examples\u300b[23] \u4e2d\u63d0\u51fa\u3002\u4ee5\u6700\u5e38\u89c1\u7684\u56fe\u50cf\u8bc6\u522b\u4e3a\u4f8b\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u539f\u59cb\u56fe\u7247\u4e0a\u505a\u8089\u773c\u96be\u4ee5\u8bc6\u522b\u7684\u4fee\u6539\uff0c\u4f46\u662f\u5374\u53ef\u4ee5\u8ba9\u56fe\u50cf\u8bc6\u522b\u6a21\u578b\u4ea7\u751f\u8bef\u5224\u3002\u5047\u8bbe\u56fe\u7247\u539f\u59cb\u6570\u636e\u4e3ax\uff0c\u56fe\u7247\u8bc6\u522b\u7684\u7ed3\u679c\u4e3ay\uff0c\u539f\u59cb\u56fe\u50cf\u4e0a\u7ec6\u5fae\u7684\u53d8\u5316\u8089\u773c\u96be\u4ee5\u8bc6\u522b\uff0c\u4f7f\u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\u5982\u4e0b\u3002\\n$$\\n\\\\widetilde{x}=x+\\\\eta\\n$$\\n\u5c06\u4fee\u6539\u540e\u7684\u56fe\u50cf\u8f93\u5165\u5206\u7c7b\u6a21\u578b\u4e2d\uff0cx\u4e0e\u53c2\u6570\u77e9\u9635\u76f8\u4e58\u3002\\n$$\\nw^{T} \\\\widetilde{x}=w^{T} x+w^{T} \\\\eta\\n$$\\n\u5bf9\u5206\u7c7b\u7ed3\u679c\u7684\u5f71\u54cd\u8fd8\u8981\u53d7\u5230\u6fc0\u6d3b\u51fd\u6570\u7684\u4f5c\u7528\uff0c\u653b\u51fb\u6837\u672c\u7684\u751f\u6210\u8fc7\u7a0b\u5c31\u662f\u8ffd\u6c42\u4ee5\u5fae\u5c0f\u7684\u4fee\u6539\uff0c\u901a\u8fc7\u6fc0\u6d3b\u51fd\u6570\u7684\u4f5c\u7528\uff0c\u5bf9\u5206\u7c7b\u7ed3\u679c\u4ea7\u751f\u6700\u5927\u5316\u7684\u53d8\u5316\u3002Goodfellow\u6307\u51fa\uff0c**\u5982\u679c\u6211\u4eec\u7684\u53d8\u5316\u91cf\u4e0e\u68af\u5ea6\u7684\u53d8\u5316\u65b9\u5411\u5b8c\u5168\u4e00\u81f4**\uff0c\u90a3\u4e48\u5c06\u4f1a\u5bf9\u5206\u7c7b\u7ed3\u679c\u4ea7\u751f\u6700\u5927\u5316\u7684\u53d8\u5316\u3002\\n\\n$$\\n\\\\eta=\\\\operatorname{\\\\epsilon sign}(\\\\operatorname{grad}(w, x, y))\\n$$\\n\u5176\u4e2dsign\u51fd\u6570\u53ef\u4ee5\u4fdd\u8bc1\u53d8\u5316\u91cf\u4e0e\u68af\u5ea6\u51fd\u6570\u65b9\u5411\u4e00\u81f4\u3002\\n\\n\u5f53x\u7684\u7ef4\u6570\u4e3an\u65f6\uff0c\u6a21\u578b\u7684\u53c2\u6570\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5e73\u5747\u503c\u4e3am\uff0c\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5fae\u5c0f\u4fee\u6539\u4e0e\u68af\u5ea6\u51fd\u6570\u65b9\u5411\u4e00\u81f4\uff0c\u7d2f\u8ba1\u7684\u6548\u679c\u4e3a\uff1a\\n$$\\nmn \\\\epsilon\\n$$\\n\u53ef\u89c1\u5f53\u539f\u59cb\u6570\u636e\u7684\u7ef4\u5ea6\u8d8a\u5927\uff0c\u653b\u51fb\u7684\u7d2f\u8ba1\u6548\u679c\u8d8a\u660e\u663e\u3002\u4ee5\u4e00\u4e2a\u66f4\u52a0\u76f4\u89c2\u7684\u4f8b\u5b50\u6765\u8bf4\u660eFGSM\u7684\u539f\u7406\u3002\\n\\n\u5047\u8bbe\u5177\u67092000\u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u6570\u636e\u5177\u67091000\u7ef4\uff0c\u6bcf\u7ef4\u7684\u6570\u636e\u7684\u6570\u503c\u7684\u5927\u5c0f\u90fd\u57280-1\u4e4b\u95f4\u968f\u673a\u751f\u6210\uff0c\u5206\u7c7b\u6807\u7b7e\u53ea\u67092\u79cd\u3002\\n\\n```python\\nimport tensorflow as tf\\nfrom tensorflow.keras import *\\nprint(tf.__version__)\\nprint(tf.test.is_gpu_available())\\nimport sklearn\\nfrom sklearn.preprocessing import MinMaxScaler\\n\\n# feather number\\nn_features = 1000\\nx,y=datasets.make_classification(n_samples=2000,\\n                                 n_features=n_features,\\n                                 n_classes=2,\\n                                 random_state=random_state)\\n# Standardized to 0-1\\nx = MinMaxScaler().fit_transform(x)\\n```\\n\\n\u5206\u7c7b\u6a21\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u8f93\u5165\u5c42\u5927\u5c0f\u4e3a1000\uff0c\u8f93\u51fa\u5c42\u4e3a1\uff0c\u6fc0\u6d3b\u51fd\u6570\u4e3asigmoid\u3002\\n\\n```python\\nmodel = tf.keras.models.Sequential([layers.Dense(1,activation=\'sigmoid\')])\\n```\\n\\nsigmoid\u51fd\u6570\u662f\u975e\u5e38\u7ecf\u5178\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u53d6\u503c\u8303\u56f4\u4e3a0-1\uff0c\u7279\u522b\u9002\u5408\u8868\u793a\u6982\u7387\u5206\u5e03\u3002\\n\\n\u635f\u5931\u51fd\u6570\u4f7f\u7528\u6700\u7b80\u5355\u7684mse\uff0c\u4f18\u5316\u65b9\u5f0f\u4f7f\u7528adam\uff0c\u8003\u6838\u7684\u6307\u6807\u4e3a\u51c6\u786e\u5ea6accuracy\u3002\\n\\n```python\\nmodel.compile(loss=\'mse\',optimizer=\'adam\',metrics=[\'accuracy\'])\\nmodel.fit(  #\u4f7f\u7528model.fit()\u65b9\u6cd5\u6765\u6267\u884c\u8bad\u7ec3\u8fc7\u7a0b\uff0c\\n    x, y, #\u544a\u77e5\u8bad\u7ec3\u96c6\u7684\u8f93\u5165\u4ee5\u53ca\u6807\u7b7e\uff0c\\n    batch_size = 16, #\u6bcf\u4e00\u6279batch\u7684\u5927\u5c0f\u4e3a32\uff0c\\n    epochs = 50, #\u8fed\u4ee3\u6b21\u6570epochs\u4e3a500\\n    validation_split = 0.2, #\u4ece\u6d4b\u8bd5\u96c6\u4e2d\u5212\u520680%\u7ed9\u8bad\u7ec3\u96c6\\n    validation_freq = 10 #\u6d4b\u8bd5\u7684\u95f4\u9694\u6b21\u6570\u4e3a20\\n)\\n```\\n\\n\u6279\u5904\u7406\u5927\u5c0f\u4e3a16\uff0c\u7ecf\u8fc750\u8f6e\u8bad\u7ec3\u3002\\n\\n```python\\nmodel.fit(x_train, y_train, validation_data=(x_val, y_val),\\n          epochs=100)\\n```\\n\\n\u6700\u7ec8\u8bad\u7ec3\u7ed3\u679c\uff0c\u635f\u5931\u503c\u7a33\u5b9a\u57280.015\u5de6\u53f3\uff0c\u51c6\u786e\u5ea6\u4e3a70% \u5de6\u53f3\uff1b\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806123.png)\\n\\n```python\\nmodel.summary()\\n```\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181805986.png)\\n\\n\u7531\u4e8e\u6570\u636e\u662f\u968f\u673a\u751f\u6210\u7684\uff0c\u6211\u4eec\u53d61\u53f7\u4e3e\u4f8b\uff0c\u53ef\u4ee5\u770b\u5230\u6807\u7b7e\u662f0\uff0c\u7ed3\u679c\u4e5f\u662f\u5f88\u63a5\u8fd11\u7684\\n\\n```python\\nimport numpy as np\\nx1 = x[1]\\ny1 = y[1]\\nx1 = np.expand_dims(x1,axis=0)\\ny1_predict = model.predict(x1)\\nprint(y1)\\nprint(y1_predict)\\n\\nOut:\\n0\\n[[0.15540801]]\\n```\\n\\n\u6839\u636e\u516c\u5f0f\uff1a\\n$$\\n\\\\eta=\\\\operatorname{\\\\epsilon sign}(\\\\operatorname{grad}(w, x, y))\\n$$\\n\u6211\u4eec\u77e5\u9053\u4e0b\u4e00\u6b65\u9700\u8981\u8ba1\u7b97\uff1a\u6a21\u578b\u5728x1\u5904\u7684\u68af\u5ea6\uff1a\\n\\n```python\\nx1 = tf.convert_to_tensor(x1)\\nwith tf.GradientTape(persistent=True) as g:\\n  g.watch(x1)\\n  y = model(x1)\\ngradient = g.gradient(y, x1) \\n```\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806077.png)\\n\\n\u63a5\u4e0b\u6765\u8ddf\u7740\u516c\u5f0f\u8fdb\u884c\u8ba1\u7b97\u5373\u53ef\uff1a\\n\\ne\u6211\u4eec\u53d60.1 \u53ef\u4ee5\u8ba4\u4e3a\u5bf9\u539f\u6765\u6539\u53d8\u7684\u5f88\u5c0f\\n\\n```python\\ne = 0.1\\nn = np.sign(gradient)\\nx_ = x1 + n * e\\nprint(model(x_))\\n```\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806027.png)\\n\\n\u53ef\u4ee5\u770b\u5230\u9884\u6d4b\u7684\u7ed3\u679c\u5b8c\u5168\u53d8\u4e86\uff01\\n\\n---\\n\\n#### *Basic & Least-Likely-Class Iterative Methods*\\n\\none step\u65b9\u6cd5\u901a\u8fc7\u5728\u7684\u65b9\u5411\u4e0a\u8fc8\u51fa\u4e00\u5927\u6b65\uff08\u5373\u4e00\u6b65\u68af\u5ea6\u4e0a\u5347\uff09\u589e\u52a0\u5206\u7c7b\u5668\u7684\u635f\u5931\u6765\u6270\u52a8\u56fe\u50cf\u3002\u8fd9\u4e2a\u60f3\u6cd5\u7684\u4e00\u4e2a\u76f4\u89c2\u6269\u5c55\u662f\u8fed\u4ee3\u5730\u91c7\u53d6\u591a\u4e2a\u5c0f\u6b65\u9aa4\u540c\u65f6\u8c03\u6574\u6bcf\u4e00\u6b65\u540e\u7684\u65b9\u5411\u3002\u57fa\u672c\u8fed\u4ee3\u6cd5\uff08BIM\uff09[35]\u6b63\u662f\u8fd9\u6837\u505a\u7684\uff0c\u5e76\u4e14\u8fed\u4ee3\u8ba1\u7b97\u5982\u4e0b\uff1a\\n$$\\n\\\\mathbf{I}_{\\\\rho}^{i+1}=\\\\operatorname{Clip}_{\\\\epsilon}\\\\left\\\\{\\\\mathbf{I}_{\\\\rho}^{i}+\\\\alpha \\\\operatorname{sign}\\\\left(\\\\nabla \\\\mathcal{J}\\\\left(\\\\boldsymbol{\\\\theta}, \\\\mathbf{I}_{\\\\rho}^{i}, \\\\ell\\\\right)\\\\right\\\\}\\\\right.\\n$$\\n$\\\\mathbf{I}_{\\\\rho}^{i}$\u8868\u793a\u7b2ci\u6b21\u8fed\u4ee3\u65f6\u7684\u6270\u52a8\u56fe\u50cf\uff0cClip \u5c31\u662f\u526a\u6389\u53d8\u5316\u8fc7\u5927\u7684\u90e8\u5206\uff1b\\n\\nBIM\u7b97\u6cd5\u4ece$\\\\mathbf{I}_{\\\\rho}^{0}=\\\\mathbf{I}_{c}$\u5f00\u59cb\uff0c\u6309\u7167\u516c\u5f0f$\\\\lfloor\\\\min (\\\\epsilon+4,1.25 \\\\epsilon)\\\\rfloor$**\u786e\u5b9a\u7684\u8fed\u4ee3\u6b21\u6570\u8fd0\u884c**\u3002Madry\u7b49\u4eba[55]\u6307\u51fa\uff0cBIM\u7b49\u4ef7\u4e8e\u6295\u5f71\u68af\u5ea6\u4e0b\u964d\uff08PGD\uff09\u7684$\\\\ell_{\\\\infty}$\u7248\u672c\uff0cPGD\u662f\u4e00\u79cd\u6807\u51c6\u7684\u51f8\u4f18\u5316\u65b9\u6cd5\u3002\\n\\n\u4e0e\u5c06FGSM\u6269\u5c55\u5230 \u201c**\u4e00\u6b65\u76ee\u6807\u7c7b**\u201d \u53d8\u4f53\u7c7b\u4f3c\uff08\u901a\u8fc7\u8fed\u4ee3\u7684\u65b9\u5f0f\u4f7f\u5f97\u56fe\u50cf\u7684\u8bc6\u522b\u8d8b\u8fd1\u4e8e\u67d0\u4e00\u4e2a\u7c7b\u522b\uff09\uff0cKurakin\u7b49\u4eba[35]\u4e5f\u5c06BIM\u6269\u5c55\u5230\u8fed\u4ee3\u6700\u5c0f\u53ef\u80fd\u7c7b\u65b9\u6cd5\uff08ILCM\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7528\u5206\u7c7b\u5668\u9884\u6d4b\u7684**\u6700\u4e0d\u53ef\u80fd\u7c7b\u7684\u76ee\u6807\u6807**\u7b7e$l_{target}$\u66ff\u6362\u4e2d\u7684\u56fe\u50cf\u7684\u6807\u7b7e$l$\u3002\\n\\nILCM\u65b9\u6cd5\u751f\u6210\u7684\u5bf9\u6297\u6027\u793a\u4f8b\u5df2\u88ab\u8bc1\u660e\u4e25\u91cd\u5f71\u54cd\u4e86\u5206\u7c7b\u7684\u7cbe\u5ea6\uff0c\u5373\u4f7f\u03b5\u7684\u503c\u975e\u5e38\u5c0f\uff0c\u4f8b\u5982<16\u3002\\n\\nILCM\u7684\u5b9e\u73b0\u8fc7\u7a0b\u53ef\u4ee5\u8bf4\u4e0eFGSM\u5982\u51fa\u4e00\u8f99\uff0c\u533a\u522b\u5c31\u5728\u4e8e\u8fed\u4ee3\u7684\u6b21\u6570\u548c\u8bf1\u5bfc\u5206\u7c7b\u5668\u9884\u6d4b\u7684\u76ee\u6807\u6807\u7b7e\u4e0d\u540c\uff1b\\n\\n####  *3.1.4 Jacobian-based Saliency Map Attack (JSMA)*\\n\\n\u76ee\u524d\u901a\u8fc7\u9650\u5236$\\\\ell_{\\\\infty}$ \u6216\u8005 $\\\\ell_{2}$ -norms\u6765\u5b9e\u73b0\u5bf9\u7f51\u7edc\u6270\u52a8\u7684\u60c5\u51b5\u6bd4\u8f83\u5e38\u89c1\uff1bPapernot\u7b49\u4eba[60]\u4e5f\u901a\u8fc7\u9650\u5236\u6270\u52a8\u7684$l_0$\u8303\u6570\u6765\u5236\u9020\u5bf9\u6297\u6027\u653b\u51fb\u3002\u8fd9\u610f\u5473\u7740\u76ee\u6807\u662f\u53ea\u4fee\u6539\u56fe\u50cf\u4e2d\u7684\u51e0\u4e2a\u50cf\u7d20\uff0c\u800c\u4e0d\u662f\u5e72\u6270\u6574\u4e2a\u56fe\u50cf\u6765\u6b3a\u9a97\u5206\u7c7b\u5668\u3002\u4ed6\u4eec\u751f\u6210\u6240\u9700\u5bf9\u6297\u56fe\u50cf\u7684\u7b97\u6cd5\u5173\u952e\u5982\u4e0b:\\n\\n- \u8be5\u7b97\u6cd5\u4e00\u6b21\u4fee\u6539\u4e00\u4e2a\u5e72\u51c0\u56fe\u50cf\u7684\u50cf\u7d20\uff0c\u5e76\u76d1\u63a7\u53d8\u5316\u5bf9\u7ed3\u679c\u5206\u7c7b\u7684\u5f71\u54cd\u3002\\n- \u901a\u8fc7\u4f7f\u7528\u7f51\u7edc\u5c42\u7684\u8f93\u51fa\u7684\u68af\u5ea6\u8ba1\u7b97\u663e\u8457\u6027\u56fe(computing a saliency map)\u6765\u6267\u884c\u76d1\u89c6\u3002\\n\\n\u5728map\u4e2d\uff0c\u8f83\u5927\u7684\u503c\u8868\u793a\u53ef\u4ee5\u6210\u529f\u611a\u5f04\u7f51\u7edc\u5c06$l_{target}$\u9884\u6d4b\u4e3a\\"\u4fee\u6539\u56fe\u50cf\\"\u7684\u6807\u7b7e\u800c\u4e0d\u662f\u539f\u59cb\u6807\u7b7e$l$\u7684\u53ef\u80fd\u6027\u8f83\u9ad8\u3002\u4e00\u65e6map\u88ab\u8ba1\u7b97\u51fa\u6765\uff0c\u7b97\u6cd5\u5c31\u4f1a\u9009\u62e9\u6700\u6709\u6548\u7684\u50cf\u7d20\u6765\u6b3a\u9a97\u7f51\u7edc\u5e76\u6539\u53d8\u5b83\u3002\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u654c\u5bf9\u56fe\u50cf\u4e2d\u5141\u8bb8\u7684\u6700\u5927\u50cf\u7d20\u6570\u88ab\u6539\u53d8\uff0c\u6216\u8005\u611a\u5f04\u6210\u529f\u3002\\n\\n#### *3.1.5 One Pixel Attack*\\n\\n\u5bf9\u6297\u653b\u51fb\u7684\u4e00\u4e2a\u6781\u7aef\u60c5\u51b5\u662f\uff0c\u53ea\u6539\u53d8\u56fe\u50cf\u4e2d\u7684\u4e00\u4e2a\u50cf\u7d20\u4ee5\u6b3a\u9a97\u5206\u7c7b\u5668\u3002\u6709\u8da3\u7684\u662f\uff0cSu\u7b49\u4eba[68]\u58f0\u79f0\uff0c\u572870.97%\u7684\u6d4b\u8bd5\u56fe\u50cf\u4e0a\uff0c\u901a\u8fc7\u6539\u53d8\u6bcf\u5e45\u56fe\u50cf\u7684\u4e00\u4e2a\u50cf\u7d20\uff0c\u6210\u529f\u5730\u611a\u5f04\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u7f51\u7edc\u6a21\u578b\u3002\u4ed6\u4eec\u8fd8\u62a5\u544a\u8bf4\uff0c\u7f51\u7edc\u5bf9\u9519\u8bef\u6807\u7b7e\u7684\u5e73\u5747\u7f6e\u4fe1\u5ea6\u4e3a97.47%\u3002\\n\\nSu\u7b49\u4eba\u5229\u7528\uff08Differential Evolution\uff09\u5dee\u5f02\u8fdb\u5316\u7684\u6982\u5ff5\u8ba1\u7b97\u4e86\u5bf9\u6297\u6027\u4f8b\u5b50[148]\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5e72\u51c0\u7684\u56fe\u50cf\uff0c\u4ed6\u4eec\u9996\u5148\u5728$\\\\mathbb{R}^{5}$\u4e2d\u521b\u5efa\u4e86\u4e00\u7ec4400\u4e2a\u5411\u91cf\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5411\u91cf\u5305\u542bxy\u5750\u6807\uff1b\u7136\u540e\u7ed9\u8fd9\u4e9b\u5411\u91cf\u968f\u673a\u7684RGB\u3002\\n\\n\u7136\u540e\uff0c\u4ed6\u4eec\u968f\u673a\u4fee\u6539\u5411\u91cf\u7684\u5143\u7d20\u6765\u521b\u5efa\u5b50\u5bf9\u8c61\uff0c\u4f7f\u5f97\u5b50\u5bf9\u8c61\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u4e0e\u5176\u7236\u5bf9\u8c61\u7ade\u4e89\u9002\u5e94\u5ea6\uff08fitness criterion\uff09\uff0c\u540c\u65f6\u4f7f\u7528\u7f51\u7edc\u7684\u6982\u7387\u9884\u6d4b\u6807\u7b7e\u4f5c\u4e3a\u9002\u5e94\u5ea6\u51c6\u5219\u3002\u6700\u540e\u5e78\u5b58\u7684\u5b50\u5bf9\u8c61\u7528\u4e8e\u6539\u53d8\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u3002\\n\\n\u5373\u4f7f\u8fd9\u6837\u4e00\u4e2a\u7b80\u5355\u7684\u8fdb\u5316\u7b56\u7565\uff0cSu\u7b49\u4eba[68]\u4e5f\u80fd\u6210\u529f\u5730\u611a\u5f04\u4e86\u6df1\u5c42\u7f51\u7edc\u3002\u6ce8\u610f\uff0c\u5dee\u5206\u8fdb\u5316\u4f7f\u4ed6\u4eec\u7684\u65b9\u6cd5\u80fd\u591f\u4ea7\u751f\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\uff0c\u800c\u4e0d\u9700\u8981\u83b7\u5f97\u4efb\u4f55\u5173\u4e8e\u7f51\u7edc\u53c2\u6570\u503c\u6216\u5176\u68af\u5ea6\u7684\u4fe1\u606f\u3002\u4ed6\u4eec\u7684\u6280\u672f\u9700\u8981\u7684\u552f\u4e00\u8f93\u5165\u662f\u76ee\u6807\u6a21\u578b\u9884\u6d4b\u7684\u6982\u7387\u6807\u7b7e\u3002\u8ba9\u5c31\u662f\u8bf4\u8fd9\u79cd\u653b\u51fb\u7684\u65b9\u6cd5\u5c5e\u4e8e**\u9ed1\u76d2\u653b\u51fb**\uff1b\\n\\n#### *3.1.6 Carlini and Wagner Attacks (C&W)*\\n\\n\u5361\u91cc\u5c3c\u548c\u74e6\u683c\u7eb3[36]\u63d0\u51fa\u4e86\u4e00\u7cfb\u5217\u7684\u4e09\u6b21\u5bf9\u6297\u6027\u653b\u51fb\uff0c\u8fd9\u662f\u5728\u5bf9\u6297\u6027\u5e72\u6270[38]\u7684\u9632\u5fa1\u5347\u534e\u4e4b\u540e\u63d0\u51fa\u7684\u3002\u8fd9\u4e9b\u653b\u51fb\u901a\u8fc7\u9650\u5236\u6270\u52a8\u7684$\\\\ell_{2}$\u3001$\\\\ell_{\\\\infty}$\u548c$\\\\ell_{0}$\u8303\u6570\u4f7f\u6270\u52a8\u5177\u6709\u51c6\u4e0d\u53ef\u5bdf\u89c9\u6027\uff0c\u5e76\u4e14\u8bc1\u660e\u4e86\u9488\u5bf9\u76ee\u6807\u7f51\u7edc\u7684\u9632\u5fa1\u84b8\u998f\u51e0\u4e4e\u5b8c\u5168\u4e0d\u80fd\u62b5\u6297\u8fd9\u4e9b\u653b\u51fb\u3002\u6b64\u5916\uff0c\u672c\u6587\u8fd8\u8bc1\u660e\u4e86\u5229\u7528\u4e0d\u5b89\u5168\uff08\u672a\u84b8\u998f\uff09\u7f51\u7edc\u751f\u6210\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u53ef\u4ee5\u5f88\u597d\u5730\u8f6c\u79fb\u5230\u5b89\u5168\uff08\u84b8\u998f\uff09\u7f51\u7edc\uff0c\u8fd9\u4f7f\u5f97\u8ba1\u7b97\u51fa\u7684\u6270\u52a8\u9002\u5408\u4e8e\u9ed1\u76d2\u653b\u51fb\u3002\\n\\n\u7136\u800c\u66f4\u5e38\u89c1\u7684\u662f\u5229\u7528\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u53ef\u8f6c\u79fb\u6027\u6765\u751f\u6210\u9ed1\u76d2\u653b\u51fb\uff0cChen\u7b49\u4eba[41]\u8fd8\u63d0\u51fa\u4e86\u57fa\u4e8e\u201c\u96f6\u9636\u4f18\u5316\uff08ZOO\uff09\u201d\u7684\u653b\u51fb\uff0c\u76f4\u63a5\u4f30\u8ba1\u76ee\u6807\u6a21\u578b\u7684\u68af\u5ea6\u6765\u751f\u6210\u5bf9\u6297\u6027\u4f8b\u5b50\u3002\u8fd9\u4e9b\u653b\u51fb\u7684\u7075\u611f\u6765\u81eaC&W\u653b\u51fb\u3002\\n\\n---\\n\\n\u8865\u5145\u8bf4\u660e\uff1aC&W\u653b\u51fb\\n\\n#### *3.1.7 DeepFool*\\n\\nMoosavi-dezfouli\u7b49\u4eba[72]\u63d0\u51fa\u4e86\u4e00\u4e2a\u8fed\u4ee3\u8ba1\u7b97\u6700\u5c0f\u8303\u6570\u5bf9\u6297\u6027\u6270\u52a8\u7684\u65b9\u6cd5\u3002DeepFool\u7528\u5e72\u51c0\u7684\u56fe\u50cf\u521d\u59cb\u5316\uff0c\u8be5\u56fe\u50cf\u88ab\u5047\u5b9a\u4f4d\u4e8e\u7531\u5206\u7c7b\u5668\u7684\u51b3\u7b56\u8fb9\u754c\u9650\u5b9a\u7684\u533a\u57df\u4e2d\u3002\u8fd9\u4e2a\u533a\u57df\u51b3\u5b9a\u4e86\u56fe\u50cf\u7684\u7c7b\u6807\u7b7e\u3002At each iteration, the algorithm perturbs the image by a small vector that is computed to take the resulting image to the boundary of the polyhydron that is obtained by linearizing the boundaries of the region within which the image resides.\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u6dfb\u52a0\u5230\u56fe\u50cf\u4e0a\u7684\u6270\u52a8\u88ab\u7d2f\u52a0\uff0c\u4e00\u65e6\u6270\u52a8\u56fe\u50cf\u6839\u636e\u7f51\u7edc\u7684\u539f\u59cb\u51b3\u7b56\u754c\u6539\u53d8\u5176\u6807\u7b7e\uff0c\u5c31\u8ba1\u7b97\u51fa\u6700\u7ec8\u7684\u6270\u52a8\u3002\u4f5c\u8005\u8bc1\u660e\u4e86DeepFool\u7b97\u6cd5\u80fd\u591f\u8ba1\u7b97\u51fa\u6bd4FGSM[23]\u8ba1\u7b97\u7684\u6270\u52a8\u8303\u6570\u66f4\u5c0f\u7684\u6270\u52a8\uff0c\u540c\u65f6\u5177\u6709\u76f8\u4f3c\u7684\u611a\u5f04\u7387\u3002\\n\\n\u5b9e\u73b0\u8fc7\u7a0b\u4e0eFGSM\u4e5f\u662f\u6bd4\u8f83\u7c7b\u4f3c\u7684\uff1b\\n\\n\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e0bDeep Fool\u7b97\u6cd5\u548cFGSM\u7b97\u6cd5\u53bb\u653b\u51fb\u540c\u4e00\u4e2a\u56fe\u50cf\u4fee\u6539\u91cf\u7684\u5bf9\u6bd4\u56fe\uff1a\\n\\n![](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806643.png)\\n\\n\u53ef\u4ee5\u770b\u5230Deep Fool\u7684\u4fee\u6539\u91cf\u660e\u663e\u7684\u8981\u5c0f\u4e8eFGSM\uff1b\\n\\n\u9664\u4e86\u8fed\u4ee3\u73af\u8282\uff0cDeepFool\u4e0eFGSM\u7684\u7b97\u6cd5\u5b8c\u5168\u76f8\u540c\u3002\u5728\u8fed\u4ee3\u73af\u8282\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7NumPy\u7684inalg.norm\u51fd\u6570\u5bf9\u68af\u5ea6\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u8fed\u4ee3\u66f4\u65b0\u56fe\u7247\u5185\u5bb9\u3002\\n\\n```python\\n# Deep Fool \u653b\u51fb\u4ee3\u7801\u7684\u8fed\u4ee3\\nwhile cost < 0.6:\\n  cost,gradients = grab_cost_and_gradients_from_model([hacked_image,0])\\n  r= gradients*cost/pow(np.linalg.norm(gradients), 2)\\n  hacked_image +=r\\n  hacked_image = np.clip(hacked_image, max_change_below, max_change_above)\\n  hacked_image = np.clip(hacked_image, -1.0, 1.0)\\n  \\n# FGSM\u7b97\u6cd5\u7684\u8fed\u4ee3\\n\\nwhile cost < 0.60:\\n\\tcost, gradients = grab_cost_and_gradients_from_model([hacked_image, 0])\\n\\tn=np.sign(gradients)\\n\\thacked_image +=n*e\\n\\thacked_image = np.clip(hacked_image, max_change_below, max_change_above)\\n\\thacked_image = np.clip(hacked_image, -1.0, 1.0)\\n  \\n```\\n\\n#### *3.1.8 Universal Adversarial Perturbations*\\n\\n\u200b\\t\u7136\u800c\u50cfFGSM[23]\u3001ILCM[35]\u3001Deep-Fool[72]\u7b49\u65b9\u6cd5\u8ba1\u7b97\u6270\u52a8\u6765\u611a\u5f04\u5355\u4e2a\u56fe\u50cf\u4e0a\u7684\u7f51\u7edc\uff0cMoosavi Dezfouli\u7b49\u4eba[16]\u8ba1\u7b97\u7684\u201c\u666e\u904d\u201d\u5bf9\u6297\u6270\u52a8\u80fd\u591f\u4ee5\u9ad8\u6982\u7387\u611a\u5f04\u201c\u4efb\u4f55\u201d\u7f51\u7edc\u3002\u5982\u56fe1\u6240\u793a\uff0c\u8fd9\u4e9b\u56fe\u50cf\u4e0d\u53ef\u77e5\u7684\u6270\u52a8\u5bf9\u4e8e\u4eba\u7c7b\u89c6\u89c9\u7cfb\u7edf\u6765\u8bf4\u4ecd\u7136\u662f\u51c6\u4e0d\u53ef\u5bdf\u89c9\u7684\u3002\u4e3a\u4e86\u6b63\u5f0f\u5b9a\u4e49\u8fd9\u4e9b\u6270\u52a8\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u5e72\u51c0\u7684\u56fe\u50cf\u662f\u4ece\u5206\u5e03$\\\\Im_{c}$\u91c7\u6837\u7684\u3002\u5982\u679c\u6270\u52a8\u03c1\u6ee1\u8db3\u4ee5\u4e0b\u7ea6\u675f\u6761\u4ef6\uff0c\u5219\u5b83\u662f\u201c\u666e\u9002\u7684\u201d\uff1a\\n$$\\n\\\\underset{\\\\mathbf{I}_{c} \\\\sim \\\\Im_{c}}{\\\\mathrm{P}}\\\\left(\\\\mathcal{C}\\\\left(\\\\mathbf{I}_{c}\\\\right) \\\\neq \\\\mathcal{C}\\\\left(\\\\mathbf{I}_{c}+\\\\boldsymbol{\\\\rho}\\\\right)\\\\right) \\\\geq \\\\delta \\\\text { s.t. }\\\\|\\\\boldsymbol{\\\\rho}\\\\|_{p} \\\\leq \\\\xi\\n$$\\n\u5176\u4e2d$P(.)$\u8868\u793a\u6982\u7387\uff0c$\\\\delta \\\\in(0,1]$\u8868\u793a\u611a\u5f04\u6bd4\u7387\uff0c$\\\\|.\\\\|_{p}$\u8868\u793a$\\\\ell_{p}$\u8303\u6570\uff0c$\\\\xi,$\u662f\u9884\u5b9a\u4e49\u7684\u53c2\u6570\u3002$\\\\xi,$\u503c\u8d8a\u5c0f\uff0c\u5c31\u8d8a\u96be\u5bdf\u89c9\u56fe\u50cf\u4e2d\u7684\u6270\u52a8\u3002\u4e25\u683c\u5730\u8bf4\uff0c\u6ee1\u8db3\u4e0a\u8ff0\u516c\u5f0f\u7684\u6270\u52a8\u5e94\u79f0\u4e3a$(\\\\delta, \\\\xi)$ -universal \uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u4e0a\u8ff0\u53c2\u6570\u6709\u5f88\u5f3a\u7684\u4f9d\u8d56\u6027\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u6270\u52a8\u5728\u6587\u732e\u4e2d\u901a\u5e38\u88ab\u79f0\u4e3a\u666e\u904d\u7684\u5bf9\u6297\u6027\u6270\u52a8\uff08universal adversarial pertur- bations\uff09\u3002\\n\\n\u4f5c\u8005\u901a\u8fc7\u9650\u5236 $\\\\ell_{2}$\u8303\u6570\u548c$\\\\ell_{\\\\infty}$\u8303\u6570\u8ba1\u7b97\u4e86universal perturbations \uff0c\u7ed3\u679c\u8868\u660e\uff0c\u5bf9\u4e8e\u6700\u5148\u8fdb\u7684\u56fe\u50cf\u5206\u7c7b\u5668\uff0c\u5176\u8303\u6570\u4e0a\u754c\u4e3a\u5404\u81ea\u56fe\u50cf\u8303\u6570\u76844%\u7684\u6270\u52a8\uff0c\u8fd9\u6837\u7684\u6270\u52a8\u5df2\u7ecf\u8fbe\u5230\u4e86\u7ea60.8\u6216\u7740\u66f4\u9ad8\u7684\u611a\u5f04\u7387\u3002\u4ed6\u4eec\u8ba1\u7b97\u6270\u52a8\u7684\u8fed\u4ee3\u65b9\u6cd5\u4e0eDeepFool\u7b56\u7565[72]\u6709\u5173\uff0c\u8be5\u7b56\u7565\u5c06\u6570\u636e\u70b9\uff08\u5373\u56fe\u50cf\uff09\u9010\u6e10\u63a8\u5230\u5176\u7c7b\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u7136\u800c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u6240\u6709\u201d\u8bad\u7ec3\u6570\u636e\u70b9\u88ab\u4f9d\u6b21\u63a8\u5230\u5404\u81ea\u7684\u51b3\u7b56\u8fb9\u754c\uff0c\u5e76\u4e14\u901a\u8fc7\u6bcf\u6b21\u5c06\u7d2f\u52a0\u5668\u5411\u540e\u6295\u5f71\u5230\u534a\u5f84 $\\\\xi$\u7684\u6240\u9700$\\\\ell_{p}$\u7403\uff0c\u5728\u6240\u6709\u56fe\u50cf\u4e0a\u8ba1\u7b97\u7684\u6270\u52a8\u88ab\u9010\u6e10\u7d2f\u79ef\u3002\\n\\nMoosavi Dezfouli\u7b49\u4eba[16]\u63d0\u51fa\u7684\u7b97\u6cd5\u5728\u9488\u5bf9\u5355\u4e2a\u7f51\u7edc\u6a21\u578b\u65f6\u8ba1\u7b97\u6270\u52a8\uff0c\u4f8b\u5982ResNet[147]\u3002\u8fd9\u4e9b\u6270\u52a8\u4e5f\u53ef\u4ee5\u5f88\u597d\u5730\u63a8\u5e7f\u5230\u4e0d\u540c\u7684\u7f51\u7edc\uff08\u7279\u522b\u662f\u5177\u6709\u76f8\u4f3c\u7ed3\u6784\u7684\u7f51\u7edc\uff09\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u4f5c\u8005\u58f0\u79f0\u6270\u52a8\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u201c**\u53cc\u91cd\u666e\u904d\u7684**\u201d\u3002\u6b64\u5916\uff0c\u9ad8\u611a\u5f04\u7387\u53ea\u4f7f\u7528\u5927\u7ea62000\u5f20\u8bad\u7ec3\u56fe\u50cf\u6765\u5b66\u4e60\u6270\u52a8\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\u3002\\n\\nKhrulkov\u7b49\u4eba[190]\u8fd8\u63d0\u51fa\u4e86\u4e00\u79cd\u5c06\u666e\u904d\u5bf9\u6297\u6027\u6270\u52a8\u6784\u9020\u4e3a\u7f51\u7edc\u7279\u5f81\u6620\u5c04\u7684\u96c5\u53ef\u6bd4\u77e9\u9635\u5947\u5f02\u5411\u91cf\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5141\u8bb8\u4ec5\u4f7f\u7528\u5c11\u91cf\u56fe\u50cf\u83b7\u5f97\u76f8\u5bf9\u8f83\u9ad8\u7684\u6b3a\u9a97\u7387\u3002\u53e6\u4e00\u79cd\u4ea7\u751f\u666e\u904d\u6270\u52a8\u7684\u65b9\u6cd5\u662fMopuri\u7b49\u4eba[135]\u63d0\u51fa\u7684\u5feb\u901f\u7279\u5f81\u611a\u5f04\u3002\u4ed6\u4eec\u7684\u65b9\u6cd5\u4ea7\u751f\u4e86\u4e0e\u6570\u636e\u65e0\u5173\u7684\u666e\u904d\u6270\u52a8\u3002\\n\\n#### *3.1.9 UPSET and ANGRI*\\n\\n\u200b\\tSarkar\u7b49\u4eba[146]\u63d0\u51fa\u4e86\u4e24\u79cd\u9ed1\u76d2\u653b\u51fb\u7b97\u6cd5\uff0c\u5373 UPSET: Universal Perturbations for Steering to Exact Targets, \u548cANGRI: Antagonistic Network for Generating Rogue Images \u6709\u9488\u5bf9\u6027\u5730\u611a\u5f04\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u3002\u5bf9\u4e8e\u201cn\u201d\u7c7b\uff0cUPSET\u5bfb\u6c42\u4ea7\u751f\u201cn\u201d\u56fe\u50cf\u4e0d\u53ef\u77e5\u6270\u52a8\uff0c\u8fd9\u6837\u5f53\u6270\u52a8\u88ab\u6dfb\u52a0\u5230\u4e0d\u5c5e\u4e8e\u76ee\u6807\u7c7b\u7684\u56fe\u50cf\u65f6\uff0c\u5206\u7c7b\u5668\u5c06\u6270\u52a8\u56fe\u50cf\u5206\u7c7b\u4e3a\u6765\u81ea\u8be5\u7c7b\u3002UPSET\u7684\u6548\u679c\u6765\u81ea\u4e00\u4e2aresidual generating network $\\\\mathrm{R}(.),$ \u5b83\u5c06\u76ee\u6807\u7c7b\u201ct\u201d\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u6270\u52a8$\\\\mathrm{R}(\\\\mathrm{t})$ \u4ee5\u4f9b\u611a\u5f04\u3002\u6574\u4f53\u65b9\u6cd5\u4f7f\u7528\u6240\u8c13\u7684UPSET- network\u89e3\u51b3\u4ee5\u4e0b\u4f18\u5316\u95ee\u9898\uff1a\\n$$\\n\\\\mathbf{I}_{\\\\boldsymbol{\\\\rho}}=\\\\max \\\\left(\\\\min \\\\left(s \\\\mathbf{R}(\\\\mathbf{t})+\\\\mathbf{I}_{c}, 1\\\\right),-1\\\\right)\\n$$\\n\\n\u5176\u4e2d\uff0c$\\\\mathbf{I}_{c}$\u4e2d\u7684\u50cf\u7d20\u503c\u88ab\u6807\u51c6\u5316\u5728[-1,1]\u4e4b\u95f4\uff0c\u5e76\u4e14$s^{\\\\prime}$\u662f\u6807\u91cf. \u4e3a\u786e\u4fdd\u4e3a\u6709\u6548\u56fe\u50cf\uff0c\u5c06\u526a\u88c1\u95f4\u9694[-1,1]\u4e4b\u5916\u7684\u6240\u6709\u503c\u3002\u4e0e\u56fe\u50cf\u4e0d\u53ef\u77e5\u7684UPSET\u76f8\u6bd4\uff0cANGRI\u4ee5\u4e00\u79cd\u5bc6\u5207\u76f8\u5173\u7684\u65b9\u5f0f\u8ba1\u7b97\u56fe\u50cf\u7279\u5b9a\u7684\u6270\u52a8. ANGRI\u4ea7\u751f\u7684\u6270\u52a8\u4e5f\u88ab\u7528\u4e8e\u6709\u9488\u5bf9\u6027\u7684\u611a\u5f04\u3002\u636e\u62a5\u9053\uff0c\u8fd9\u4e24\u79cd\u7b97\u6cd5\u5728MNIST[10]\u548cCIFAR-10[152]\u6570\u636e\u96c6\u4e0a\u90fd\u5b9e\u73b0\u4e86\u9ad8\u611a\u5f04\u7387\u3002\u6bcf\u4e00\u79cd\u7b97\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u6211\u4f1a\u5728\u63a5\u4e0b\u6765\u7684\u5176\u4ed6\u6587\u7ae0\u4e2d\u9010\u4e2a\u8fdb\u884c\u4ecb\u7ecd\uff1b\\n\\n#### *3.1.10 Houdini*\\n\\n\u200b\\tCisse\u7b49\u4eba[131]\u63d0\u51fa\u4e86\u201cHoudini\u201d\uff0c\u8fd9\u662f\u4e00\u79cd\u901a\u8fc7\u751f\u6210\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u6765\u611a\u5f04 \\"\u57fa\u4e8e\u68af\u5ea6\u5b66\u4e60\u7684\u7b97\u6cd5\\"\u3002\u5bf9\u6297\u6027\u4f8b\u5b50\u53ef\u4ee5\u6839\u636e\u4efb\u52a1\u635f\u5931\u8fdb\u884c\u8c03\u6574\u3002\u4ea7\u751f\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u5178\u578b\u7b97\u6cd5\u91c7\u7528\u7f51\u7edc\u53ef\u5fae\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u6765\u8ba1\u7b97\u6270\u52a8\u3002\u7136\u800c\uff0c\u4efb\u52a1\u635f\u5931\u901a\u5e38\u4e0d\u9002\u5408\u8fd9\u79cd\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u8bed\u97f3\u8bc6\u522b\u7684\u4efb\u52a1\u635f\u5931\u662f\u57fa\u4e8e\u5b57\u9519\u8bef\u7387\u7684\uff0c\u8fd9\u4e0d\u5141\u8bb8\u76f4\u63a5\u5229\u7528\u635f\u5931\u51fd\u6570\u68af\u5ea6\u3002Houdini\u662f\u4e13\u95e8\u4e3a\u6b64\u7c7b\u4efb\u52a1\u751f\u6210\u5bf9\u6297\u6027\u793a\u4f8b\u7684\u3002\u9664\u4e86\u53ef\u4ee5\u6210\u529f\u751f\u6210\u653b\u51fb\u5206\u7c7b\u7b97\u6cd5\u7684\u654c\u5bf9\u56fe\u50cf\u5916\uff0cHoudini\u8fd8\u88ab\u8bc1\u660e\u6210\u529f\u653b\u51fb\u4e86\u6d41\u884c\u7684\u81ea\u52a8\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf[151]. \u4f5c\u8005\u8fd8\u901a\u8fc7\u5728\u9ed1\u76d2\u653b\u51fb\u573a\u666f\u4e2d\u611a\u5f04google voice\uff0c\u8bc1\u660e\u4e86\u8bed\u97f3\u8bc6\u522b\u4e2d\u653b\u51fb\u7684\u53ef\u8f6c\u79fb\u6027\u3002\u6b64\u5916\uff0c\u6210\u529f\u7684\u76ee\u6807\u653b\u51fb\u548c\u975e\u76ee\u6807\u653b\u51fb\u4e5f\u8bc1\u660e\u4e86\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u4eba\u4f53\u59ff\u6001\u4f30\u8ba1\u3002\\n\\n#### *3.1.11 Adversarial Transformation Networks (ATNs)*\\n\\n\u200b\\tBaluja\u548cFischer[42]\u8bad\u7ec3\u4e86\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff08feed-forward neural net- works\uff09\uff0c\u7528\u4e8e\u751f\u6210\u5bf9\u6297\u5176\u4ed6\u76ee\u6807\u7f51\u7edc\u6216\u7f51\u7edc\u96c6\u7684\u5bf9\u6297\u6027\u793a\u4f8b\u3002\u8bad\u7ec3\u7f51\u7edc\u5c31\u53eb\u505aAdversarial Transformation Networks (ATNs).  \u901a\u8fc7\u6700\u5c0f\u5316\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u7684\u8054\u5408\u635f\u5931\u51fd\u6570\uff0c\u8ba1\u7b97\u4e86\u8fd9\u4e9b\u7f51\u7edc\u4ea7\u751f\u7684\u5bf9\u6297\u6027\u4f8b\u5b50; \u7b2c\u4e00\u90e8\u5206\u9650\u5236\u5bf9\u6297\u793a\u4f8b\u4e0e\u539f\u59cb\u56fe\u50cf\u5177\u6709\u611f\u77e5\u76f8\u4f3c\u6027\uff0c\u800c\u7b2c\u4e8c\u90e8\u5206\u65e8\u5728\u6539\u53d8\u76ee\u6807\u7f51\u7edc\u5bf9\u7ed3\u679c\u56fe\u50cf\u7684\u9884\u6d4b\u3002\\n\\n\u6cbf\u7740\u76f8\u540c\u7684\u65b9\u5411\uff0cHayex\u548cDanezis[47]\u8fd8\u4f7f\u7528attacker neural network \u6765\u5b66\u4e60\u9ed1\u5323\u5b50\u653b\u51fb\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u3002\u5728\u7ed9\u51fa\u7684\u7ed3\u679c\u4e2d\uff0cattacker neural network\u8ba1\u7b97\u7684\u793a\u4f8b\u4e0e\u5e72\u51c0\u7684\u56fe\u50cf\u5728\u672c\u8d28\u4e0a\u4e0d\u53ef\u533a\u5206\uff0c\u4f46\u5b83\u4eec\u88ab\u76ee\u6807\u7f51\u7edc\u4ee5\u538b\u5012\u6027\u7684\u6982\u7387\u9519\u8bef\u5206\u7c7b-\u5728MNIST\u6570\u636e[10]\u4e0a\u5c06\u5206\u7c7b\u7cbe\u5ea6\u4ece99.4%\u964d\u4f4e\u52300.77%\uff0c\u5728CIFAR-10\u6570\u636e\u96c6[152]\u4e0a\u5c06\u5206\u7c7b\u7cbe\u5ea6\u4ece91.4%\u964d\u4f4e\u52306.8%\u3002\\n\\n#### *3.1.12 Miscellaneous Attacks*\\n\\n\u8fd9\u91cc\u8bba\u6587\u91cc\u5217\u4e3e\u7684\u5b9e\u5728\u592a\u591a\u4e86\uff0c\u5c31\u4ee5\u8bba\u6587\u4e2d\u7684\u8868\u683c\u6765\u6982\u62ec\u5427\uff1b\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806370.png)\\n\\n\u8868\u683c\u4e2d4\u661f\u4ee5\u4e0a\u7684\u653b\u51fb\u65b9\u6cd5\uff0c\u4e4b\u540e\u5e94\u8be5\u90fd\u4f1a\u51fa\u4e13\u95e8\u7684\u6587\u7ae0\u8fdb\u884c\u5b66\u4e60\u548c\u4ecb\u7ecd\u7684\uff0c\u4e5f\u5305\u62ec\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u4ee3\u7801\u5b9e\u73b0\uff1b\\n\\n### **3.2 Attacks beyond classification/recognition**\\n\\n\u200b\\t\u9664\u4e86Houdini[131]\u4e4b\u5916\uff0c\u7b2c3.1\u8282\u4e2d\u56de\u987e\u7684\u6240\u6709\u4e3b\u6d41\u653b\u51fb\u90fd\u76f4\u63a5\u96c6\u4e2d\u5728\u5206\u7c7b\u4efb\u52a1\u4e0a\u2014\u2014\u901a\u5e38\u611a\u5f04\u57fa\u4e8eCNN\u7684\u5206\u7c7b\u7f51\u7edc[10]\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5bf9\u6297\u6027\u5a01\u80c1\u7684\u4e25\u91cd\u6027\uff0c\u9664\u4e86\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u5206\u7c7b/\u8bc6\u522b\u4efb\u52a1\u5916\uff0c\u653b\u51fb\u4e5f\u88ab\u79ef\u6781\u5730\u7814\u7a76\u3002\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u56de\u987e\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u653b\u51fb\u5206\u7c7b\u4e4b\u5916\u7b97\u6cd5\u7684\u5de5\u4f5c\u3002\\n\\n#### *3.2.1 Attacks on Autoencoders and Generative Models*\\n\\nTabacof\u7b49\u4eba[128]\u7814\u7a76\u4e86\u9488\u5bf9autoencoders\u7684\u5bf9\u6297\u6027\u653b\u51fb[154]\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u79cd\u626d\u66f2\u8f93\u5165\u56fe\u50cf\uff08\u4f7f\u5176\u5177\u6709\u5bf9\u6297\u6027\uff09\u7684\u6280\u672f\uff0c\u8fd9\u79cd\u6280\u672f\u4f1a\u8bef\u5bfc\u81ea\u52a8\u7f16\u7801\u5668\u91cd\u5efa\u5b8c\u5168\u4e0d\u540c\u7684\u56fe\u50cf\u3002\u4ed6\u4eec\u7684\u65b9\u6cd5\u653b\u51fb\u795e\u7ecf\u7f51\u7edc\u7684\u5185\u90e8\u7279\u5f81\uff0c\u4f7f\u5f97\u653b\u51fb\u56fe\u50cf\u7684\u7279\u5f81\u4e0e\u76ee\u6807\u56fe\u50cf\u7684\u7279\u5f81\u76f8\u4f3c\u3002\\n\\n\u7136\u800c\uff0c\u636e[128]\u62a5\u9053\uff0c\u4e0e\u5178\u578b\u7684\u5206\u7c7b\u5668\u7f51\u7edc\u76f8\u6bd4\uff0c\u81ea\u52a8\u7f16\u7801\u5668\u4f3c\u4e4e\u5bf9\u5bf9\u6297\u6027\u653b\u51fb\u66f4\u5177\u9c81\u68d2\u6027\u3002Kos\u7b49\u4eba[121]\u8fd8\u63a2\u7d22\u4e86\u8ba1\u7b97\u6df1\u5c42\u751f\u6210\u6a21\u578b\u7684\u9ad8\u7ea7\u793a\u4f8b\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668\uff08VAE\uff09\u548cVAE\u751f\u6210\u5bf9\u6297\u7f51\u7edc\uff08VAE-GANs\uff09\\n\\nGAN \u50cf[153]\u8fd9\u6837\u7684\u73b0\u5728\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u975e\u5e38\u6d41\u884c\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5b66\u4e60\u6570\u636e\u5206\u5e03\u5e76\u751f\u6210\u771f\u5b9e\u7684\u56fe\u50cf. \u4f5c\u8005\u4ecb\u7ecd\u4e86\u9488\u5bf9VAE\u548cVAE-GANs\u7684\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u653b\u51fb\u3002\u7531\u4e8e\u8fd9\u4e9b\u653b\u51fb\u7684\u6210\u529f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u6df1\u5c42\u751f\u6210\u6a21\u578b\u4e5f\u80fd\u591f\u653b\u51fb,\u8fd9\u4e9b\u653b\u51fb\u4f1a\u4f7f\u5f97\u8f93\u5165\u8f6c\u5316\u4e3a\u975e\u5e38\u4e0d\u540c\u7684\u8f93\u51fa\u3002\u8fd9\u9879\u5de5\u4f5c\u8fdb\u4e00\u6b65\u652f\u6301\u4e86\u201c \u5bf9\u6297\u6027\u4f8b\u5b50\u662f\u5f53\u524d\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u7684\u666e\u904d\u73b0\u8c61\u201d\u8fd9\u4e00\u5047\u8bbe\u3002**\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u795e\u7ecf\u7f51\u7edc\u666e\u904d\u4f1a\u53d7\u5230\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u5f71\u54cd\uff1b**\\n\\n#### *3.2.2 Attack on Recurrent Neural Networks*\\n\\n\u200b\\tPapernot\u7b49\u4eba[110]\u6210\u529f\u5730\u4e3a\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\uff08RNN\uff09\u751f\u6210\u4e86\u5bf9\u6297\u6027\u8f93\u5165\u5e8f\u5217\u3002RNN\u662f\u4e00\u79cd\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u7279\u522b\u9002\u5408\u5b66\u4e60\u987a\u5e8f\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u6620\u5c04[155]\u3002Papernot\u7b49\u4eba\u8bc1\u660e\uff0c\u4e3a\u524d\u5411\u795e\u7ecf\u7f51\u7edc\uff08\u5982FGSM[23]\uff09\u8ba1\u7b97\u5bf9\u6297\u6027\u793a\u4f8b\u7684\u7b97\u6cd5\u4e5f\u53ef\u7528\u4e8e\u6b3a\u9a97RNN\u3002\u7279\u522b\u662f\uff0c\u4f5c\u8005\u6210\u529f\u5730\u611a\u5f04\u4e86\u6d41\u884c\u7684\u957f\u77ed\u65f6\u8bb0\u5fc6\uff08LSTM\uff09RNN\u67b6\u6784[156]\u3002\u7ed3\u8bba\u662f\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff08\u5982RNN\uff09\u4e5f\u4e0d\u80fd\u514d\u75ab\u975e\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08\u5373CNN\uff09\u4e2d\u6700\u521d\u53d1\u73b0\u7684\u5bf9\u6297\u6027\u6270\u52a8. \\n\\n#### *3.2.3 Attacks on Deep Reinforcement Learning*\\n\\nLin\u7b49\u4eba[134]\u63d0\u51fa\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u5bf9\u6297\u6027\u653b\u51fb\uff0c\u4e13\u95e8\u7528\u4e8e\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60[157]\u3002\u7b2c\u4e00\u79cd\u653b\u51fb\uff0c\u88ab\u79f0\u4e3a\u201c\u7b56\u7565\u5b9a\u65f6\u653b\u51fb\u201d\uff0c\u5bf9\u624b\u901a\u8fc7\u5728\u4e00\u4e2a\u4e8b\u4ef6\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u7684\u65f6\u95f4\u5185\u8fdb\u884c\u653b\u51fb\u6765\u4f7f\u5f97agent\u7684\u5956\u52b1\u503c\u6700\u5c0f\u5316\u3002\u8fd9\u63d0\u51fa\u4e86\u4e00\u79cd\u786e\u5b9a\u4f55\u65f6\u5236\u4f5c\u548c\u5e94\u7528\u5bf9\u6297\u6027\u793a\u4f8b\u7684\u65b9\u6cd5\uff0c\u4f7f\u653b\u51fb\u4e0d\u88ab\u53d1\u73b0\u3002\u5728\u7b2c\u4e8c\u79cd\u653b\u51fb\u4e2d\uff0c\u79f0\u4e3a\u2018enchanting attack\u2019\uff08\u9644\u9b54\u653b\u51fb\uff09\uff0c\u5bf9\u624b\u901a\u8fc7\u96c6\u6210\u751f\u6210\u6a21\u578b\u548c\u89c4\u5212\u7b97\u6cd5\u5c06agent\uff08\u667a\u80fd\u4f53\uff09\u5f15\u8bf1\u5230\u6307\u5b9a\u7684\u76ee\u6807\u72b6\u6001\u3002\u751f\u6210\u6a21\u578b\u7528\u4e8e\u9884\u6d4bagent\u7684\u672a\u6765\u72b6\u6001\uff0c\u800c\u89c4\u5212\u7b97\u6cd5\u7528\u4e8e\u751f\u6210\u5f15\u8bf1agent\u7684\u884c\u4e3a\u3002\u9488\u5bf9\u7531\u6700\u5148\u8fdb\u7684\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7b97\u6cd5[157]\u3001[158]\u8bad\u7ec3\u7684\u4ee3\u7406\uff0c\u6210\u529f\u5730\u6d4b\u8bd5\u4e86\u8fd9\u4e9b\u653b\u51fb\u3002\\n\\n\u5728\u53e6\u4e00\u9879\u7814\u7a76\u4e2d\uff0cHuang\u7b49\u4eba[62]\u8bc1\u660e\uff0cFGSM[23]\u4e5f\u53ef\u7528\u4e8e\u5728\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7684\u80cc\u666f\u4e0b\u663e\u8457\u964d\u4f4e\u6a21\u578b\u7684\u51c6\u786e\u5ea6\u3002\\n\\n#### *3.2.4 Attacks on Semantic Segmentation and Object De- tection*\\n\\n\u5728Moosavi Dezfouli[16]\u7684\u542f\u53d1\u4e0b\uff0cMetzen\u7b49\u4eba[67]\u8bc1\u660e\u4e86\u56fe\u50cf\u4e0d\u53ef\u77e5\u4f26\u4e2d\u51c6\u4e0d\u53ef\u5bdf\u89c9pertur-bations\u7684\u5b58\u5728\uff0c\u8fd9\u79cdpertur-bations\u53ef\u4ee5\u6b3a\u9a97\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u663e\u8457\u7834\u574f\u56fe\u50cf\u7684\u9884\u6d4b\u5206\u5272\u3002\u6b64\u5916\uff0c\u4ed6\u4eec\u8fd8\u8868\u660e\uff0c\u53ef\u4ee5\u8ba1\u7b97\u566a\u58f0\u5411\u91cf\uff0c\u5728\u4fdd\u6301\u5927\u90e8\u5206\u56fe\u50cf\u5206\u5272\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff08\u4f8b\u5982\uff0c\u4ece\u9053\u8def\u573a\u666f\u4e2d\u79fb\u9664\u884c\u4eba\uff09\uff0c\u4ece\u5206\u5272\u7684\u7c7b\u4e2d\u79fb\u9664\u7279\u5b9a\u7684\u7c7b\u3002\\n\\n\u867d\u7136\u6709\u4eba\u8ba4\u4e3a\u201c\u7528\u4e8e\u8bed\u4e49\u56fe\u50cf\u5206\u5272\u7684\u9ad8\u7ea7\u6270\u52a8\u7a7a\u95f4\u53ef\u80fd\u6bd4\u56fe\u50cf\u5206\u7c7b\u7684\u5c0f\u201d\uff0c\u4f46\u8fd9\u79cd\u6270\u52a8\u5bf9\u4e8e\u4e0d\u53ef\u89c1\u7684\u9a8c\u8bc1\u56fe\u50cf\u5177\u6709\u5f88\u9ad8\u7684\u6982\u7387\u53bb\u63a8\u5e7f\u3002Arnab\u7b49\u4eba[51]\u8fd8\u8bc4\u4f30\u4e86\u57fa\u4e8eFGSM[23]\u7684\u7528\u4e8e\u8bed\u4e49\u5206\u5272\u7684\u5bf9\u6297\u6027\u653b\u51fb\uff0c\u5e76\u6307\u51fa\u8bb8\u591a\u5173\u4e8e\u8fd9\u4e9b\u7528\u4e8e\u5206\u7c7b\u7684\u653b\u51fb\u7684\u89c2\u5bdf\u7ed3\u679c\u5e76\u6ca1\u6709\u76f4\u63a5\u8f6c\u79fb\u5230\u5206\u5272\u4efb\u52a1\u3002\\n\\nXie\u7b49\u4eba[115]\u8ba1\u7b97\u4e86\u7528\u4e8e\u8bed\u4e49\u5206\u5272\u548c\u76ee\u6807\u68c0\u6d4b\u7684\u5bf9\u6297\u6027\u793a\u4f8b\uff0c\u89c2\u5bdf\u5230\u8fd9\u4e9b\u4efb\u52a1\u53ef\u4ee5\u8868\u793a\u4e3a\u5bf9\u56fe\u50cf\u4e2d\u7684\u591a\u4e2a\u76ee\u6807\u8fdb\u884c\u5206\u7c7b-\u76ee\u6807\u662f\u5206\u5272\u4e2d\u7684\u4e00\u4e2a\u50cf\u7d20\u6216\u4e00\u4e2a\u611f\u53d7\u91ce\uff0c\u4ee5\u53ca\u68c0\u6d4b\u4e2d\u7684\u76ee\u6807\u5efa\u8bae\u3002\\n\\n\u5728\u8fd9\u79cd\u89c2\u70b9\u4e0b\uff0c\u4ed6\u4eec\u7684\u65b9\u6cd5\u79f0\u4e3a\u201c\u5bc6\u96c6\u654c\u65b9\u751f\u6210\u201d\uff08Dense Adversary Generation\uff09\uff0c\u5b83\u4f18\u5316\u4e86\u4e00\u7ec4\u50cf\u7d20/\u65b9\u6848\u4e0a\u7684\u635f\u5931\u51fd\u6570\uff0c\u4ee5\u751f\u6210\u654c\u65b9\u793a\u4f8b\u3002\u751f\u6210\u7684\u4f8b\u5b50\u88ab\u6d4b\u8bd5\u6765\u611a\u5f04\u5404\u79cd\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u5206\u5272\u548c\u68c0\u6d4b\u65b9\u6cd5\u3002\u4ed6\u4eec\u7684\u5b9e\u9a8c\u8bc4\u4f30\u4e0d\u4ec5\u6210\u529f\u5730\u611a\u5f04\u4e86\u76ee\u6807\u7f51\u7edc\uff0c\u800c\u4e14\u8fd8\u8868\u660e\u6240\u4ea7\u751f\u7684\u6270\u52a8\u5728\u4e0d\u540c\u7684\u7f51\u7edc\u6a21\u578b\u4e2d\u5177\u6709\u826f\u597d\u7684\u901a\u7528\u6027\u3002\u5728\u4e0b\u56fe\u4e2d\uff0c\u5c55\u793a\u4e86\u4f7f\u7528[115]\u4e2d\u7684\u65b9\u6cd5\u8fdb\u884c\u5206\u5272\u548c\u68c0\u6d4b\u7684\u7f51\u7edc\u6b3a\u9a97\u7684\u4ee3\u8868\u6027\u793a\u4f8b\u3002\\n\\n![](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806647.png)\\n\\n## 4. ATTACKS IN THE REAL WORLD\\n\\n### *4.0.1 Attacks on Face Attributes*\\n\\n\u4eba\u8138\u5c5e\u6027\u662f\u73b0\u4ee3\u5b89\u5168\u7cfb\u7edf\u4e2d\u65b0\u5174\u7684\u8f6f\u751f\u7269\u7279\u5f81\u8bc6\u522b\u6280\u672f\u4e4b\u4e00\u3002\u867d\u7136\u4eba\u8138\u5c5e\u6027\u8bc6\u522b\u4e5f\u53ef\u4ee5\u88ab\u5f52\u7c7b\u4e3a\u4e00\u4e2a\u5206\u7c7b\u95ee\u9898\uff0c\u4f46\u7531\u4e8e\u4eba\u8138\u8bc6\u522b\u672c\u8eab\u88ab\u89c6\u4e3a\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u4e00\u4e2a\u4e3b\u6d41\u95ee\u9898\uff0c\u56e0\u6b64\u6211\u4eec\u5206\u522b\u56de\u987e\u4e86\u8fd9\u65b9\u9762\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u653b\u51fb\u3002\\n\\nRozsa\u7b49\u4eba[130]\uff0c[160]\u5229\u7528CelebA\u57fa\u51c6[161]\u63a2\u7d22\u4e86\u591a\u79cd\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7684\u7a33\u5b9a\u6027\uff0c\u901a\u8fc7\u751f\u6210\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u6765\u6539\u53d8\u4eba\u8138\u8bc6\u522b\u7684\u7ed3\u679c\uff1b\u770b\u4e0b\u56fe\uff1a\\n\\n![](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806535.png)\\n\\n\u901a\u8fc7\u4f7f\u7528\u6240\u8c13\u7684\u201c\u5feb\u901f\u7ffb\u8f6c\u5c5e\u6027\u201d\u6280\u672f\u653b\u51fb\u6df1\u5ea6\u7f51\u7edc\u5206\u7c7b\u5668\uff0c\u4ed6\u4eec\u53d1\u73b0\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5bf9\u5bf9\u624b\u653b\u51fb\u7684\u9c81\u68d2\u6027\u5728\u4e0d\u540c\u7684\u9762\u90e8\u5c5e\u6027\u4e4b\u95f4\u5b58\u5728\u5f88\u5927\u5dee\u5f02\u3002\u5bf9\u6297\u6027\u653b\u51fb\u53ef\u4ee5\u6709\u6548\u5730\u5c06\u76ee\u6807\u5c5e\u6027\u7684\u6807\u7b7e\u8f6c\u6362\u4e3a\u76f8\u5173\u5c5e\u6027\u3002\\n\\nShen\u7b49\u4eba[144]\u63d0\u51fa\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u6280\u672f\u6765\u751f\u6210\u5177\u6709\u9ad8\u201c\u5438\u5f15\u529b\u5206\u6570\u201d\u4f46\u201c\u4e3b\u89c2\u5206\u6570\u201d\u8f83\u4f4e\u7684\u4eba\u8138\u7684\u5bf9\u6297\u6027\u793a\u4f8b\uff0c\u7528\u4e8e\u4f7f\u7528\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4eba\u8138\u5438\u5f15\u529b\u8bc4\u4f30\u3002\u6709\u5173\u4eba\u8138\u8bc6\u522b\u4efb\u52a1\u7684\u8fdb\u4e00\u6b65\u653b\u51fb\uff0c\u8bf7\u53c2\u9605[185]\u3002\u7b2c3\u8282\u56de\u987e\u7684\u6587\u732e\u5047\u8bbe\u5bf9\u624b\u76f4\u63a5\u7528\u56fe\u50cf\u6270\u52a8\u53cd\u9988\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u3002\u6b64\u5916\uff0c\u8fd8\u4f7f\u7528\u6807\u51c6\u56fe\u50cf\u6570\u636e\u5e93\u8bc4\u4f30\u4e86\u653b\u51fb\u7684\u6709\u6548\u6027\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u8bbe\u7f6e\u5df2\u7ecf\u8bc1\u660e\u8db3\u4ee5\u8bf4\u670d\u8bb8\u591a\u7814\u7a76\u4eba\u5458\uff0c\u5bf9\u6297\u6027\u653b\u51fb\u662f\u5b9e\u8df5\u4e2d\u6df1\u5165\u5b66\u4e60\u7684\u771f\u6b63\u5173\u6ce8\u70b9\uff0c\u4f46\u6211\u4eec\u5728\u6587\u732e\u4e2d\u4e5f\u9047\u5230\u4e86\u4e00\u4e9b\u5b9e\u4f8b\uff08\u4f8b\u5982[48]\uff0c[30]\uff09\u8fd9\u79cd\u62c5\u5fe7\u88ab\u8f7b\u63cf\u6de1\u5199\uff0c\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u88ab\u8ba4\u4e3a\u201c\u53ea\u662f\u597d\u5947\u7684\u95ee\u9898\u201d\uff0c\u51e0\u4e4e\u6ca1\u6709\u5b9e\u9645\u7684\u62c5\u5fe7\u3002\u56e0\u6b64\uff0c\u672c\u8282\u4e13\u95e8\u4ecb\u7ecd\u5728\u5b9e\u9645\u60c5\u51b5\u4e0b\u5904\u7406\u5bf9\u6297\u6027\u653b\u51fb\u7684\u6587\u732e\uff0c\u4ee5\u5e2e\u52a9\u89e3\u51b3\u4e89\u8bba\\n\\n### 4.1 Cell-phone camera attack\\n\\nKurakin\u7b49\u4eba[35]\u9996\u5148\u8bc1\u660e\u4e86\u9632\u5fa1\u653b\u51fb\u7684\u5a01\u80c1\u4e5f\u5b58\u5728\u4e8e\u7269\u7406\u4e16\u754c\u4e2d\u3002\u4e3a\u4e86\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u4ed6\u4eec\u6253\u5370\u4e86\u654c\u5bf9\u7684\u56fe\u50cf\uff0c\u5e76\u7528\u624b\u673a\u6444\u50cf\u5934\u62cd\u4e0b\u4e86\u7167\u7247\u3002\u8fd9\u4e9b\u56fe\u50cf\u88ab\u8f93\u5165\u5230Tensor-Flow\u76f8\u673a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f[181]\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u8c37\u6b4c\u7684Inception\u6a21\u578b[145]\u8fdb\u884c\u5bf9\u8c61\u5206\u7c7b\u3002\u7ed3\u679c\u8868\u660e\uff0c\u5373\u4f7f\u901a\u8fc7\u76f8\u673a\u89c2\u5bdf\uff0c\u4e5f\u6709\u5f88\u5927\u4e00\u90e8\u5206\u56fe\u50cf\u88ab\u9519\u8bef\u5206\u7c7b\u3002\u5728\u56fe6\u4e2d\uff0c\u793a\u51fa\u4e86\u539f\u7a3f\u7684\u793a\u4f8b\u3002\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806426.png)\\n\\n\u4ee5\u4e0b\u7f51\u5740\u8fd8\u63d0\u4f9b\u4e86\u4e00\u6bb5\u89c6\u9891[https://youtu.be/zQ uMenoBCk ](https://youtu.be/zQ uMenoBCk )\u663e\u793a\u4e86\u8fdb\u4e00\u6b65\u7684\u56fe\u50cf\u654c\u5bf9\u653b\u51fb\u7684\u5a01\u80c1\u3002\u8fd9\u9879\u5de5\u4f5c\u7814\u7a76\u4e86FGSM[23]\u3001BIM\u548cILCM[35]\u5728\u7269\u7406\u4e16\u754c\u4e2d\u7684\u653b\u51fb\u65b9\u6cd5\u3002\\n\\n### 4.2 Road sign attack\\n\\n\u200b\\tEtimov\u7b49\u4eba[75]\u5728[36]\u548c[88]\u4e2d\u63d0\u51fa\u7684\u653b\u51fb\u7684\u57fa\u7840\u4e0a\uff0c\u8bbe\u8ba1\u4e86\u7269\u7406\u4e16\u754c\u7684\u9c81\u68d2\u6270\u52a8\u3002\u4ed6\u4eec\u8bc1\u660e\u4e86\u5f3a\u5927\u7684\u7269\u7406\u6761\u4ef6\uff0c\u5982\u5728\u89c6\u89d2\uff0c\u8ddd\u79bb\u548c\u5206\u8fa8\u7387\u7684\u53d8\u5316\u662f\u653b\u51fb\u7684\u53ef\u80fd\u6027\u3002\u4ed6\u4eec\u63d0\u51fa\u7684\u7b97\u6cd5\u79f0\u4e3aRP2\u9c81\u68d2\u7269\u7406\u6270\u52a8\uff0c\u7528\u4e8e\u751f\u6210\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\uff0c\u9053\u8def\u6807\u5fd7\u8bc6\u522b\u7cfb\u7edf\u3002\u8fd9\u4e2a\u7b97\u6cd5\u5b9e\u73b0\u4e86\u9ad8\u611a\u5f04\u7387\u5728\u5b9e\u9645\u9a7e\u8f66\u8bbe\u7f6e\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u9488\u5bf9\u7269\u7406\u8def\u6807\u5f15\u5165\u4e86\u4e24\u79cd\u653b\u51fb\u7c7b\u522b\uff1a\uff08a\uff09\u6d77\u62a5\u6253\u5370\uff1a\u653b\u51fb\u8005\u6253\u5370\u4e00\u5f20\u53d7\u5230\u5e72\u6270\u7684\u8def\u6807\u6d77\u62a5\uff0c\u5e76\u5c06\u5176\u653e\u7f6e\u5728\u771f\u5b9e\u7684\u8def\u6807\u4e0a\uff08\u89c1\u4e0b\u56fe\uff09\uff08b\uff09 \u8d34\u7eb8\u6270\u52a8\uff1a\u5370\u5237\u5728\u7eb8\u4e0a\uff0c\u7eb8\u8d34\u5728\u771f\u6b63\u7684\u6807\u5fd7\u4e0a\u3002\u5bf9\u4e8e\uff08b\uff09\u4e24\u79cd\u7c7b\u578b\u7684\u6270\u52a8\u8fdb\u884c\u4e86\u7814\u7a76\uff0c\uff08b1\uff09\u7ec6\u5fae\u6270\u52a8\uff1a\u5360\u636e\u6574\u4e2a\u6807\u5fd7\uff0c\uff08b2\uff09\u4f2a\u88c5\u6270\u52a8\uff1a\u6807\u5fd7\u4e0a\u7684\u6d82\u9e26\u8d34\u7eb8\u5f62\u5f0f\u3002\u56e0\u6b64\uff0c\u6240\u6709\u8fd9\u4e9b\u5e72\u6270\u90fd\u53ea\u9700\u8981\u5f69\u8272\u6253\u5370\u673a\uff0c\u800c\u4e0d\u9700\u8981\u5176\u4ed6\u7279\u6b8a\u786c\u4ef6\u3002\u6210\u529f\u5730\u4ea7\u751f\u4e86\uff08a\uff09\u548c\uff08b\uff09\u7684\u6270\u52a8\uff0c\u4f7f\u5f97\u6270\u52a8\u5bf9\u7269\u7406\u4e16\u754c\u4e2d\u7684\u81ea\u7136\u53d8\u5316\u4fdd\u6301\u9c81\u68d2\u6027\uff0c\u8fd9\u8868\u660e\u4e86\u73b0\u5b9e\u4e16\u754c\u4e2d\u654c\u5bf9\u4f8b\u5b50\u7684\u5a01\u80c1\u3002\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806396.png)\\n\\n\u200b\\tLu\u7b49\u4eba[30]\u4e4b\u524d\u66fe\u58f0\u79f0\uff0c\u7531\u4e8e\u79fb\u52a8\u8f66\u8f86\u4e2d\u7684\u7269\u7406\u6761\u4ef6\u4e0d\u65ad\u53d8\u5316\uff0c\u5bf9\u6297\u6027\u793a\u4f8b\u5bf9\u4e8e\u81ea\u52a8\u8f66\u8f86\u4e2d\u7684\u76ee\u6807\u68c0\u6d4b\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u6240\u91c7\u7528\u7684\u653b\u51fb\u65b9\u6cd5[22]\u3001[23]\u3001[35]\u6709\u4e9b\u539f\u59cb\u3002Etimov\u7b49\u4eba[75]\u7684\u53d1\u73b0\u4e0e[66]\u4e2d\u7684\u7ed3\u679c\u6b63\u4ea4\u3002\u7136\u800c\uff0c\u5728\u540e\u7eed\u7814\u7a76\u4e2d\uff0cLu\u7b49\u4eba[19]\u8868\u660e\uff0c\u50cfYOLO 9000[149]\u548cFasterrRcnn[150]\u8fd9\u6837\u7684\u63a2\u6d4b\u5668\u201c\u76ee\u524d\u201d\u6ca1\u6709\u88abEtimov\u7b49\u4eba[75]\u5f15\u5165\u7684\u653b\u51fb\u6240\u6b3a\u9a97\u3002\u5728\u540e\u7eed\u7814\u7a76\u4e2d\uff0cLu\u7b49\u4eba[19]\u8868\u660e\uff0c\u50cfYOLO 9000[149]\u548cFaster rRcnn[150]\u8fd9\u6837\u7684\u63a2\u6d4b\u5668\u201c\u76ee\u524d\u201d\u6ca1\u6709\u88abEtimov\u7b49\u4eba[75]\u5f15\u5165\u7684\u653b\u51fb\u6240\u6b3a\u9a97\u3002Zeng\u7b49\u4eba[87]\u8fd8\u8ba4\u4e3a\uff0c\u56fe\u50cf\u7a7a\u95f4\u4e2d\u7684\u5bf9\u6297\u6027\u6270\u52a8\u5728\u7269\u7406\u7a7a\u95f4\u4e2d\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u63a8\u5e7f; \u7136\u800c\uff0cAthalye\u7b49\u4eba[65]\u8868\u660e\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6253\u53703D\u7269\u4f53\uff0c\u4ee5\u4fbf\u5728\u7269\u7406\u4e16\u754c\u4e2d\u8fdb\u884c\u6210\u529f\u7684\u5bf9\u6297\u6027\u653b\u51fb\u3002\u6211\u4eec\u5728\u7b2c4.3\u8282\u8ba8\u8bba[65]\u3002\\n\\n\u200b\\tGu\u7b49\u4eba[33]\u8fd8\u63a2\u8ba8\u4e86\u4e00\u4e2a\u6709\u8da3\u7684\u6982\u5ff5\uff0c\u795e\u7ecf\u7f51\u7edc\u5916\u5305\u8bad\u7ec3\u9762\u4e34\u7684\u5a01\u80c1\u3002\u4ed6\u4eec\u8868\u660e\uff0c\u6709\u53ef\u80fd\u8bad\u7ec3\u4e00\u4e2a\u5728\u7528\u6237\u7684\u8bad\u7ec3\u548c\u9a8c\u8bc1\u6837\u672c\u4e0a\u8868\u73b0\u51fa\u6700\u5148\u8fdb\u6027\u80fd\uff0c\u4f46\u5728\u653b\u51fb\u8005\u9009\u62e9\u7684\u8f93\u5165\u4e0a\u8868\u73b0\u7cdf\u7cd5\u7684\u7f51\u7edc\uff08BadNet\uff09\u3002\u4ed6\u4eec\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u6f14\u793a\u4e86\u8fd9\u79cd\u653b\u51fb\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u8857\u9053\u6807\u5fd7\u5206\u7c7b\u5668\uff0c\u5f53\u5728\u505c\u8f66\u6807\u5fd7\u4e0a\u6dfb\u52a0\u7279\u6b8a\u6807\u7b7e\u65f6\uff0c\u8be5\u5206\u7c7b\u5668\u5c06\u505c\u8f66\u6807\u5fd7\u8bc6\u522b\u4e3a\u9650\u901f\u6807\u5fd7\u3002\u6b64\u5916\uff0c\u7814\u7a76\u53d1\u73b0\uff0c\u5373\u4f7f\u7f51\u7edc\u540e\u6765\u7528\u989d\u5916\u7684\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u4e86\u5fae\u8c03\uff0c\u7f51\u7edc\u7684\u611a\u5f04\u884c\u4e3a\u4ecd\u7136\u5728\u5408\u7406\u7684\u7a0b\u5ea6\u4e0a\u5b58\u5728\u3002\\n\\n### 4.3 Generic adversarial 3D objects\\n\\nAthalye\u7b49\u4eba[65]\u4ecb\u7ecd\u4e86\u4e00\u79cd\u6784\u5efa3D\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5728\u5404\u79cd\u89d2\u5ea6\u548c\u89c6\u70b9\u4e0a\u611a\u5f04\u795e\u7ecf\u7f51\u7edc\u3002\u4ed6\u4eec\u7684\u201c\u5bf9\u53d8\u6362\u7684\u671f\u671b\u201d\uff08EOT\uff09\u6846\u67b6\u80fd\u591f\u6784\u5efa\u5bf9\u6574\u4e2a\u56fe\u50cf/\u5bf9\u8c61\u53d8\u6362\u5206\u5e03\u5177\u6709\u5bf9\u6297\u6027\u7684\u793a\u4f8b\u3002\u4ed6\u4eec\u7684\u7aef\u5230\u7aef\u65b9\u6cd5\u80fd\u591f\u6253\u5370\u4efb\u610f\u5bf9\u6297\u6027\u76843D\u5bf9\u8c61\u3002\u5728\u6211\u4eec\u770b\u6765\uff0c\u8fd9\u9879\u5de5\u4f5c\u7684\u7ed3\u679c\u786e\u5b9a\uff0c\u5bf9\u6297\u6027\u653b\u51fb\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u5173\u6ce8\u5728\u7269\u7406\u4e16\u754c\u7684\u6df1\u5165\u5b66\u4e60\u3002\u56fe8\u5c55\u793a\u4e86\u4e00\u4e2a3D\u6253\u5370\u6d77\u9f9f\u7684\u4f8b\u5b50\uff0c\u5b83\u88abEOT\u6846\u67b6\u4fee\u6539\u4e3a\u6b65\u67aa\u3002\u4ee5\u4e0b\u7f51\u5740\u63d0\u4f9b\u4e86\u6f14\u793a\u7269\u7406\u4e16\u754c\u4e2d\u88abEOT\u611a\u5f04\u7684\u89c6\u9891\uff1a[https://www.youtube.com/watch?v=YXy6oX1iNoA&feature=youtu.be](https://www.youtube.com/watch?v=YXy6oX1iNoA&feature=youtu.be)\\n\\n### 4.4 Cyberspace attacks\\n\\nPapernot\u7b49\u4eba[39]\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u5bf9\u7f51\u7edc\u7a7a\u95f4\u4e2d\u7684\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b\u5668\u53d1\u8d77\u4e86\u7b2c\u4e00\u6b21\u653b\u51fb\u3002\u4ed6\u4eec\u5728\u5408\u6210\u6570\u636e\u4e0a\u8bad\u7ec3\u4e86\u4e00\u4e2a\u66ff\u4ee3\u7f51\u7edc\u6765\u4ee3\u66ff\u76ee\u6807\u9ed1\u76d2\u5206\u7c7b\u5668\uff0c\u5e76\u4e3e\u4f8b\u8bf4\u660e\u4e86MetaMind\u3001Amazon\u548cGoogle\u5bf9\u8fdc\u7a0b\u6258\u7ba1\u795e\u7ecf\u7f51\u7edc\u7684\u653b\u51fb\u3002\u4ed6\u4eec\u80fd\u591f\u8bc1\u660e\u5404\u81ea\u7684\u76ee\u6807\u7f51\u7edc\u9519\u8bef\u5730\u5206\u7c7b\u4e8684.24%\uff0c96.19%\u548c88.94%\u7684\u7531\u4ed6\u4eec\u7684\u65b9\u6cd5\u4ea7\u751f\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u3002\u5b9e\u9645\u4e0a\uff0c\u653b\u51fb\u8005\u5728\u5176\u5a01\u80c1\u6a21\u578b\u4e2d\u552f\u4e00\u53ef\u7528\u7684\u4fe1\u606f\u662f\u76ee\u6807\u7f51\u7edc\u7684\u8f93\u51fa\u6807\u7b7e\uff0c\u7528\u4e8e\u653b\u51fb\u8005\u63d0\u4f9b\u7684\u8f93\u5165\u56fe\u50cf\u3002\\n\\n\u5728\u4e00\u9879\u76f8\u5173\u7684\u5de5\u4f5c\u4e2d\uff0cLiu\u7b49\u4eba[88]\u5f00\u53d1\u4e86\u4e00\u79cd\u57fa\u4e8e\u96c6\u5408\u7684\u653b\u51fb\uff0c\u5e76\u5c55\u793a\u4e86\u5b83\u5bf9\u653b\u51fb\u7684\u6210\u529f\u3002 \\n\\nGrosse\u7b49\u4eba[61]\u5c55\u793a\u4e86\u4e3a\u7528\u4f5c\u6076\u610f\u8f6f\u4ef6\u5206\u7c7b\u5de5\u5177\u7684\u795e\u7ecf\u7f51\u7edc\u6784\u5efa\u6709\u6548\u7684\u901a\u7528\u653b\u51fb\u3002\u4e0e\u56fe\u50cf\u8bc6\u522b\u76f8\u6bd4\uff0c\u6076\u610f\u8f6f\u4ef6\u5206\u7c7b\u9886\u57df\u5728\u5bf9\u6297\u6027\u8bbe\u7f6e\u4e2d\u5f15\u5165\u4e86\u989d\u5916\u7684\u7ea6\u675f\uff0c\u5982\u7528\u79bb\u6563\u8f93\u5165\u4ee3\u66ff\u8fde\u7eed\u8f93\u5165\u57df\uff0c\u7528\u8981\u6c42\u7b49\u4ef7\u529f\u80fd\u884c\u4e3a\u4ee3\u66ff\u89c6\u89c9\u76f8\u4f3c\u6027\u6761\u4ef6\u3002\u7136\u800c\uff0cGrosse\u7b49\u4eba[61]\u8868\u660e\uff0c\u521b\u5efa\u6709\u6548\u7684\u5bf9\u6297\u6027\u793a\u4f8b\u5bf9\u4e8e\u6076\u610f\u8f6f\u4ef6\u5206\u7c7b\u4ecd\u7136\u662f\u53ef\u80fd\u7684\u3002\u5728[64]\u3001[107]\u3001[125]\u4e2d\u8fd8\u53ef\u4ee5\u627e\u5230\u9488\u5bf9\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6076\u610f\u8f6f\u4ef6\u5206\u7c7b\u7684\u6210\u529f\u5bf9\u624b\u653b\u51fb\u7684\u66f4\u591a\u793a\u4f8b\u3002\\n\\n## 5 EXISTENCE OF ADVERSARIAL EXAMPLES\\n\\n\u200b\\t\u5728\u6709\u5173\u8ba1\u7b97\u673a\u89c6\u89c9\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u5bf9\u6297\u6027\u653b\u51fb\u7684\u6587\u732e\u4e2d\uff0c\u5173\u4e8e\u5bf9\u6297\u6027\u4f8b\u5b50\u5b58\u5728\u7740\u4e0d\u540c\u7684\u89c2\u70b9\u3002\u8fd9\u4e9b\u89c2\u70b9\u901a\u5e38\u4e0e\u7814\u7a76\u4eba\u5458\u5728\u653b\u51fb\u6216\u9632\u5fa1\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u65f6\u6240\u505a\u7684\u5c40\u90e8\u7ecf\u9a8c\u89c2\u5bdf\u5f88\u597d\u5730\u543b\u5408\u3002\u7136\u800c\uff0c\u5b83\u4eec\u5728\u666e\u53ca\u6027\u65b9\u9762\u5f80\u5f80\u4e0d\u591f\u3002\u4f8b\u5982\uff0cGoodfello\u7b49\u4eba[23]\u6d41\u884c\u7684\u7ebf\u6027\u5047\u8bbe\u5f88\u597d\u5730\u89e3\u91ca\u4e86FGSM\u548c\u76f8\u5173\u653b\u51fb\u3002\u7136\u800c\uff0cTanay\u548cGriffin[74]\u8bc1\u660e\u4e86\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u56fe\u50cf\u7c7b\u4e0d\u4f1a\u53d7\u5230\u654c\u5bf9\u793a\u4f8b\u7684\u5f71\u54cd\uff0c\u8fd9\u4e0e\u7ebf\u6027\u5047\u8bbe\u4e0d\u4e00\u81f4\u3002\u66f4\u4e0d\u7528\u8bf4\uff0c\u7ebf\u6027\u5047\u8bbe\u672c\u8eab\u4e0e\u5148\u524d\u6d41\u884c\u7684\u89c2\u70b9\u6709\u5f88\u5927\u7684\u504f\u5dee. \u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u6765\u6e90\u4e8e\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5f15\u8d77\u7684\u9ad8\u5ea6\u975e\u7ebf\u6027\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u6587\u732e\u4e2d\u4e5f\u6709\u5176\u4ed6\u4f8b\u5b50\uff0c\u5176\u4e2d\u7ebf\u6027\u5047\u8bbe\u6ca1\u6709\u5f97\u5230\u76f4\u63a5\u652f\u6301[119]\u3002\\n\\n\u200b\\t\u51b3\u7b56\u8fb9\u754c\u7684\u5e73\u5766\u6027[69]\u3001\u51b3\u7b56\u8fb9\u754c\u7684\u5927\u5c40\u90e8\u66f2\u7ebf[70]\u548c\u7f51\u7edc\u7684\u4f4e\u7075\u6d3b\u6027[71]\u662f\u5173\u4e8e\u5b58\u5728\u76f8\u4e92\u4e0d\u5b8c\u5168\u4e00\u81f4\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u89c2\u70b9\u7684\u4f8b\u5b50\u3002\u5f88\u660e\u663e\uff0c\u53ea\u9700\u4fee\u6539\u56fe\u50cf\u4e2d\u7684\u4e00\u4e2a\u50cf\u7d20\u5c31\u53ef\u4ee5\u5f62\u6210\u5bf9\u6297\u6027\u793a\u4f8b\uff0c\u4f46\u76ee\u524d\u7684\u6587\u732e\u4f3c\u4e4e\u5bf9\u5b58\u5728\u5bf9\u6297\u6027\u793a\u4f8b\u7684\u539f\u56e0\u7f3a\u4e4f\u5171\u8bc6\u3002**\u8fd9\u4e00\u4e8b\u5b9e\u4e5f\u4f7f\u5f97\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u5206\u6790\u6210\u4e3a\u4e00\u4e2a\u79ef\u6781\u7684\u7814\u7a76\u65b9\u5411**\uff0c\u6709\u671b\u63a2\u7d22\u548c\u89e3\u91ca\u7531\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\uff08\u76ee\u524d\u66f4\u666e\u904d\u5730\u88ab\u89c6\u4e3a\u9ed1\u76d2\u6a21\u578b\uff09\u6240\u8bf1\u5bfc\u7684\u51b3\u7b56\u8fb9\u754c\u7684\u6027\u8d28\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u56de\u987e\u4e86\u4e3b\u8981\u96c6\u4e2d\u5728\u5206\u6790\u5bf9\u6297\u6027\u6270\u52a8\u7684\u5b58\u5728\u6027\u4ee5\u8fdb\u884c\u6df1\u5165\u5b66\u4e60\u7684\u5de5\u4f5c\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u9664\u4e86\u4e0b\u9762\u56de\u987e\u7684\u6587\u732e\u5916\uff0c\u4e0e\u5bf9\u6297\u6027\u653b\u51fb\uff08\u7b2c3\u8282\uff09\u548c\u9632\u5fa1\uff08\u7b2c6\u8282\uff09\u76f8\u5173\u7684\u5de5\u4f5c\u901a\u5e38\u63d0\u4f9b\u5bf9\u6297\u6027\u6270\u52a8\u7684\u7b80\u8981\u5206\u6790\uff0c\u540c\u65f6\u63a8\u6d4b\u5bfc\u81f4\u5b58\u5728\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u73b0\u8c61\u3002\\n\\n### 5.1 Limits on adversarial robustness\\n\\n\u200b\\tFawzi\u7b49\u4eba[118]\u63d0\u51fa\u4e86\u4e00\u4e2a\u7814\u7a76\u5206\u7c7b\u5668\u5bf9 \u5bf9\u6297\u6027\u6270\u52a8\u4e0d\u7a33\u5b9a\u6027\u7684\u6846\u67b6\u3002\u4ed6\u4eec\u6839\u636e\u6570\u636e\u96c6\u7c7b\u522b\u4e4b\u95f4\u7684\u201c\u53ef\u5206\u8fa8\u6027\u5ea6\u91cf\u201d\u5efa\u7acb\u4e86\u5206\u7c7b\u5668\u9c81\u68d2\u6027\u7684\u57fa\u672c\u9650\u5236\uff0c\u5176\u4e2d\u53ef\u5206\u8fa8\u6027\u5b9a\u4e49\u4e3a\u7ebf\u6027\u5206\u7c7b\u5668\u7684\u4e24\u4e2a\u7c7b\u522b\u5e73\u5747\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u6240\u7814\u7a76\u975e\u7ebf\u6027\u6a21\u578b\u7684\u4e8c\u9636\u77e9\u77e9\u9635\u4e4b\u95f4\u7684\u8ddd\u79bb\u5206\u7c7b\u5668\u3002\u8fd9\u9879\u5de5\u4f5c\u8868\u660e\uff0c\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u4e5f\u5b58\u5728\u4e8e\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u4ee5\u5916\u7684\u5206\u7c7b\u4e2d\u3002\u672c\u6587\u7684\u5206\u6790\u5c06\u5bf9\u6297\u6027\u4e0d\u7a33\u5b9a\u6027\u7684\u73b0\u8c61\u8ffd\u6eaf\u5230\u5206\u7c7b\u5668\u7684\u4f4e\u7075\u6d3b\u6027\uff0c\u8fd9\u4e0e\u5f53\u65f6\u7684\u4e3b\u6d41\u89c2\u70b9\u4e0d\u5b8c\u5168\u6b63\u4ea4\uff0c\u5373\u7f51\u7edc\u7684\u9ad8\u975e\u7ebf\u6027\u4f7f\u5b83\u4eec\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u5f71\u54cd\u3002\\n\\n### 5.2 Space of adversarial examples\\n\\n\u200b\\tTabacof\u548cEduardo[25]\u5728MNIST[10]\u548cImageNet[11]\u6570\u636e\u96c6\u4e0a\u751f\u6210\u4e86\u6d45\u5c42\u548c\u6df1\u5c42\u7f51\u7edc\u5206\u7c7b\u5668\u7684\u5bf9\u6297\u6027\u793a\u4f8b\uff0c\u5e76\u5229\u7528\u4e0d\u540c\u5206\u5e03\u548c\u5f3a\u5ea6\u7684\u566a\u58f0\u63a2\u6d4b\u5bf9\u6297\u6027\u793a\u4f8b\u7684\u50cf\u7d20\u7a7a\u95f4\u3002\u4f5c\u8005\u7ecf\u9a8c\u6027\u5730\u8bc1\u660e\u4e86\u5bf9\u6297\u6027\u4f8b\u5b50\u51fa\u73b0\u5728\u50cf\u7d20\u7a7a\u95f4\u7684\u5927\u533a\u57df\u4e2d\uff0c\u8fd9\u4e0e[23]\u4e2d\u7684\u7c7b\u4f3c\u4e3b\u5f20\u662f\u4e00\u81f4\u7684\u3002\u7136\u800c\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4e0e\u7ebf\u6027\u5047\u8bbe\u76f8\u53cd\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u4e00\u4e2a\u5f31\u7684\u3001\u6d45\u7684\u548c\u66f4\u7ebf\u6027\u7684\u5206\u7c7b\u5668\u4e5f\u50cf\u4e00\u4e2a\u5f3a\u7684\u6df1\u5206\u7c7b\u5668\u4e00\u6837\u5bb9\u6613\u53d7\u5230\u654c\u5bf9\u4f8b\u5b50\u7684\u5f71\u54cd\u3002\\n\\n\u200b\\tTramer\u7b49\u4eba[132]\u63d0\u51fa\u4e86\u4e00\u79cd\u4f30\u8ba1\u5bf9\u6297\u6027\u4f8b\u5b50\u7a7a\u95f4\u7ef4\u6570\u7684\u65b9\u6cd5\u3002\u636e\u79f0\uff0c\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u8de8\u8d8a\u4e00\u4e2a\u76f8\u90bb\u7684\u9ad8\u7ef4\u7a7a\u95f4\uff08\u4f8b\u5982\uff0c\u7ef4\u5ea6\u224825\uff09\u3002\u7531\u4e8e\u9ad8\u7ef4\u6027\uff0c\u4e0d\u540c\u5206\u7c7b\u5668\u7684\u5b50\u7a7a\u95f4\u53ef\u4ee5\u76f8\u4ea4\uff0c\u4ece\u800c\u5bfc\u81f4\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u53ef\u8f6c\u79fb\u6027\u3002\u6709\u8da3\u7684\u662f\uff0c\u4ed6\u4eec\u7684\u5206\u6790\u8868\u660e\uff0c\u5373\u4f7f\u5206\u7c7b\u5668\u5bb9\u6613\u53d7\u5230\u76f4\u63a5\u653b\u51fb\uff0c\u4e5f\u6709\u53ef\u80fd\u9632\u5fa1\u57fa\u4e8e\u4f20\u8f93\u7684\u653b\u51fb\u3002\\n\\n### 5.3 Boundary tilting perspective\\n\\n\u200b\\tTanay\u548cGriffin[74]\u5bf9\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u4e2d\u5b58\u5728\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u63d0\u51fa\u4e86\u201c\u8fb9\u754c\u503e\u659c\u201d\u7684\u89c2\u70b9\u3002\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u4e3a\u4e86\u5b66\u4e60\u548c\u8bc4\u4f30\u5206\u7c7b\u5668\u800c\u91c7\u6837\u7684\u5355\u4e2a\u7c7b\u6570\u636e\u901a\u5e38\u5b58\u5728\u4e8e\u8be5\u7c7b\u7684\u5b50\u6d41\u5f62\u4e2d\uff0c\u5e76\u4e14\u5f53\u5206\u7c7b\u8fb9\u754c\u63a5\u8fd1\u8be5\u5b50\u6d41\u5f62\u65f6\uff0c\u8be5\u7c7b\u5b58\u5728\u5bf9\u6297\u6027\u793a\u4f8b\u3002\u4ed6\u4eec\u5c06\u5206\u7c7b\u5668\u7684\u201c\u5bf9\u6297\u5f3a\u5ea6\u201d\u6982\u5ff5\u5f62\u5f0f\u5316\uff0c\u5e76\u5c06\u5176\u7b80\u5316\u4e3a\u6240\u8003\u8651\u7684\u5206\u7c7b\u5668\u8fb9\u754c\u548c\u6700\u8fd1\u7684\u8d28\u5fc3\u5206\u7c7b\u5668\u4e4b\u95f4\u7684\u201c\u504f\u79bb\u89d2\u201d\u3002\u7136\u540e\u8bc1\u660e\u4e86\u5206\u7c7b\u5668\u7684\u5bf9\u6297\u5f3a\u5ea6\u53ef\u4ee5\u901a\u8fc7\u201c\u8fb9\u754c\u503e\u659c\u201d\u51b3\u7b56\u6765\u6539\u53d8\u3002\u4f5c\u8005\u8fd8\u8ba4\u4e3a\u5206\u7c7b\u5668\u7684\u5bf9\u6297\u7a33\u5b9a\u6027\u4e0e\u5176\u6b63\u5219\u5316\u6709\u5173\u3002\u5728Tanay\u548cGriffin\u770b\u6765\uff0c\u5173\u4e8e\u5b58\u5728\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u7ebf\u6027\u5047\u8bbe[23]\u662f\u201c\u4e0d\u53ef\u4fe1\u7684\u201d\u3002\\n\\n### 5.4 training cause adversaries\u9884\u6d4b\u7684\u4e0d\u786e\u5b9a\u6027\u4e0e\u8fdb\u5316\u505c\u6ede\\n\\n\u200b\\tCubuk\u7b49\u4eba[91]\u8ba4\u4e3a\uff0c\u201c\u5bf9\u6297\u6027\u6d4b\u8bd5\u7684\u8d77\u6e90\u4e3b\u8981\u662f\u7531\u4e8e\u795e\u7ecf\u7f51\u7edc\u5bf9\u5176\u9884\u6d4b\u7684\u56fa\u6709\u4e0d\u786e\u5b9a\u6027\u201d\u3002\u4ed6\u4eec\u6839\u636e\u7ecf\u9a8c\u8ba1\u7b97\u4e86\u4e0d\u786e\u5b9a\u6027\u7684\u51fd\u6570\u5f62\u5f0f\uff0c\u8fd9\u4e0e\u7f51\u7edc\u7ed3\u6784\u3001\u8bad\u7ec3\u534f\u8bae\u548c\u6570\u636e\u96c6\u65e0\u5173\u3002\u6709\u4eba\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u5f62\u5f0f\u53ea\u4f9d\u8d56\u4e8e\u7edf\u8ba1\u7684\u7f51\u7edc\u903b\u8f91\u5dee\u5f02\u3002\u8fd9\u6700\u7ec8\u4f1a\u5bfc\u81f4\u654c\u5bf9\u653b\u51fb\u5bfc\u81f4\u7684\u6b3a\u9a97\u6bd4\u7387\uff0c\u4ece\u800c\u663e\u793a\u51fa\u76f8\u5bf9\u4e8e\u6270\u52a8\u5927\u5c0f\u7684\u901a\u7528\u7f29\u653e\u3002\u4ed6\u4eec\u7814\u7a76\u4e86\u57fa\u4e8eFGSM[23]\u3001ILCM\u548cBIM[35]\u7684\u653b\u51fb\u6765\u8bc1\u5b9e\u4ed6\u4eec\u7684\u8bf4\u6cd5\u3002\u5b83\u8fd8\u58f0\u79f0\uff0c\u7f51\u7edc\u5728\u6e05\u6670\u56fe\u50cf\u4e0a\u7684\u51c6\u786e\u6027\u4e0e\u5176\u5bf9\u6297\u6027\u7684\u5065\u58ee\u6027\u76f8\u5173\uff08\u5173\u4e8e\u8fd9\u4e2a\u65b9\u5411\u7684\u66f4\u591a\u8bba\u636e\uff0c\u89c1\u7b2c5.5\u8282\uff09\u3002\\n\\n\u200b\\tRozsa\u7b49\u4eba[102]\u5047\u8bbe\u5bf9\u6297\u6027\u5e72\u6270\u7684\u5b58\u5728\u662f\u8bad\u7ec3\u56fe\u50cf\u4e0a\u51b3\u7b56\u8fb9\u754c\u8fdb\u5316\u505c\u6ede\u7684\u7ed3\u679c\u3002\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u4e00\u65e6\u5206\u7c7b\u6b63\u786e\uff0c\u5355\u4e2a\u8bad\u7ec3\u6837\u672c\u5c31\u4e0d\u4f1a\u5bfc\u81f4\u6a21\u578b\uff08\u5373\u795e\u7ecf\u7f51\u7edc\uff09\u7684\u8bad\u7ec3\u635f\u5931\uff0c\u8fd9\u6700\u7ec8\u4f1a\u4f7f\u5b83\u4eec\u63a5\u8fd1\u51b3\u7b56\u8fb9\u754c\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u6dfb\u52a0\u5fae\u5c0f\u7684\u6270\u52a8\uff0c\u5c31\u6709\u53ef\u80fd\u5c06\u8fd9\u4e9b\uff08\u548c\u7c7b\u4f3c\u7684\uff09\u6837\u672c\u4e22\u5f03\u5230\u9519\u8bef\u7684\u7c7b\u533a\u57df\u3002\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u6279\u91cf\u8c03\u6574\u7f51\u7edc\u68af\u5ea6\uff08BANG\uff09\u7b97\u6cd5\u6765\u8bad\u7ec3\u7f51\u7edc\uff0c\u4ee5\u7f13\u89e3\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u8fdb\u5316\u505c\u6ede\u3002\\n\\n### 5.5 Accuracy-adversarial robustness correlation\\n\\n\u200b\\t\u4e3a\u4e86\u89e3\u91ca\u5bf9\u6297\u6027\u653b\u51fb\u7684\u5b58\u5728\uff0cRozsa\u7b49\u4eba[97]\u5b9e\u8bc1\u5206\u6790\u4e86\u516b\u4e2a\u6df1\u5ea6\u7f51\u7edc\u5206\u7c7b\u5668\u7684\u51c6\u786e\u5ea6\u4e0e\u5176\u5bf9[23]\u3001[94]\u4e2d\u4ecb\u7ecd\u7684\u4e09\u79cd\u5bf9\u6297\u6027\u653b\u51fb\u7684\u9c81\u68d2\u6027\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6240\u7814\u7a76\u7684\u5206\u7c7b\u5668\u5305\u62ecAlexNet[9]\u3001VGG-16\u548cVGG-19\u7f51\u7edc[163]\u3001\u4f2f\u514b\u5229\u8bad\u7ec3\u7684GoogLeNet\u548c\u666e\u6797\u65af\u987fGoogLeNet\u7248\u672c[18]\u3001ResNet-52\u3001ResNet-101\u548cResNet-152[147]\u3002\u4f7f\u7528[23]\u548c[94]\u4e2d\u63d0\u51fa\u7684\u6280\u672f\uff0c\u501f\u52a9\u5927\u578bImageNet\u6570\u636e\u96c6[11]\u751f\u6210\u5bf9\u6297\u6027\u793a\u4f8b\u3002\u4ed6\u4eec\u7684\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u5206\u7c7b\u7cbe\u5ea6\u8f83\u9ad8\u7684\u7f51\u7edc\u901a\u5e38\u5bf9\u654c\u65b9\u5b9e\u4f8b\u4e5f\u8868\u73b0\u51fa\u8f83\u5f3a\u7684\u9c81\u68d2\u6027\u3002\u4ed6\u4eec\u8fd8\u5f97\u51fa\u7ed3\u8bba\uff0c\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u5728\u76f8\u4f3c\u7684\u7f51\u7edc\u62d3\u6251\u4e4b\u95f4\u4f20\u8f93\u5f97\u66f4\u597d\u3002\\n\\n### 5.6 More on linearity as the source\\n\\n\u200b\\tKortov\u548cHopfield[127]\u5728\u7a20\u5bc6\u8054\u60f3\u8bb0\u5fc6\uff08DAM\uff09\u6a21\u578b\u7684\u80cc\u666f\u4e0b\u68c0\u9a8c\u4e86\u666e\u904d\u6270\u52a8\u7684\u5b58\u5728[164]\u3002\u4e0e\u5178\u578b\u7684\u73b0\u4ee3\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u76f8\u6bd4\uff0cDAM\u6a21\u578b\u91c7\u7528\u4e86\u795e\u7ecf\u5143\u4e4b\u95f4\u66f4\u9ad8\u9636\uff08\u591a\u4e8e\u4e8c\u6b21\uff09\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u4f5c\u8005\u5df2\u7ecf\u8bc1\u660e\uff0c\u4f7f\u7528\u5177\u6709\u8f83\u5c0f\u4ea4\u4e92\u529f\u7387\u7684DAM\u6a21\u578b\u751f\u6210\u7684\u5bf9\u6297\u6027\u6d4b\u8bd5\u65e0\u6cd5\u611a\u5f04\u5177\u6709\u9ad8\u9636\u4ea4\u4e92\u7684\u6a21\u578b\uff0c\u8fd9\u7c7b\u4f3c\u4e8e\u4f7f\u7528\u5177\u6709ReLU\u6fc0\u6d3b\u7684\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u6765\u8bf1\u5bfc\u7ebf\u6027[165]\u3002\u4f5c\u8005\u63d0\u4f9b\u4e86\u72ec\u7acb\u4e8eFGSM[23]\u653b\u51fb\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u5b58\u5728\u7684\u7ecf\u9a8c\u8bc1\u636e\uff0c\u4f46\u652f\u6301Goodfello\u7b49\u4eba[23]\u7684\u7ebf\u6027\u5047\u8bbe\u3002\\n\\n### 5.7 Existence of universal perturbations\\n\\n\u200b\\tMoosavi-Dezfouli\u7b49\u4eba[16]\u6700\u521d\u8ba4\u4e3a\uff0c\u666e\u904d\u5bf9\u6297\u6027\u6270\u52a8\u5229\u7528\u4e86\u5206\u7c7b\u5668\u8bf1\u5bfc\u7684\u51b3\u7b56\u8fb9\u754c\u4e4b\u95f4\u7684\u51e0\u4f55\u76f8\u5173\u6027\u3002\u5b83\u4eec\u7684\u5b58\u5728\u90e8\u5206\u5f52\u529f\u4e8e\u5305\u542b\u51b3\u7b56\u8fb9\u754c\u7684nor-mals\u7684\u5b50\u7a7a\u95f4\uff0c\u4f7f\u5f97\u6cd5\u7ebf\u4e5f\u56f4\u7ed5\u7740\u81ea\u7136\u56fe\u50cf\u3002\u5728[70]\u4e2d\uff0c\u4ed6\u4eec\u8fdb\u4e00\u6b65\u5efa\u7acb\u4e86\u4ed6\u4eec\u7684\u7406\u8bba\uff0c\u5e76\u8bc1\u660e\u4e86\u5b58\u5728\u5171\u540c\u7684\u65b9\u5411\uff08\u5728\u6570\u636e\u70b9\u4e4b\u95f4\u5171\u4eab\uff09\uff0c\u6cbf\u7740\u8fd9\u4e9b\u65b9\u5411\uff0c\u5206\u7c7b\u5668\u7684\u51b3\u7b56\u8fb9\u754c\u53ef\u4ee5\u9ad8\u5ea6\u6b63\u5f2f\u66f2\u3002\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u6837\u7684\u65b9\u5411\u5728\u5b87\u5b99\u6270\u52a8\u7684\u5b58\u5728\u4e2d\u8d77\u7740\u5173\u952e\u4f5c\u7528\u3002\u57fa\u4e8e\u4ed6\u4eec\u7684\u53d1\u73b0\uff0c\u4f5c\u8005\u8fd8\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u51e0\u4f55\u65b9\u6cd5\u6765\u6709\u6548\u5730\u8ba1\u7b97\u666e\u904d\u5bf9\u6297\u6444\u52a8\u3002\\n\\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5148\u524dFawzi\u7b49\u4eba[69]\u4e5f\u5c06\u5206\u7c7b\u5668\u9c81\u68d2\u6027\u7684\u7406\u8bba\u754c\u4e0e\u51b3\u7b56\u8fb9\u754c\u7684\u66f2\u7387\u8054\u7cfb\u8d77\u6765\u3002\u540c\u6837\uff0cTramer\u7b49\u4eba[77]\u4e5f\u8ba4\u4e3a\uff0c\u6570\u636e\u70b9\u9644\u8fd1\u51b3\u7b56\u8fb9\u754c\u7684\u66f2\u7387\u662f\u795e\u7ecf\u7f51\u7edc\u6613\u53d7\u9ed1\u76d2\u653b\u51fb\u7684\u539f\u56e0\u3002\u5728\u6700\u8fd1\u7684\u53e6\u4e00\u9879\u5de5\u4f5c\u4e2d\uff0cMopuri\u7b49\u4eba[193]\u63d0\u51fa\u4e86\u4e00\u4e2a\u7c7bGAN\u6a21\u578b\u6765\u7814\u7a76\u7ed9\u5b9a\u76ee\u6807\u6a21\u578b\u7684\u666e\u904d\u5bf9\u6297\u6270\u52a8\u7684\u5206\u5e03\u3002\u5b66\u4e60\u7684\u5206\u5e03\u4e5f\u663e\u793a\u51fa\u826f\u597d\u7684\u8de8\u6a21\u578b\u4f20\u9012\u6027\u3002\\n\\n## 6 DEFENSES AGAINST ADVERSARIAL ATTACKS\\n\\n\u76ee\u524d\uff0c\u5bf9\u6297\u6027\u653b\u51fb\u7684\u9632\u5fa1\u4e3b\u8981\u6cbf\u7740\u4e09\u4e2a\u65b9\u5411\u53d1\u5c55\uff1a\\n\\n1\uff09 \u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4fee\u6539\u8fc7\u7684\u8bad\u7ec3\u65b9\u5f0f\u6216\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4fee\u6539\u8fc7\u7684\u8f93\u5165\u3002\\n\\n2\uff09 \u4fee\u6539\u7f51\u7edc\uff0c\u4f8b\u5982\u901a\u8fc7\u6dfb\u52a0\u66f4\u591a\u5c42/\u5b50\u7f51\u7edc\u3001\u66f4\u6539\u4e22\u5931/\u6fc0\u6d3b\u529f\u80fd\u7b49\u3002\\n\\n3\uff09 \u5f53\u5206\u7c7b\u7b5b\u9009\u770b\u4e0d\u89c1\u7684\u793a\u4f8b\u65f6\uff0c\u4f7f\u7528\u5916\u90e8\u6a21\u578b\u4f5c\u4e3a\u7f51\u7edc\u9644\u52a0\u7ec4\u4ef6\u3002\\n\\n\u200b\\t\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e0d\u76f4\u63a5\u5904\u7406\u5b66\u4e60\u6a21\u578b\u3002\u5176\u4ed6\u4e24\u7c7b\u66f4\u5173\u6ce8\u795e\u7ecf\u7f51\u7edc\u672c\u8eab\u3002\u8fd9\u4e24\u7c7b\u6280\u672f\u53c8\u53ef\u5206\u4e3a\u4e24\u7c7b\uff0c\u5373\u5b8c\u5168\u9632\u5fa1\u548c\u4ec5\u68c0\u6d4b\u3002\u201c\u5b8c\u5168\u9632\u5fa1\u201d\u65b9\u6cd5\u65e8\u5728\u4f7f\u76ee\u6807\u7f51\u7edc\u80fd\u591f\u5728\u5bf9\u6297\u6027\u793a\u4f8b\u4e0a\u5b9e\u73b0\u5176\u539f\u59cb\u76ee\u6807\uff0c\u4f8b\u5982\uff0c\u5206\u7c7b\u5668\u4ee5\u53ef\u63a5\u53d7\u7684\u7cbe\u5ea6\u9884\u6d4b\u5bf9\u6297\u6027\u793a\u4f8b\u8fdb\u884c\u9884\u6d4b\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u201c\u4ec5\u68c0\u6d4b\u201d\u65b9\u6cd5\u610f\u5473\u7740\u5bf9\u6f5c\u5728\u7684\u5bf9\u6297\u6027\u793a\u4f8b\u53d1\u51fa\u5371\u9669\u4fe1\u53f7\uff0c\u4ee5\u4fbf\u5728\u4efb\u4f55\u8fdb\u4e00\u6b65\u5904\u7406\u4e2d\u62d2\u7edd\u5b83\u4eec\u3002\u6240\u63cf\u8ff0\u7684\u7c7b\u522b\u7684\u5206\u7c7b\u4e5f\u793a\u4e8e\u4e0b\u56fe\u4e2d\u3002\u5269\u4e0b\u7684\u90e8\u5206\u662f\u6839\u636e\u8fd9\u4e2a\u5206\u7c7b\u6cd5\u7ec4\u7ec7\u7684\u3002\u5728\u6240\u4f7f\u7528\u7684\u5206\u7c7b\u6cd5\u4e2d\uff0c\u201c\u4fee\u6539\u201d\u7f51\u7edc\u548c\u4f7f\u7528\u201c\u9644\u52a0\u7ec4\u4ef6\u201d\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u5728\u8bad\u7ec3\u671f\u95f4\u5bf9\u539f\u59cb\u7684\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784/\u53c2\u6570\u8fdb\u884c\u4e86\u66f4\u6539\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u540e\u8005\u4fdd\u6301\u539f\u59cb\u6a21\u578b\u7684\u5b8c\u6574\u6027\uff0c\u5e76\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u9644\u52a0\u5916\u90e8\u6a21\u578b\uff1b\\n\\n![](./src/Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey/20210501181806435.png)\\n\\n### 6.1 Modified training/input\\n\\n#### *6.1.1 Brute-force adversarial training\u3010\u201d\u86ee\u529b\u5bf9\u6297\u8bad\u7ec3\u201c\u3011*\\n\\n\u200b\\t\u81ea\u4ece\u53d1\u73b0\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u5bf9\u6297\u6027\u4f8b\u5b50[22]\u4ee5\u6765\uff0c\u76f8\u5173\u6587\u732e\u4e2d\u6709\u4e00\u4e2a\u666e\u904d\u7684\u5171\u8bc6\uff0c\u5373\u795e\u7ecf\u7f51\u7edc\u5bf9\u8fd9\u4e9b\u4f8b\u5b50\u7684\u9c81\u68d2\u6027\u968f\u7740\u5bf9\u6297\u6027\u8bad\u7ec3\u800c\u63d0\u9ad8\u3002\u56e0\u6b64\uff0c\u5f15\u5165\u65b0\u7684\u5bf9\u6297\u6027\u653b\u51fb\u7684\u5927\u591a\u6570\u8d21\u732e\uff0c\u4f8b\u5982[22]\u3001[23]\u3001[72]\uff08\u89c1\u7b2c3\u8282\uff09\u540c\u65f6\u63d0\u51fa\u4e86\u5bf9\u6297\u6027\u8bad\u7ec3\u4f5c\u4e3a\u62b5\u5fa1\u8fd9\u4e9b\u653b\u51fb\u7684\u7b2c\u4e00\u9053\u9632\u7ebf\u3002\u5c3d\u7ba1\u5bf9\u6297\u6027\u8bad\u7ec3\u63d0\u9ad8\u4e86\u7f51\u7edc\u7684\u5065\u58ee\u6027\uff0c\u4f46\u8981\u60f3\u771f\u6b63\u6709\u6548\uff0c\u5b83\u9700\u8981\u4f7f\u7528\u5f3a\u653b\u51fb\u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u4e14\u7f51\u7edc\u7684\u4f53\u7cfb\u7ed3\u6784\u5177\u6709\u8db3\u591f\u7684\u8868\u73b0\u529b\u3002\u7531\u4e8e\u5bf9\u6297\u6027\u8bad\u7ec3\u9700\u8981\u589e\u52a0\u8bad\u7ec3/\u6570\u636e\u91cf\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u66b4\u529b\u7684\u201c\u7b56\u7565\u3002 \\n\\n\u200b\\t\u6587\u732e\u4e2d\u8fd8\u666e\u904d\u89c2\u5bdf\u5230\uff0c\u66b4\u529b\u5bf9\u6297\u8bad\u7ec3\u53ef\u4f7f\u7f51\u7edc\u6b63\u89c4\u5316\uff08\u4f8b\u5982\uff0c\u89c1[23]\uff0c[90]\uff09\uff0c\u4ee5\u51cf\u5c11\u8fc7\u62df\u5408\uff0c\u8fdb\u800c\u63d0\u9ad8\u7f51\u7edc\u62b5\u6297\u5bf9\u6297\u653b\u51fb\u7684\u9c81\u68d2\u6027\u3002\u53d7\u6b64\u542f\u53d1\uff0cMiyato\u7b49\u4eba[113]\u63d0\u51fa\u4e86\u4e00\u79cd\u201c\u865a\u62df\u5bf9\u6297\u8bad\u7ec3\u201d\u65b9\u6cd5\u6765\u5e73\u6ed1\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u5206\u5e03\u3002Zheng\u7b49\u4eba[116]\u8fd8\u63d0\u51fa\u4e86\u4e00\u79cd\u76f8\u5173\u7684\u201c\u7a33\u5b9a\u6027\u8bad\u7ec3\u201d\u65b9\u6cd5\uff0c\u4ee5\u63d0\u9ad8\u795e\u7ecf\u7f51\u7edc\u5bf9\u8f93\u5165\u56fe\u50cf\u5c0f\u5931\u771f\u7684\u9c81\u68d2\u6027\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5c3d\u7ba1\u5bf9\u6297\u6027\u8bad\u7ec3\u53ef\u4ee5\u63d0\u9ad8\u795e\u7ecf\u7f51\u7edc\u7684\u9c81\u68d2\u6027\uff0c\u4f46Moosavi Dezfouli[16]\u8868\u660e\uff0c**\u5bf9\u4e8e\u5df2\u7ecf\u7ecf\u8fc7\u5bf9\u6297\u6027\u8bad\u7ec3\u7684\u7f51\u7edc\uff0c\u53ef\u4ee5\u518d\u6b21\u8ba1\u7b97\u6709\u6548\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u3002**\u4ece\u8fd9\u91cc\u5c31\u53ef\u4ee5\u770b\u51fa\u66b4\u529b\u5bf9\u6297\u5e76\u4e0d\u662f\u4e00\u79cd\u5f88\u597d\u7684\u65b9\u6cd5\uff1b\\n\\n#### *6.1.2 Data compression as defense \u3010\u6570\u636e\u538b\u7f29\u9632\u5fa1\u3011*\\n\\n\u200b\\tDziugaite\u7b49\u4eba[123]\u6307\u51fa\uff0c\u5927\u591a\u6570\u6d41\u884c\u7684\u56fe\u50cf\u5206\u7c7b\u6570\u636e\u96c6\u90fd\u5305\u542bJPG\u56fe\u50cf\u3002\u57fa\u4e8e\u8fd9\u4e00\u89c2\u5bdf\uff0c\u4ed6\u4eec\u7814\u7a76\u4e86JPG\u538b\u7f29\u5bf9FGSM\u8ba1\u7b97\u7684\u6270\u52a8\u7684\u5f71\u54cd[23]\u3002\u636e\u62a5\u9053\uff0cJPG\u538b\u7f29\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u626d\u8f6cFGSM\u6270\u52a8\u5bfc\u81f4\u7684\u5206\u7c7b\u7cbe\u5ea6\u4e0b\u964d\u3002\u7136\u800c\uff0c\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff0c\u5355\u9760\u538b\u7f29\u662f\u8fdc\u8fdc\u4e0d\u80fd\u6709\u6548\u9632\u5fa1\u7684\u3002Guo\u7b49\u4eba\u4e5f\u5bf9JPEG\u538b\u7f29\u8fdb\u884c\u4e86\u7814\u7a76\u3002\u90ed\u7b49\u4eba[82]\u4e5f\u5bf9JPEG\u538b\u7f29\u8fdb\u884c\u4e86\u7814\u7a76\uff0c\u4ee5\u964d\u4f4e\u5bf9\u6297\u6027\u56fe\u50cf\u7684\u6709\u6548\u6027\u3002Das\u7b49\u4eba[37]\u4e5f\u91c7\u53d6\u4e86\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528JPEG\u538b\u7f29\u6765\u53bb\u9664\u56fe\u50cf\u4e2d\u7684\u9ad8\u9891\u6210\u5206\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u96c6\u5408\u7684\u6280\u672f\u6765\u5bf9\u6297FGSM[23]\u548cDeepFool\u65b9\u6cd5[72]\u4ea7\u751f\u7684\u654c\u5bf9\u653b\u51fb\u3002\u5c3d\u7ba1[37]\u4e2d\u62a5\u544a\u4e86\u4ee4\u4eba\u9f13\u821e\u7684\u7ed3\u679c\uff0c\u4f46\u6ca1\u6709\u5bf9\u66f4\u5f3a\u7684\u653b\u51fb\u8fdb\u884c\u5206\u6790\u3002e.g. C&W\u653b\u51fb[36]\u3002\u6b64\u5916\uff0cShin\u548cSong[186]\u5df2\u7ecf\u8bc1\u660e\u4e86\u5b58\u5728\u80fd\u591f\u5728JPEG\u538b\u7f29\u4e2d\u5e78\u5b58\u7684\u5bf9\u6297\u6027\u793a\u4f8b\u3002\u5728\u6211\u4eec\u4e4b\u524d\u7684\u5de5\u4f5c[81]\u4e2d\uff0c\u6211\u4eec\u8fd8\u53d1\u73b0\u79bb\u6563\u4f59\u5f26\u53d8\u6362\uff08DCT\uff09\u4e0b\u7684\u538b\u7f29\u4e0d\u8db3\u4ee5\u62b5\u5fa1\u666e\u904d\u6270\u52a8[16]\u3002\u57fa\u4e8e\u538b\u7f29\u7684\u9632\u5fa1\u7684\u4e00\u4e2a\u4e3b\u8981\u9650\u5236\u662f\uff0c\u8f83\u5927\u7684\u538b\u7f29\u4e5f\u4f1a\u5bfc\u81f4\u5bf9\u5e72\u51c0\u56fe\u50cf\u7684\u5206\u7c7b\u7cbe\u5ea6\u635f\u5931\uff0c\u800c\u8f83\u5c0f\u7684\u538b\u7f29\u901a\u5e38\u4e0d\u80fd\u5145\u5206\u6d88\u9664\u5bf9\u6297\u6027\u6270\u52a8\u3002\\n\\n\u200b\\t\u5728\u53e6\u4e00\u4e2a\u76f8\u5173\u7684\u65b9\u6cd5\u4e2d\uff0cBhagoji\u7b49\u4eba[169]\u63d0\u51fa\u4f7f\u7528\u4e3b\u6210\u5206\u5206\u6790\u6765\u538b\u7f29\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u589e\u5f3a\u5bf9\u6297\u6027\u3002\u7136\u800c\uff0cXu\u7b49\u4eba[140]\u6307\u51fa\uff0c\u8fd9\u79cd\u538b\u7f29\u4e5f\u4f1a\u7834\u574f\u56fe\u50cf\u7684\u7a7a\u95f4\u7ed3\u6784\uff0c\u56e0\u6b64\u901a\u5e38\u4f1a\u5bf9\u5206\u7c7b\u6027\u80fd\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd\u3002\\n\\n#### *6.1.3 Foveation based defense \u3010\u4e2d\u5fc3\u51f9\u9632\u5fa1\u3011*\\n\\n\u200b\\tLuo\u7b49\u4eba[119]\u8bc1\u660e\uff0c\u4f7f\u7528L-BFGS[22]\u548cFGSM[23]\u7684\u5bf9\u6297\u6027\u653b\u51fb\u5177\u6709\u663e\u8457\u7684\u9c81\u68d2\u6027\uff0c\u901a\u8fc7\u5728\u56fe\u50cf\u7684\u4e0d\u540c\u533a\u57df\u5e94\u7528\u795e\u7ecf\u7f51\u7edc\u7684\u201c\u4e2d\u5fc3\u51f9\u201d\u673a\u5236\u662f\u53ef\u80fd\u7684\u3002\u5047\u8bbe\u57fa\u4e8eCNN\u7684\u5206\u7c7b\u5668\u5728\u5927\u578b\u6570\u636e\u96c6\uff08\u5982ImageNet[11]\uff09\u4e0a\u8bad\u7ec3\uff0c\u901a\u5e38\u5bf9\u56fe\u50cf\u4e2d\u5bf9\u8c61\u7684\u7f29\u653e\u548c\u5e73\u79fb\u53d8\u5316\u5177\u6709\u9c81\u68d2\u6027\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u4e0d\u53d8\u6027\u5e76\u6ca1\u6709\u6269\u5c55\u5230\u56fe\u50cf\u4e2d\u7684\u5bf9\u6297\u6a21\u5f0f\u3002\u8fd9\u4f7f\u5f97\u4e2d\u592e\u51f9\u6210\u4e3a\u4e00\u4e2a\u53ef\u884c\u7684\u9009\u62e9\uff0c\u4ee5\u51cf\u5c11\u5728[22]\uff0c[23]\u4e2d\u63d0\u51fa\u7684\u5bf9\u6297\u6027\u653b\u51fb\u7684\u6709\u6548\u6027\u3002\u7136\u800c\uff0c\u4e2d\u5fc3\u51f9\u8fd8\u6ca1\u6709\u8bc1\u660e\u5176\u6709\u6548\u6027\u66f4\u5f3a\u5927\u7684\u653b\u51fb\u3002\\n\\n#### *6.1.4 Data randomization and other methods \u3010\u6570\u636e\u968f\u673a\u5316\u548c\u5176\u4ed6\u65b9\u6cd5\u3011*\\n\\n\u200b\\tXie\u7b49\u4eba[115]\u8868\u660e\uff0c\u968f\u673a\u8c03\u6574\u654c\u5bf9\u4f8b\u5b50\u7684\u5927\u5c0f\u4f1a\u964d\u4f4e\u5176\u6709\u6548\u6027\u3002\u6b64\u5916\uff0c\u5728\u8fd9\u4e9b\u793a\u4f8b\u4e2d\u6dfb\u52a0\u968f\u673a\u586b\u5145\u4e5f\u53ef\u4ee5\u964d\u4f4e\u7f51\u7edc\u7684\u6b3a\u9a97\u7387\u3002Wang\u7b49\u4eba[138]\u7528\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u8f6c\u6362\u6a21\u5757\u8f6c\u6362\u8f93\u5165\u6570\u636e\uff0c\u4ee5\u6d88\u9664\u56fe\u50cf\u4e2d\u53ef\u80fd\u7684\u654c\u5bf9\u5e72\u6270\u3002\u5728\u6587\u732e\u4e2d\uff0c\u6211\u4eec\u8fd8\u53d1\u73b0\u6709\u8bc1\u636e\u8868\u660e\uff0c\u8bad\u7ec3\u671f\u95f4\u7684\u6570\u636e\u589e\u5f3a\uff08\u4f8b\u5982\uff0c\u9ad8\u65af\u6570\u636e\u589e\u5f3a[46]\uff09\u4e5f\u6709\u52a9\u4e8e\u63d0\u9ad8\u795e\u7ecf\u7f51\u7edc\u5bf9\u654c\u5bf9\u653b\u51fb\u7684\u9c81\u68d2\u6027\uff0c\u5c3d\u7ba1\u8fd9\u4e00\u70b9\u5f88\u5c0f\u3002\\n\\n### 6.2 Modifying the network\\n\\n\u200b\\t\u5bf9\u4e8e\u4fee\u6539\u795e\u7ecf\u7f51\u7edc\u4ee5\u62b5\u5fa1\u5bf9\u624b\u653b\u51fb\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u9996\u5148\u8ba8\u8bba\u4e86\u201c\u5b8c\u5168\u9632\u5fa1\u201d\u65b9\u6cd5\u3002\u201c\u4ec5\u68c0\u6d4b\u201d\u65b9\u6cd5\u5728\u7b2c6.2.8\u8282\u4e2d\u5355\u72ec\u8fdb\u884c\u4e86\u5ba1\u67e5\u3002\\n\\n#### *6.2.1 Deep Contractive Networks\u3010\u6df1\u5ea6\u6536\u7f29\u7f51\u7edc\u3011*\\n\\n\u200b\\t\u5728\u4f7f\u6df1\u5ea6\u5b66\u4e60\u5bf9\u5bf9\u6297\u6027\u653b\u51fb\u5177\u6709\u9c81\u68d2\u6027\u7684\u65e9\u671f\u5c1d\u8bd5\u4e2d\uff0cGu\u548cRigazio[24]\u5f15\u5165\u4e86\u6df1\u5ea6\u6536\u7f29\u7f51\u7edc\uff08DCN\uff09\u3002\u7ed3\u679c\u8868\u660e\uff0c\u53bb\u566a\u81ea\u52a8\u7f16\u7801\u5668[154]\u53ef\u4ee5\u51cf\u5c11\u5bf9\u6297\u6027\u566a\u58f0\uff0c\u4f46\u662f\u5c06\u5176\u4e0e\u539f\u59cb\u7f51\u7edc\u53e0\u52a0\u53ef\u4ee5\u4f7f\u751f\u6210\u7684\u7f51\u7edc\u66f4\u5bb9\u6613\u53d7\u5230\u5e72\u6270\u3002\u57fa\u4e8e\u8fd9\u4e00\u89c2\u5bdf\uff0cDCNs\u7684\u8bad\u7ec3\u8fc7\u7a0b\u4f7f\u7528\u4e86\u7c7b\u4f3c\u4e8e\u538b\u7f29\u81ea\u52a8\u7f16\u7801\u5668\u7684\u5e73\u6ed1\u5ea6\u60e9\u7f5a[173]\u3002\u81ea\u4eceDCNs\u6700\u521d\u88ab\u63d0\u51fa\u4ee5\u6765\uff0c\u5df2\u7ecf\u5f15\u5165\u4e86\u8bb8\u591a\u66f4\u5f3a\u7684\u653b\u51fb\u3002\u4f7f\u7528\u81ea\u52a8\u7f16\u7801\u5668\u5b9e\u73b0\u795e\u7ecf\u7f51\u7edc\u5bf9\u6297\u9c81\u68d2\u6027\u7684\u76f8\u5173\u6982\u5ff5\u4e5f\u53ef\u4ee5\u5728[141]\u4e2d\u627e\u5230\u3002\\n\\n#### *6.2.2 Gradient regularization/masking \u3010\u68af\u5ea6\u6b63\u5219\u5316/\u63a9\u853d\u3011*\\n\\n\u200b\\tRoss\u548cDoshi Velez[52]\u7814\u7a76\u4e86\u8f93\u5165\u68af\u5ea6\u6b63\u5219\u5316[167]\u4f5c\u4e3a\u5bf9\u6297\u9c81\u68d2\u6027\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u4ed6\u4eec\u7684\u65b9\u6cd5\u8bad\u7ec3\u53ef\u5fae\u6a21\u578b\uff08\u4f8b\u5982\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\uff09\uff0c\u540c\u65f6\u6839\u636e\u8f93\u5165\u7684\u53d8\u5316\u60e9\u7f5a\u5bfc\u81f4\u8f93\u51fa\u7684\u53d8\u5316\u7a0b\u5ea6\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e00\u4e2a\u5c0f\u7684\u5bf9\u6297\u6027\u6270\u52a8\u4e0d\u592a\u53ef\u80fd\u5f7b\u5e95\u6539\u53d8\u8bad\u7ec3\u6a21\u578b\u7684\u8f93\u51fa\u3002\u7ed3\u679c\u8868\u660e\uff0c\u8be5\u65b9\u6cd5\u4e0e\u66b4\u529b\u5bf9\u6297\u8bad\u7ec3\u76f8\u7ed3\u5408\uff0c\u5bf9FGSM[23]\u548cJSMA[60]\u7b49\u653b\u51fb\u5177\u6709\u5f88\u597d\u7684\u9c81\u68d2\u6027\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\u7684\u6bcf\u4e00\u79cd\u90fd\u51e0\u4e4e\u4f7f\u7f51\u7edc\u7684\u8bad\u7ec3\u590d\u6742\u5ea6\u589e\u52a0\u4e86\u4e00\u500d\uff0c\u8fd9\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u90fd\u662f\u4e0d\u53ef\u884c\u7684\u3002\\n\\n\u200b\\t\u6b64\u524d\uff0cLyu\u7b49\u4eba[28]\u8fd8\u4f7f\u7528\u4e86\u5c06\u7f51\u7edc\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\u68af\u5ea6\u4e0e\u8f93\u5165\u76f8\u5173\u7684\u6982\u5ff5\uff0c\u4ee5\u7ed3\u5408\u7f51\u7edc\u5bf9\u57fa\u4e8eL-BFGS[22]\u548cFGSM[23]\u7684\u653b\u51fb\u7684\u9c81\u68d2\u6027\u3002\u7c7b\u4f3c\u5730\uff0cShaham\u7b49\u4eba[27]\u8bd5\u56fe\u901a\u8fc7\u5728\u6bcf\u6b21\u53c2\u6570\u66f4\u65b0\u65f6\u6700\u5c0f\u5316\u6a21\u578b\u5728\u5bf9\u6297\u6027\u793a\u4f8b\u4e2d\u7684\u635f\u5931\u6765\u63d0\u9ad8\u795e\u7ecf\u7f51\u7edc\u7684\u5c40\u90e8\u7a33\u5b9a\u6027\u3002\u4ed6\u4eec\u7528\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u800c\u4e0d\u662f\u539f\u59cb\u6570\u636e\u6765\u6700\u5c0f\u5316\u6a21\u578b\u7684\u635f\u5931\u3002\u5728\u4e00\u9879\u76f8\u5173\u7684\u5de5\u4f5c\u4e2d\uff0cNguyen\u548cSinha[44]\u901a\u8fc7\u5728\u7f51\u7edc\u7684logit\u8f93\u51fa\u4e2d\u6dfb\u52a0\u566a\u58f0\uff0c\u5f15\u5165\u4e86\u4e00\u79cd\u57fa\u4e8e\u63a9\u853d\u7684\u9632\u5fa1C&W\u653b\u51fb\u7684\u65b9\u6cd5[36]\u3002\\n\\n#### *6.2.3 Defensive distillation \u3010\u9632\u5fa1\u84b8\u998f\u3011*\\n\\n\u200b\\tPapernot\u7b49\u4eba[38]\u5229\u7528\u4e86\u201c\u84b8\u998f\u201d\u7684\u6982\u5ff5[166]\uff0c\u4f7f\u5f97\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u80fd\u591f\u62b5\u5fa1\u5bf9\u624b\u7684\u653b\u51fb\u3002Hinton\u7b49\u4eba[166]\u5f15\u5165\u84b8\u998f\u4f5c\u4e3a\u4e00\u79cd\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u5c06\u66f4\u590d\u6742\u7f51\u7edc\u7684\u77e5\u8bc6\u8f6c\u79fb\u5230\u66f4\u5c0f\u7684\u7f51\u7edc\u4e2d\u3002Papernot\u7b49\u4eba[38]\u5f15\u5165\u7684\u7a0b\u5e8f\u53d8\u4f53\u672c\u8d28\u4e0a\u662f\u5229\u7528\u7f51\u7edc\u7684\u77e5\u8bc6\u6765\u63d0\u9ad8\u81ea\u8eab\u7684\u5065\u58ee\u6027\u3002\u4ee5\u8bad\u7ec3\u6570\u636e\u7684\u7c7b\u6982\u7387\u5411\u91cf\u7684\u5f62\u5f0f\u63d0\u53d6\u77e5\u8bc6\uff0c\u5e76\u53cd\u9988\u8bad\u7ec3\u539f\u59cb\u6a21\u578b\u3002\u7ed3\u679c\u8868\u660e\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u63d0\u9ad8\u7f51\u7edc\u5bf9\u56fe\u50cf\u5c0f\u6270\u52a8\u7684\u6062\u590d\u80fd\u529b\u3002[108]\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u8fd9\u65b9\u9762\u7684\u8fdb\u4e00\u6b65\u7ecf\u9a8c\u8bc1\u636e\u3002\u6b64\u5916\uff0c\u5728\u540e\u7eed\u5de5\u4f5c\u4e2d\uff0cPapernot\u7b49\u4eba[84]\u8fd8\u901a\u8fc7\u89e3\u51b3[38]\u4e2d\u9047\u5230\u7684\u6570\u503c\u4e0d\u7a33\u5b9a\u6027\uff0c\u6269\u5c55\u4e86\u9632\u5fa1\u84b8\u998f\u65b9\u6cd5\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7b2c3.1\u8282\u4e2d\u4ecb\u7ecd\u7684\u201c\u5361\u91cc\u5c3c\u548c\u74e6\u683c\u7eb3\u201d\uff08C&W\uff09\u653b\u51fb[36]\u88ab\u8ba4\u4e3a\u662f\u6210\u529f\u5bf9\u6297\u9632\u5fa1\u84b8\u998f\u6280\u672f\u7684\u3002\u6211\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u9632\u5fa1\u84b8\u998f\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u201c\u68af\u5ea6\u63a9\u853d\u201d\u6280\u672f\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u7136\u800c\uff0c\u9274\u4e8e\u5176\u5728\u6587\u732e\u4e2d\u7684\u6d41\u884c\u6027\uff0c\u6211\u4eec\u5c06\u5176\u5355\u72ec\u63cf\u8ff0\u3002\\n\\n#### *6.2.4 Biologically inspired protection*\\n\\n\u200b\\tNayebi\u548cGanguli[124]\u8bc1\u660e\u4e86\u795e\u7ecf\u7f51\u7edc\u5bf9\u5177\u6709\u9ad8\u5ea6\u975e\u7ebf\u6027\u6fc0\u6d3b\u7684\u5bf9\u6297\u6027\u653b\u51fb\u7684\u81ea\u7136\u9c81\u68d2\u6027\uff08\u7c7b\u4f3c\u4e8e\u975e\u7ebf\u6027\u6811\u7a81\u8ba1\u7b97\uff09\u3002Nayebi\u548cGanguli[124]\u8bc1\u660e\u4e86\u795e\u7ecf\u7f51\u7edc\u5bf9\u5177\u6709\u9ad8\u5ea6\u975e\u7ebf\u6027\u6fc0\u6d3b\u7684\u5bf9\u6297\u6027\u653b\u51fb\u5177\u6709\u81ea\u7136\u9c81\u68d2\u6027\uff08\u7c7b\u4f3c\u4e8e\u975e\u7ebf\u6027\u6811\u7a81\u8ba1\u7b97\uff09\\n\\n\u200b\\tKrotov\u548cHopfield[127]\u7684\u8bb0\u5fc6\u6a21\u578b\u4e5f\u91c7\u7528\u4e86\u7c7b\u4f3c\u7684\u539f\u7406\u6765\u62b5\u6297\u5bf9\u6297\u6027\u4f8b\u5b50\u3002\u8003\u8651\u5230Goodfel-low\u7b49\u4eba[23]\u3001[124]\u548c[127]\u7684\u7ebf\u6027\u5047\u8bbe\uff0c\u73b0\u4ee3\u795e\u7ecf\u7f51\u7edc\u5bf9\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u654f\u611f\u6027\u4f3c\u4e4e\u662f\u6fc0\u6d3b\u7ebf\u6027\u6548\u5e94\u7684\u6982\u5ff5\u5f97\u5230\u4e86\u8fdb\u4e00\u6b65\u7684\u53d1\u5c55\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0cBrendel\u548cBethge[187]\u58f0\u79f0\uff0c\u7531\u4e8e\u8ba1\u7b97\u7684\u6570\u503c\u9650\u5236\uff0c\u8fd9\u4e9b\u653b\u51fb\u5728\u751f\u7269\u542f\u53d1\u4fdd\u62a4\uff08Biologically inspired protection\uff09[124]\u4e0a\u653b\u51fb\u5931\u8d25\u3002\u7a33\u5b9a\u8ba1\u7b97\uff08Stabilizing the computations\uff09\u518d\u6b21\u6210\u529f\u653b\u51fb\u53d7\u4fdd\u62a4\u7684\u7f51\u7edc\u3002\\n\\n#### *6.2.5 Parseval Networks*\\n\\n\u200b\\t\u897f\u585e\u7b49\u4eba[131]\u63d0\u51fa\u4e86\u201cParseval\u201d\u7f51\u7edc\u4f5c\u4e3a\u5bf9\u6297\u6027\u653b\u51fb\u7684\u9632\u5fa1\u3002\u8fd9\u4e9b\u7f51\u7edc\u901a\u8fc7\u63a7\u5236\u7f51\u7edc\u7684\u5168\u5c40Lipschitz\u5e38\u6570\u91c7\u7528\u5206\u5c42\u6b63\u5219\u5316\u3002\u8003\u8651\u5230\u4e00\u4e2a\u7f51\u7edc\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u7ec4\u5408\uff08\u5728\u6bcf\u4e00\u5c42\uff09\uff0c\u901a\u8fc7\u4e3a\u8fd9\u4e9b\u51fd\u6570\u4fdd\u6301\u4e00\u4e2a\u5c0f\u7684Lipschitz\u5e38\u6570\uff0c\u53ef\u4ee5\u5bf9\u5c0f\u7684\u8f93\u5165\u6270\u52a8\u8fdb\u884c\u9c81\u68d2\u6027\u5904\u7406\u3002Cisse\u7b49\u4eba\u63d0\u51fa\u901a\u8fc7\u7528\u201cparseval\u7d27\u6846\u67b6\u201d\u53c2\u6570\u5316\u7f51\u7edc\u7684\u6743\u91cd\u77e9\u9635\u6765\u63a7\u5236\u5176\u8c31\u8303\u6570[172]\uff0c\u56e0\u6b64\u547d\u540d\u4e3a\u201cparseval\u201d\u7f51\u7edc\u3002\\n\\n#### *6.2.6 DeepCloak*\\n\\nGao\u7b49\u4eba[139]\u5efa\u8bae\u5728\u5904\u7406\u5206\u7c7b\u7684\u5c42\u4e4b\u524d\u63d2\u5165\u4e00\u4e2a\u63a9\u853d\u5c42\u3002\u6dfb\u52a0\u7684\u5c42\u901a\u8fc7\u5411\u524d\u4f20\u9012\u5e72\u51c0\u7684\u548c\u654c\u5bf9\u7684\u4e00\u5bf9\u56fe\u50cf\u8fdb\u884c\u663e\u5f0f\u8bad\u7ec3\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u56fe\u50cf\u5bf9\u7684\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u7279\u5f81\u4e4b\u95f4\u7684\u5dee\u5f02\u8fdb\u884c\u7f16\u7801\u3002\u6709\u4eba\u8ba4\u4e3a\uff0c\u6dfb\u52a0\u5c42\u4e2d\u6700\u4e3b\u8981\u7684\u6743\u91cd\u5bf9\u5e94\u4e8e\u7f51\u7edc\u4e2d\u6700\u654f\u611f\u7684\u7279\u5f81\uff08\u5c31\u5bf9\u6297\u6027\u64cd\u7eb5\u800c\u8a00\uff09\u3002\u56e0\u6b64\uff0c\u5728\u5206\u7c7b\u65f6\uff0c\u8fd9\u4e9b\u7279\u5f81\u901a\u8fc7\u5f3a\u5236\u5c06\u6dfb\u52a0\u5c42\u7684\u4e3b\u8981\u6743\u91cd\u8bbe\u4e3a\u96f6\u6765\u63a9\u76d6\u3002\\n\\n#### *6.2.7 Miscellaneous approaches*\\n\\nZantedeschi\u7b49\u4eba[46]\u63d0\u51fa\u4f7f\u7528\u6709\u754cReLU[174]\u6765\u964d\u4f4e\u56fe\u50cf\u4e2d\u654c\u5bf9\u6a21\u5f0f\u7684\u6709\u6548\u6027\uff0c\u8fd9\u662f\u4f7f\u795e\u7ecf\u7f51\u7edc\u5bf9\u654c\u5bf9\u653b\u51fb\u5177\u6709\u9c81\u68d2\u6027\u7684\u5176\u4ed6\u663e\u8457\u52aa\u529b\u4e4b\u4e00\u3002Jin\u7b49\u4eba[120]\u4ecb\u7ecd\u4e86\u4e00\u79cd\u524d\u9988CNN\uff0c\u5b83\u4f7f\u7528\u52a0\u6027\u566a\u58f0\u6765\u51cf\u8f7b\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u5f71\u54cd\u3002Sun\u7b49\u4eba[56]\u63d0\u51fa\u4e86\u201c\u8d85\u7f51\u7edc\u201d\uff0c\u5b83\u4f7f\u7528\u7edf\u8ba1\u6ee4\u6ce2\u4f5c\u4e3a\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u7f51\u7edc\u5065\u58ee\u3002Madry\u7b49\u4eba[55]\u4ece\u7a33\u5065\u4f18\u5316\u7684\u89d2\u5ea6\u7814\u7a76\u4e86\u5bf9\u6297\u6027\u9632\u5fa1\u3002\u4ed6\u4eec\u8868\u660e\uff0c\u4e0ePGD\u5bf9\u624b\u8fdb\u884c\u5bf9\u6297\u6027\u8bad\u7ec3\u53ef\u4ee5\u6210\u529f\u5730\u9632\u5fa1\u4e00\u7cfb\u5217\u5176\u4ed6\u5bf9\u624b\u3002\u540e\u6765\uff0c\u5361\u91cc\u5c3c\u7b49\u4eba[59]\u4e5f\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u89c2\u5bdf\u7ed3\u679c\u3002Na\u7b49\u4eba[85]\u91c7\u7528\u4e86\u4e00\u79cd\u7f51\u7edc\uff0c\u8be5\u7f51\u7edc\u901a\u8fc7\u7edf\u4e00\u7684\u5d4c\u5165\u8fdb\u884c\u6b63\u5219\u5316\uff0c\u7528\u4e8e\u5206\u7c7b\u548c\u4f4e\u6c34\u5e73\u7684\u76f8\u4f3c\u6027\u5b66\u4e60\u3002\u5229\u7528\u5e72\u51c0\u5d4c\u5165\u548c\u76f8\u5e94\u7684\u654c\u5bf9\u5d4c\u5165\u4e4b\u95f4\u7684\u8ddd\u79bb\u5bf9\u7f51\u7edc\u8fdb\u884c\u60e9\u7f5a\u3002\u65af\u7279\u52b3\u65af\u7b49\u4eba[89]\u7814\u7a76\u4e86\u4e00\u7cfb\u5217\u65b9\u6cd5\u6765\u4fdd\u62a4\u7f51\u7edc\u514d\u53d7\u5e72\u6270\u3002Kadran\u7b49\u4eba[136]\u4fee\u6539\u4e86\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u5c42\uff0c\u4ee5\u589e\u5f3a\u5bf9\u6297\u6027\u653b\u51fb\u7684\u9c81\u68d2\u6027\u3002\\n\\nWang\u7b49\u4eba[129]\uff0c[122]\u901a\u8fc7\u5229\u7528\u7f51\u7edc\u4e2d\u7684\u4e0d\u53ef\u9006\u6570\u636e\u8f6c\u6362\u5f00\u53d1\u4e86\u53ef\u4ee5\u62b5\u6297\u795e\u7ecf\u5bf9\u6297\u6837\u672c\u7684\u795e\u7ecf\u7f51\u7edc\u3002Lee\u7b49\u4eba[106]\u5f00\u53d1\u4e86\u591a\u79cd\u89c4\u5219\u5316\u7f51\u7edc\uff0c\u4f7f\u7528\u8bad\u7ec3\u76ee\u6807\u6700\u5c0f\u5316\u5e72\u51c0\u56fe\u50cf\u548c\u654c\u5bf9\u56fe\u50cf\u7684\u591a\u5c42\u5d4c\u5165\u7ed3\u679c\u4e4b\u95f4\u7684\u5dee\u5f02\u3002Kotler\u548cWong[96]\u63d0\u51fa\u5b66\u4e60\u57fa\u4e8eReLU\u7684\u5206\u7c7b\u5668\uff0c\u8be5\u5206\u7c7b\u5668\u5bf9\u5c0f\u7684\u5bf9\u6297\u6027\u6270\u52a8\u5177\u6709\u9c81\u68d2\u6027\u3002\u4ed6\u4eec\u8bad\u7ec3\u7684\u795e\u7ecf\u7f51\u7edc\u8fbe\u5230\u9ad8\u7cbe\u5ea6\uff08> 90%\uff09\u5bf9\u6297\u89c4\u8303\u73af\u5883\u4e2d\u7684\u4efb\u4f55\u5bf9\u6297\u6837\u672c\uff08$\\\\epsilon=0.1$ for $\\\\ell_{\\\\infty}$\uff0c\u5728MNIST\u6570\u636e\u96c6\u5f53\u4e2d\uff09\u3002Raghunathan\u7b49\u4eba[189]\u7814\u7a76\u4e86\u5177\u6709\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u9632\u5fa1\u95ee\u9898\u3002\u4ed6\u4eec\u7684\u65b9\u6cd5\u5728MNIST\u6570\u636e\u96c6\u4e0a\u751f\u6210\u4e86\u4e00\u4e2a\u7f51\u7edc\u548c\u4e00\u4e2a\u8bc1\u4e66\uff0c\u4f7f\u5f97\u5bf9\u56fe\u50cf\u50cf\u7d20\u7684\u5e72\u6270\u4e0d\u8d85\u8fc7\u03b5=0.1\u7684\u653b\u51fb\u90fd\u4e0d\u4f1a\u5bfc\u81f4\u8d85\u8fc735%\u7684\u6d4b\u8bd5\u9519\u8bef\u3002Kolter\u548cWong[96]\u4ee5\u53caRaghunathan\u7b49\u4eba[189]\u662f\u4e3a\u6570\u4e0d\u591a\u7684\u9632\u5fa1\u654c\u5bf9\u653b\u51fb\u7684\u53ef\u8bc1\u660e\u65b9\u6cd5\u3002\u8003\u8651\u5230\u8fd9\u4e9b\u65b9\u6cd5\u5728\u8ba1\u7b97\u4e0a\u4e0d\u9002\u7528\u4e8e\u66f4\u5927\u7684\u7f51\u7edc\uff0c\u552f\u4e00\u88ab\u5e7f\u6cdb\u8bc4\u4f30\u7684\u9632\u5fa1\u63aa\u65bd\u662fMadry\u7b49\u4eba[55]\u7684\u9632\u5fa1\u63aa\u65bd\uff0c\u5728MNIST\u4e0a\u5bf9\u5927epsilon\uff080.3/1\uff09\u7684\u51c6\u786e\u7387\u4e3a89%\uff0c\u5728CIFAR\u4e0a\u5bf9\u4e2d\u7b49epsilon\uff088/255\uff09\u7684\u51c6\u786e\u7387\u4e3a45%\u3002\u53e6\u4e00\u4e2a\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5177\u6709\u4fdd\u8bc1\u7684\u5bf9\u6297\u6027\u653b\u51fb/\u9632\u5fa1\u7684\u5de5\u4f5c\u7ebf\u7d22\u4e0e\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u9a8c\u8bc1\u6709\u5173\uff0c\u4f8b\u5982[191]\uff0c[192]\u3002OrOrbia\u7b49\u4eba[194]\u7684\u7814\u7a76\u8868\u660e\uff0c\u5bf9\u6297\u6027\u8bad\u7ec3\u7684\u8bb8\u591a\u4e0d\u540c\u5efa\u8bae\u662f\u66f4\u666e\u904d\u7684\u6b63\u89c4\u5316\u76ee\u6807\u5b9e\u4f8b\uff0c\u4ed6\u4eec\u79f0\u4e4b\u4e3aDataGrad\u3002\u63d0\u51fa\u7684DataGrad\u6846\u67b6\u53ef\u4ee5\u770b\u4f5c\u662f\u5206\u5c42\u538b\u7f29\u81ea\u7f16\u7801\u60e9\u7f5a\u7684\u6269\u5c55\u3002\\n\\n#### *6.2.8 Detection Only approaches*\\n\\n**SafetyNet:** Lu\u7b49\u4eba[66]\u5047\u8bbe\uff0c\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u5728\u7f51\u7edc\uff08\u540e\u671f\uff09\u4e2d\u4ea7\u751f\u7684ReLU\u6fc0\u6d3b\u6a21\u5f0f\u4e0e\u5e72\u51c0\u56fe\u50cf\u4ea7\u751f\u7684\u6a21\u5f0f\u4e0d\u540c\u3002\u57fa\u4e8e\u8fd9\u4e00\u5047\u8bbe\uff0c\u4ed6\u4eec\u63d0\u51fa\u5728\u76ee\u6807\u6a21\u578b\u4e0a\u9644\u52a0\u4e00\u4e2a\u5f84\u5411\u57fa\u51fd\u6570SVM\u5206\u7c7b\u5668\uff0c\u4f7f\u5f97SVM\u4f7f\u7528\u7531\u7f51\u7edc\u540e\u671fReLUs\u8ba1\u7b97\u7684\u79bb\u6563\u7801\u3002\u4e3a\u4e86\u68c0\u6d4b\u6d4b\u8bd5\u56fe\u50cf\u4e2d\u7684\u6270\u52a8\uff0c\u4f7f\u7528\u652f\u6301\u5411\u91cf\u673a\u5c06\u5176\u7f16\u7801\u4e0e\u8bad\u7ec3\u6837\u672c\u7684\u7f16\u7801\u8fdb\u884c\u6bd4\u8f83\u3002\u7531[23]\u3001[35]\u3001[72]\u751f\u6210\u7684\u5bf9\u6297\u6027\u793a\u4f8b\u7684\u6709\u6548\u68c0\u6d4b\u901a\u8fc7\u5176\u6846\u67b6SafetyNet\u8fdb\u884c\u4e86\u8bc1\u660e\u3002\\n\\n**Detector subnetwork**: Metzen\u7b49\u4eba[78]\u63d0\u51fa\u7528\u4e00\u4e2a\u5b50\u7f51\u6765\u589e\u5f3a\u76ee\u6807\u7f51\u7edc\uff0c\u8be5\u5b50\u7f51\u88ab\u8bad\u7ec3\u7528\u4e8e\u68c0\u6d4b\u8f93\u5165\u4e2d\u7684\u654c\u5bf9\u6270\u52a8\u7684\u4e8c\u8fdb\u5236\u5206\u7c7b\u4efb\u52a1\u3002\u7814\u7a76\u8868\u660e\uff0c\u5c06\u8fd9\u6837\u7684\u7f51\u7edc\u9644\u52a0\u5230\u6a21\u578b\u7684\u5185\u90e8\u5c42\u5e76\u4f7f\u7528\u5bf9\u6297\u6027\u8bad\u7ec3\u6709\u52a9\u4e8e\u68c0\u6d4b\u4f7f\u7528FGSM[23]\u3001BIM[35]\u548cDeepFool[72]\u65b9\u6cd5\u4ea7\u751f\u7684\u6270\u52a8\u3002\u7136\u800c\uff0cLu\u7b49\u4eba[66]\u540e\u6765\u8868\u660e\uff0c\u8fd9\u79cd\u65b9\u6cd5\u540c\u6837\u5bb9\u6613\u53d7\u5230\u53cd\u63aa\u65bd\u7684\u5f71\u54cd\u3002\\n\\n**Exploiting convolution filter statistics**: Li\u548cLi[105]\u5229\u7528\u57fa\u4e8eCNN\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\u5377\u79ef\u6ee4\u6ce2\u5668\u7684\u7edf\u8ba1\u7279\u6027\u5c06\u8f93\u5165\u56fe\u50cf\u5206\u7c7b\u4e3a\u5e72\u51c0\u7684\u6216\u654c\u5bf9\u7684\u3002\u5229\u7528\u8fd9\u4e9b\u7edf\u8ba1\u91cf\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7ea7\u8054\u5206\u7c7b\u5668\uff0c\u5e76\u5bf9\u6587\u732e[22]\u3001[114]\u4e2d\u65b9\u6cd5\u751f\u6210\u768485%\u4ee5\u4e0a\u7684\u5bf9\u6297\u6027\u56fe\u50cf\u8fdb\u884c\u4e86\u68c0\u6d4b\u3002\\n\\n**Additional class augmentation**: Grosse\u7b49\u4eba[57]\u63d0\u51fa\u7528\u4e00\u4e2a\u989d\u5916\u7684\u7c7b\u6765\u589e\u5f3a\u6f5c\u5728\u7684\u76ee\u6807\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u6a21\u578b\u88ab\u8bad\u7ec3\u6765\u5206\u7c7b\u6240\u6709\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u3002Hosseini\u7b49\u4eba[32]\u4e5f\u91c7\u7528\u4e86\u7c7b\u4f3c\u7684\u7b56\u7565\u6765\u68c0\u6d4b\u9ed1\u5323\u5b50\u653b\u51fb\u3002\\n\\n### 6.3 **Network add-ons**\\n\\n####  *6.3.1 Defense against universal perturbations*\\n\\nAkhtar\u7b49\u4eba[81]\u63d0\u51fa\u4e86\u4e00\u4e2a\u9632\u5fa1\u6846\u67b6\uff0c\u4ee5\u62b5\u6297\u4f7f\u7528\u666e\u904d\u6270\u52a8\u4ea7\u751f\u7684\u5bf9\u6297\u6027\u653b\u51fb[16]\u3002\u8be5\u6846\u67b6\u5c06\u989d\u5916\u7684\u201c\u9884\u8f93\u5165\u201d\u5c42\u9644\u52a0\u5230\u76ee\u6807\u7f51\u7edc\u4e2d\uff0c\u5e76\u8bad\u7ec3\u5b83\u4eec\u6821\u6b63\u6bcf\u4e00\u4e2aturbed\u56fe\u50cf\uff0c\u4ee5\u4fbf\u5206\u7c7b\u5668\u7684\u9884\u6d4b\u4e0e\u5bf9\u540c\u4e00\u56fe\u50cf\u7684\u5e72\u51c0\u7248\u672c\u7684\u9884\u6d4b\u76f8\u540c\u3002\u9884\u8f93\u5165\u5c42\u79f0\u4e3a\u6270\u52a8\u6821\u6b63\u7f51\u7edc\uff08PRN\uff09\uff0c\u5728\u4e0d\u66f4\u65b0\u76ee\u6807\u7f51\u7edc\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\u5bf9\u5176\u8fdb\u884c\u8bad\u7ec3\u3002\u901a\u8fc7\u4ece\u8bad\u7ec3\u56fe\u50cf\u7684PRN\u8f93\u5165-\u8f93\u51fa\u5dee\u5f02\u4e2d\u63d0\u53d6\u7279\u5f81\u6765\u8bad\u7ec3\u5355\u72ec\u7684\u68c0\u6d4b\u5668\u3002\u6d4b\u8bd5\u56fe\u50cf\u9996\u5148\u901a\u8fc7PRN\uff0c\u7136\u540e\u5229\u7528\u5176\u7279\u5f81\u68c0\u6d4b\u6270\u52a8\u3002\u5982\u679c\u68c0\u6d4b\u5230\u5bf9\u6297\u6027\u5e72\u6270\uff0c\u5219\u4f7f\u7528PRN\u7684\u8f93\u51fa\u5bf9\u6d4b\u8bd5\u56fe\u50cf\u8fdb\u884c\u5206\u7c7b\u3002\u56fe10\u793a\u51fa\u4e86\u7531PRN\u6267\u884c\u7684\u6821\u6b63\u3002\u5bf9\u53bb\u9664\u7684\u6a21\u5f0f\u5206\u522b\u8fdb\u884c\u68c0\u6d4b\u5206\u6790\u3002\\n\\n#### *6.3.2 GAN-based defense*\\n\\n\u200b\\tLee\u7b49\u4eba[101]\u4f7f\u7528\u6d41\u884c\u7684\u751f\u6210\u6027\u5bf9\u6297\u7f51\u7edc\u6846\u67b6[153]\u6765\u8bad\u7ec3\u5bf9FGSM[23]\u7c7b\u653b\u51fb\u5177\u6709\u9c81\u68d2\u6027\u7684\u7f51\u7edc\u3002\u4f5c\u8005\u5efa\u8bae\u76f4\u63a5\u6cbf\u7740generator network\u8bad\u7ec3\u7f51\u7edc\uff0c\u8bd5\u56fe\u4e3a\u8be5\u7f51\u7edc\u4ea7\u751f\u6270\u52a8\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5206\u7c7b\u5668\u4e0d\u65ad\u5c1d\u8bd5\u6b63\u786e\u5206\u7c7b\u5e72\u51c0\u7684\u548c\u53d7\u5e72\u6270\u7684\u56fe\u50cf\u3002\u6211\u4eec\u5c06\u6b64\u6280\u672f\u5f52\u7c7b\u4e3a\u201c\u9644\u52a0\u201d\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4f5c\u8005\u5efa\u8bae\u59cb\u7ec8\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8bad\u7ec3\u4efb\u4f55\u7f51\u7edc\u3002\u5728\u53e6\u4e00\u4e2a\u57fa\u4e8eGAN\u7684\u9632\u5fa1\u4e2d\uff0cShen\u7b49\u4eba[58]\u4f7f\u7528\u7f51\u7edc\u7684\u751f\u6210\u5668\u90e8\u5206\u6765\u6821\u6b63\u6270\u52a8\u56fe\u50cf\u3002\\n\\n#### *6.3.3 Detection Only approaches*\\n\\n**Feature squeezing:** Xu\u7b49\u4eba[43]\u63d0\u51fa**\u5229\u7528\u7279\u5f81\u538b\u7f29\u6765\u68c0\u6d4b\u56fe\u50cf\u7684\u5bf9\u6297\u6027\u6270\u52a8**\u3002\u4ed6\u4eec\u5c06\u4e24\u4e2a\u5916\u90e8\u6a21\u578b\u6dfb\u52a0\u5230\u5206\u7c7b\u5668\u7f51\u7edc\u4e2d\uff0c\u8fd9\u6837\u8fd9\u4e9b\u6a21\u578b\u53ef\u4ee5\u51cf\u5c11\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u4f4d\u6df1\u5ea6\uff0c\u5e76\u5bf9\u56fe\u50cf\u8fdb\u884c\u7a7a\u95f4\u5e73\u6ed1\u3002\u6bd4\u8f83\u4e86\u76ee\u6807\u7f51\u7edc\u5bf9\u539f\u59cb\u56fe\u50cf\u548c\u538b\u7f29\u56fe\u50cf\u7684\u9884\u6d4b\u3002\u5982\u679c\u9884\u6d4b\u7ed3\u679c\u4e4b\u95f4\u5b58\u5728\u8f83\u5927\u5dee\u5f02\uff0c\u5219\u8be5\u56fe\u50cf\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5bf9\u6297\u6027\u7684\u4f8b\u5b50\u3002\u5c3d\u7ba1[43]\u8bc1\u660e\u4e86\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u66f4\u7ecf\u5178\u7684\u653b\u51fb\u7684\u6709\u6548\u6027[23]\uff0c\u4f46\u540e\u7eed\u5de5\u4f5c[140]\u4e5f\u58f0\u79f0\u8be5\u65b9\u6cd5\u5bf9\u66f4\u5f3a\u5927\u7684C&W\u653b\u51fb\u7684\u6548\u679c\u76f8\u5f53\u597d[36]\u3002\u4ed6\u7b49\u4eba[76]\u8fd8\u5c06\u7279\u5f81\u538b\u7f29\u4e0e[175]\u4e2d\u63d0\u51fa\u7684\u7cfb\u7efc\u65b9\u6cd5\u76f8\u7ed3\u5408\uff0c\u4ee5\u8868\u660e\u9632\u5fa1\u7684\u5f3a\u5ea6\u5e76\u4e0d\u603b\u662f\u901a\u8fc7\u7ec4\u5408\u5b83\u4eec\u800c\u589e\u52a0\u3002\\n\\n**MagNet:** Meng\u548cChen[45]\u63d0\u51fa\u4e86\u4e00\u4e2a\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u5916\u90e8\u63a2\u6d4b\u5668\u5c06\u8f93\u5165\u56fe\u50cf\u5206\u7c7b\u4e3a\u654c\u5bf9\u6216\u5e72\u51c0\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8be5\u6846\u67b6\u65e8\u5728\u5b66\u4e60\u591a\u79cd\u6e05\u6670\u56fe\u50cf\u3002\u5728\u6d4b\u8bd5\u9636\u6bb5\uff0c\u53d1\u73b0\u8fdc\u79bb\u6d41\u5f62\u7684\u56fe\u50cf\u88ab\u89c6\u4e3a\u5bf9\u6297\u6027\u7684\uff0c\u5e76\u88ab\u62d2\u7edd\u3002\u9760\u8fd1\u6d41\u5f62\uff08\u4f46\u4e0d\u5b8c\u5168\u5728\u6d41\u5f62\u4e0a\uff09\u7684\u56fe\u50cf\u603b\u662f\u88ab\u91cd\u7ec4\u4e3a\u4f4d\u4e8e\u6d41\u5f62\u4e0a\uff0c\u5e76\u4e14\u5206\u7c7b\u5668\u88ab\u9001\u5165\u91cd\u7ec4\u540e\u7684\u56fe\u50cf\u3002\u5c06\u9644\u8fd1\u7684\u56fe\u50cf\u5438\u5f15\u5230\u5e72\u51c0\u56fe\u50cf\u7684\u6d41\u5f62\u4e2d\uff0c\u5e76\u5c06\u8fdc\u5904\u7684\u56fe\u50cf\u4e22\u5f03\u7684\u6982\u5ff5\u4e5f\u542f\u53d1\u4e86\u6846\u67b6\u7684\u540d\u79f0\uff0c\u5373\u78c1\u94c1\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5361\u91cc\u5c3c\u548c\u74e6\u683c\u7eb3\uff08Carlini and Wagner\uff09[188]\u6700\u8fd1\u8bc1\u660e\uff0c\u8fd9\u79cd\u9632\u5fa1\u6280\u672f\u4e5f\u53ef\u4ee5\u5728\u7a0d\u5927\u7684\u6270\u52a8\u4e0b\u88ab\u51fb\u8d25\u3002\\n\\n**\u5176\u4ed6\u65b9\u6cd5\uff1a**Liang\u7b49\u4eba[50]\u5c06\u56fe\u50cf\u7684\u6270\u52a8\u89c6\u4e3a\u566a\u58f0\uff0c\u5e76\u4f7f\u7528\u6807\u91cf\u91cf\u5316\u548c\u7a7a\u95f4\u5e73\u6ed1\u6ee4\u6ce2\u5668\u5206\u522b\u68c0\u6d4b\u8fd9\u4e9b\u6270\u52a8\u3002\u5728\u4e00\u4e2a\u76f8\u5173\u7684\u65b9\u6cd5\u4e2d\uff0cFeinman\u7b49\u4eba[86]\u63d0\u51fa\u901a\u8fc7\u5229\u7528\u4e0d\u786e\u5b9a\u6027\u4f30\u8ba1\uff08of dropout neural networks\uff09\u548c\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7279\u5f81\u7a7a\u95f4\u4e2d\u6267\u884c\u5bc6\u5ea6\u4f30\u8ba1\u6765\u68c0\u6d4b\u5bf9\u6297\u6027\u6270\u52a8\u3002\u6700\u540e\uff0c\u5229\u7528\u6240\u63d0\u51fa\u7684\u7279\u5f81\uff0c\u5c06\u5355\u72ec\u7684\u4e8c\u503c\u5206\u7c7b\u5668\u8bad\u7ec3\u6210\u591a\u793a\u4f8b\u68c0\u6d4b\u5668\u3002Gebhart\u548cSchrater[92]\u5c06\u795e\u7ecf\u7f51\u7edc\u8ba1\u7b97\u89c6\u4e3a\u56fe\u4e2d\u7684\u4fe1\u606f\u6d41\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u901a\u8fc7\u5bf9\u8bf1\u5bfc\u56fe\u5e94\u7528\u6301\u4e45\u540c\u8c03\u6765\u68c0\u6d4b\u5bf9\u6297\u6027\u6270\u52a8\u7684\u65b9\u6cd5\u3002\\n\\n## 7 OUTLOOK OF THE RESEARCH DIRECTION\\n\\n\u200b\\t\u5728\u524d\u9762\u7684\u51e0\u8282\u4e2d\uff0c\u6211\u4eec\u5168\u9762\u56de\u987e\u4e86\u6700\u8fd1\u5173\u4e8e\u5bf9\u6297\u6027\u653b\u51fb\u6df1\u5ea6\u5b66\u4e60\u7684\u6587\u732e\u3002\u5c3d\u7ba1\u5728\u6280\u672f\u7ec6\u8282\u7684\u8fd9\u4e9b\u90e8\u5206\u4e2d\u62a5\u544a\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u5b9e\uff0c\u4f46\u4e0b\u9762\u6211\u4eec\u5c06\u5bf9\u8fd9\u4e00\u65b0\u5174\u7814\u7a76\u65b9\u5411\u8fdb\u884c\u66f4\u4e00\u822c\u6027\u7684\u89c2\u5bdf\u3002\u5728\u6ca1\u6709\u6df1\u5165\u4e86\u89e3\u8fd9\u4e00\u9886\u57df\u7684\u6280\u672f\u77e5\u8bc6\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba8\u8bba\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e86\u66f4\u5e7f\u9614\u7684\u524d\u666f\u3002\u6211\u4eec\u7684\u8bba\u70b9\u662f\u57fa\u4e8e\u4e0a\u8ff0\u6587\u732e\u3002\\n\\n**\u8fd9\u79cd\u5a01\u80c1\u662f\u771f\u5b9e\u5b58\u5728\u7684\uff1a**\u867d\u7136\u5f88\u5c11\u6709\u7814\u7a76\u8868\u660e\uff0c\u5bf9\u6297\u6027\u653b\u51fb\u6df1\u5ea6\u5b66\u4e60\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u4f46\u5927\u91cf\u76f8\u5173\u6587\u732e\u8868\u660e\u5e76\u975e\u5982\u6b64\u3002\u5728\u7b2c3\u8282\u548c\u7b2c4\u8282\u4e2d\u56de\u987e\u7684\u6587\u732e\u6e05\u695a\u5730\u8868\u660e\uff0c\u5bf9\u6297\u6027\u653b\u51fb\u53ef\u4ee5\u4e25\u91cd\u964d\u4f4e\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u4e0a\u7684\u6027\u80fd\u3002\u7279\u522b\u662f\uff0c\u7b2c4\u8282\u56de\u987e\u7684\u6587\u732e\u786e\u5b9a\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u6df1\u5ea6\u5b66\u4e60\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u6027\u653b\u51fb\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u5bf9\u6297\u6027\u653b\u51fb\u5bf9\u5b9e\u8df5\u4e2d\u7684\u6df1\u5ea6\u5b66\u4e60\u6784\u6210\u4e86\u771f\u6b63\u7684\u5a01\u80c1\u3002\\n\\n**\u5bf9\u6297\u6027\u8106\u5f31\u6027\u662f\u4e00\u79cd\u666e\u904d\u73b0\u8c61\uff1a**\u6587\u732e\u56de\u987e\u8868\u660e\uff0c\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\uff08\u5982MLPs\u3001CNNs\u3001RNNs\uff09\u5728\u8bc6\u522b\u3001\u5206\u5272\u3001\u68c0\u6d4b\u7b49\u591a\u79cd\u4efb\u52a1\u4e0a\u90fd\u88ab\u6210\u529f\u5730\u611a\u5f04\u3002\u5c3d\u7ba1\u73b0\u6709\u7684\u7814\u7a76\u5927\u591a\u96c6\u4e2d\u4e8e\u5728\u5206\u7c7b/\u8bc6\u522b\u4efb\u52a1\u4e0a\u611a\u5f04\u6df1\u5ea6\u5b66\u4e60\uff0c\u4f46\u6839\u636e\u8c03\u67e5\u7684\u6587\u732e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u89c2\u5bdf\u5230\uff0c\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u901a\u5e38\u5bb9\u6613\u53d7\u5230\u5bf9\u624b\u653b\u51fb\u3002\\n\\n**\u5bf9\u6297\u6027\u4f8b\u5b50\u901a\u5e38\u5177\u6709\u5f88\u597d\u7684\u6cdb\u5316\u6027**\uff1a\u6587\u732e\u4e2d\u6240\u62a5\u9053\u7684\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u4e00\u4e2a\u6700\u5e38\u89c1\u7684\u7279\u6027\u662f\u5b83\u4eec\u5728\u4e0d\u540c\u7684\u795e\u7ecf\u7f51\u7edc\u4e4b\u95f4\u6709\u5f88\u597d\u7684\u4f20\u9012\u3002\u5bf9\u4e8e\u67b6\u6784\u76f8\u5bf9\u76f8\u4f3c\u7684\u7f51\u7edc\u6765\u8bf4\u5c24\u5176\u5982\u6b64\u3002\u5728\u9ed1\u76d2\u653b\u51fb\u4e2d\uff0c\u5bf9\u6297\u6027\u4f8b\u5b50\u7684\u63a8\u5e7f\u7ecf\u5e38\u88ab\u5229\u7528\u3002\\n\\n**\u5bf9\u6297\u6027\u8106\u5f31\u6027\u7684\u539f\u56e0\u9700\u8981\u66f4\u591a\u7684\u7814\u7a76\uff1a**\u5173\u4e8e\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u5bf9\u5fae\u5999\u7684\u5bf9\u6297\u6027\u6270\u52a8\u7684\u8106\u5f31\u6027\u80cc\u540e\u7684\u539f\u56e0\uff0c\u6587\u732e\u4e2d\u6709\u4e0d\u540c\u7684\u89c2\u70b9\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u89c2\u70b9\u5e76\u4e0d\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u65b9\u9762\u663e\u7136\u9700\u8981\u8fdb\u884c\u7cfb\u7edf\u7684\u8c03\u67e5\u3002\\n\\n**\u7ebf\u6027\u786e\u5b9e\u4fc3\u8fdb\u4e86\u8106\u5f31\u6027\uff1a**Goodfello\u7b49\u4eba[23]\u9996\u5148\u63d0\u51fa\uff0c\u73b0\u4ee3\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u8bbe\u8ba1\u8feb\u4f7f\u5b83\u4eec\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7ebf\u6027\u884c\u4e3a\uff0c\u4e5f\u4f7f\u5b83\u4eec\u5bb9\u6613\u53d7\u5230\u5bf9\u624b\u7684\u653b\u51fb\u3002\u867d\u7136\u8fd9\u4e00\u6982\u5ff5\u5f88\u6d41\u884c\uff0c\u4f46\u5728\u6587\u732e\u4e2d\u4e5f\u906d\u5230\u4e86\u4e00\u4e9b\u53cd\u5bf9\u3002\u6211\u4eec\u7684\u8c03\u67e5\u6307\u51fa\uff0c\u591a\u4e2a\u72ec\u7acb\u7684\u8d21\u732e\uff0c\u4fdd\u6301\u795e\u7ecf\u7f51\u7edc\u7684\u7ebf\u6027\u8d1f\u8d23\u4ed6\u4eec\u7684\u8106\u5f31\u6027\u5bf9\u6297\u6027\u653b\u51fb\u3002\u57fa\u4e8e\u8fd9\u4e00\u4e8b\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c\u7ebf\u6027\u786e\u5b9e\u4fc3\u8fdb\u4e86\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u5bf9\u5bf9\u624b\u653b\u51fb\u7684\u8106\u5f31\u6027\u3002\u7136\u800c\uff0c\u8fd9\u4f3c\u4e4e\u4e0d\u662f\u7528\u5ec9\u4ef7\u7684\u5206\u6790\u6270\u52a8\u5c31\u6210\u529f\u611a\u5f04\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u7684\u552f\u4e00\u539f\u56e0\u3002\\n\\n**\u53cd\u63aa\u65bd\u662f\u53ef\u80fd\u7684\uff1a**\u5c3d\u7ba1\u5b58\u5728\u591a\u79cd\u9632\u5fa1\u6280\u672f\u6765\u5bf9\u6297\u5bf9\u6297\u5bf9\u624b\u7684\u653b\u51fb\uff0c\u4f46\u6587\u732e\u4e2d\u7ecf\u5e38\u663e\u793a\uff0c\u901a\u8fc7\u8bbe\u8ba1\u53cd\u63aa\u65bd\uff0c\u53ef\u4ee5\u518d\u6b21\u6210\u529f\u5730\u653b\u51fb\u88ab\u9632\u5fa1\u7684\u6a21\u578b\uff0c\u4f8b\u5982[49]\u3002\u8fd9\u4e00\u89c2\u5bdf\u7ed3\u679c\u9700\u8981\u65b0\u7684\u9632\u5fa1\u63aa\u65bd\u4e5f\u63d0\u4f9b\u4e00\u4e2a\u5bf9\u660e\u663e\u7684\u53cd\u63aa\u65bd\u7684\u9c81\u68d2\u6027\u4f30\u8ba1\u3002\\n\\n**\u9ad8\u5ea6\u6d3b\u8dc3\u7684\u7814\u7a76\u65b9\u5411\uff1a** \u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u5bf9\u4e00\u822c\u6270\u52a8\u7684\u8106\u5f31\u6027\u7684\u6df1\u523b\u6697\u793a\u4f7f\u5f97\u5bf9\u6297\u6027\u653b\u51fb\u53ca\u5176\u9632\u5fa1\u7684\u7814\u7a76\u8fd1\u5e74\u6765\u975e\u5e38\u6d3b\u8dc3\u3002\u5728\u8fd9\u9879\u8c03\u67e5\u4e2d\u56de\u987e\u7684\u5927\u591a\u6570\u6587\u732e\u90fd\u662f\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u51fa\u73b0\u7684\uff0c\u76ee\u524d\u8fd9\u65b9\u9762\u7684\u8d21\u732e\u6e90\u6e90\u4e0d\u65ad\u3002\u4e00\u65b9\u9762\uff0c\u4eba\u4eec\u63d0\u51fa\u4e86\u4e00\u4e9b\u6280\u672f\u6765\u4fdd\u62a4\u795e\u7ecf\u7f51\u7edc\u514d\u53d7\u5df2\u77e5\u7684\u653b\u51fb\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u5f3a\u5927\u7684\u653b\u51fb\u88ab\u8bbe\u8ba1\u51fa\u6765\u3002\u6700\u8fd1\uff0c\u8fd8\u7ec4\u7ec7\u4e86\u4e00\u6b21\u5361\u683c\u5c14\u7ade\u8d5b\u3002\u6211\u4eec\u5e0c\u671b\uff0c\u8fd9\u9879\u9ad8\u6c34\u5e73\u7684\u7814\u7a76\u6d3b\u52a8\u6700\u7ec8\u4f1a\u4f7f\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u8db3\u591f\u5f3a\u5927\uff0c\u80fd\u591f\u7528\u4e8e\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5b89\u5168\u548c\u5b89\u4fdd\u5173\u952e\u5e94\u7528\u3002\\n\\n## 8 CONCLUSION\\n\\n\u672c\u6587\u9996\u6b21\u5168\u9762\u7efc\u8ff0\u4e86\u8ba1\u7b97\u673a\u89c6\u89c9\u6df1\u5ea6\u5b66\u4e60\u5bf9\u6297\u6027\u653b\u51fb\u7684\u53d1\u5c55\u65b9\u5411\u3002\u5c3d\u7ba1\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5728\u5404\u79cd\u5404\u6837\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u4e2d\u5177\u6709\u5f88\u9ad8\u7684\u7cbe\u5ea6\uff0c\u4f46\u4eba\u4eec\u53d1\u73b0\u5b83\u4eec\u5bb9\u6613\u53d7\u5230\u7ec6\u5fae\u7684\u8f93\u5165\u6270\u52a8\u7684\u5f71\u54cd\uff0c\u4ece\u800c\u5bfc\u81f4\u5b83\u4eec\u5b8c\u5168\u6539\u53d8\u5176\u8f93\u51fa\u3002\u7531\u4e8e\u6df1\u5ea6\u5b66\u4e60\u662f\u5f53\u524d\u673a\u5668\u5b66\u4e60\u548c\u4eba\u5de5\u667a\u80fd\u53d1\u5c55\u7684\u6838\u5fc3\uff0c\u8fd9\u4e00\u53d1\u73b0\u5bfc\u81f4\u4e86\u8bb8\u591a\u8bbe\u8ba1\u5bf9\u6297\u6027\u653b\u51fb\u53ca\u5176\u6df1\u5ea6\u5b66\u4e60\u9632\u5fa1\u7684\u6700\u65b0\u8d21\u732e\u3002\u672c\u6587\u56de\u987e\u4e86\u8fd9\u4e9b\u8d21\u732e\uff0c\u4e3b\u8981\u96c6\u4e2d\u5728\u6700\u6709\u5f71\u54cd\u548c\u6700\u6709\u8da3\u7684\u4f5c\u54c1\u5728\u6587\u5b66\u3002\u4ece\u56de\u987e\u7684\u6587\u732e\u6765\u770b\uff0c\u5bf9\u6297\u6027\u653b\u51fb\u663e\u7136\u662f\u5bf9\u5b9e\u8df5\u4e2d\u6df1\u5165\u5b66\u4e60\u7684\u771f\u6b63\u5a01\u80c1\uff0c\u5c24\u5176\u662f\u5728\u5b89\u5168\u548c\u5b89\u4fdd\u5173\u952e\u5e94\u7528\u4e2d\u3002\u73b0\u6709\u6587\u732e\u8868\u660e\uff0c\u76ee\u524d\u7684\u6df1\u5ea6\u5b66\u4e60\u4e0d\u4ec5\u53ef\u4ee5\u5728\u7f51\u7edc\u7a7a\u95f4\u4e2d\u6709\u6548\u5730\u653b\u51fb\uff0c\u800c\u4e14\u53ef\u4ee5\u5728\u7269\u7406\u4e16\u754c\u4e2d\u6709\u6548\u5730\u653b\u51fb\u3002\u7136\u800c\uff0c\u7531\u4e8e\u8fd9\u4e00\u7814\u7a76\u65b9\u5411\u7684\u9ad8\u5ea6\u6d3b\u8dc3\u6027\uff0c\u53ef\u4ee5\u5e0c\u671b\u6df1\u5ea6\u5b66\u4e60\u80fd\u591f\u5728\u672a\u6765\u663e\u793a\u51fa\u76f8\u5f53\u5f3a\u7684\u5bf9\u6297\u5bf9\u624b\u653b\u51fb\u7684\u9c81\u68d2\u6027\u3002"},{"id":"/[03]Progressive-Semantic-Segmentation","metadata":{"permalink":"/blog/[03]Progressive-Semantic-Segmentation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[03]Progressive-Semantic-Segmentation.md","source":"@site/blog/[03]Progressive-Semantic-Segmentation.md","title":"Progressive Semantic Segmentation","description":"\u539f\u8bba\u6587\uff1aProgressive Semantic Segmentation","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"refinement","permalink":"/blog/tags/refinement"},{"label":"multi-scale-learning","permalink":"/blog/tags/multi-scale-learning"}],"readingTime":5.55,"hasTruncateMarker":true,"authors":[{"name":"Zerorains","title":"life is but a span, I use python","url":"https://github.com/zeroRains","email":"me@zerorains.top","imageURL":"https://github.com/zeroRains.png","key":"zerorains"}],"frontMatter":{"title":"Progressive Semantic Segmentation","authors":["zerorains"],"tags":["segmentation","refinement","multi-scale-learning"]},"prevItem":{"title":"Threat of Adversarial Attacks on Deep Learning in Computer Vision - A Survey","permalink":"/blog/[02]Threat-of-Adversarial-Attacks-on-Deep-Learning-in-Computer-Vision-A-Survey"},"nextItem":{"title":"Decoders Matter for Semantic Segmentation - Data-Dependent Decoding Enables Flexible Feature Aggregation","permalink":"/blog/[04]Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation"}},"content":"\u539f\u8bba\u6587\uff1a[Progressive Semantic Segmentation](https://arxiv.org/pdf/2104.03778.pdf)\\n\\n## \u95ee\u9898\u63cf\u8ff0 \\n\\n\u5f53\u5bf9\u5927\u578b\u56fe\u7247\u8fdb\u884c\u8bed\u4e49\u5206\u5272\u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u663e\u5b58\u70b8\u6389\u3002\u6536\u5230\u5185\u5b58\u9650\u5236\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0b\u91c7\u6837\uff0c\u6216\u5c06\u56fe\u50cf\u5212\u5206\u4e3a\u5c40\u90e8\u5757\u3002\u4f46\u524d\u8005\u4f1a\u4e22\u5931\u7ec6\u8282\uff0c\u540e\u8005\u4f1a\u5374\u53cd\u5168\u5c40\u89c6\u56fe\u3002\\n\\n## \u540e\u5904\u7406\u6539\u5584\u5206\u5272\u7ec6\u8282\\n\\n### \u7ecf\u5178\u65b9\u6cd5\\n\\n\u6761\u4ef6\u968f\u673a\u573a(CRF),\u5f15\u5bfc\u6ee4\u6ce2\u5668\uff08GF\uff09\uff0c\u4e24\u4e2a\u901f\u5ea6\u6162\uff0c\u6539\u8fdb\u662f\u6e10\u8fdb\u7684\u3002\\n\\n\u6df1\u5ea6\u5b66\u4e60\u7684\u5f15\u5bfc\u8fc7\u6ee4\u5668(DGF)\u53ef\u4ee5\u63d0\u9ad8\u63a8\u7406\u901f\u5ea6\\n\\n\x3c!--truncate--\x3e\\n\\n### \u8fed\u4ee3\u5b9e\u4f8b\u5206\u5272\uff08ISS\uff09\\n\\n\u901a\u8fc7\u591a\u6b21\u5c06\u8f93\u5165\u56fe\u50cf\u548c\u5206\u5272\u56fe\u50cf\u901a\u8fc7\u7ec6\u5316\u6a21\u5757\u6765\u591a\u6b21\u7ec6\u5316\u8f93\u51fa\u3002\\n\\n\u8fd9\u79cd\u7ec6\u5316\u8fc7\u7a0b\u662f\u81ea\u53cd\u7684\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a\u7ec6\u5316\u5c42\u7684\u8f93\u5165\u56fe\u50cf\u90fd\u662f\u76f8\u540c\u7684\\n\\n### CascadedPSP\\n\\n\u624d\u7528\u4e0eISS\u76f8\u540c\u7684\u7ec6\u5316\u6a21\u5f0f\uff0c\u4f46\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ec6\u5316\u5c42\u7684\u8f93\u5165\u4e0eISS\u4e0d\u540c\uff0c\u624d\u7528\u7684\u662f\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u539f\u56fe\u548c\u5206\u5272\u56fe\u50cf\u8fdb\u884c\u7ec6\u5316\u3002\\n\\n## MagNet\\n\\n\u6838\u5fc3\u6a21\u5757\u4e3a\uff1asegmentation and refinement\\n\\n \u5728refinement\u6a21\u5757\u4e2d\uff0c\u6bcf\u4e00\u5c42\u7684\u8f93\u5165\u4e24\u5f20\u5206\u5272\u56fe\\n\\n1. \u524d\u51e0\u5c42\u7684\u7d2f\u79ef\u7ed3\u679c\\n2. \u5f53\u524d\u5c42\u7684\u5f53\u524d\u89c4\u6a21\u548c\u6bd4\u4f8b\u7684\u5206\u5272\u6a21\u5757\u8ba1\u7b97\u7ed3\u679c\\n\\n\u5728sementation\u4e2d\uff0c\u53ef\u4ee5\u5e94\u7528\u4e0e\u591a\u4e2a\u5206\u5272\u4e3b\u5e72\\n\\nrefinement\u4e0e\u5206\u5272\u4e3b\u5e72\u65e0\u5173\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u4e00\u4e2a\u4e3b\u5e72\u8bad\u7ec3\uff0c\u5728\u53e6\u4e00\u4e2a\u4e3b\u5e72\u4f7f\u7528\u3002\\n\\n### \u591a\u7ea7\u8fc7\u7a0b\u901a\u9053\u5904\u7406\\n\\n![image-20210430160921956](./src/progressive-semantic-segmentation/image-20210430160921956.png)\\n\\n\\n\\n\u7528s\u8868\u793a\u6bcf\u4e00\u4e2a\u5904\u7406\u9636\u6bb5\uff0cs = 1\u5bf9\u5e94\u6700\u521d\u7684\u7c97\u5206\u5272\u5904\u7406\u5757\uff0cs=m\u5bf9\u5e94\u6700\u540e\u7684\u7ec6\u5206\u7ed3\u679c\\n\\n\u4ee4h,w\u4e3a\u6700\u5927\u7684\u53ef\u88ab\u5206\u5272\u6a21\u5757\u5904\u7406\u7684\u5927\u5c0f\\n\\n\u4f7f\u7528$h^s ,w^s$\u8868\u793alevel s\u5bf9\u5e94\u5757\u8f93\u5165\u56fe\u50cf\u7684\u9ad8\uff0c\u5bbd\\n\\n\u901a\u5e38$h^s ,w^s$\u7684\u6bd4\u4f8b\u662f\u9012\u51cf\u7684\\n\\n### \u7279\u5b9a\u6bd4\u4f8b\u7ea7\u522bs\u7684\u5904\u7406\u5757\\n\\n\u5148\u5c06\u8f93\u5165\u56fe\u7247X\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a$h^s$ X $w^s$\u7684\u5c0f\u5757\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u5c0f\u5757\u8fdb\u884c\u8bed\u4e49\u5206\u5272\u3002\\n\\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5c0f\u5757\u7684\u4f4d\u7f6e\u7528\u96c6\u5408$p_s$\u8868\u793a\uff0c$p_s = \\\\{p|p=(x,y,w^s,h^s)\\\\}$\\n\\nx,y\uff1a\u5f53\u524d\u5757\u5de6\u4e0a\u89d2\u5728\u56fe\u50cf\u4e0a\u7684\u4f4d\u7f6e\\n\\n$h^s ,w^s$:\u5f53\u524d\u5757\u7684\u5bbd\u9ad8\\n\\n\u968f\u7740\u6bd4\u4f8bs\u7684\u589e\u52a0\uff0c\u5de8\u578b\u7a97\u53e3\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u51cf\u5c0f$P_s$\u7684\u57fa\u6570\u589e\u52a0\\n\\n\u5bf9\u4e8e\u7279\u7b49\u7684\u7a97\u53e3p\uff0c\u5c06\u4f7f\u7528$X_p$\u8868\u793a\u5728\u7a97\u53e3P\u5904\u63d0\u53d6\u7684\u56fe\u50cf\u5757\\n\\n\u5bf9\u4e8e\u6bcf\u4e2a\u7a97\u53e3p\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\\n\\n1. \u5bf9\u4e8e\u5f53\u524d\u5c42\u7684\u7a97\u53e3$X_P^s$\u8fdb\u884c\u56fe\u50cf\u5206\u5272\uff0c\u5c06\u4e0a\u4e00\u4e2a\u5c42\u5bf9\u5e94\u7a97\u53e3\uff0c\u63d0\u53d6\u51fa\u5176\u957f\u5bbd\u4e3a$h_s,w_s$\u7684\u90e8\u5206\\n2. \u5bf9$X_p^s$\u548c$Y^{s-1}_p$\u8fdb\u884c\u4e0b\u91c7\u6837\uff0c\u4f7f\u5f97\u56fe\u50cf\u8fbe\u5230h,w\uff0c\u4ed6\u4eec\u5927\u5c0f\u53ef\u4ee5\u8f93\u5165GPU\u4e2d\uff0c\u5e76\u901a\u8fc7\u5206\u5272\u6a21\u5757\u548c\u7ec6\u5206\u6a21\u5757\u8fdb\u884c\u5904\u7406\u3002\\n3. $X_p^s$\u7684\u5206\u5272\u7ed3\u679c\u7528$O_p^s$\u8868\u793a\\n\\n## Refinement\u6a21\u5757\uff08\u7ec6\u5206\u6a21\u5757\uff09\\n\\n\u7528\u4e8e\u4f18\u5316\u5404\u4e2a\u7a97\u53e3\u7684\u7ec6\u8282\u90e8\u5206\\n\\n\u4e3b\u8981\u6709\u4e24\u4e2a\u8f93\u5165\\n\\n\\t1. \u5148\u524d\u4e00\u4e2a\u6a21\u5757\u7684\u7ec6\u5206\u7ed3\u679c+\u4e0b\u91c7\u6837\u6700\u7ec8\u83b7\u5f97\u7684\u7279\u5f81\u56fe\\n\\t2. \u539f\u56fe\u7ecf\u8fc7Segmentation\u7684\u7ed3\u679c\\n\\n### refinement\u7ed3\u6784\u56fe\\n\\n![image-20210430162107104](./src/progressive-semantic-segmentation/image-20210430162107104.png)\\n\\n\\nO\uff1a\u662f\u5206\u5272\u7ed3\u679c\\n\\nY\uff1a\u662f\u4e0a\u4e00\u5c42\u7ec6\u5206\u7ed3\u679c\\n\\nR\uff1aO\u548cY\u7ecf\u8fc7\u7ec6\u5206\u6a21\u5757\u51fa\u6765\u7684\u56fe\u50cf\\n\\n$R^u$\uff1aR\u7684\u4e0d\u786e\u5b9a\u6027\u56fe\uff0c\u8ba1\u7b97\u65b9\u5f0f\u4e3a\u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\uff0c\u5176\u5bf9\u5e94\u70b9\u7684\u503c\u4e3a\uff0c\u7f6e\u4fe1\u5ea6\u6700\u9ad8-\u7f6e\u4fe1\u5ea6\u7b2c\u4e8c\u9ad8\u7684\u503c\\n\\n$Y^u$\uff1aY\u7684\u4e0d\u786e\u5b9a\u6027\u56fe\uff0c\u540cR\u7684\u8ba1\u7b97\u65b9\u5f0f\\n\\n\u8fd9\u4e2a\u505a\u6cd5\u4e0ePointRend\u7c7b\u4f3c\uff0c\u4f46\u662f\u53ea\u7528\u4e86\u4e00\u4e2a\u4e0d\u786e\u5b9a\u6027\u56fe\uff0c\u800c\u8fd9\u91cc\u7528\u4e86\u4e24\u4e2a\u3002\\n\\n\u6700\u7ec8\u83b7\u5f97\u7684\u50cf\u7d20\u5f97\u5206\u56fe\uff08\u6bcf\u4e2a\u50cf\u7d20\u9884\u6d4b\u4e3a1\u7c7b\u548c\u9884\u6d4b\u4e3a2\u7c7b\u7684\u5dee\u503c\uff09\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a\\n$$\\nQ = F(Y^u\\\\cdot(1-R^u))\\n$$\\n\u5176\u4e2d$\\\\cdot$\u7b26\u53f7\u8868\u793a\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u8fdb\u884c\u76f8\u4e58\\n\\n$F$\u8868\u793a\u4e2d\u503c\u6ee4\u6ce2\u5e73\u6ed1\u5904\u7406\uff08\u8fd9\u4e2a\u6211\u4e5f\u4e0d\u662f\u5f88\u61c2\uff09\\n\\n\u901a\u8fc7\u6700\u7ec8\u8ba1\u7b97\u5904\u7684\u5f97\u5206\u56fe\uff0c\u627e\u51fa\u56fe\u50cf\u4e2d\u9700\u8981\u4f18\u5316\u7684k\u4e2a\u70b9\u3002\\n\\n\u4f18\u5316\u7f51\u7edc\u7684\u5b9e\u9645\u7ed3\u6784\uff1a\\n\\n![image-20210430164954374](./src/progressive-semantic-segmentation/image-20210430164954374.png)\\n\\n### \u5bf9\u6bd4\u4e0e\u5176\u4ed6\u7b97\u6cd5\u7684\u4f18\u70b9\\n\\n1. SegFix\uff1a\u65e0\u6cd5\u6062\u590d\u88ab\u8986\u76d6\u8f83\u5927\u7684\u5c0f\u7269\u4f53\uff0c\u5982\u6807\u5fd7\u6746\u3002\\n2. PointRend\uff1a\u7f3a\u4e4f\u5168\u5c40\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\\n\\n## MagNet-Fast\\n\\n\u662fMagNet\u7684\u5feb\u901f\u7248\uff0c\u4f18\u5316\u70b9\u5728\u4e8e\u51cf\u5c11\u4e86\u5206\u5757\u6b21\u6570\uff0c\u540c\u65f6\u5728\u7ec6\u5206\u6a21\u5757\u4e2d\u53ea\u4f7f\u7528$Y^u$\u8fdb\u884c\u4f18\u5316\u70b9\u9009\u53d6\uff0c\u8fd9\u6837\u5927\u5927\u5730\u63d0\u9ad8\u4e86\u8ba1\u7b97\u901f\u5ea6\u3002\\n\\n\u5728\u505a\u8fc7\u8fd9\u6837\u7684\u7b80\u5316\u540e\u5bf9\u4e4b\u524d\u7684\u7b97\u6cd5\u5728miou\u6307\u6807\u4e0a\uff0c\u4ecd\u6709\u63d0\u5347\\n\\n![image-20210430203924695](./src/progressive-semantic-segmentation/image-20210430203924695.png)\\n\\n## \u6d88\u878d\u5b9e\u9a8c\u7ed3\u679c\\n\\n![image-20210430204112176](./src/progressive-semantic-segmentation/image-20210430204112176.png)\\n\\n\u7ecf\u8fc7\u4f5c\u8005\u56e2\u961f\u7684\u6d4b\u8bd5\uff0c\u9009\u53d6\u7684\u4f18\u5316\u70b9k\u6570\u91cf\u4e3a$2^{16}$\u65f6\u80fd\u83b7\u5f97\u6700\u4f73\u6548\u679c\\n\\n## \u9009\u62e9\u4f18\u5316\u70b9\u6570\u91cf\u589e\u52a0\u6548\u7387\u5bf9\u6bd4\u5ea6\\n\\n![image-20210501223901657](./src/progressive-semantic-segmentation/image-20210501223901657.png)"},{"id":"/[04]Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation","metadata":{"permalink":"/blog/[04]Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[04]Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation.md","source":"@site/blog/[04]Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation.md","title":"Decoders Matter for Semantic Segmentation - Data-Dependent Decoding Enables Flexible Feature Aggregation","description":"\u8fd9\u662f\u4e00\u7bc7\u5173\u4e8e\u6570\u636e\u4f9d\u8d56\u578b\u89e3\u7801\u5668\u7684\u7406\u8bba\u548c\u6d4b\u8bd5\u5de5\u4f5c\u7684\u8bba\u6587\u3002\u539f\u8bba\u6587\u662fDecoders Matter for Semantic Segmentation : Data-Dependent Decoding Enables Flexible Feature Aggregation\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"survey","permalink":"/blog/tags/survey"},{"label":"decoder","permalink":"/blog/tags/decoder"}],"readingTime":21.69,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Decoders Matter for Semantic Segmentation - Data-Dependent Decoding Enables Flexible Feature Aggregation","authors":["visualdust"],"tags":["survey","decoder"]},"prevItem":{"title":"Progressive Semantic Segmentation","permalink":"/blog/[03]Progressive-Semantic-Segmentation"},"nextItem":{"title":"HLA-Face Joint High-Low Adaptation for Low Light Face Detection","permalink":"/blog/[05]HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u5173\u4e8e\u6570\u636e\u4f9d\u8d56\u578b\u89e3\u7801\u5668\u7684\u7406\u8bba\u548c\u6d4b\u8bd5\u5de5\u4f5c\u7684\u8bba\u6587\u3002\u539f\u8bba\u6587\u662f[Decoders Matter for Semantic Segmentation : Data-Dependent Decoding Enables Flexible Feature Aggregation](https://arxiv.org/pdf/1903.02120.pdf)\u3002\\n\\n\u8fd1\u5e74\u6765\uff0c\u5e38\u89c1\u7684\u8bed\u4e49\u5206\u5272\u65b9\u6cd5\u5229\u7528\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ed3\u6784\u8fdb\u884c\u9010\u50cf\u7d20\u7684\u9884\u6d4b\u4efb\u52a1\u3002\u5728\u8fd9\u4e9b\u89e3\u7801\u5668\u6bcf\u4e00\u5c42\u7684\u6700\u540e\u901a\u5e38\u662f\u4e00\u5c42\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u7684\u8fc7\u7a0b\uff0c\u7528\u4e8e\u5c06\u50cf\u7d20\u6062\u590d\u81f3\u539f\u6709\u50cf\u7d20\u5927\u5c0f\u3002\u672c\u8bba\u6587\u7684\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u79cd\u4e0e\u6570\u636e\u65e0\u5173\u7684\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ed3\u679c\u5e76\u4e0d\u5b8c\u7f8e\u3002\\n\\n\u6240\u4ee5\uff0c\u672c\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u4f9d\u8d56\u4e8e\u8f93\u5165\u6570\u636e\u7684\u4e0a\u91c7\u6837\u53d6\u4ee3\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\uff0c\u79f0\u4e3a\u201cDUpsampling\u201d\u3002\u8fd9\u4e2a\u65b0\u7684\u65b9\u6cd5\u5229\u7528\u5728\u8bed\u4e49\u5206\u6bb5\u6807\u7b7e\u4e2d\u7684\u7a7a\u95f4\u5197\u4f59\uff0c\u80fd\u591f\u4ece\u4f4e\u5206\u8fa8\u7387\u7684CNN\u8f93\u51fa\u4e2d\u6062\u590d\u5206\u8fa8\u7387\u5e76\u5b9e\u73b0\u9010\u50cf\u7d20\u9884\u6d4b\u3002\u8be5\u65b9\u6cd5\u5728\u5206\u8fa8\u7387\u76f8\u5bf9\u8f83\u4f4e\u7684\u8f93\u5165\u4e0a\u80fd\u83b7\u5f97\u66f4\u52a0\u7cbe\u786e\u7684\u5206\u5272\u6548\u679c\uff0c\u5e76\u4e14\u663e\u8457\u964d\u4f4e\u4e86\u8ba1\u7b97\u7684\u590d\u6742\u5ea6\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\\n\\n- \u8fd9\u79cd\u65b0\u7684\u4e0a\u91c7\u6837\u5c42\u91cd\u5efa\u80fd\u529b\u975e\u5e38\u5f3a\\n- \u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4efb\u4f55CNN\u7f16\u7801\u5668\u7684\u7ec4\u5408\u548c\u4f7f\u7528\u8868\u73b0\u51fa\u5f88\u597d\u7684\u517c\u5bb9\u6027\\n\\n\u672c\u8bba\u6587\u8fd8\u901a\u8fc7\u5b9e\u9a8c\u6807\u660e\u4e86\uff0cDUpsampling\u6027\u80fd\u4f18\u8d8a\uff0c\u5e76\u4e14\u65e0\u9700\u4efb\u4f55\u540e\u5904\u7406\u3002\\n\\n## Abstract\uff08\u6458\u8981\uff09\\n\\n> Recent semantic segmentation methods exploit encoder-decoder architectures to produce the desired pixel-wise segmentation prediction. The last layer of the decoders is typically a bilinear upsampling procedure to recover the final pixel-wise prediction. We empirically show that this oversimple and data-independent bilinear upsampling may lead to sub-optimal results. \\n> In this work, we propose a data-dependent upsampling (DUpsampling) to replace bilinear, which takes advantages of the redundancy in the label space of semantic segmentation and is able to recover the pixel-wise prediction from low-resolution outputs of CNNs. The main advantage of the new upsampling layer lies in that with a relatively lower-resolution feature map such as 1/16 or 1/32 of the input size, we can achieve even better segmentation accuracy, significantly reducing computation complexity. This is made possible by 1) the new upsampling layer\'s much improved reconstruction capability; and more importantly 2) the DUpsampling based decoder\'s flexibility in leveraging almost arbitrary combinations of the CNN encoders\' features. Experiments demonstrate that our proposed decoder outperforms the state-of-the-art decoder, with only 20% of computation. Finally, without any post-processing, the framework equipped with our proposed decoder achieves new state-of-the-art performance on two datasets: 88.1% mIOU on PASCAL VOC with 30% computation of the previously best model; and 52.5% mIOU on PASCAL Context.     \\n\\n\u5982\u679c\u6709\u65f6\u95f4\u7684\u8bdd\u8bf7\u9605\u8bfb[\u539f\u4f5c](https://arxiv.org/pdf/1903.02120.pdf)\u3002\u672c\u6587\u53ea\u662f\u5bf9\u539f\u4f5c\u9605\u8bfb\u7684\u7c97\u6d45\u7b14\u8bb0\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## Introduction\uff08\u4ecb\u7ecd\uff09\\n\\n\u73b0\u9636\u6bb5\uff0c\u57fa\u4e8eFCN\u7684\u7a20\u5bc6\u9884\u6d4b\u65b9\u6cd5\u5728\u8bed\u4e49\u5206\u5272\u9886\u57df\u5185\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0cCNN\u7ec4\u6210\u7684\u7f16\u7801\u5668\u7684\u7279\u5f81\u63d0\u53d6\u529f\u80fd\u975e\u5e38\u5f3a\u5927\u3002\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u5377\u79ef\u8fd0\u7b97\u6240\u5177\u6709\u7684\u53c2\u6570\u5171\u4eab\u7279\u6027\u8ba9\u8bad\u7ec3\u548c\u9884\u6d4b\u53d8\u5f97\u9ad8\u6548\uff08\u5377\u79ef\u8fd0\u7b97\u7684\u4e00\u4e9b\u7279\u6027\u53ef\u4ee5\u53c2\u8003[\u8fd9\u7bc7\u6587\u7ae0](../ch2p1/[1]convolutional-nn-and-ops)\uff09\u3002\\n\\n\u5728\u539f\u59cb\u7684FCN\u65b9\u6cd5\u4e2d\uff0c\u7f16\u7801\u5668\u5728\u63d0\u53d6\u9ad8\u7ea7\u7279\u5f81\u7684\u8fc7\u7a0b\u4e2d\u5f80\u5f80\u4f1a\u5bfc\u81f4\u539f\u56fe\u7684\u5206\u8fa8\u7387\u88ab\u964d\u4f4e\u5f88\u591a\u500d\uff0c\u4ece\u800c\u5bfc\u81f4\u7cbe\u7ec6\u7684\u50cf\u7d20\u7a7a\u95f4\u4fe1\u606f\u90e8\u5206\u4e22\u5931\uff0c\u8fd9\u4f7f\u5728\u539f\u56fe\u5206\u8fa8\u7387\u4e0a\u7684\u9884\u6d4b\uff08\u5c24\u5176\u662f\u5728\u5bf9\u8c61\u8fb9\u754c\u4e0a\u7684\u9884\u6d4b\uff09\u5f80\u5f80\u4e0d\u591f\u51c6\u786e\u3002DeepLab\u4e2d\u5f15\u5165\u4e86\u7a7a\u6d1e\u5377\u79ef\uff08\u7a7a\u6d1e\u5377\u79ef\u7684\u5927\u81f4\u6982\u5ff5\u53ef\u4ee5\u53c2\u8003[\u8fd9\u7bc7\u6587\u7ae0](./[01]The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs)\u4e2d\u5173\u4e8e\u7a7a\u6d1e\u5377\u79ef\u65b9\u6cd5\u7684\u90e8\u5206\uff09\u5b9e\u73b0\u4e86\u5728\u4e0d\u964d\u4f4e\u539f\u56fe\u5927\u5c0f\u7684\u60c5\u51b5\u4e0b\u6269\u5927\u611f\u53d7\u91ce\uff08\u63a5\u6536\u573a\uff09\u7684\u6548\u679c\u3002\\n\\n![image-20210503104215395](./src/Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation/image-20210503104215395.png)\\n\\n\u4e0a\u56fe\u662f\u4e00\u4e2a\u5728DeepLabv3+\u4e2d\u4f7f\u7528\u7684\u5178\u578b\u7684Encoder-Decoder\uff08\u7f16\u7801\u5668-\u89e3\u7801\u5668\uff09\u7ed3\u6784\u3002\u8fd9\u4e2a\u7ed3\u6784\u7684\u7f16\u7801\u5668\u5bf9\u8f93\u5165\u8fdb\u884c\u4e86\u4e0b\u91c7\u6837\u6bd4\u4f8b\u4e3a4\u7684\u4e0b\u91c7\u6837\u540e\u8f93\u5165\u5230\u89e3\u7801\u5668\uff0c\u5e76\u5728\u6700\u7ec8\u7684\u591a\u7279\u5f81\u56fe\u5408\u5e76\u524d\u5bf9\u7f16\u7801\u5668\u4ea7\u751f\u7684\u9ad8\u9636\u7279\u5f81\u8fdb\u884c\u4e86\u4e0a\u91c7\u6837\uff0c\u6700\u540e\uff0c\u4f7f\u7528\u53cc\u7ebf\u6027\u63d2\u503c\u4e0a\u91c7\u6837\u5b8c\u5168\u6062\u590d\u5206\u8fa8\u7387\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u7f16\u7801\u5668\u662f\u7531CNN\u8868\u793a\u7684\uff0c\u5176\u4efb\u52a1\u662f\u5728\u539f\u56fe\u4e0a\u63d0\u53d6\u51fa\u4e0d\u540c\u7ea7\u522b\u7684\u7279\u5f81\uff1b\u89e3\u7801\u5668\u662f\u7531\u5f88\u591a\u4e0a\u91c7\u6837\u8868\u793a\u7684\uff0c\u5176\u4efb\u52a1\u662f\u5c06\u7f16\u7801\u5668\u4ea7\u751f\u7684\u7279\u5f81\u6062\u590d\u5230\u539f\u56fe\u5927\u5c0f\u3002\\n\\n\u5728\u4ee5\u524d\u7684\u6210\u679c\u4e2d\uff0c\u89e3\u7801\u5668\u901a\u5e38\u7531\u51e0\u4e2a\u5377\u79ef\u5c42\u548c\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u5c42\u6784\u6210\uff0c\u8fd9\u4e9b\u5c42\u7684\u4e3b\u8981\u76ee\u6807\u662f\u6062\u590d\u88abCNN\u5ffd\u7565\u7684\u7ec6\u7c92\u5ea6\u4fe1\u606f\u3002\u7b80\u5355\u7684\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u65b9\u6cd5\u5bf9\u9010\u50cf\u7d20\u9884\u6d4b\u7684\u6062\u590d\u80fd\u529b\u4f18\u5148\uff0c\u5b83\u662f\u4e00\u4e2a\u673a\u68b0\u7684\u8fc7\u7a0b\uff0c\u4e0d\u8003\u8651\u6bcf\u4e2a\u50cf\u7d20\u9884\u6d4b\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u72ec\u7acb\u4e8e\u6570\u636e\u7684\u8fc7\u7a0b\u3002\u8fd9\u5c31\u5bfc\u81f4\u6211\u4eec\u5f80\u5f80\u9700\u8981\u5728\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u4e4b\u524d\u7684\u5377\u79ef\u89e3\u7801\u5668\u5185\u5c31\u9700\u8981\u5c06CNN\u7684\u4ea7\u7269\u4ea7\u751f\u4e3a\u8f83\u9ad8\u5206\u8fa8\u7387\u7684\u7279\u5f81\u56fe\uff08\u901a\u5e38\u81f3\u5c11\u6062\u590d\u5230\u539f\u56fe\u5927\u5c0f\u76841/4\u62161/8\uff09\uff0c\u4ee5\u4fbf\u83b7\u5f97\u826f\u597d\u7684\u9884\u6d4b\u7ed3\u679c\u3002\\n\\n\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a\\n\\n1. \u4e3a\u4e86\u8ba9\u89e3\u7801\u5668\u8f93\u51fa\u66f4\u9ad8\u4e00\u70b9\u5206\u8fa8\u7387\u7684\u7279\u5f81\u56fe\u4f5c\u4e3a\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u7684\u8f93\u5165\uff0c\u9700\u8981\u7a7a\u6d1e\u5377\u79ef\u5927\u5e45\u51cf\u5c0f\u79fb\u52a8\u6b65\u5e45\uff0c\u8fd9\u5bfc\u81f4\u8bad\u7ec3\u548c\u9884\u6d4b\u5f00\u9500\u589e\u5927\u3002\u4f8b\u5982\uff0c\u4e3a\u4e86\u8fbe\u5230\u6700\u597d\u7684\u5206\u5272\u6548\u679c\uff0cDeepLabv3\u4e2d\u7684\u7f16\u7801\u5668\u7684\u4e0b\u91c7\u6837\u65f6\u6b65\u5e45\u964d\u4f4e\u4e864\u500d\uff08\u4ece32\u964d\u4f4e\u52308\uff09\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86DeepLabv3\u63a8\u7406\u76f8\u5bf9\u7f13\u6162\u3002\\n2. \u4e3a\u4e86\u8fbe\u5230\u66f4\u597d\u5730\u6548\u679c\uff0c\u89e3\u7801\u5668\u5f80\u5f80\u5fc5\u987b\u5c06\u7f16\u7801\u5668\u4ea7\u751f\u7684\u7279\u5f81\u4e0a\u91c7\u6837\u5230\u66f4\u4f4e\u7684\u7279\u5f81\u7ef4\u5ea6\u4e2d\u8fdb\u884c\u878d\u5408\uff0c\u8fd9\u4e5f\u662f\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u7684\u4e0d\u8db3\u5bfc\u81f4\u7684\u3002\u8fd9\u4e2a\u5c40\u9650\u6027\u9650\u5236\u4e86\u7279\u5f81\u805a\u5408\u7ed3\u6784\u8bbe\u8ba1\u7684\u7a7a\u95f4\uff0c\u56e0\u6b64\u5f88\u53ef\u80fd\u5bfc\u81f4\u6b21\u4f18\u7684\u7279\u5f81\u7ec4\u5408\u5728\u89e3\u7801\u5668\u4e2d\u88ab\u805a\u5408\u5728\u4e00\u8d77\u3002\u8fd9\u7bc7\u8bba\u6587\u5728\u540e\u9762\u8bc1\u660e\u4e86\u5982\u679c\u80fd\u5f88\u597d\u7684\u8bbe\u8ba1\u805a\u5408\u7279\u5f81\u7684\u90e8\u5206\u800c\u4e0d\u53d7\u7279\u5f81\u56fe\u5206\u8fa8\u7387\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u627e\u5230\u66f4\u597d\u7684\u7279\u5f81\u805a\u5408\u7b56\u7565\u3002\\n\\n\u4e3a\u4e86\u89e3\u51b3\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u7684\u4e00\u7cfb\u5217\u95ee\u9898\uff0c\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u4e0e\u6570\u636e\u76f8\u5173\u7684\u4e0a\u91c7\u6837\u65b9\u5f0f\uff0c\u79f0\u4e3a\u201cDUpsampling\u201d\uff0c\u8be5\u65b9\u6cd5\u5229\u7528\u5206\u5272\u6807\u7b7e\u7a7a\u95f4\u4e2d\u65f7\u9614\u7684\u7279\u5f81\u7a7a\u95f4\uff0c\u5728CNN\u6784\u6210\u7684\u7f16\u7801\u5668\u8f93\u51fa\u7684\u4f4e\u5206\u8fa8\u7387\u7279\u5f81\u56fe\u7684\u6062\u590d\u4e2d\u6709\u66f4\u597d\u5730\u517c\u5bb9\u6027\uff0c\u4ece\u800c\u4f7f\u5377\u79ef\u89e3\u7801\u5668\u7684\u538b\u529b\u66f4\u5c0f\uff0c\u4e5f\u4e0d\u9700\u8981\u7f16\u7801\u5668\u964d\u4f4e\u4e0b\u91c7\u6837\u7387\u3002\\n\\n\u8fd9\u79cd\u8bbe\u8ba1\u4f7f\u878d\u5408\u7279\u5f81\u7684\u5206\u8fa8\u7387\u548c\u6700\u7ec8\u9884\u6d4b\u8f93\u51fa\u7684\u5206\u8fa8\u7387\u8131\u94a9\u3002\u8fd9\u79cd\u7ed3\u8026\u53ef\u4ee5\u8ba9\u89e3\u7801\u5668\u4f7f\u7528\u4efb\u610f\u7684\u7279\u5f81\u8fdb\u884c\u805a\u5408\uff0c\u4ece\u800c\u8bbe\u8ba1\u51fa\u66f4\u597d\u7684\u7279\u5f81\u805a\u5408\u7b56\u7565\uff0c\u66f4\u597d\u5730\u63d0\u9ad8\u5206\u5272\u6027\u80fd\u3002\\n\\n\u540c\u65f6\uff0c**DUpsampling\u80fd\u591f\u901a\u8fc7 1\xd71 \u5377\u79ef\u65e0\u7f1d\u62fc\u63a5\u8fdb\u4efb\u4f55\u5377\u79ef\u7f51\u7edc\u4e2d**\uff0c\u56e0\u6b64\u5e76\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7684\u3001\u7279\u6b8a\u7684\u8bbe\u8ba1\u7684\u4ee3\u7801\u6216\u662f\u7f51\u7edc\u7ed3\u6784\uff1a\\n\\n![image-20210503110219533](./src/Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation/image-20210503110219533.png)\\n\\n \u4e0a\u56fe\u662fDUpsampling\u878d\u5408\u8fdb\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7f51\u7edc\u7684\u7684\u8bbe\u8ba1\u5f62\u5f0f\u7684\u4e00\u79cd\u63cf\u8ff0\u3002\\n\\n## Approach\uff08\u8fd9\u7bc7\u8bba\u6587\u7684\u65b9\u6cd5\uff09\\n\\n\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u8be5\u8bba\u6587\u9996\u5148\u7528DUpsampling\u91cd\u65b0\u5b9a\u4e49\u8bed\u4e49\u5206\u5272\u4e2d\u7684\u76f8\u5173\u6b65\u9aa4\uff1b\u7136\u540e\u63d0\u51fa\u81ea\u9002\u5e94\u7684softmax\u51fd\u6570\uff0c\u8fd9\u4f7fDUpsampling\u7684\u8bad\u7ec3\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\uff1b\u6700\u540e\u8fd9\u7bc7\u8bba\u6587\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u878d\u5408\u88ab\u4e0b\u91c7\u6837\u540e\u7684\u4f4e\u7ea7\uff08\uff1f\uff09\u7279\u5f81\u6765\u5927\u5927\u6539\u5584\u8fd9\u4e2a\u6846\u67b6\u3002\\n\\n### \u6570\u636e\u4f9d\u8d56\u578b\u7684\u4e0a\u91c7\u6837\\n\\n#### \u539f\u6709\u65b9\u6cd5\\n\\n\u4ee4$Y\\\\in {0,1,2,...,C}^{H \\\\times W}$\u662f\u6570\u636e\u96c6\u7684ground truth\u6807\u7b7emap\uff0c\u5176\u4e2d$H$\u8868\u793a\u539f\u56fe\u7684\u9ad8\u5ea6\uff0c$W$\u8868\u793a\u539f\u56fe\u7684\u5bbd\u5ea6\uff0c$C$\u8868\u793a\u5206\u5272\u6570\u636e\u96c6\u4e2d\u7684\u79cd\u7c7b\u6570\u91cf\u3002\\n\\n\u4ee4$\\\\hat{F} \\\\in R^{\\\\hat{H}\\\\times \\\\hat{W}\\\\times \\\\hat{C}}$\u662fCNN\u7ec4\u6210\u7684\u7f16\u7801\u5668\u7684\u8f93\u51fa\uff0c\u5176\u4e2d$\\\\hat{H}$\u8868\u793a\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u9ad8\u5ea6\uff0c$\\\\hat{W}$\u8868\u793a\u7f16\u7801\u5668\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5bbd\u5ea6\uff0c$\\\\hat{C}$\u8868\u793a\u7f16\u7801\u5668\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u91cf\u3002\u7ecf\u8fc7\u4e0b\u91c7\u6837\u540e\uff0c\u7f16\u7801\u5668\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u7684\u5927\u5c0f\u5f80\u5f80\u8981\u6bd4\u539f\u56fe\u5c0f\u5f88\u591a\u3002\u6211\u4eec\u59d1\u4e14\u8ba4\u4e3a$\\\\frac{\\\\hat{H}}{H} = \\\\frac{\\\\hat{W}}{W} = \\\\frac{1}{16}$\u6216$\\\\frac{1}{32}$\u3002\\n\\n\u7531\u4e8e\u5206\u5272\u9700\u8981\u9010\u50cf\u7d20\u7684\u9884\u6d4b\uff0c\u6240\u4ee5\u4e00\u822c\u4f1a\u5c06$\\\\hat{F}$\u4e0a\u91c7\u6837\u5230$Y$\u6240\u5728\u7684\u7a7a\u95f4\u5927\u5c0f\u540e\u624d\u80fd\u8ba1\u7b97\u635f\u5931\uff0c\u6240\u4ee5\u6211\u4eec\u4ee4$F = bilinear(\\\\hat{F})$\u8868\u793a\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u540e\u7684$\\\\hat{F}$\u3002\u5728\u5178\u578b\u7684\u5206\u5272\u65b9\u6cd5\u4e2d\uff0c\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\n$$\\nL(F, Y) = Loss(softmax(F), Y))\\n$$\\n\\n#### \u5b58\u5728\u95ee\u9898\\n\\n\u662f\u4e00\u79cd\u5178\u578b\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u3002\u4f46\u662f\u8fd9\u7bc7\u8bba\u6587\u8868\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u592a\u7b80\u5355\u5e76\u4e14\u5728\u7279\u5f81\u56fe\u4e0a\u91c7\u6837\u91cd\u5efa\u7684\u7ed3\u679c\u4e0a\u8868\u73b0\u5f97\u5e76\u4e0d\u597d\uff0c\u6ca1\u6709\u8fbe\u5230\u6700\u4f73\u3002\u4e3a\u4e86\u5f25\u8865\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u7684\u91cd\u5efa\u80fd\u529b\u7684\u4e0d\u8db3\uff0c\u89e3\u7801\u5668\u4e0d\u5f97\u4e0d\u5c06CNN\u7f16\u7801\u5668\u4ea7\u751f\u7684\u4f4e\u5206\u8fa8\u7387\u7279\u5f81\u56fe\u5148\u4e0a\u91c7\u6837\u5230\u4e00\u4e2a\u8f83\u9ad8\u7684\u5206\u8fa8\u7387\u4f5c\u4e3a\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u7684\u8f93\u5165\u3002\u5c31\u50cf\u4e4b\u524d\u8bf4\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u7a7a\u6d1e\u5377\u79ef\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u540c\u65f6\u4e5f\u5e26\u6765\u4e86\u66f4\u9ad8\u7684\u8ba1\u7b97\u6027\u80fd\u6d88\u8017\u3002\u4f8b\u5982\uff0c\u5728\u7a7a\u6d1e\u5377\u79ef\u4e2d\u5c06\u95f4\u9694\u6b65\u5e45\u4ece16\u51cf\u5c0f\u52308\u4f1a\u5bfc\u81f4\u8d85\u8fc73\u500d\u7684\u6027\u80fd\u6d88\u8017\u3002\\n\\n#### \u63d0\u51fa\u65b9\u6848\\n\\n\u6709\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u95ee\u9898\uff0c\u5c31\u662f\u6807\u7b7e$Y$\u5e76\u4e0d\u662fi.d.d\uff08Independent and identically distributed\uff0c\u72ec\u7acb\u540c\u5206\u5e03\uff09\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cY\u5185\u90e8\u5305\u542b\u4e86\u5f88\u591a\u7ed3\u6784\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c1d\u8bd5\u538b\u7f29Y\u4f7f\u5176\u53d8\u4e3a$\\\\hat{Y} \\\\in R^{\\\\hat{H}\\\\times \\\\hat{W}\\\\times \\\\hat{C}}$\uff0c\u53ef\u80fd\u4e0d\u4f1a\u9020\u6210\u592a\u5927\u7684\u635f\u5931\u3002\u4e4b\u524d\u5927\u5bb6\u7684\u601d\u8def\u90fd\u662f\u5c06$\\\\hat{F}$\u4e0a\u91c7\u6837\u5230\u548c$Y$\u4e00\u6837\u5927\u7684$F$\uff0c\u7136\u540e\u505a\u635f\u5931\u51fd\u6570\uff1b\u800c\u8fd9\u7bc7\u8bba\u6587\u5c1d\u8bd5\u5c06$Y$\u4e0b\u91c7\u6837\u5230\u548c$\\\\hat{F}$\u4e00\u6837\u5927\u7684$\\\\hat{Y}$\uff0c\u7136\u540e\u5728$\\\\hat{Y}\u548c\\\\hat{F}$\u4e4b\u95f4\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u3002\\n\\n\u4e3a\u4e86\u5c06$Y$\u4e0b\u91c7\u6837\u4e3a$\\\\hat{Y}$\uff0c\u8be5\u8bba\u6587\u8bbe\u8ba1\u4e86\u4e00\u79cd\u53d8\u6362\uff0c\u76ee\u7684\u662f\u6700\u5c0f\u5316\u5c06$Y$\u53d8\u4e3a$\\\\hat{Y}$\u7684\u5bfc\u81f4\u7684\u91cd\u6784\u8bef\u5dee\u3002\u5177\u4f53\u6765\u8bf4\uff1a\\n\\n1. \u4ee4$r = \\\\frac{\\\\hat{H}}{H} = \\\\frac{\\\\hat{W}}{W}$\uff08\u901a\u5e38\u8fd9\u4e2a\u503c\u662f16\u6216\u800532\uff09\uff1b\\n2. \u5c06$Y$\u5212\u5206\u4e3a$\\\\frac{r}{H}\\\\times \\\\frac{r}{W}$\uff08\u5982\u679c\u4e0d\u80fd\u6574\u9664\uff0c\u5219\u586b\u5145\u5230\u53ef\u4ee5\u6574\u9664\uff09\u5927\u5c0f\u7684\u7a97\u683c\uff0c\u4e5f\u5c31\u662f\u6709$r \\\\times r$\u4e2a\u5b50\u7a97\u683c\uff1b\\n3. \u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u7a97\u683c$S\\\\in {0,1}^{r \\\\times r \\\\times C}$\uff0c\u6211\u4eec\u5c06\u5176reshape\u4e3a$v \\\\in {0,1}^N$\uff0c\u5176\u4e2d$N = r\\\\times r\\\\times C$\uff1b\\n4. \u6700\u540e\u6211\u4eec\u5c06$v$\u538b\u7f29\u4e3a$x\\\\in \\\\R^{\\\\hat{C}}$\uff0c\u7136\u540e\u5c06\u6240\u6709\u7684X\u6309\u7167\u539f\u6709\u7684\u5782\u76f4\u548c\u6c34\u5e73\u987a\u5e8f\u5806\u53e0\u5f62\u6210$\\\\hat{Y}$\u3002\\n\\n\u867d\u7136\u8fd8\u6709\u5f88\u591a\u529e\u6cd5\u80fd\u5b9e\u73b0\u8fd9\u79cd\u538b\u7f29\uff0c\u4f46\u662f\u8fd9\u7bc7\u8bba\u6587\u5728\u5b9e\u9a8c\u4e2d\u53d1\u73b0\u4f7f\u7528\u7b80\u5355\u7684\u7ebf\u6027\u6295\u5f71\u5373\u5c06$v$\u4e0e\u53e6\u4e00\u4e2a\u6295\u5f71\u77e9\u9635$P\\\\in \\\\R^{\\\\hat{C}\\\\times N}$\u76f8\u4e58\u5c31\u80fd\u8fbe\u5230\u4e0d\u9519\u7684\u6548\u679c\u3002\u6b63\u5f0f\u5730\u8bf4\uff0c\u5c31\u662f\uff1a\\n$$\\nx = Pv; \\\\hat{v} = Wx\\n$$\\n\u5176\u4e2d$P\\\\in \\\\R^{\\\\hat{C}\\\\times N}$\u662f\u7528\u6765\u5c06$v$\u538b\u7f29\u4e3a$x$\u7684\u77e9\u9635\uff0c$W \\\\in \\\\R^{N\\\\times \\\\hat{C}}$\u662f\u4e00\u4e2a\u9006\u6295\u5f71\u77e9\u9635\uff0c\u7528\u4e8e\u5c06$x$\u91cd\u5efa\u56de$v$\uff0c\u800c$v\'$\u4ee3\u8868\u4e86\u91cd\u5efa\u540e\u7684$x$\u3002\u5728\u4e0a\u8ff0\u53c2\u6570\u4e2d\u8fd9\u7bc7\u8bba\u6587\u7701\u53bb\u4e86\u5f88\u591a\u504f\u79fb\u9879\u3002$P$\u548c$W$\u53ef\u4ee5\u901a\u8fc7\u5728\u8bad\u7ec3\u96c6\u4e0a\u6700\u5c0f\u5316$v$\u548c$\\\\hat{v}$\u7684\u8fd0\u7b97\u6c42\u5f97\u3002\u6b63\u5f0f\u5730\u8bf4\uff0c\u5c31\u662f\uff1a\\n$$\\nP^*, W^* = {argmin}_{P,W}\\\\sum_{v}{||v - \\\\hat{v}||}^2 , {argmin}_{P,W}\\\\sum_{v}{||v - WPv||}^2\\n$$\\n\u4f60\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u6807\u51c6\u7684SGD\uff08\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff09\u65b9\u6cd5\u6765\u8fed\u4ee3\u4f18\u5316\u8ba1\u7b97\u8fd9\u4e24\u4e2a\u53c2\u6570\u503c\u3002\u7531\u4e8e\u6709\u6b63\u4ea4\u6027\u7ea6\u675f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528[PCA\uff08\u4e3b\u6210\u5206\u5206\u6790\uff09](https://zh.wikipedia.org/wiki/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90)\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u5c01\u95ed\u5f0f\u7684\u89e3\u51b3\u529e\u6cd5\uff08\u4f60\u53ef\u4ee5\u6682\u65f6\u4e0d\u61c2\u8fd9\u4e2a\u65b9\u6cd5\uff09\u3002\\n\\n\u6211\u4eec\u53ef\u4ee5$\\\\hat{Y}$\u6765\u9884\u8bad\u7ec3\u8fd9\u4e2a\u7f51\u7edc\uff1a\\n$$\\nL(F, Y) = {||F - \\\\hat{Y}||}^2\\n$$\\n\u63a5\u4e0b\u6765\uff0c\u7531\u4e8e\u6211\u4eec\u62ff\u5230\u4e86\u8bad\u7ec3\u7684\u53c2\u6570$P$\u548c$W$\uff0c\u6211\u4eec\u7528\u5b66\u4e60\u5230\u7684\u91cd\u6784\u77e9\u9635$W$\u6765\u4e0a\u91c7\u6837$\\\\hat{F}$\u5f97\u5230$F$\uff0c\u7136\u540e\u8ba1\u7b97$F$\u4e0e$Y$\u4e4b\u95f4\u7684\u8bef\u5dee\uff0c\u800c\u4e0d\u662f\u5bf9$Y$\u8fdb\u884c\u538b\u7f29\u5904\u7406\uff1a\\n$$\\nL(F, Y) = Loss(softmax(DUpsample(\\\\hat{F})), Y))\\n$$\\n\u5176\u4e2d\uff0c$DUpsample(x)$\u662f\u4e00\u4e2a\u5bf9\u8f93\u5165$x$\u4f7f\u7528\u8bad\u7ec3\u5f97\u5230\u7684\u8fdb\u884c\u7ebf\u6027\u4e0a\u91c7\u6837\u7684\u8fc7\u7a0b\u3002 \u76f8\u8f83\u4e8e\u539f\u6765\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u5b66\u4e60\u5230\u7684$W$\u8fdb\u884c\u4e0a\u91c7\u6837\uff0c\u5f88\u7c7b\u4f3c\u4e8e$1\\\\times 1$\u5377\u79ef\u7684\u8fc7\u7a0b\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u7684\u5377\u79ef\u6838\u662f\u5b66\u4e60\u5f97\u5230\u7684$W$\uff1a\\n\\n![](./src/Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation/image-20210503182340370.png)\\n\\n\u8fd9\u5c31\u662f\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u7684\u201cDUpsample\u201d\u7684\u8fc7\u7a0b\uff0c\u4e0a\u56fe\u662f\u4e00\u4e2a\u793a\u610f\u56fe\u3002\\n\\n\u5f53\u7136\uff0c\u9664\u4e86\u5b66\u4e60\u4e00\u4e2a\u7ebf\u6027\u7684\u4e0a\u91c7\u6837\u8fc7\u7a0b\uff0c\u8fd9\u7bc7\u8bba\u6587\u5728\u5b9e\u9a8c\u4e2d\u4e5f\u5c1d\u8bd5\u4e86\u5b66\u4e60\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u201c\u81ea\u52a8\u7f16\u7801\u5668\u201d\u8fdb\u884c\u4e0a\u91c7\u6837\u5b9e\u9a8c\uff0c\u8fd9\u6bd4\u7ebf\u6027\u7684\u4e0a\u91c7\u6837\u80fd\u591f\u66f4\u5927\u7a0b\u5ea6\u4e0a\u5730\u51cf\u5c0f\u91cd\u5efa\u635f\u5931\u3002\u4e0d\u8fc7\u5728\u5b9e\u9a8c\u4e2d\u8fd9\u79cd\u65b9\u6cd5\u7684\u5206\u5272\u7cbe\u5ea6\u548c\u5b66\u4e60\u4e00\u4e2a\u7ebf\u6027\u4e0a\u91c7\u6837\u540e\u5f97\u5230\u7684\u5206\u5272\u7cbe\u5ea6\u662f\u51e0\u4e4e\u4e00\u6837\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\u53ea\u5173\u6ce8\u4e86\u66f4\u7b80\u5355\u7684\u7ebf\u6027\u7684\u91cd\u5efa\u65b9\u6cd5\u3002\\n\\n#### \u672c\u65b9\u6cd5\u4e4b\u4e8eDepth-to-space\u548cSub-pixel\u65b9\u6cd5\u7684\u8ba8\u8bba\\n\\nDepth-to-space\u548cSub-pixel\u7684\u65b9\u6cd5\u5728[\u8fd9\u7bc7](./[01]The-Devil-is-in-the-Decoder-Classification-Regression-and-GANs)\u6587\u7ae0\u4e2d\u6709\u8fc7\u6982\u8ff0\uff0c\u53ef\u4ee5\u53c2\u8003\u5176\u4e2d\u7684\u76f8\u5173\u90e8\u5206\u8fdb\u884c\u7b80\u8981\u4e86\u89e3\u3002\\n\\nDUpsample\u7684\u6700\u7b80\u5355\u7684\u7ebf\u6027\u5f62\u5f0f\u53ef\u4ee5\u770b\u4f5c\u662fDepth-to-space\u548cSub-pixel\u7684\u5e26\u6709\u9884\u8bad\u7ec3\u7684\u4e0a\u91c7\u6837\u5377\u79ef\u6838\u7684\u6539\u8fdb\u7248\u672c\u3002\u4e3a\u4e86\u907f\u514d\u53ef\u8bad\u7ec3\u53c2\u6570\uff08trainable variables\uff09\u8fc7\u591a\u5bfc\u81f4\u4f18\u5316\u56f0\u96be\uff0c\u901a\u5e38\u60c5\u51b5\u4e0bDepth-to-space\u548cSub-pixel\u65b9\u6cd5\u4f1a\u63a7\u5236\u4e0a\u91c7\u6837\u7684\u6b21\u6570\u6216\u6bd4\u7387\uff08\u6bd4\u5982\u63a7\u5236\u4e0a\u91c7\u6837\u7387\u4e3a4\uff09\u3002\u4f46\u662f\u7531\u4e8e\u672c\u65b9\u6cd5\u4f7f\u7528\u9884\u8bad\u7ec3\u7684\u4e0a\u91c7\u6837\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e0a\u91c7\u6837\u7387\u3002\\n\\n### \u5c06DUpsample\u548cSoftmax\u76f8\u7ed3\u5408\\n\\n\u4e4b\u524d\u6211\u4eec\u5df2\u7ecf\u5bf9DUpsample\u5982\u4f55\u53d6\u4ee3\u8001\u5f0f\u7684\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u8fdb\u884c\u4e86\u63cf\u8ff0\uff0c\u63a5\u4e0b\u6765\u7684\u4e00\u6b65\u662f\u5c06DUpsamle\u7ed3\u5408\u5230\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ed3\u6784\u4e2d\uff0c\u4ece\u800c\u5f62\u6210\u7aef\u5230\u7aef\u7684\u53ef\u8bad\u7ec3\u7cfb\u7edf\u3002\u867d\u7136\u80fd\u901a\u8fc7$1\\\\times 1$\u5377\u79ef\u76f4\u63a5\u5c06\u5176\u878d\u5408\u5230\u5176\u4e2d\uff0c\u4f46\u662f\u8fd9\u6837\u4ecd\u7136\u4f1a\u4ea7\u751f\u4e00\u4e9b\u9ebb\u70e6\uff0c\u6bd4\u5982\u52a0\u5927\u8bad\u7ec3\u96be\u5ea6\uff08\u6bd5\u7adf\u5c42\u6570\u53d8\u591a\u4e86\uff09\u3002\u53ef\u80fd\u662f\u7531\u4e8e$W$\u7684\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u635f\u5931\u7684\u8ba1\u7b97\u4f7f\u7528\u4e86one-hot\u7f16\u7801\u7684$Y$\uff08\u8bad\u7ec3\u96c6\u7684 ground truth\uff09\uff0c\u8fd9\u7bc7\u8bba\u6587\u7684\u4f5c\u8005\u5728\u5b9e\u9a8c\u4e2d\u53d1\u73b0DUpsample\u65b9\u6cd5\u8fde\u63a5Softmax\u51fd\u6570\u65f6\u5f88\u96be\u76f4\u63a5\u4ea7\u51fa\u8db3\u591f\u201c\u5c16\u9510\u201d\u7684\u503c\uff0c\u8fd9\u4f7f\u5f97\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\u53ef\u80fd\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u88ab\u201c\u5361\u4f4f\u201d\uff0c\u4ece\u800c\u5bfc\u81f4\u8bad\u7ec3\u8fc7\u7a0b\u6536\u655b\u7f13\u6162\u3002\\n\\n\u4e3a\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u5728softmax\u4e2d\u6dfb\u52a0temperature\u53c2\u6570$T$\uff0c\u8ba9softmax\u7684\u6fc0\u6d3b\u80fd\u529b\u66f4\u52a0\u5c16\u9510\u6216\u662f\u8f6f\u5f31\uff1a\\n$$\\nSoftmax(z_i) = \\\\frac{\\\\exp(z_i/T)}{\\\\sum_j \\\\exp(z_j/T)}\\n$$\\n\u7531\u4e8e\u53c2\u6570$T$\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u7684\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u81ea\u52a8\u5b66\u4e60\uff0c\u5728\u8fd9\u7bc7\u8bba\u6587\u7684\u5b9e\u9a8c\u4e2d\uff0c\u4f5c\u8005\u8bc1\u660e\u81ea\u9002\u5e94\u7684temperature\u53c2\u6570$T$\u80fd\u591f\u8ba9\u8bad\u7ec3\u6536\u655b\u5f97\u66f4\u5feb\u800c\u65e0\u9700\u5f15\u5165\u66f4\u591a\u8d85\u53c2\u6570\u3002\\n\\n### \u66f4\u52a0\u7075\u6d3b\u5730\u805a\u5408\u5377\u79ef\u4ea7\u751f\u7684\u7279\u5f81\\n\\n\u8db3\u591f\u6df1\u7684CNN\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u5f88\u591a\u9886\u57df\u83b7\u5f97\u4e86\u6210\u529f\uff0c\u4f46\u662f\u8fc7\u6df1\u7684CNN\u4f1a\u5bfc\u81f4\u5f88\u591a\u8bed\u4e49\u5206\u5272\u9700\u8981\u7684\u7ec6\u7c92\u5ea6\u4fe1\u606f\u4e22\u5931\uff0c\u540c\u65f6\u6709\u5f88\u591a\u76f8\u5173\u7814\u7a76\uff08\u6bd4\u5982ResNet\u4e4b\u7c7b\u7684\uff09\u8868\u660e\uff0c\u7ed3\u5408\u5377\u79ef\u7a0b\u5ea6\u8f83\u4f4e\u7684\u7279\u5f81\u80fd\u591f\u589e\u5f3a\u5206\u5272\u6027\u80fd\u3002\\n\\n\u4ee4$\\\\hat{F}$\u4e3a\u6700\u7ec8\u7684CNN\u8f93\u51fa\u7684\u7279\u5f81\u56fe\uff0c\u8be5\u7279\u5f81\u56fe\u5c06\u4f1a\u88ab\u7528\u4e8e\u53cc\u7ebf\u6027\u4e0a\u91c7\u6837\u6216\u662f\u4e0a\u8ff0\u7684DUpsample\u65b9\u6cd5\u8fdb\u884c\u50cf\u7d20\u7ea7\u7684\u9884\u6d4b\uff1b$\\\\hat{F}_i$\u548c$\\\\hat{F}_{last}$\u5206\u522b\u8868\u793a\u5728\u9aa8\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u7684\u7b2c$i$\u5c42\u548c\u6700\u540e\u4e00\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u3002\u5728\u8fd9\u91cc\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u8fd9\u7bc7\u8bba\u6587\u53ea\u5bf9\u878d\u5408\u4e00\u4e2a\u4f4e\u5c42\u7ea7\u7279\u5f81\u8fdb\u884c\u4e86\u8ba8\u8bba\uff0c\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u6269\u589e\u81f3\u878d\u5408\u66f4\u591a\u4e0d\u540c\u5c42\u7ea7\u7684\u7279\u5f81\uff0c\u8fd9\u4e5f\u8bb8\u4f1a\u8fdb\u4e00\u6b65\u63d0\u5347\u5206\u5272\u7684\u6027\u80fd\u3002\\n\\n![image-20210503104215395](./src/Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation/image-20210503104215395.png)\\n\\n\u4e0a\u56fe\u4e2d\uff08\u8fd9\u5c31\u662f\u4e00\u5f00\u59cb\u7684\u90a3\u5f20DeepLab\u7684\u7b80\u8981\u793a\u610f\u56fe\uff09\u89e3\u7801\u5668\uff08Decoder\uff09\u90e8\u5206\u7684\u7279\u5f81\u805a\u5408\u9636\u6bb5\u53ef\u4ee5\u7b80\u8981\u8868\u793a\u4e3a\uff1a\\n$$\\nF = f(concat(F_i,upsample(F_{last})))\\n$$\\n\u5176\u4e2d$f$\u8868\u793a\u67d0\u79cdCNN\uff0c$upsample$\u4f7f\u7528\u7684\u662f\u53cc\u7ebf\u6027\u7684\u65b9\u6cd5\u3002$concat$\u662f\u5728\u901a\u9053\uff08channel\uff09\u7ef4\u5ea6\u7684\u4e32\u8054\u8fd0\u7b97\u7b26\u3002\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u7531\u4e8e$f$\u662fCNN\uff0c\u6240\u4ee5\u5176\u8ba1\u7b97\u5f00\u9500\u4e0e\u8f93\u5165\u76f4\u63a5\u76f8\u5173\uff0c\u4ece\u800c\u5bfc\u81f4\u8fd9\u79cd\u7ed3\u6784\u65e0\u6cd5\u5229\u7528\u5f88\u4f4e\u7ea7\u7684\u7279\u5f81\uff08\u56e0\u4e3a\u5728CNN\u4e2d\uff0c\u8d8a\u4f4e\u7ea7\u7684\u7279\u5f81\u53ef\u80fd\u5bf9\u5e94\u7684\u7279\u5f81\u56fe\u5c31\u8d8a\u5927\uff09\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u5730\u5206\u5272\u6548\u679c\uff0c\u5728\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\u4e0a\uff0c\u89e3\u7801\u5668\u53ea\u80fd\u9009\u62e9\u4f4e\u5c42\u7ea7\u7279\u5f81\u8fdb\u884c\u805a\u5408\u3002\\n\\n\u76f8\u53cd\uff0c\u5728\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u7684\u6846\u67b6\u4e2d\uff0c\u7531\u4e8eDUpsample\u7684\u5f15\u5165\uff0c\u66f4\u9ad8\u5c42\u7ea7\u7684\u7279\u5f81\u80fd\u591f\u66f4\u597d\u5730\u6062\u590d\u5230\u66f4\u5927\u7684\u5206\u8fa8\u7387\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u653e\u5fc3\u5730\u5c06\u4efb\u4f55\u4f4e\u5c42\u7ea7\u7279\u5f81\u4e0b\u91c7\u6837\u5230$F_{last}$\uff0c\u7136\u540e\u5c06\u7279\u5f81\u805a\u5408\u7528\u4e8e\u6700\u7ec8\u7684\u9884\u6d4b\u3002\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u4e0a\u4e2a\u7b49\u5f0f\u4e5f\u5c06\u88ab\u6539\u5199\u4e3a\uff1a\\n$$\\nF = f(concat(downsample(F_i),F_{last}))\\n$$\\n\u4ece\u6539\u5199\u4e4b\u540e\u7684\u7b49\u5f0f\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c$upsample$\u64cd\u4f5c\u88ab\u53d6\u6d88\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u4e2a$downsample$\u64cd\u4f5c\uff0c\u8fd9\u4f7f\u5f97\u8ba1\u7b97\u7684\u6548\u7387\u88ab\u5927\u5927\u63d0\u9ad8\u3002\u5728\u8fd9\u7bc7\u8bba\u6587\u540e\u9762\u7684\u5b9e\u9a8c\u73af\u8282\u4e2d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u88ab\u8bc1\u660e\u80fd\u591f\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63d0\u5347\u5206\u5272\u7684\u6027\u80fd\u548c\u8868\u73b0\u3002\\n\\n\u53ea\u6709\u5728\u4f7f\u7528DUpsample\u7684\u65f6\u5019\uff0c\u624d\u80fd\u653e\u5fc3\u5730\u4f7f\u7528\u4e4b\u524d\u63d0\u5230\u7684\u5bf9\u4f4e\u5c42\u7ea7\u7279\u5f81\u8fdb\u884c\u4e0b\u91c7\u6837\u7684\u65b9\u6cd5\uff1b\u5426\u5219\u6574\u4e2a\u5206\u5272\u7f51\u7edc\u7684\u6027\u80fd\u4f1a\u88ab\u4e0d\u591f\u4f18\u79c0\u7684\u6700\u7ec8\u4e00\u5c42\u7684\u4e0a\u91c7\u6837\u65b9\u6cd5\u6240\u9650\u5236\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f20\u7edf\u7684\u65b9\u6cd5\u4e2d\u5f80\u5f80\u9700\u8981\u89e3\u7801\u5668\u5c06\u4f4e\u5206\u8fa8\u7387\u7684\u9ad8\u5c42\u7279\u5f81\u4e0a\u91c7\u6837\u5230\u9ad8\u5206\u8fa8\u7387\u4f4e\u5c42\u7ea7\u7279\u5f81\u540e\u624d\u8fdb\u884c\u7279\u5f81\u805a\u5408\u7684\u539f\u56e0\u3002\\n\\n## \u5b9e\u9a8c\\n\\n\u5b9e\u9a8c\u90e8\u5206\u8bf7\u81ea\u884c\u9605\u8bfb[\u539f\u8bba\u6587](https://arxiv.org/pdf/1903.02120.pdf)"},{"id":"/[05]HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection","metadata":{"permalink":"/blog/[05]HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[05]HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection.md","source":"@site/blog/[05]HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection.md","title":"HLA-Face Joint High-Low Adaptation for Low Light Face Detection","description":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u4f4e\u5149\u7167\u4eba\u8138\u68c0\u6d4b\u7684\u8bba\u6587\u3002\u539f\u8bba\u6587\uff08HLA-Face Joint High-Low Adaptation for Low Light Face Detection\uff09\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"detection","permalink":"/blog/tags/detection"},{"label":"low-light","permalink":"/blog/tags/low-light"}],"readingTime":15.675,"hasTruncateMarker":true,"authors":[{"name":"PommesPeter","title":"I want to be strong. But it seems so hard.","url":"https://blog.pommespeter.com/","email":"me@pommespeter.com","imageURL":"https://github.com/PommesPeter.png","key":"pommespeter"}],"frontMatter":{"title":"HLA-Face Joint High-Low Adaptation for Low Light Face Detection","authors":["pommespeter"],"tags":["detection","low-light"]},"prevItem":{"title":"Decoders Matter for Semantic Segmentation - Data-Dependent Decoding Enables Flexible Feature Aggregation","permalink":"/blog/[04]Decoders-Matter-for-Semantic-Segmentation-Data-Dependent-Decoding-Enables-Flexible-Feature-Aggregation"},"nextItem":{"title":"DeepLab Series","permalink":"/blog/[06]DeepLab-Series"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u4f4e\u5149\u7167\u4eba\u8138\u68c0\u6d4b\u7684\u8bba\u6587\u3002[\u539f\u8bba\u6587\uff08HLA-Face Joint High-Low Adaptation for Low Light Face Detection\uff09](https://arxiv.org/pdf/2104.01984.pdf)\u3002\\n\\n- \u5145\u5206\u5229\u7528\u73b0\u6709\u7684\u6b63\u5e38\u5149\u6570\u636e\uff0c\u5e76\u63a2\u7d22\u5982\u4f55\u5c06\u9762\u90e8\u63a2\u6d4b\u5668\u4ece\u6b63\u5e38\u5149\u7ebf\u8c03\u6574\u5230\u4f4e\u5149\u3002\u8fd9\u9879\u4efb\u52a1\u7684\u6311\u6218\u662f\uff0c\u6b63\u5e38\u548c\u4f4e\u5149\u4e4b\u95f4\u7684\u5dee\u8ddd\u5bf9\u4e8e\u50cf\u7d20\u7ea7\u548c\u7269\u4f53\u7ea7\u522b\u6765\u8bf4\u592a\u5927\u800c\u590d\u6742\u3002\u56e0\u6b64\uff0c\u5927\u591a\u6570\u73b0\u6709\u7684lowlighenhance\u548c\u9002\u5e94\u65b9\u6cd5\u4e0d\u8fbe\u5230\u6240\u9700\u7684performance\u3002\\n- \u672c\u6587\u662fDARK FACE\u4e3a\u57fa\u51c6\uff0c\u9488\u5bf9\u73b0\u6709\u7684\u6b63\u5e38\u7167\u5ea6\u56fe\u50cf\uff0c\u5c06\u56fe\u50cf\u8c03\u6574\u6210\u4f4e\u7167\u5ea6\u56fe\u50cf\uff0c\u4e0d\u9700\u8981\u6807\u7b7e\\n- \u4e00\u4e2a\u662f\u50cf\u7d20\u7ea7\u5916\u89c2\u7684\u5dee\u8ddd\uff0c\u4f8b\u5982\u4e0d\u8db3\uff0c\u7167\u660e\uff0c\u76f8\u673a\u566a\u58f0\u548c\u989c\u8272\u504f\u7f6e\u3002\u53e6\u4e00\u4e2a\u662f\u6b63\u5e38\u548c\u4f4e\u5149\u573a\u666f\u4e4b\u95f4\u7684\u7269\u4f53\u7ea7\u8bed\u4e49\u5dee\u5f02\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u8def\u706f\u7684\u5b58\u5728\uff0c\u8f66\u8f86\u524d\u706f\u548c\u5e7f\u544a\u677f\u3002\u4f20\u7edf\u7684\u4f4e\u5149\u589e\u5f3a\u65b9\u6cd5[5,6]\u8bbe\u8ba1\u7528\u4e8e\u63d0\u9ad8\u89c6\u89c9\u8d28\u91cf\uff0c\u56e0\u6b64\u4e0d\u80fd\u586b\u5145\u8bed\u4e49\u5dee\u8ddd\uff0c\\n- \u901a\u8fc7\u4f7f\u4f4e\u5149\u56fe\u50cf\u4eae\u8d77\u5e76\u626d\u66f2\u6b63\u5e38\u5149\u56fe\u50cf\uff0c\u6211\u4eec\u6784\u5efa\u4f4d\u4e8e\u6b63\u5e38\u548c\u4f4e\u5149\u4e4b\u95f4\u7684\u4e2d\u95f4\u72b6\u6001\u3002\\n\\n\u6458\u8981:\\n\\n> Face detection in low light scenarios is challenging but vital to many practical applications, e.g., surveillance video, autonomous driving at night. Most existing face detectors heavily rely on extensive annotations, while col- lecting data is time-consuming and laborious. To reduce the burden of building new datasets for low light condi- tions, we make full use of existing normal light data and explore how to adapt face detectors from normal light to low light. The challenge of this task is that the gap between normal and low light is too huge and complex for both pixel-level and object-level. Therefore, most existing low- light enhancement and adaptation methods do not achieve desirable performance. To address the issue, we propose a joint High-Low Adaptation (HLA) framework. Through a bidirectional low-level adaptation and multi-task high- level adaptation scheme, our HLA-Face outperforms state- of-the-art methods even without using dark face labels for training. Our project is publicly available at: [https: //daooshee.github.io/HLA-Face-Website/](https: //daooshee.github.io/HLA-Face-Website/)\\n\\n\x3c!--truncate--\x3e\\n\\n## \u95ee\u9898\\n\\n- \u5728\u4e0d\u5229\u7167\u660e\u6761\u4ef6\u4e0b\u7684\u9762\u90e8\u68c0\u6d4b\u4ecd\u7136\u5177\u6709\u6311\u6218\u6027\u3002\u5728\u4e0d\u8db3\u7684\u56fe\u50cf\u6355\u83b7\u7684\u56fe\u50cf\u906d\u53d7\u4e00\u7cfb\u5217\u964d\u7ea7\uff0c\u4f8b\u5982\u4f4e\u53ef\u89c1\u6027\uff0c\u5bc6\u96c6\u566a\u58f0\u548c\u5f69\u8272\u94f8\u9020\u3002\\n- \u73b0\u6709\u7684\u76ee\u6807\u68c0\u6d4b\u65b9\u6848\u5f88\u5c11\u8003\u8651\u5230\u5728\u4f4e\u7167\u5ea6\u56fe\u50cf\u4e0a\u7684\u68c0\u6d4b\\n- \u76d1\u63a7\u89c6\u9891\u5206\u6790\u548c\u591c\u95f4\u81ea\u52a8\u9a7e\u9a76\u4e2d\u7684\u6f5c\u5728\u98ce\u9669\u3002\\n- \u73b0\u6709\u7684\u56fe\u50cf\u589e\u5f3a\u589e\u5f3a\u4e4b\u540e\u8fd8\u662f\u68c0\u6d4b\u4e0d\u5230\\n- \u9ed1\u8138\u68c0\u6d4b\u7684\u95ee\u9898\u662fH\u548cL\u4e4b\u95f4\u7684\u5dee\u8ddd\u5bf9\u4e8e\u73b0\u6709\u7684\u5904\u7406\u65b9\u6cd5\u6765\u8bf4\u592a\u5927\u5e76\u4e14\u590d\u6742\u3002\\n- \u4e0d\u540c\u56fe\u50cf\u4e0d\u4ec5\u53ea\u6709\u50cf\u7d20\u7ea7\u7684\u4e0d\u540c\uff0c\u8fd8\u6709\u9488\u5bf9\u4e0d\u540c\u7684\u573a\u666f\u548c\u5bf9\u8c61\uff0c\u4f46\u662f\u589e\u5f3a\u548c\u6697\u5316\u56fe\u50cf\u53ea\u8003\u8651\u50cf\u7d20\u7ea7\u7684\u5dee\u8ddd\\n- \u76ee\u524d\u5f88\u591a\u57fa\u4e8e\u4f4e\u7167\u5ea6\u7684\u76ee\u6807\u68c0\u6d4b\u90fd\u9700\u8981\u4f9d\u8d56\u6807\u7b7e\uff0c\u9650\u5236\u4e86\u7075\u6d3b\u6027\u548c\u9c81\u68d2\u6027\\n\\n## \u6240\u505a\u5de5\u4f5c\\n\\n### \u76f8\u5173\u5de5\u4f5c\\n\\n1. \u63d0\u51fa\u4e86\u4e00\u79cd\u5bf9\u4e8e\u4f4e\u7167\u5ea6\u589e\u5f3a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5bf9\u4e8e\u6697\u5904\u4eba\u8138\u68c0\u6d4b\\n2. \u63d0\u51fa\u4e86\u4e00\u79cd\u6697\u5904\u4eba\u8138\u68c0\u6d4b\u5668\u4e0d\u9700\u8981\u4f7f\u7528\u5bf9\u4e8e\u6697\u5904\u4eba\u8138\u7684\u6807\u7b7e(\u57fa\u4e8eDSFD\u8fdb\u884c\u6539\u8fdb)\\n3. \u63d0\u51fa\u4e86\u4e00\u79cd\u4f18\u79c0\u7684\u65b9\u6cd5\u5bf9\u4e8e\u9ad8\u4f4e\u7ea7\u7684\u8054\u5408\u9002\u5e94\\n4. \u63d0\u51fa\u4e86\u9ad8\u4f4e\u7ea7\u9002\u5e94\u6a21\u5f0f\\n\\n### \u603b\u7ed3\\n\\n- \u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u6846\u67b6\uff0c\u7528\u4e8e\u9ed1\u6697\u4eba\u8138\u68c0\u6d4b\u68c0\u6d4b\uff0c\u6ca1\u6709\u6807\u7b7e\u7684\u9ed1\u6697\u4eba\u8138\u6570\u636e\u3002\u901a\u8fc7\u8054\u5408\u4f4e\u7ea7\u548c\u9ad8\u7ea7\u7279\u5f81\u9002\u5e94\uff0c\u4e0e\u6700\u5148\u8fdb\u7684\u9762\u90e8\u68c0\u6d4b\u548c\u9002\u5e94\u65b9\u6cd5\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u6a21\u578b\u5b9e\u73b0\u4e86\u5353\u8d8a\u7684\u6027\u80fd\u3002\\n- \u5bf9\u4e8e\u4f4e\u7ea7\u7279\u5f81\u9002\u5e94\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u53cc\u5411\u65b9\u6848\u3002\u901a\u8fc7\u4f7f\u7528\u566a\u97f3\u548c\u989c\u8272\u504f\u7f6e\u7684\u4f4e\u5149\u6570\u636e\u548c\u626d\u66f2\u5e38\u89c4\u5149\u6570\u636e\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e2d\u95f4\u72b6\u6001\uff0c\u5e76\u4f7f\u4e24\u4e2a\u57df\u6bcf\u4e2a\u57df\u5f7c\u6b64\u8fc8\u5411\u3002\\n- \u5bf9\u4e8e\u9ad8\u7ea7\u522b\u7279\u5f81\u7684\u9002\u5e94\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u529f\u80fd\u9002\u5e94\u7684\u8de8\u9886\u57df\u81ea\u6211\u76d1\u7763\u5b66\u4e60\u3002\u901a\u8fc7\u57fa\u4e8e\u80cc\u666f\u548c\u5bf9\u6bd4\u5b66\u4e60\uff0c\u6211\u4eec\u5168\u9762\u5730\u5173\u95ed\u4e86\u591a\u4e2a\u57df\u4e4b\u95f4\u7684\u7279\u5f81\u8ddd\u79bb\uff0c\u5e76\u8fdb\u4e00\u6b65\u52a0\u5f3a\u4e86\u8868\u793a\u3002\\n- \u6211\u4eec\u901a\u8fc7\u7ec4\u5408\u4f4e\u7ea7\u548c\u9ad8\u7ea7\u522b\u7684\u9002\u5e94\u65b9\u6cd5\u6765\u63d0\u51fa\u4e00\u79cd\u4f18\u5f02\u7684\u65b9\u6cd5\u3002\\n\\n## \u53d8\u91cf\u540d\\n\\n- $H$:\u6b63\u5e38\u7167\u5ea6\u56fe\u50cf\\n\\n- $L$:\u4f4e\u7167\u5ea6\u56fe\u50cf\\n\\n- $E(.)$:\u7528\u4e8e\u5c06\u56fe\u50cf\u8fdb\u884c\u589e\u5f3a\u7684\u7f51\u7edc\\n\\n    E(.)\u7684\u7f51\u7edc\u7ed3\u6784:\\n\\n    ![image-20210503121108631](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503121108631.png)\\n\\n- $D(.)$:\u7528\u4e8e\u5c06\u56fe\u50cf\u6697\u5316\u7684\u7f51\u7edc\\n\\n\\n## \u8bba\u6587\u521b\u65b0\u70b9\\n\\n- \u4e3a\u4e86\u5171\u540c\u586b\u8865\u50cf\u7d20\u7ea7\u548c\u7279\u5f81\u7ea7\u522b\u7684\u9ed1\u6697\u4eba\u8138\u68c0\u6d4b\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u9ad8\u4f4e\u9002\u5e94\uff08HLA\uff09\u65b9\u6848\u3002\u5982\u56fe**Figure2**\u6211\u4eec\u5728L\u548cH\u4e4b\u95f4\u8bbe\u7f6e\u4f4e\u7ea7\u4e2d\u95f4\u72b6\u6001\uff0c\u5e76\u57fa\u4e8e\u8fd9\u4e9b\u72b6\u6001\u9002\u5e94\u76f8\u5e94\u7684\u9ad8\u7ea7\u8868\u793a\u3002\\n- \u589e\u5f3a\u548c\u53d8\u6697\u90fd\u51cf\u5c11\u4e86low level distance\u3002\u4e0el-to-h\u6216h-to-l\u7684\u5355\u5411\u7ffb\u8bd1\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u53cc\u5411\u7ffb\u8bd1\uff1aL-to-E(L)\u548cH-to-D(H)\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u7f13\u89e3\u9002\u5e94\u7684\u96be\u5ea6\uff0c\u8fd8\u63d0\u4f9b\u66f4\u591a\u7684\u5de5\u5177\u7528\u4e8e\u7279\u5f81\u7ea7\u9002\u5e94\u3002\\n- \u901a\u8fc7\u5411\u5f7c\u6b64\u63a8\u52a8\u591a\u4e2a\u72b6\u6001\u7684\u7279\u5f81\u7a7a\u95f4\u6765\u51cf\u5c11high-level distance\\n- \u901a\u8fc7\u5bf9\u6bd4\u5ea6\u5b66\u4e60\u8fdb\u4e00\u6b65\u589e\u5f3a\u4e86\u7279\u5f81\u8868\u793a\u3002\\n\\n## \u600e\u4e48\u505a\u7684\uff1f\\n\\n### High-Low Adaptation\u6a21\u5f0f\\n\\n\u8bbe\u7f6e\u4e86\u4e00\u79cd\u4e2d\u95f4\u72b6\u6001\u5728L\u548cH\u4e4b\u95f4\uff0c\u57fa\u4e8e\u8fd9\u4e9b\u72b6\u6001\u76f8\u4e92\u9002\u5e94hign-level\u8868\u793a\u3002\u901a\u8fc7\u4f4e\u7167\u5ea6\u589e\u5f3a\u548c\u6697\u5316\u56fe\u50cf\u6765\u7f29\u77edlow-level\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002\u4e0e\u4f20\u7edfL-to-H\u548cH-to-L\u5355\u5411\u8f6c\u6362\u76f8\u6bd4\uff0c\u4f7f\u7528\u53cc\u5411\u8f6c\u6362\u7684\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662fL-to-E(L),H-to-D(H).\u901a\u8fc7\u628a\u591a\u79cd\u72b6\u6001\u7684\u7279\u5f81\u7a7a\u95f4\u5408\u5e76\u5230\u4e00\u8d77\u80fd\u51cf\u5c11hign-level\u7684\u8ddd\u79bb\u3002\u518d\u901a\u8fc7\u5bf9\u6bd4\u5ea6\u5b66\u4e60\u80fd\u591f\u589e\u5f3a\u7279\u5f81\u3002\\n\\n### \u53cc\u5411Low-level\u9002\u5e94\\n\\n- \u4e24\u65b9\u9762\u95ee\u9898\\n\\n    1. Hign-level\u7684\u95f4\u9699\u5171\u5b58\u53ef\u4ee5\u6df7\u6dc6\u50cf\u7d20\u7ea7\u4f20\u8f93\u6a21\u578b\u3002\u8fd9\u91cc\u662f\u6307\u5bf9\u4e8e\u5f81\u7a0b\u56fe\u50cf\u751f\u6210\u4f4e\u7167\u5ea6\u56fe\u50cf\u7684\u65f6\u5019\u50cf\u7d20\u70b9\u8f6c\u79fb\u7684\u65f6\u5019\u4f4d\u7f6e\u4e0d\u5bf9\u3002\u5c31\u662f\u6307\u5bf9\u4e8e\u9ad8\u4eae\u90e8\u5206\u7684\u50cf\u7d20\u5728\u751f\u6210\u7684\u65f6\u5019\u73b0\u6709\u7684\u7814\u7a76\u90fd\u751f\u6210\u5230\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c(\u9ad8\u4eae\u90e8\u5206\u4e00\u822c\u6709\u8def\u706f\uff0c\u8f66\u5927\u706f\u7b49)\u73b0\u5728\u7684\u4e00\u4e9b\u9519\u8bef\u6709\u4eba\u8eab\u4f53\u4e0a\u751f\u6210\u4e86\u5947\u602a\u7684\u5149\uff0c\u751f\u6210\u8def\u706f\u7684\u4eae\u5ea6\u5728\u4eba\u8138\u4e0a\u3002MUNIT\u80fd\u591f\u5206\u8fa8\u7269\u4f53\u548c\u80cc\u666f\uff0c\u4f46\u662f\u751f\u6210\u7684\u56fe\u50cf\u4e0d\u591f\u9ed1\uff0c\u8ddf\u4f4e\u7167\u5ea6\u56fe\u50cf\u76f8\u6bd4\u5dee\u522b\u5f88\u5927\u3002\\n    2. \u5bf9\u4e8e\u4f4e\u7167\u5ea6\u589e\u5f3a\u672c\u8eab\u6765\u8bf4\u6bd4\u8f83\u56f0\u96be\u3002\u73b0\u6709\u7684\u4e00\u4e9b\u4f4e\u7167\u5ea6\u589e\u5f3a\u65b9\u6cd5\u90fd\u662f\u6309\u7167\u4eba\u7c7b\u89c6\u89c9\u7684\u65b9\u5f0f\u8fdb\u884c\u589e\u5f3a\uff0c\u4e0d\u662f\u8003\u8651\u673a\u5668\u89c6\u89c9\u3002\u73b0\u5728\u9519\u8bef\u6709\u753b\u51fa\u4e86\u6697\u533a\u57df\u7684\u8fb9\u7f18\uff0c\u6709\u566a\u58f0\u7684\u90e8\u5206\u8fd8\u662f\u9ed1\u7684\uff0c\u589e\u5f3a\u7684\u5bf9\u6bd4\u5ea6\u53ef\u80fd\u4f1a\u5f71\u54cd\u68c0\u6d4b\u6027\u80fd\u3002\u6b64\u5916\uff0cDF\u6570\u636e\u96c6\u4e0a\u5e42\u96c6\u7684\u566a\u58f0\u548c\u504f\u8272\uff0c\u73b0\u6709\u7684\u53bb\u566a\u548c\u989c\u8272\u91cd\u6784\u65b9\u6cd5\u4e0d\u8db3\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\\n\\n- \u89e3\u51b3\u65b9\u6848\\n\\n    * \u63d0\u51fa\u4e86**\u53cc\u5411\u4f4e\u7ea7\u7279\u5f81\u9002\u5e94\u6a21\u5f0f**\u3002\u6b63\u5e38\u56fe\u50cf\u4f4e\u7167\u5ea6\u5316\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u5206\u89e3\u6210\u4e09\u4e2a\u56e0\u7d20\uff1a\u4eae\u5ea6\u3001\u566a\u58f0\u3001\u8272\u504f\u3002\u6240\u4ee5\u5bf9\u4e8e$L$\u6765\u8bf4\u8c03\u6574\u4eae\u5ea6\u53d8\u6210$E(L)$,\u5bf9\u4e8e$H$\u6765\u8bf4\u7528\u566a\u58f0\u548c\u8272\u504f\u5f62\u6210$D(H)$.\u8fd9\u6837\u64cd\u4f5c\u4f7f\u5f97$E(L)$\u548c$D(H)$\u66f4\u52a0\u76f8\u4f3c\u3002\u8fd9\u6837\u505a\u964d\u4f4e\u4e86\u751f\u6210\u4f4e\u7167\u5ea6\u56fe\u50cf\u548c\u6b63\u5e38\u56fe\u50cf\u7684\u56f0\u96be\u3002\u5c06\u7279\u5b9a\u7684\u90e8\u5206\u4f4e\u7167\u5ea6\uff0c\u6a21\u578b\u4e0d\u4f1a\u6536\u5230\u7ed3\u6784\u57df\u4e4b\u95f4\u7684\u8bed\u4e49\u5dee\u8ddd\u7684\u5e72\u6270\\n\\n        ![image-20210503114617138](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503114617138.png)\\n\\n        ![image-20210503120027621](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503120027621.png)\\n\\n        1. \u589e\u5f3a\u2014\u2014\u53d8\u4eae:\\n\\n            + \u8c03\u6574\u4eae\u5ea6\u7684\u540c\u65f6\u4e0d\u4f1a\u8ba9\u56fe\u50cf\u4ea7\u751f\u566a\u58f0\u548c\u8272\u504f(\u8c03\u6574\u4eae\u5ea6\u540e\u4e0d\u9700\u8981\u989d\u5916\u518d\u53bb\u566a\u548c\u989c\u8272\u91cd\u6784).\u6709\u4e9b\u4f4e\u7167\u5ea6\u56fe\u50cf\u4eae\u5ea6\u4e0d\u5747\u5300\uff0c\u6709\u4e00\u4e9b\u8138\u4f1a\u88ab\u8def\u706f\u7167\u4eae\u6709\u4e9b\u53ef\u80fd\u662f\u53d8\u9ed1\u3002\u56e0\u6b64\u8fd8\u8981\u907f\u514d\u8fc7\u66dd\u5149\u548c\u66dd\u5149\u4e0d\u8db3\u3002\u6240\u4ee5\u4f7f\u7528\u4e86\u57fa\u4e8e**\u975e\u7ebf\u6027\u66f2\u7ebf\u6620\u5c04**\u65b9\u6cd5\\n                $$\\n                LE(x,A)=x+Ax(1-x);\\\\\\\\LE_n=LE(LE_{n-1};A_n);\\\\\\\\\\n                $$\\n                \u8fdb\u884c\u8fed\u4ee3\u3002(\u53d8\u91cf\u8bf4\u660e:$LE_0$\u662f\u8f93\u5165\u56fe\u50cf,$LE_n$\u662f\u8fed\u4ee3n\u6b21\u7684\u7ed3\u679c,$A_n$\u662f\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u51fa\u6765\u7684\u8c03\u6574\u56fe\uff0c\u662f\u4e09\u901a\u9053\u7684)\u66f2\u7ebf\u6620\u5c04\u4e0d\u4f1a\u5f15\u5165\u989d\u5916\u7684\u566a\u58f0\u6216\u8005\u4f2a\u56fe\u50cf(\u4e3a\u4ec0\u4e48?)\uff0c\u4f7f\u7528\u4e86\u4e00\u4e2a7\u5c42\u5177\u6709\u5bf9\u79f0Skip-connection\u7684CNN\u548c\u76f8\u5e94\u7684\u76ee\u6807\u51fd\u6570\u3002\\n\\n            + \u9488\u5bf9\u589e\u5f3a\uff0c\u5e76\u6ca1\u6709\u8fdb\u884c\u5f88\u5f3a\u70c8\u7684\u589e\u5f3a\uff0c\u53ea\u662f\u4e00\u4e2a\u5f31\u589e\u5f3a\uff0c\u56e0\u4e3a\u5982\u679c\u589e\u5f3a\u592a\u591a\u4f1a\u5bfc\u81f4\u566a\u58f0\u7a81\u51fa\uff0c\u9690\u85cf\u566a\u58f0\u4e8e\u9ed1\u6697\u4e4b\u4e2d\uff0c\u6210\u50cf\u8d28\u91cf\u8fd9\u6837\u66f4\u597d\u3002\u5bf9\u6bd4\u8f83\u4eae\u7684\u533a\u57df\u8fdb\u884c\u5f3a\u589e\u5f3a\uff0c\u7528\u4e24\u500d\u7684\u8fed\u4ee3\u57fa\u4e8e\u4e0a\u6587\u7684\u516c\u5f0f\uff0c\u6269\u5927\u66f2\u7ebf\u4f30\u8ba1\u7f51\u7edc\uff0c\u6a21\u578b\u53ef\u4ee5\u66f4\u4eae\u7684\u65b9\u5f0f\u589e\u5f3a\u56fe\u50cf\uff0c\u4f46\u7f3a\u70b9\u662f\u4f34\u968f\u800c\u6765\u7684\u662f\u566a\u58f0\u548c\u8272\u504f\uff0c\u4f46\u5728$H-to-D(H)$\u4e2d\u4f1a\u8fdb\u884c\u5904\u7406\u3002(\u6587\u7ae0\u91cc\u7684illumination\u662f\u6307\u56fe\u50cf\u4e2d\u67d0\u4e00\u5757\u6bd4\u8f83\u4eae\u7684\u533a\u57df)\\n\\n        2. \u566a\u58f0\u5408\u6210:\\n\\n            + \u50cf\u7d20\u7ea7\u522b\u4e0a\u7684\u566a\u58f0\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u4eae\u5ea6\u51cf\u5c11\uff0c\u4f46\u662f\u8981\u51cf\u5c11$E(L)$\u548c$H$\u4e4b\u95f4\u7684\u8ddd\u79bb\u4ecd\u7136\u6bd4\u8f83\u56f0\u96be\u3002\u901a\u8fc7\u5206\u79bb\u989c\u8272\u6765\u5f15\u5bfc\u566a\u58f0\u5408\u6210\u7684\u8fc7\u7a0b(\u4e3a\u4ec0\u4e48?)\\n            + \u9996\u5148\u662f\u8fdb\u884c\u4e00\u6b21\u53cc\u4fa7\u6ee4\u6ce2\u5668\u6a21\u7cca,\u4f7f\u7528\u53c2\u6570$d=25$\u548c$\u03c3=75$.\u6a21\u7cca\u540e\u7684\u7ed3\u679c$E(L)_{blur}$\u4f5c\u4e3a\u989c\u8272\u5f15\u5bfc\u566a\u58f0\u5408\u6210\u3002\\n            + \u5176\u6b21\u4f7f\u7528Pix2Pix\u8fdb\u884c\u8bad\u7ec3\uff0c\u5c06\u6a21\u7cca\u540e\u7684\u7ed3\u679c$E(L)_{blur}$\u8f6c\u79fb\u5230\u6240\u9700\u8981\u7684$E(L)$\\n            + \u6700\u540e\uff0c\u5bf9$H$\u4e5f\u8fdb\u884c\u540c\u6837\u7684\u64cd\u4f5c\u8fdb\u884c\u6dfb\u52a0\u566a\u58f0\uff0c\u6700\u7ec8\u5f97\u5230\u7684$H_{noise}$\u6210\u529f\u6a21\u4eff\u4e86E(L)\u7684\u566a\u58f0\uff0c\u989c\u8272\u5206\u5e03\u7684\u5dee\u8ddd\u5728\u4e0b\u4e00\u6b65\u8fdb\u884c\u5904\u7406\u3002\\n\\n        3. \u989c\u8272\u6296\u52a8(\u4fee\u6b63):\\n\\n         + $D(H)$\u7684\u989c\u8272\u5206\u5e03\u8981\u5339\u914d$E(L)$\uff0c\u57fa\u4e8e\u7edf\u8ba1\u5b66\u5206\u6790\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u4eae\u5ea6\u6296\u52a8\u533a\u95f4$(0.4,1.2)$,\u5bf9\u6bd4\u5ea6\u6296\u52a8\u533a\u95f4$(0.6,1.4)$,\u9971\u548c\u5ea6\u6296\u52a8\u533a\u95f4$(0.6,1.4)$,\u8272\u5ea6\u6296\u52a8\u533a\u95f4$(0.8,1.2)$ (\u4e3a\u4ec0\u4e48?)\\n\\n    * \u4f7f\u7528**\u591a\u4efb\u52a1\u9ad8\u7ea7\u7279\u5f81\u9002\u5e94**\uff0c\u5f88\u591a\u7279\u5f81\u9002\u5e94\u65b9\u6cd5\u90fd\u662f\u57fa\u4e8e\u56fe\u50cf\u5bf9\u9f50\u3001\u4f2a\u6807\u7b7e\u8bad\u7ec3\u3001\u5bf9\u6297\u5b66\u4e60\u7b49\uff0c\u56fe\u50cf\u5bf9\u9f50\u548c\u4f2a\u6807\u7b7e\u8bad\u7ec3\u4e0d\u80fd\u5904\u7406\u5dee\u8ddd\u6bd4\u8f83\u5927\u7684\u3002\u5bf9\u6297\u5b66\u4e60\u4e0d\u7a33\u5b9a\uff0c\u6211\u4eec\u4f7f\u7528\u56fe\u50cf\u7684\u81ea\u7136\u4fe1\u606f\u4e5f\u5c31\u662f\u56fe\u50cf\u672c\u8eab\uff0c\u8fdb\u884c\u81ea\u76d1\u7763\u5b66\u4e60\u3002\u901a\u8fc7\u81ea\u76d1\u7763\u5206\u7c7b\u5668\u5171\u4eab\u57df\uff0c\u7279\u5f81\u88ab\u5f3a\u5236\u6620\u5c04\u5230\u76f8\u540c\u7684\u9ad8\u7ef4\u5b50\u7a7a\u95f4\uff0c\u56e0\u6b64\u4f7f\u5f97\u9760\u8fd1\u9ad8\u7ea7\u7279\u5f81\u95f4\u9699\u3002\u5b66\u4e60\u65b9\u6848\uff1a\\n\\n        ![image-20210503120539220](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503120539220.png)\\n\\n        \u81ea\u76d1\u7763\u5b66\u4e60\u6a21\u5757\u7ed3\u6784\\n\\n        ![image-20210503121622540](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503121622540.png)\\n\\n        \u9aa8\u5e72\u7f51\u7edc:\\n\\n        (\u91c7\u7528DSFD\u7684\u4e3b\u5e72\uff0cVGG16\u63d0\u53d6\u51fa6\u5c42\u591a\u5c3a\u5ea6\u7279\u5f81:conv3_3,conv4_3,conv5_3,conv_fc7,conv6_2,conv7_2)\\n\\n        ![image-20210503121806149](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503121806149.png)\\n\\n        1. \u4f7f\u5f97$E(L)$\u4e0e$H$\u9760\u8fd1$(E(L)\\\\lrarr H)$\uff0c\u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684\u81ea\u6211\u76d1\u7763\u5b66\u4e60\u8bbe\u8ba1\u76ee\u6807\uff0c\u6a21\u578b\u901a\u8fc7\u5b66\u4e60\u7a7a\u95f4\u4e0a\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u4f7f\u7528\u62fc\u56fe\u65b9\u6cd5\u80fd\u5f88\u597d\u5730\u5b8c\u6210\u4e0a\u9762\u7684\u76ee\u6807\u3002\u5c06\u4e00\u4e2a3x3\u7684patch\u653e\u5230\u6574\u4e2a\u56fe\u50cf\u4e0a\uff0c\u8bbe\u8fd9\u4e2apatch\u6392\u5e8f\u6570\u4e3a30\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u4e00\u4e2a30\u5206\u7c7b\u95ee\u9898,\u635f\u5931\u51fd\u6570\u4e3a\\n            $$\\n            L_{jig}^{E(L)}=L_c(F_{jig}^{E(L)},p_{jig}^{E(L)}) \\\\\\\\ L_{jig}^{H}=L_c(F_{jig}^{H},p_{jig}^{H}))\\n            $$\\n            (\u53d8\u91cf\u8bf4\u660e:$p_{jig}$\u8868\u793a\u6392\u5217\u7684\u6807\u7b7e\uff0c$L_c$\u8868\u793a\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570,$F_{jig}$\u8868\u793a\u76f8\u5e94\u57df\u4e2d\u63d0\u53d6\u51fa\u6765\u7684\u7279\u5f81(\u5199\u5728\u53d8\u91cf\u53f3\u4e0a\u65b9\u8868\u793a\u5bf9\u5e94\u57df\u7684\u4e0b\u7684\u503c),E(L)\u548cH\u5171\u4eab\u4e00\u4e2a\u5f3a\u884c\u628a\u8bed\u4e49\u7279\u5f81\u6620\u5c04\u5230\u76f8\u540c\u7a7a\u95f4\u7684\u5206\u7c7b\u5934\uff0c\u56e0\u6b64\u4f7f\u5f97\u9ad8\u7ea7\u7279\u5f81\u4e4b\u95f4\u7684\u95f4\u9699\u51cf\u5c11\uff0c\u6700\u7ec8\u635f\u5931\u51fd\u6570:\\n            $$\\n            L_{E(L)\\\\lrArr H}=L_{jig}^{E(L)}+L_{jig}^{H}\\n            $$\\n            \u4ee5jigsaw\u65b9\u6cd5\u7684\u9002\u5e94\u4e3a\u4f8b\u5b50\u7684\u7ed3\u6784:\uff08\u5176\u4ed6\u540c\u7406\uff09\\n\\n            \u200b\\t\u4ece\u521a\u624d\u7684\u4e3b\u5e72\u4e2d\u62bd\u53d6\u51fa6\u5c42\u7279\u5f81\u56fe\uff0c\u7136\u540e\u8fdb\u884c\u76f8\u5e94jigsaw\u64cd\u4f5c.\\n\\n            ![image-20210503121716018](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503121716018.png)\\n\\n        2. \u4f7f\u5f97$H$\u548c$D(H)$\u9760\u8fd1$(H\\\\lrarr D(H))$\uff0c\u7075\u611f\u6765\u81ea\u4e8e\u76f8\u5bf9\u5b66\u4e60\uff0c\u5728\u76f8\u5bf9\u5b66\u4e60\u4e2d\uff0c\u67e5\u8be2\u4e00\u4e2av,\u5224\u65ad\u8fd9\u4e2av\u662f\u5728\u6b63\u6837\u672c\u5bf9\u8fd8\u662f\u8d1f\u6837\u672c\u5bf9\uff0c\u7c7b\u4f3c\u70b9\u4e58\u7684\u65b9\u6cd5\u3002\u76ee\u6807\u51fd\u6570\\n            $$\\n            L_q= -\\\\log \\\\frac{\\\\sigma(v,v^+)}{\\\\sigma(v,v^+)+\\\\sum^N_{n=1}\\\\sigma(v,v_n^-)},\\\\sigma(x,y)=\\\\exp(x\\\\cdot y/\\\\tau)\\n            $$\\n            (\u53d8\u91cf\u8bf4\u660e:$\\\\tau$\u662f\u6e29\u5ea6\u8d85\u53c2\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a$(N+1)$\u5206\u7c7b\u95ee\u9898)\\n\\n            \u4e3a\u4e86\u51cf\u5c11$H$\u548c$D(H)$\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u6211\u4eec\u53d1\u6325\u76f8\u5bf9\u5b66\u4e60\u7684\u4f18\u52bf\uff0c\u80fd\u591f\u4f7f\u5f97\u6837\u672c\u66f4\u52a0\u9760\u8fd1\u6b63\u6837\u672c\u3002\u505a\u4e86\u4e00\u4e2aH\u6b63\u6837\u672c\u5bf9\u662f\u6765\u6e90\u4e8eD(H)\u7684\u3002\u635f\u5931\u51fd\u6570\u4e3a:\\n            $$\\n            L_{H\\\\Lrarr D(H)}=L_q(H,D(H)^+,H^-)+L_q(D(H),H^+,D(H)^-)\\n            $$\\n            \u7528\u8fd9\u79cd\u65b9\u5f0f\uff0cH\u548cD(H)\u4e4b\u95f4\u7684\u76f8\u4f3c\u7279\u5f81\u4f1a\u88ab\u589e\u5f3a\uff0c\u9ad8\u7ea7\u7279\u5f81\u95f4\u9699\u66f4\u5c0f\u3002\u5728\u5355\u57df\u4e0a\u7684\u5bf9\u6bd4\u5b66\u4e60\u4e2d\uff0c\u901a\u8fc7$D(.)$\u4f5c\u4e3a\u589e\u5f3a\u7684\u4e00\u90e8\u5206\uff0c\u7b80\u5316\u4e0a\u8ff0\u635f\u5931:$L_{H\\\\Lrarr D(H)}=L_q(D_i^*(H),D_j^*(H)^+,D_k^*(H)^-)$(\u53d8\u91cf\u8bf4\u660e:$D^*(H)$\u670950%\u7684\u6982\u7387\u662f$H$\uff0c\u53e6\u591650%\u7684\u6982\u7387\u662f$D(H)$,\u4f7f\u7528MoCo\u8fdb\u884c\u4f18\u5316)\\n\\n        3. \u589e\u5f3a$E(L)$$(E(L)\\\\uparrow)$\uff0c\u901a\u8fc7\u5bf9\u6bd4\u5b66\u4e60\u63d0\u9ad8E(L),\u635f\u5931\u51fd\u6570\u4e3a:\\n\\n        $$\\n        L_{E(L)\\\\uparrow}=L_q(E(L),E(L)^+,E(L)^-)\\n        $$\\n\\n        \\n\\n    * \u6700\u7ec8\u635f\u5931\u51fd\u6570\\n        $$\\n        L=\\\\lambda_{det}L_{det}+\\\\lambda_{E(L)\\\\lrarr H}L_{E(L)\\\\lrarr H}+\u03bb_{H\u2194D(H)}L_{H\u2194D(H)}+\u03bb_{E(L)\u2191}L_{E(L)\u2191}\\n        $$\\n        (\u8bf4\u660e:$det$\u4e0b\u6807\u4e3a\u68c0\u6d4b\u7684\u635f\u5931,$E(L)\\\\lrarr H$\u4e3a$E(L)$\u4e0e$H$\u9760\u8fd1\u7684\u635f\u5931,$H\u2194D(H)$\u4e3a$H$\u4e0e$D(H)$\u9760\u8fd1\u7684\u635f\u5931,$E(L)\u2191$\u4e3a\u589e\u5f3a$E(L)$\u7684\u635f\u5931)\\n\\n    ## \u5b9e\u9a8c\u7ed3\u679c\\n\\n    ### \u4e0e\u76ee\u524d\u73b0\u6709\u65b9\u6cd5\u6bd4\u8f83\\n\\n    - \u4eba\u8138\u68c0\u6d4b\\n\\n        ![image-20210503112828764](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503112828764.png)\\n\\n    - \u589e\u5f3a\u6548\u679c\\n\\n        ![image-20210503112918707](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503112918707.png)\\n\\n    - \u6697\u5316\u6548\u679c\\n\\n        ![image-20210503113047596](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503113047596.png)\\n\\n    - \u65e0\u76d1\u7763\u57df\u57df\u9002\u5e94\\n\\n        \u65e0\u76d1\u7763\u57df\u9002\u5e94\u662f\u57fa\u4e8eFaster-RCNN,\u4f46\u662f\u8868\u73b0\u5f88\u5dee\uff0c\u6240\u4ee5\u4f7f\u7528DSFD\u4f5c\u4e3a\u4eba\u8138\u68c0\u6d4b\u5668\uff0c\u4f7f\u7528\u4e0d\u540c\u65b9\u5f0f\u8fdb\u884c\u589e\u5f3a\u7684\u6548\u679c\uff0c\u8fdb\u884c\u6d88\u878d\u5b9e\u9a8c\u3002\\n\\n        ![image-20210503113256527](./src/HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection/image-20210503113256527.png)"},{"id":"/[06]DeepLab-Series","metadata":{"permalink":"/blog/[06]DeepLab-Series","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[06]DeepLab-Series.md","source":"@site/blog/[06]DeepLab-Series.md","title":"DeepLab Series","description":"DeepLab\u7cfb\u5217\u4e2d\u5305\u542b\u4e86\u4e09\u7bc7\u8bba\u6587\uff1aDeepLab-v1\u3001DeepLab-v2\u3001DeepLab-v3\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"decoder","permalink":"/blog/tags/decoder"},{"label":"atrous-convolution","permalink":"/blog/tags/atrous-convolution"},{"label":"backbone","permalink":"/blog/tags/backbone"}],"readingTime":9.385,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"DeepLab Series","authors":["visualdust"],"tags":["segmentation","decoder","atrous-convolution","backbone"]},"prevItem":{"title":"HLA-Face Joint High-Low Adaptation for Low Light Face Detection","permalink":"/blog/[05]HLA-Face-Joint-High-Low-Adaptation-for-Low-Light-Face-Detection"},"nextItem":{"title":"Cross-Dataset Collaborative Learning for Semantic Segmentation","permalink":"/blog/[07]Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation"}},"content":"DeepLab\u7cfb\u5217\u4e2d\u5305\u542b\u4e86\u4e09\u7bc7\u8bba\u6587\uff1aDeepLab-v1\u3001DeepLab-v2\u3001DeepLab-v3\u3002\\n\\nDeepLab-v1\uff1a[Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs](https://arxiv.org/abs/1412.7062)\\n\\nDeepLab-v2\uff1a[Image Segmentation with Deep Convolutional Nets, Atrous Convolution, and Fully Connected CRFs](https://arxiv.org/abs/1606.00915)\\n\\nDeepLab-v3\uff1a[Rethinking Atrous Convolution for Semantic Image Segmentation](https://arxiv.org/pdf/1706.05587.pdf)\\n\\n\u5728\u8fd9\u91cc\u6211\u4eec\u5c06\u8fd9\u4e09\u7bc7\u653e\u5728\u4e00\u8d77\u9605\u8bfb\u3002\\n\\n\u540e\u6765\u751a\u81f3\u8fd8\u51fa\u73b0\u4e86\u540e\u7eed\uff1a\\n\\nDeepLab-v3+\uff1a[Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation](https://arxiv.org/abs/1802.02611)\\n\\n\u4e0d\u8fc7\u6682\u65f6\u6ca1\u6709\u5199\u8fdb\u6765\u7684\u6253\u7b97\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## DeepLab-v1\\n\\nDeepLab-v1\u7684\u539f\u8bba\u6587\u662f[Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs](https://arxiv.org/abs/1412.7062)\u3002\\n\\n> In this work we address the task of semantic image segmentation with Deep Learning and make three main contributions that are experimentally shown to have substantial practical merit. First, we highlight convolution with upsampled filters, or \'atrous convolution\', as a powerful tool in dense prediction tasks. Atrous convolution allows us to explicitly control the resolution at which feature responses are computed within Deep Convolutional Neural Networks. It also allows us to effectively enlarge the field of view of filters to incorporate larger context without increasing the number of parameters or the amount of computation. Second, we propose atrous spatial pyramid pooling (ASPP) to robustly segment objects at multiple scales. ASPP probes an incoming convolutional feature layer with filters at multiple sampling rates and effective fields-of-views, thus capturing objects as well as image context at multiple scales. Third, we improve the localization of object boundaries by combining methods from DCNNs and probabilistic graphical models. The commonly deployed combination of max-pooling and downsampling in DCNNs achieves invariance but has a toll on localization accuracy. We overcome this by combining the responses at the final DCNN layer with a fully connected Conditional Random Field (CRF), which is shown both qualitatively and quantitatively to improve localization performance. Our proposed \\"DeepLab\\" system sets the new state-of-art at the PASCAL VOC-2012 semantic image segmentation task, reaching 79.7% mIOU in the test set, and advances the results on three other datasets: PASCAL-Context, PASCAL-Person-Part, and Cityscapes. All of our code is made publicly available online.\\n\\n\u5728\u4e4b\u524d\u7684\u8bed\u4e49\u5206\u5272\u7f51\u7edc\u4e2d\uff0c\u5206\u5272\u7ed3\u679c\u5f80\u5f80\u6bd4\u8f83\u7c97\u7cd9\uff0c\u539f\u56e0\u4e3b\u8981\u6709\u4e24\u4e2a\uff0c\u4e00\u662f\u56e0\u4e3a\u6c60\u5316\u5bfc\u81f4\u7a7a\u95f4\u4fe1\u606f\u4e22\u5931\uff0c\u4e8c\u662f\u6ca1\u6709\u5229\u7528\u4e34\u8fd1\u50cf\u7d20\u70b9\u7c7b\u522b\u4e4b\u95f4\u7684\u6982\u7387\u5173\u7cfb\uff0c\u9488\u5bf9\u8fd9\u4e24\u70b9\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u9488\u5bf9\u6027\u7684\u6539\u8fdb\u3002\u9996\u5148\u4f7f\u7528**\u7a7a\u6d1e\u5377\u79ef\uff08Atrous Convolution\uff09**\uff0c\u907f\u514d\u6c60\u5316\u5e26\u6765\u7684\u4fe1\u606f\u635f\u5931\uff0c\u7136\u540e\u4f7f\u7528**\u6761\u4ef6\u968f\u673a\u573a\uff08CRF\uff09**\uff0c\u8fdb\u4e00\u6b65\u4f18\u5316\u5206\u5272\u7cbe\u5ea6\u3002\u9605\u8bfb\u8fd9\u7bc7\u8bba\u6587\u5e94\u5173\u6ce8\u7684\u91cd\u70b9\u95ee\u9898\u5c31\u662f\u7a7a\u6d1e\u5377\u79ef\u548c\u6761\u4ef6\u968f\u673a\u573a\u3002\\n\\n### \u7a7a\u6d1e\u5377\u79ef\\n\\n\u7a7a\u6d1e\u5377\u79ef\uff08Dilated/Atrous Convolution\u6216\u662fConvolution with holes \uff09\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5728\u589e\u5927\u611f\u53d7\u91ce\u7684\u540c\u65f6\uff0c\u4e0d\u589e\u52a0\u53c2\u6570\u6570\u91cf\uff0c\u800c\u4e14VGG\u4e2d\u63d0\u51fa\u7684\u591a\u4e2a\u5c0f\u5377\u79ef\u6838\u4ee3\u66ff\u5927\u5377\u79ef\u6838\u7684\u65b9\u6cd5\uff0c\u53ea\u80fd\u4f7f\u611f\u53d7\u91ce\u7ebf\u6027\u589e\u957f\uff0c\u800c\u591a\u4e2a\u7a7a\u6d1e\u5377\u79ef\u4e32\u8054\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6307\u6570\u589e\u957f\u3002\\n\\n#### \u7a7a\u6d1e\u5377\u79ef\u7684\u4f18\u52bf\\n\\n- \u8fd9\u79cd\u7ed3\u6784\u4ee3\u66ff\u4e86\u6c60\u5316\uff0c\u5b83\u53ef\u4ee5\u4fdd\u6301\u50cf\u7d20\u7a7a\u95f4\u4fe1\u606f\u3002\\n- \u5b83\u7531\u4e8e\u53ef\u4ee5\u6269\u5927\u611f\u53d7\u91ce\u56e0\u800c\u53ef\u4ee5\u5f88\u597d\u5730\u6574\u5408\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\\n\\nConvolution with holes \u5b57\u5982\u5176\u540d\uff0c\u662f\u5728\u6807\u51c6\u7684\u5377\u79ef\u6838\u4e2d\u6ce8\u5165\u7a7a\u6d1e\uff0c\u4ee5\u6b64\u6765\u589e\u52a0\u611f\u53d7\u91ce\u3002\u76f8\u6bd4\u4e8e\u666e\u901a\u7684\u5377\u79ef\uff0c\u7a7a\u6d1e\u5377\u79ef\u591a\u4e86\u4e00\u4e2a\u8d85\u53c2\u6570\u79f0\u4e4b\u4e3a\u7a7a\u6d1e\u7387\uff08dilation rate\uff09\u6307\u7684\u662fkernel\u7684\u95f4\u9694\u7684\u50cf\u7d20\u6570\u91cf\u3002\\n\\n![Atrous_conv](./src/DeepLab-Series/Atrous_conv.png)\\n\\n\u4e0a\u56fe\u662f\u4e00\u5f20\u7a7a\u6d1e\u5377\u79ef\u7684\u793a\u610f\u56fe\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u4e09\u4e2a\u7a7a\u6d1e\u5377\u79ef\u7684\u5927\u5c0f\u90fd\u662f$3\\\\times 3$\uff0c\u800c\u5b83\u4eec\u7684\u7a7a\u6d1e\u7387\u5206\u522b\u662f1\u30016\u548c24\uff0c\u6240\u4ee5\u80fd\u7528\u76f8\u540c\u5927\u5c0f\u7684\u5377\u79ef\u6838\u5f97\u5230\u4e0d\u540c\u7684\u611f\u53d7\u91ce\u3002\\n\\n#### \u7a7a\u6d1e\u5377\u79ef\u7684\u95ee\u9898\\n\\n- \u7f51\u683c\u6548\u5e94\uff08The Gridding Effect\uff09\\n\\n  \u7a7a\u6d1e\u5377\u79ef\u5c42\u5e76\u4e0d\u80fd\u968f\u610f\u8bbe\u8ba1\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u7b80\u5355\u5730\u5806\u53e0\u7a7a\u6d1e\u7387\u4e3a2\u7684$3\\\\times 3$\u7684\u7a7a\u6d1e\u5377\u79ef\u6838\uff0c\u90a3\u4e48\u8fde\u7eed\u4e09\u5c42\u5377\u79ef\u6838\u5728\u539f\u56fe\u4e0a\u7684\u540c\u4e2a\u50cf\u7d20\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684\u611f\u53d7\u91ce\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n  ![image-20210514145720970](./src/DeepLab-Series/image-20210514145720970.png)\\n\\n  \u5f88\u660e\u663e\uff0c\u6807\u5706\u5708\u7684\u4f4d\u7f6e\u4e00\u76f4\u6ca1\u6709\u53c2\u4e0e\u8be5\u4f4d\u7f6e\u7684\u5377\u79ef\u8fd0\u7b97\u3002\u4e5f\u5c31\u662f\u5e76\u4e0d\u662f\u6240\u6709\u7684\u50cf\u7d20\u90fd\u7528\u6765\u8ba1\u7b97\u4e86\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4fe1\u606f\u7684\u8fde\u7eed\u6027\u635f\u5931\u3002\u8fd9\u5bf9\u5bc6\u96c6\u9884\u6d4b\uff08\u9010\u50cf\u7d20\uff09\u7684\u89c6\u89c9\u4efb\u52a1\u6765\u8bf4\u662f\u81f4\u547d\u7684\u3002\\n\\n- \u76f8\u5173\u6027\u4e22\u5931\\n\\n  \u539f\u8bba\u6587\u4e2d\u63cf\u8ff0\u95ee\u9898\u7684\u8bdd\u662f\uff1a\\n\\n  > Long-ranged information might be not relevant.\\n\\n  \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4ece dilated convolution \u7684\u8bbe\u8ba1\u80cc\u666f\u6765\u770b\u5c31\u80fd\u63a8\u6d4b\u51fa\u8fd9\u6837\u7684\u8bbe\u8ba1\u662f\u7528\u6765\u83b7\u53d6 long-ranged information\u3002\u7136\u800c\u4ec5\u91c7\u7528\u5927 dilation rate \u7684\u4fe1\u606f\u6216\u8bb8\u53ea\u5bf9\u4e00\u4e9b\u5927\u7269\u4f53\u5206\u5272\u6709\u6548\u679c\uff0c\u800c\u5bf9\u5c0f\u7269\u4f53\u6765\u8bf4\u53ef\u80fd\u5219\u6709\u5f0a\u65e0\u5229\u4e86\u3002\u5982\u4f55\u540c\u65f6\u5904\u7406\u4e0d\u540c\u5927\u5c0f\u7684\u7269\u4f53\u7684\u5173\u7cfb\uff0c\u5219\u662f\u8bbe\u8ba1\u597d dilated convolution \u7f51\u7edc\u7684\u5173\u952e\u3002\\n\\n#### \u6df7\u5408\u81a8\u80c0\u5377\u79ef\uff08Hybrid Dilated Convolution, HDC\uff09\\n\\n\u5bf9\u4e8e\u521a\u624d\u63d0\u5230\u7684\u7a7a\u6d1e\u5377\u79ef\u7684\u95ee\u9898\uff0c\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u79f0\u4e3aHDC\u7684\u7ed3\u6784\u4f5c\u4e3a\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u4e2a\u65b9\u6848\u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a\\n\\n- \u5bf9\u4e8e\u6bcf\u5c42\u7a7a\u6d1e\u5377\u79ef\uff0c\u5176\u6700\u5927\u7a7a\u6d1e\u5377\u79ef\u7387\u7684\u6700\u5c0f\u516c\u56e0\u5b50\u4e0d\u80fd\u4e3a1\u3002\\n- \\n\\n### \u6761\u4ef6\u968f\u673a\u573a\\n\\n\u6761\u4ef6\u968f\u673a\u573a\uff0c\u7b80\u5355\u6765\u8bb2\u5c31\u662f\u6bcf\u4e2a\u50cf\u7d20\u70b9\u4f5c\u4e3a\u8282\u70b9\uff0c\u50cf\u7d20\u4e0e\u50cf\u7d20\u95f4\u7684\u5173\u7cfb\u4f5c\u4e3a\u8fb9\uff0c\u5373\u6784\u6210\u4e86\u4e00\u4e2a\u6761\u4ef6\u968f\u673a\u573a\u3002\u901a\u8fc7\u4e8c\u5143\u52bf\u51fd\u6570\u63cf\u8ff0\u50cf\u7d20\u70b9\u4e0e\u50cf\u7d20\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u9f13\u52b1\u76f8\u4f3c\u50cf\u7d20\u5206\u914d\u76f8\u540c\u7684\u6807\u7b7e\uff0c\u800c\u76f8\u5dee\u8f83\u5927\u7684\u50cf\u7d20\u5206\u914d\u4e0d\u540c\u6807\u7b7e\uff0c\u800c\u8fd9\u4e2a\u201c\u8ddd\u79bb\u201d\u7684\u5b9a\u4e49\u4e0e\u989c\u8272\u503c\u548c\u5b9e\u9645\u76f8\u5bf9\u8ddd\u79bb\u6709\u5173\u3002\u6240\u4ee5\u8fd9\u6837CRF\u80fd\u591f\u4f7f\u56fe\u7247\u5728\u5206\u5272\u7684\u8fb9\u754c\u51fa\u53d6\u5f97\u6bd4\u8f83\u597d\u7684\u6548\u679c\u3002\\n\\n## DeepLab-v2\\n\\nDeepLab-v2\u7684\u539f\u8bba\u6587\u662f[Image Segmentation with Deep Convolutional Nets, Atrous Convolution, and Fully Connected CRFs](https://arxiv.org/abs/1606.00915)\u3002\\n\\n> Deep Convolutional Neural Networks (DCNNs) have recently shown state of the art performance in high level vision tasks, such as image classification and object detection. This work brings together methods from DCNNs and probabilistic graphical models for addressing the task of pixel-level classification (also called \\"semantic image segmentation\\"). We show that responses at the final layer of DCNNs are not sufficiently localized for accurate object segmentation. This is due to the very invariance properties that make DCNNs good for high level tasks. We overcome this poor localization property of deep networks by combining the responses at the final DCNN layer with a fully connected Conditional Random Field (CRF). Qualitatively, our \\"DeepLab\\" system is able to localize segment boundaries at a level of accuracy which is beyond previous methods. Quantitatively, our method sets the new state-of-art at the PASCAL VOC-2012 semantic image segmentation task, reaching 71.6% IOU accuracy in the test set. We show how these results can be obtained efficiently: Careful network re-purposing and a novel application of the \'hole\' algorithm from the wavelet community allow dense computation of neural net responses at 8 frames per second on a modern GPU.\\n\\nDeepLab-v2\u5bf9DeepLab-v1\u7684\u6539\u8fdb\u662f\uff1a\\n\\n- \u4f7f\u7528\u4e86\u91d1\u5b57\u5854\u591a\u5c3a\u5ea6\u7279\u5f81\u83b7\u5f97\u66f4\u597d\u7684\u5206\u5272\u6548\u679c\u3002\\n- \u5c06\u9aa8\u5e72\u7f51\u7edc\u7531VGG\u66ff\u6362\u4e3a\u4e86ResNet\u3002\\n- \u7a0d\u5fae\u4fee\u6539\u4e86learning-rate\u3002\\n\\n\u5176\u4e2dASPP\u7684\u5f15\u5165\u662f\u6700\u5927\u4e5f\u662f\u6700\u91cd\u8981\u7684\u6539\u53d8\u3002\u591a\u5c3a\u5ea6\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u76ee\u6807\u5728\u56fe\u50cf\u4e2d\u8868\u73b0\u4e3a\u4e0d\u540c\u5927\u5c0f\u65f6\u4ecd\u80fd\u591f\u6709\u5f88\u597d\u7684\u5206\u5272\u7ed3\u679c\uff0c\u6bd4\u5982\u540c\u6837\u7684\u7269\u4f53\uff0c\u5728\u8fd1\u5904\u62cd\u6444\u65f6\u7269\u4f53\u663e\u5f97\u5927\uff0c\u8fdc\u5904\u62cd\u6444\u65f6\u663e\u5f97\u5c0f\u3002\u5177\u4f53\u505a\u6cd5\u662f\u5e76\u884c\u7684\u91c7\u7528\u591a\u4e2a\u91c7\u6837\u7387\u7684\u7a7a\u6d1e\u5377\u79ef\u63d0\u53d6\u7279\u5f81\uff0c\u518d\u5c06\u7279\u5f81\u878d\u5408\uff0c\u7c7b\u4f3c\u4e8e\u7a7a\u95f4\u91d1\u5b57\u5854\u7ed3\u6784\uff0c\u5f62\u8c61\u7684\u79f0\u4e3aAtrous Spatial Pyramid Pooling (ASPP)\u3002\\n\\n## DeepLab-v3\\n\\nDeepLab-v3\u7684\u539f\u8bba\u6587\u662f[Rethinking Atrous Convolution for Semantic Image Segmentation](https://arxiv.org/abs/1706.05587)\u3002\\n\\n> In this work, we revisit atrous convolution, a powerful tool to explicitly adjust filter\'s field-of-view as well as control the resolution of feature responses computed by Deep Convolutional Neural Networks, in the application of semantic image segmentation. To handle the problem of segmenting objects at multiple scales, we design modules which employ atrous convolution in cascade or in parallel to capture multi-scale context by adopting multiple atrous rates. Furthermore, we propose to augment our previously proposed Atrous Spatial Pyramid Pooling module, which probes convolutional features at multiple scales, with image-level features encoding global context and further boost performance. We also elaborate on implementation details and share our experience on training our system. The proposed `DeepLabv3\' system significantly improves over our previous DeepLab versions without DenseCRF post-processing and attains comparable performance with other state-of-art models on the PASCAL VOC 2012 semantic image segmentation benchmark.\\n\\nDeepLab-v3\u7684\u6539\u8fdb\u662f\uff1a\\n\\n- \u63d0\u51fa\u4e86\u66f4\u901a\u7528\u7684\u6846\u67b6\uff0c\u9002\u7528\u4e8e\u4efb\u4f55\u7f51\u7edc\u3002\\n- \u5c06ResNet\u6700\u540e\u7684\u4e00\u4e9b\u6a21\u5757\u66ff\u6362\u4e3a\u4f7f\u7528\u7a7a\u6d1e\u5377\u79ef\u8fdb\u884c\u7684\u7ea7\u8054\u3002\\n- \u5728ASPP\u4e2d\u4f7f\u7528\u4e86Batch Normolization\u5c42\u3002\\n- \u53bb\u9664\u4e86\u6761\u4ef6\u968f\u673a\u573a\u3002"},{"id":"/[07]Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation","metadata":{"permalink":"/blog/[07]Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[07]Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation.md","source":"@site/blog/[07]Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation.md","title":"Cross-Dataset Collaborative Learning for Semantic Segmentation","description":"\u8bba\u6587\u540d\u79f0\uff1aCross-Dataset Collaborative Learning for Semantic Segmentation","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"refinement","permalink":"/blog/tags/refinement"},{"label":"cross-dataset-learning","permalink":"/blog/tags/cross-dataset-learning"}],"readingTime":5.51,"hasTruncateMarker":true,"authors":[{"name":"Zerorains","title":"life is but a span, I use python","url":"https://github.com/zeroRains","email":"me@zerorains.top","imageURL":"https://github.com/zeroRains.png","key":"zerorains"}],"frontMatter":{"title":"Cross-Dataset Collaborative Learning for Semantic Segmentation","authors":["zerorains"],"tags":["segmentation","refinement","cross-dataset-learning"]},"prevItem":{"title":"DeepLab Series","permalink":"/blog/[06]DeepLab-Series"},"nextItem":{"title":"Dynamic Neural Networks - A Survey","permalink":"/blog/[08]Dynamic-Neural-Networks-A-Survey"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1a[Cross-Dataset Collaborative Learning for Semantic Segmentation](https://arxiv.org/abs/2103.11351)\\n>\\n> \u4f5c\u8005\uff1a[Li Wang](https://arxiv.org/search/cs?searchtype=author&query=Wang%2C+L), [Dong Li](https://arxiv.org/search/cs?searchtype=author&query=Li%2C+D), [Yousong Zhu](https://arxiv.org/search/cs?searchtype=author&query=Zhu%2C+Y), [Lu Tian](https://arxiv.org/search/cs?searchtype=author&query=Tian%2C+L), [Yi Shan](https://arxiv.org/search/cs?searchtype=author&query=Shan%2C+Y)\\n>\\n> \u671f\u520a\uff1aCVPR2021\\n\\n## \u4e3b\u8981\u7ed3\u6784\\n\\nDAB\uff1aDataset-Aware Block(\u6570\u636e\u96c6\u611f\u77e5\u5757)\\n\\n\\t\\t\u4f5c\u4e3a\u7f51\u7edc\u7684\u57fa\u672c\u8ba1\u7b97\u5355\u5143\uff0c\u6709\u52a9\u4e8e\u6355\u83b7o\u4e0d\u540c\u529f\u80fd\u6570\u636e\u96c6\u4e4b\u95f4\u7684\u540c\u8d28\u8868\u793a\u548c\u5f02\u6784\u7edf\u8ba1\u3002\\n\\t\\n\\t\\t\u4e3b\u8981\u7531\uff0c\u4e00\u4e2a\u6570\u636e\u96c6\u4e0d\u53d8\u7684\u5377\u79ef\u5c42\uff0c\u591a\u4e2a\u6570\u636e\u96c6\u7279\u5b9a\u7684BatchNormal\u548c\u4e00\u4e2a\u6fc0\u6d3b\u5c42\u6784\u6210\u3002\\n\\nDAT\uff1aDataset Alternation Training(\u6570\u636e\u96c6\u4ea4\u66ff\u8bad\u7ec3\u673a\u5236)\\n\\n\u5206\u5272\u7ed3\u679c\uff1a\\n\\n![image-20210505160138997](./src/Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation/20210505160141image-20210505160138997.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## \u8de8\u6570\u636e\u57df\u7684\u8bad\u7ec3\\n\\n\u6700\u521d\u7684\u8de8\u6570\u636e\u96c6\u8bad\u7ec3\u673a\u5236\u662f\u8fd0\u7528\u5728\u57fa\u4e8e\u5e27\u7684\u52a8\u4f5c\u8bc6\u522b\u4e0a\u7684\u3002\\n\\n\u540e\u6765\u901a\u8fc7\u7b80\u5355\u7684\u6807\u7b7e\u7ea7\u8054\u548c\u6807\u7b7e\u6620\u5c04\u4ea7\u585e\u56de\u7ed9\u4f60\u7684\u6df7\u5408\u6570\u636e\u96c6\u5e94\u7528\u5230\u4e86\u76ee\u6807\u68c0\u6d4b\u4e0a\\n\\nDomain adaptation(DA \u9886\u57df\u9002\u5e94)\u6216knowledge transfer(\u77e5\u8bc6\u8f6c\u5316)\u4e3a\u8de8\u6570\u636e\u8bad\u7ec3\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u6280\u672f\uff0c\u76ee\u7684\u662f\u901a\u8fc7\u4f7f\u7528\u6765\u81ea\u6e90\u57df\u7684\u77e5\u8bc6\u548c\u8db3\u591f\u7684\u6807\u8bb0\u6570\u636e\u6765\u63d0\u9ad8\u5e26\u6709\u6ce8\u91ca\u6570\u636e\u4e0d\u8db3\u6216\u7f3a\u5c11\u7684\u76ee\u6807\u6a21\u578b\u7684\u6027\u80fd\\n\\n\\n\\n## \u8de8\u6570\u636e\u96c6\u534f\u4f5c\u5b66\u4e60\\n\\n### \u53c2\u6570\u5171\u4eab\u53ef\u884c\u6027\u5206\u6790\\n\\n\u5bf9\u6bd4\u4e0d\u540c\u6570\u636e\u96c6\u5728conv\u5c42\u548cbn\u5c42\u7684\u53c2\u6570\u5206\u5e03\uff1a\\n\\n![image-20210503155720590](./src/Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation/20210505101559image-20210503155720590.png)\\n\\n\u7ed3\u8bba\uff1a\\n\\n1. Conv\u5c42\u4e2d\u7684\u6743\u91cd\u5177\u6709\u76f8\u540c\u7684\u5206\u5e03\uff0c\u5373conv\u5c42\u7684\u53c2\u6570\u662f\u53ef\u4ee5\u5171\u4eab\u7684\\n2. \u5bf9\u4e8eBN\u5c42\uff0c\u4e0d\u540c\u6570\u636e\u96c6\u7684\u5747\u503c\u548c\u65b9\u5dee\u7684\u5206\u5e03\u5177\u6709\u4e0d\u540c\u7684\u5f62\u72b6\uff0c\u53ef\u80fd\u65e0\u6cd5\u5171\u4eab\u3002\\n\\n\u200b\\t\\t\\n\\n### \u7f51\u7edc\u7ed3\u6784\u56fe\\n\\n![image-20210503160330765](./src/Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation/20210505101605image-20210503160330765.png)\\n\\n\u5728\u6570\u636e\u96c6\u611f\u77e5\u5757(DAB)\u5176\u4f5c\u4e3a\u6211\u4eec\u901a\u5e38\u7684CONV+BN+RELU\u7684\u4e00\u4e2a\u66ff\u4ee3\uff0c\u5373\u57fa\u672c\u8ba1\u7b97\u5355\u5143\u7684\u66ff\u4ee3\\n\\nDAB\u7684\u7ed3\u6784\u5982\u4e0b\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u4f7f\u7528\u7684\u5377\u79ef\u5c42\u662f\u4e00\u4e2a\u56fa\u5b9a\u6570\u636e\u96c6\u8bad\u7ec3\u51fa\u6765\u7684\uff0c\u4f46\u662f\u5728BN\u5c42\u4e2d\u9009\u62e9\u7684\u662f\u4e0d\u540c\u7684\u6570\u636e\u96c6i\u9664\u62c9\u7684BN\u5c42\u3002\u636e\u8bba\u6587\u8bf4\uff0c\u8fd9\u91cc\u53c8\u4e00\u4e2a\u81ea\u52a8\u4ea4\u6362\u673a\u7684\u4e1c\u897f\uff0c\u81ea\u52a8\u5730\u5c06\u4e0d\u540c\u5206\u5e03\u7684\u6570\u636e\u96c6\u5206\u914d\u5230\u5bf9\u5e94\u7684BN\u5c42\u4e2d\u3002\\n\\n![image-20210503161147231](./src/Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation/20210505101608image-20210503161147231.png)\\n\\n\u5047\u8bbe\u6211\u4eec\u6709N\u4e2a\u6570\u636e\u96c6\uff0c\u90a3\u4e48\u6bcf\u4e2a\u6570\u636e\u96c6\u7684BN\u5c42\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\u8bbe\u5b9a\\n$$\\nDSBN\\\\{D_i\\\\}(X_i;\\\\gamma_i,\\\\beta_i) = \\\\gamma_i\\\\hat X_i+\\\\beta_i\\n$$\\n\u5176\u4e2d:\\n\\n1. DSBNa\u8868\u793a\u7684\u5c31\u662f\u8be5\u6570\u636e\u96c6\u7684BN\\n2. $\\\\hat X_i = \\\\frac{X_i-\\\\mu_i}{\\\\sqrt{\\\\sigma_i^2+\\\\epsilon}}$\uff0c$\\\\mu_i=\\\\frac 1B\\\\sum_{j=1}^BX_i^j$\uff0c$\\\\sigma_i^2=\\\\frac 1B\\\\sum_{j=1}^B(X_i^j-\\\\mu_i)^2$\\n3. $\\\\mu_i,\\\\sigma_i^2$\u662f\u5747\u503c\u548c\u65b9\u5dee\\n4. $\\\\gamma_i,\\\\beta_i$\u8868\u793a\u4eff\u5c04\u53d8\u6362\u53c2\u6570\\n5. B\u662f\u4e00\u4e2abatch\u7684\u6570\u91cf\\n\\n\u901a\u8fc7\u5b66\u4e60$\\\\gamma_i,\\\\beta_i$\u4e24\u4e2aBN\u5c42\u7684\u4eff\u5c04\u53c2\u6570\uff0c\u6765\u6355\u83b7\u7279\u5b9a\u7684\u6570\u636e\u4fe1\u606f\u3002\\n\\n## \u6570\u636e\u96c6\u4ea4\u66ff\u8bad\u7ec3\\n\\n\u76ee\u7684\uff1a\u51cf\u5c0f\u4e0d\u540c\u7279\u5f81\u56fe\u5206\u5e03\u7684\u5dee\u5f02\u5f15\u8d77\u7684\u8bad\u7ec3\u4e0d\u7a33\u5b9a\u6027\\n\\n### DAT\u673a\u5236\\n\\n\u5728\u6bcf\u6b21\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u96c6\u8fdb\u884c\u4e0d\u540cbatch\u7684\u8bbe\u7f6e\uff0c\u5148\u6267\u884c\u4e00\u4e2a\u6570\u636e\u96c6\u7684batch\u83b7\u5f97Loss1\u540e\uff0c\u6267\u884c\u4e0b\u4e00\u4e2a\u6570\u636e\u96c6\u7684batch\u83b7\u5f97loss2\uff0c\u76f4\u5230\u83b7\u5f97\u6240\u6709\u7684Loss\uff0c\u5c06\u4ed6\u4eec\u76f8\u52a0\u8d77\u6765\u6700\u7ec8\u83b7\u5f97\u603b\u7684loss\uff0c\u518d\u5206\u522b\u5bf9\u6bcf\u4e00\u4e2a\u6570\u636e\u96c6\u7684batch\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u3002\\n\\n\u4f5c\u8005\u5c1d\u8bd5\u8bbe\u7f6e\u95f4\u9694\u8bad\u7ec3t\uff0c\u5373\u8bad\u7ec3A\u6570\u636e\u96c6t\u6b21\uff0c\u624d\u8bad\u7ec3B\u6570\u636e\u96c61\u6b21\uff0c\u7ecf\u8fc7\u4f5c\u8005\u5b9e\u9a8c\uff0c\u5f97\u51fa\u7ed3\u8bba\uff0c\u5f53t=1\u65f6\u53ef\u4ee5\u83b7\u5f97\u6700\u597d\u7684\u6548\u679c\u3002\\n\\n./![image-20210505151844779](./src/Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation/20210505151847image-20210505151844779.png)\\n\\n### DAT\u4f18\u70b9\\n\\n \\t1. \u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u53cd\u5411\u4f20\u64ad\u6bcf\u4e2a\u6570\u636e\u96c6\u7684\u635f\u5931\u5c06\u5bfc\u81f4\u8bad\u7ec3\u4e0d\u7a33\u5b9a\u3002\u800cDAT\u53ef\u4ee5\u901a\u8fc7\u4f18\u5316\u4ece\u4e0d\u540c\u6570\u636e\u96c6\u8ba1\u7b97\u51fa\u7684\u603b\u548c\u635f\u5931\u6765\u6539\u8fdb\u8fd9\u4e2a\u95ee\u9898\u3002\\n \\t2. DAT\u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u6765\u8bad\u7ec3\u6765\u81ea\u591a\u4e2a\u6570\u636e\u96c6\u7684\u6837\u672c\\n\\n### \u5168\u5c40\u635f\u5931\u51fd\u6570\\n\\n$$\\nL=-\\\\sum_{i=1}^{N} \\\\sum_{j=1}^{M} w^{i} y_{j}^{i} \\\\log \\\\left(p_{j}^{i}\\\\right)\\n$$\\n\\nN\uff1a\u8868\u793a\u6570\u636e\u96c6\u7684\u6570\u91cf\\n\\nM\uff1a\u8868\u793a\u56fe\u50cf\u50cf\u7d20\u7684\u6570\u91cf\\n\\n$p^i_j\u548cy^i_j$\uff1a\u5206\u522b\u8868\u793a\u7b2ci\u4e2a\u6570\u636e\u96c6\u7684\u7b2cj\u4e2a\u50cf\u7d20\u7684\u9884\u6d4b\u6982\u8bba\u548c\u76f8\u5e94\u6807\u7b7e\\n\\n$w^i$\uff1a\u8868\u793a\u635f\u5931\u6743\u91cd\uff0c\u4f5c\u8005\u5c06\u5176\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u4f7f\u8fd9\u4e9b\u635f\u5931\u503c\u8303\u56f4\u5177\u6709\u53ef\u6bd4\u6027\\n\\n## \u5b9e\u9a8c\\n\\n### \u5b9e\u9a8c\u7ec6\u8282\\n\\n\u57fa\u7ebf\uff1a\u4e3b\u5e72\u7f51\u7edc\u4e3aResNet-18\u7684PSPNetn\u7f51\u7edc\u5728ImageNet\u9884\u8bad\u7ec3\u7684\u7ed3\u679c\\n\\n\u4f18\u5316\u5668\uff1aSGD\\n\\n \\t1. momentun:0.9\\n \\t2. \u6743\u91cd\u8870\u51cf(weight decay):0.0001\\n \\t3. batch size:8\\n \\t4. \u521d\u59cb\u5b66\u4e60\u7387\uff1a0.01,\u4e58\u4e0a $(1-\\\\frac{iter}{maxiter})^{0.9}$\u7684\u591a\u9879\u5f0f\u8870\u51cf\u7b56\u7565\\n\\n\u56fe\u50cf\u968f\u673a\u88c1\u526a\u4e3a$512 \\\\times512$\\n\\n\u8bc4\u4f30\u6307\u6807\uff1amiou\\n\\n### \u7ed3\u679c\\n\\n\u5b9e\u9a8c\u5148\u662f\u5bf9\u4e24\u4e2a\u6570\u636e\u96c6\u8fdb\u884c\u5b9e\u9a8c\uff0c\u91c7\u7528\u5355\u6570\u636e\u96c6(Single-dataset)\uff0c\u5fae\u8c03(Finetuning)\uff0c\u6807\u7b7e\u6620\u5c04(Label remapping)\uff0c\u548cDAT\u7684\u4e0d\u540c\u8de8\u6570\u636e\u8bad\u7ec3\u65b9\u5f0f\u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b:\\n\\n![image-20210505155009177](./src/Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation/20210505155011image-20210505155009177.png)\\n\\n\u5bf9\u4e09\u4e2a\u6570\u636e\u96c6\u8bad\u7ec3\u7684\u7ed3\u679c\u4e5f\u6709\u8f83\u597d\u7684\u63d0\u5347\uff1a\\n\\n![image-20210505155136346](./src/Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation/20210505155137image-20210505155136346.png)"},{"id":"/[08]Dynamic-Neural-Networks-A-Survey","metadata":{"permalink":"/blog/[08]Dynamic-Neural-Networks-A-Survey","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[08]Dynamic-Neural-Networks-A-Survey.md","source":"@site/blog/[08]Dynamic-Neural-Networks-A-Survey.md","title":"Dynamic Neural Networks - A Survey","description":"\u8fd9\u7bc7\u8bba\u6587\u662f\u4e00\u7bc7\u5bf9\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u7684\u7efc\u8ff0\uff0c\u539f\u8bba\u6587\\"Dynamic Neural Networks: A Survey\\"\u4e3b\u8981\u8bb2\u4e86\uff1a","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"survey","permalink":"/blog/tags/survey"},{"label":"dynamic-neural-network","permalink":"/blog/tags/dynamic-neural-network"}],"readingTime":32.625,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Dynamic Neural Networks - A Survey","authors":["visualdust"],"tags":["survey","dynamic-neural-network"]},"prevItem":{"title":"Cross-Dataset Collaborative Learning for Semantic Segmentation","permalink":"/blog/[07]Cross-Dataset-Collaborative-Learning-for-Semantic-Segmentation"},"nextItem":{"title":"Feature Pyramid Networks for Object Detection","permalink":"/blog/[09]Feature-Pyramid-Networks-for-Object-Detection"}},"content":"\u8fd9\u7bc7\u8bba\u6587\u662f\u4e00\u7bc7\u5bf9\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u7684\u7efc\u8ff0\uff0c\u539f\u8bba\u6587[\\"Dynamic Neural Networks: A Survey\\"](http://arxiv.org/abs/2102.04906)\u4e3b\u8981\u8bb2\u4e86\uff1a\\n\\n- \u6982\u5ff5\uff08Introduction\uff09\\n- \u5e38\u89c1\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\\n  - Instance-wise Dynamic Networks\\n  - Spatial-wise Dynamic Networks\\n  - Temporal-wise Dynamic Network\\n- \u63a8\u7406\u548c\u8bad\u7ec3\uff08Inference and Training\uff09\\n- \u5e38\u89c1\u5e94\u7528\u548c\u4ee3\u8868\u6027\u5de5\u4f5c\uff08Applications\uff09\\n\\n\u8fd9\u7bc7\u8bba\u6587\u5bf9\u8fd1\u4e9b\u5e74\u5438\u5f15\u4e86\u5f88\u591a\u7814\u7a76\u8005\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4e86\u8f83\u4e3a\u7cfb\u7edf\u7684\u603b\u7ed3\u6982\u62ec\u3002\\n\\n## Abstract\uff08\u6458\u8981\uff09\\n\\n> Dynamic neural network is an emerging research topic in deep learning. Compared to static models which have fixed computational graphs and parameters at the inference stage, dynamic networks can adapt their structures or parameters to different inputs, leading to notable advantages in terms of accuracy, computational efficiency, adaptiveness, etc. In this survey, we comprehensively review this rapidly developing area by dividing dynamic networks into three main categories: 1) instance-wise dynamic models that process each instance with data-dependent architectures or parameters; 2) spatial-wise dynamic networks that conduct adaptive computation with respect to different spatial locations of image data and 3) temporal-wise dynamic models that perform adaptive inference along the temporal dimension for sequential data such as videos and texts. The important research problems of dynamic networks, e.g., architecture design, decision making scheme, optimization technique and applications, are reviewed systematically. Finally, we discuss the open problems in this field together with interesting future research directions.\\n\\n\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u8fd1\u4e9b\u5e74\u7684\u76f8\u5173\u7814\u7a76\u9010\u6e10\u53d8\u591a\uff0c\u6bd4\u8d77\u56fa\u5b9a\u8ba1\u7b97\u56fe\u7684\u4f20\u7edf\u7684\u9759\u6001\u795e\u7ecf\u7f51\u7edc\uff0c\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u80fd\u591f\u53ef\u4ee5\u6839\u636e\u8f93\u5165\u7684\u5177\u4f53\u6570\u636e\u8c03\u6574\u5b83\u4eec\u7684\u7ed3\u6784\u6216\u662f\u53c2\u6570\uff0c\u540c\u65f6\u5728\u901f\u5ea6\u548c\u7cbe\u5ea6\u65b9\u9762\u5360\u6709\u4f18\u52bf\u3002\u4e00\u79cd\u6bd4\u55bb\u662f\uff1a\u201c\u5728\u8f93\u5165\u8f83\u4e3a\u7b80\u5355\u65f6\uff0c\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5f88\u5feb\uff1b\u5728\u8f93\u5165\u8f83\u4e3a\u590d\u6742\u65f6\uff0c\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u7cbe\u5ea6\u5f88\u9ad8\u201d\u3002\\n\\n\u8fd9\u7bc7\u8bba\u6587\u6982\u62ec\u5730\u4ecb\u7ecd\u4e86\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u662f\u5982\u4f55\u201c\u52a8\u6001\u201d\u7684\uff0c\u4ee5\u53ca\u52a8\u6001\u5e26\u6765\u4e86\u600e\u6837\u7684\u4f18\u52bf\u3002 \\n\\n\u6211\u770b\u4e86\u8fd9\u7bc7\u7efc\u8ff0\u53d7\u76ca\u532a\u6d45\uff0c\u5982\u679c\u6709\u65f6\u95f4\u7684\u8bdd\u8bf7\u9605\u8bfb[\u539f\u4f5c](http://arxiv.org/abs/2102.04906)\u3002\u672c\u6587\u53ea\u662f\u5bf9\u539f\u4f5c\u9605\u8bfb\u7684\u7c97\u6d45\u7b14\u8bb0\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## \u4ecb\u7ecd\uff08Introduction\uff09\\n\\n\u795e\u7ecf\u7f51\u7edc\u968f\u7740\u786c\u4ef6\u6761\u4ef6\u7684\u53d1\u5c55\u9010\u6e10\u8ffd\u6c42\u66f4\u597d\u7684\u6548\u679c\u548c\u66f4\u9ad8\u7684\u6027\u80fd\u3002\u4f5c\u8005\u5c06\u89c6\u89c9\u9886\u57df\u7684\u795e\u7ecf\u7f51\u7edc\u8fd1\u5341\u5e74\u7684\u53d1\u5c55\u5206\u4e3a\u8fd9\u6837\u51e0\u4e2a\u9636\u6bb5\uff1a\\n\\n1. \u5feb\u901f\u53d1\u5c55\u9636\u6bb5\uff08Fast developing stage\uff09\uff0c2012~2015\\n\\n   \u795e\u7ecf\u7f51\u7edc\u7684\u8bbe\u8ba1\u53d8\u5f97\u591a\u6837\u5316\uff0c\u51fa\u73b0\u4e86\u5305\u62ecAlexNet\u3001VGG\u3001GoogLeNet\u5728\u5185\u7684\u4e00\u7cfb\u5217\u4ee3\u8868\u6027\u7f51\u7edc\u7ed3\u6784\u3002\\n\\n2. \u53d1\u5c55\u6210\u719f\u9636\u6bb5\uff08Mature stage\uff09\uff0c2015~2017\\n\\n   \u8fd9\u4e2a\u9636\u6bb5\u51fa\u73b0\u4e86\u5f88\u591a\u81f3\u4eca\u90fd\u8d77\u5230\u4e86\u5f88\u91cd\u8981\u7684\u5f71\u54cd\u7684\u6216\u662f\u4f9d\u7136\u88ab\u5927\u5bb6\u7ecf\u5e38\u4f7f\u7528\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u4f8b\u5982ResNet\u3001DenseNet\u7b49\\n\\n3. \u7e41\u8363\u53d1\u5c55\u9636\u6bb5\uff08Properous stage\uff09\uff0c2017~Now\\n\\n   \u4eba\u4eec\u8bbe\u8ba1\u4e86\u5f88\u591a\u591a\u6837\u5316\u7684\u6548\u679c\u4f18\u79c0\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u4e14\u5927\u91cf\u51fa\u73b0\u4e86\u5f88\u591a\u65b0\u578b\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u4f8b\u5982\u8f7b\u91cf\u7ea7\u7f51\u7edcCondenseNet\u3001ShuffleNet\uff0c\u5229\u7528\u81ea\u52a8\u641c\u7d22\u6280\u672f\u8bbe\u8ba1\u7684\u6a21\u578bNASNet\u3001DARTS\uff0c\u8fd8\u6709\u8fd9\u7bc7\u8bba\u6587\u60f3\u8981\u4ecb\u7ecd\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edcMSDNet\u3001Block-Drop\u3001Glance and Focus\u7b49\uff0c\u4ee5\u53ca\u7a81\u7136\u5c31\u706b\u8d77\u6765\u7684Transformer\u3002\\n\\n\u76f4\u5230\u73b0\u5728\uff0cCNN structure  has been never more varied\u3002\u4ee5CNN\u7f51\u7edc\u4e3a\u4f8b\uff0cCNN\u5728ImageNet\u4e0a\u7684\u5206\u7c7b\u51c6\u786e\u7387\u6b63\u5728\u9010\u6e10\u63d0\u9ad8\uff0c\u751a\u81f3\u8fbe\u5230\u8d85\u8fc7\u4eba\u7c7b\u7684\u5206\u7c7b\u6c34\u5e73\u3002\u968f\u7740\u6a21\u578b\u7684\u51c6\u786e\u7387\u9010\u6e10\u63d0\u5347\uff0c\u4eba\u4eec\u63d0\u51fa\u4e86\u8fd9\u6837\u7684\u95ee\u9898\uff1a\\n\\n> \u5982\u4f55\u5e73\u8861\u7f51\u7edc\u7684\u7cbe\u5ea6\u548c\u7f51\u7edc\u8ba1\u7b97\u5f00\u9500\u4e4b\u95f4\u7684\u5173\u7cfb\\n\\n![image-20210507091720858](./src/Dynamic-Neural-Networks-A-Survey/image-20210507091720858.png)\\n\\n\u4e0a\u9762\u8fd9\u5f20\u56fe\u7247\u6765\u81ea\u4e00\u7bc7\u540d\u4e3a[Speed/accuracy trade-offs for modern convolutional object detectors](https://arxiv.org/abs/1611.10012)\u7684\u8bba\u6587\uff0c\u5927\u81f4\u63cf\u8ff0\u4e86\u4e00\u4e9b\u77e5\u540d\u7f51\u7edc\u7ed3\u6784\u7684`\u5f00\u9500-\u7cbe\u5ea6`\u56fe\u3002\u8fd9\u4fbf\u662f\u5728\u795e\u7ecf\u7f51\u7edc\u6210\u719f\u4e4b\u540e\u4eba\u4eec\u5f00\u59cb\u5173\u6ce8\u7684\u95ee\u9898\u3002\u4eba\u4eec\u5e0c\u671b\u6709\u66f4\u52a0\u9760\u8fd1\u5de6\u4e0a\u89d2\u7684\u6a21\u578b\u3002\\n\\n\u4e00\u4e2a\u65e2\u6210\u4e8b\u5b9e\u662f\uff0c\u6a21\u578b\u7684\u7cbe\u5ea6\u5f80\u5f80\u548c\u6a21\u578b\u7684\u5bbd\u5ea6\u548c\u6df1\u5ea6\u76f8\u5173\uff0c\u5f53\u5e0c\u671b\u8fbe\u5230\u66f4\u9ad8\u7684\u51c6\u786e\u7387\u65f6\uff0c\u5f80\u5f80\u4f1a\u589e\u52a0\u6a21\u578b\u7684\u6df1\u5ea6\u548c\u5bbd\u5ea6\uff0c\u4f46\u662f\u8fd9\u5f80\u5f80\u4f1a\u63d0\u9ad8\u795e\u7ecf\u7f51\u7edc\u8ba1\u7b97\u7684\u5f00\u9500\uff0c\u4e5f\u5c31\u662f\u8bf4\u6b64\u65f6\u6a21\u578b\u4f1a\u8d70\u5411\u6a21\u578b\u7684\u53f3\u4e0a\u89d2\u3002\\n\\n![image-20210507093436025](./src/Dynamic-Neural-Networks-A-Survey/image-20210507093436025.jpg)\\n\\n\u4ee5\u4e0a\u9762\u7684\u56fe\u7247\u4e3a\u4f8b\uff0c\u5de6\u56fe\u662f\u4e00\u53ea\u7684[coronaPolvo](https://github.com/coronaPolvo)\uff0c\u53f3\u56fe\u662f\u4e00\u53ea[PommesPeter](https://github.com/pommespeter)\u3002\u4ed6\u4eec\u90fd\u662f\u6211\u7684\u597d\u670b\u53cb\uff0c\u4f46\u662f\u6211\u4e00\u77ac\u95f4\u5373\u53ef\u8ba4\u51fa\u5de6\u56fe\uff0c\u800c\u8ba4\u51fa\u53f3\u56fe\u5219\u9700\u8981\u51e0\u79d2\u949f\u3002\u8fd9\u662f\u56e0\u4e3a\u5de6\u56fe\u753b\u9762\u660e\u4eae\uff0c\u4e14coronaPolvo\u5360\u636e\u4e86\u753b\u9762\u7684\u4e3b\u4f53\u4f4d\u7f6e\uff1b\u800c\u53f3\u4fa7\u7684PommesPeter\u5e76\u6ca1\u6709\u5360\u636e\u753b\u9762\u7684\u4e3b\u4f53\uff0c\u5e76\u4e14\u88ab\u8f66\u7684\u9634\u5f71\u906e\u6321\uff0c\u5149\u7167\u6761\u4ef6\u8f83\u5dee\u96be\u6613\u8fa8\u8ba4\u3002\\n\\n\u6709\u5f88\u591a\u7814\u7a76\u5df2\u7ecf\u6807\u660e\u4e86\u4eba\u7684\u5927\u8111\u5728\u5904\u7406\u4fe1\u606f\u65f6\u7684\u5904\u7406\u8fc7\u7a0b\u4f1a\u53d7\u5230\u5468\u56f4\u73af\u5883\u4ee5\u53ca\u5f88\u591a\u5176\u4ed6\u4e0a\u4e0b\u6587\u7684\u5f71\u54cd\u3002**\u8fd9\u4fbf\u662f\u52a8\u6001\u795e\u7ecf\u7f51\u8def\u7684\u57fa\u672c\u6784\u60f3\uff1a\u5bf9\u4e8e\u7b80\u5355\u7684\u6837\u672c\uff0c\u53ef\u4ee5\u8f7b\u6613\u8ba4\u51fa\uff1b\u5bf9\u4e8e\u590d\u6742\u7684\u6837\u672c\uff0c\u53ef\u4ee5\u591a\u82b1\u4e00\u70b9\u65f6\u95f4\u3002\u6216\u8005\u8bf4\uff0c\u4eba\u540d\u4e3a\u80fd\u53d1\u73b0\u4f20\u7edfCNN\u7684\u4e00\u4e2a\u7f3a\u9677**\uff1a\\n\\n> Most convolutional neural networks recognize all instance with the same architecture.\\n\\n\u6240\u4ee5\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u7684\u80fd\u529b\u5c31\u662f\uff1a\\n\\n> Dynamic neural networks can adapt their architecture for different instances.\\n\\n\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u5177\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a\\n\\n- \u9ad8\u6548\uff08Efficiency\uff09\\n- \u66f4\u5f3a\u7684\u8868\u8fbe\u80fd\u529b\uff08Representation power\uff09\\n- \u66f4\u5f3a\u7684\u9002\u5e94\u6027\uff08Adaptiveness\uff09\\n- \u517c\u5bb9\u6027\uff08Compatibility\uff09\\n- \u8bbe\u8ba1\u7684\u7b80\u5355\u6027\uff08Generality\uff09\\n- \u8bbe\u8ba1\u7684\u53ef\u89e3\u91ca\u6027\uff08Interpretability\uff09\\n\\n\u4e0b\u56fe\u662f\u8fd9\u7bc7\u8bba\u6587\u7684\u6574\u4f53\u5185\u5bb9\uff0c\u6db5\u76d6\u975e\u5e38\u7684\u5e7f\uff0c\u63a8\u8350\u9605\u8bfb\u4e00\u4e0b[\u539f\u6587](http://arxiv.org/abs/2102.04906)\u3002\\n\\n![image-20210507090536138](./src/Dynamic-Neural-Networks-A-Survey/image-20210507090536138.png)\\n\\n---\\n\\n## \u6837\u672c\u81ea\u9002\u5e94\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\uff08Instance-wise dynamic networks\uff09\\n\\n\u4e3a\u4e86\u5728\u7b80\u5355\u6837\u672c\u4e0a\u83b7\u5f97\u66f4\u5feb\u7684\u63a8\u7406\u901f\u5ea6\uff0c\u4ee5\u53ca\u5728\u590d\u6742\u6837\u672c\u4e0a\u83b7\u5f97\u66f4\u597d\u7684\u7cbe\u5ea6\uff0c\u4e00\u4e2a\u6700\u7b80\u5355\u5e76\u4e14\u5929\u771f\u7684\u601d\u8def\u5c31\u662f\uff0c\u5bfc\u5165\u591a\u4e2a\u7f51\u7edc\u6a21\u578b\uff0c\u5e76\u4e14\u5728\u8f93\u5165\u8f83\u4e3a\u590d\u6742\u65f6\u4f7f\u7528\u66f4\u590d\u6742\u7684\u7f51\u7edc\uff0c\u8f93\u5165\u7b80\u5355\u65f6\u4f7f\u7528\u7b80\u5355\u7684\u7f51\u7edc\u3002\u8fd9\u4e2a\u65b9\u6cd5\u57fa\u672c\u884c\u4e0d\u901a\uff0c\u56e0\u4e3a\u7f51\u7edc\u65e0\u6cd5\u63d0\u524d\u77e5\u9053\u4e00\u4e2a\u8f93\u5165\u5230\u5e95\u662f\u590d\u6742\u7684\u8fd8\u662f\u7b80\u5355\u7684\u3002\\n\\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u7814\u7a76\u6837\u672c\u81ea\u9002\u5e94\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\\n\\n> Instance-wise dynamic networks can adapt their architectures or parameters to each instance.\\n\\n\u5bf9\u4e0d\u540c\u7684\u8f93\u5165\u6837\u672c\uff0c\u8fd9\u79cd\u7f51\u7edc\u4f1a\u52a8\u6001\u8c03\u8282\u81ea\u5df1\u7684\u7ed3\u6784\u6216\u53c2\u6570\u3002\\n\\n \u8fd9\u7bc7\u8bba\u6587\u5c06\u6837\u672c\u81ea\u9002\u5e94\u7684\u52a8\u6001\u7f51\u7edc\u5206\u4e3a\uff1a\\n\\n- \u52a8\u6001\u7ed3\u6784\uff08Dynamic architecture\uff09\\n  - \u52a8\u6001\u6df1\u5ea6\uff08Dynamic Depth\uff09\\n    - \u65e9\u9000\u673a\u5236\uff08Early Existing\uff09\\n    - \u8df3\u5c42\u673a\u5236\uff08Layer Skipping\uff09\\n  - \u52a8\u6001\u5bbd\u5ea6\uff08Dynamic Width\uff09\\n    - \u8df3\u8fc7\u795e\u7ecf\u5143\uff08Skip Neurons\uff09\\n    - \u8df3\u8fc7\u901a\u9053\uff08Skip Channels\uff09\\n    - \u8df3\u8fc7\u5206\u652f\uff08Skip Branches\uff09\\n  - \u52a8\u6001\u8def\u7531\uff08Dynamic Routing\uff09\\n- \u52a8\u6001\u53c2\u6570\\n  - \u52a8\u6001\u53c2\u6570\u52a0\u6743\uff08Attention on weight\uff09\\n  - \u52a8\u6001\u5377\u79ef\u6838\u5f62\u72b6\uff08Kernel shape adaptation\uff09\\n\\n---\\n\\n### \u52a8\u6001\u7ed3\u6784\uff08Dynamic Architecture\uff09\\n\\n#### \u52a8\u6001\u6df1\u5ea6\uff08Dynamic Depth\uff09\\n\\n##### \u65e9\u9000\u673a\u5236\uff08early escape\uff09\\n\\n\u7b80\u800c\u8a00\u4e4b\uff0c\u52a8\u6001\u6df1\u5ea6\u5c31\u662f\u7f51\u7edc\u4f1a\u6839\u636e\u67d0\u79cd\u673a\u5236\u5224\u5b9a\u6837\u672c\u662f\u7b80\u5355\u7684\u8fd8\u7b97\u590d\u6742\u7684\uff0c\u5bf9\u4e8e\u96be\u4e00\u70b9\u7684\u6837\u672c\uff0c\u7f51\u7edc\u53ef\u4ee5\u5c06\u5176\u4e00\u7b97\u5230\u5e95\uff0c\u800c\u5bf9\u4e8e\u7b80\u5355\u4e00\u4e9b\u7684\u6837\u672c\uff0c\u7f51\u7edc\u8ba1\u7b97\u5230\u4e2d\u95f4\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u505c\u6b62\u8ba1\u7b97\u4e86\u3002\\n\\n\u6709\u4e24\u79cd\u5e38\u89c1\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a\\n\\n![image-20210509114605362](./src/Dynamic-Neural-Networks-A-Survey/image-20210509114605362.png)\\n\\n- (a)\u4e32\u8054\u591a\u4e2a\u6a21\u578b\uff08Cascading of DNNS\uff0c\u6bd4\u8f83\u65e9\u671f\u7684\u5de5\u4f5c\uff09\\n\\n  \u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u4e00\u4e2a\u7f51\u7edc\u5305\u542b\u4e86\u7531\u6d45\u5230\u6df1\u7684\u591a\u4e2a\u6a21\u578b\uff1a\u8f93\u5165\u901a\u8fc7\u67d0\u4e2a\u6a21\u578b\u540e\u5f97\u5230\u8f93\u51fa\uff0c\u7ecf\u8fc7\u8bad\u7ec3\u5f97\u5230\u7684\u201c\u51b3\u5b9a\u51fd\u6570\u201d\u4f1a\u6839\u636e\u8f93\u51fa\u7684\u5177\u4f53\u60c5\u51b5\u51b3\u5b9a\u662f\u5c06\u7279\u5f81\u56fe\u76f4\u63a5\u653e\u5165\u7ebf\u6027\u5206\u7c7b\u5668\u8fd8\u662f\u518d\u6b21\u8f93\u5165\u5230\u4e0b\u4e2a\u6a21\u578b\u4e2d\u7ee7\u7eed\u63a8\u7406\u3002\\n\\n  \u8fd9\u79cd\u65b9\u6cd5\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u7279\u5f81\u5e76\u4e0d\u80fd\u88ab\u590d\u7528\uff0c\u6216\u8005\u8bf4\u4e0d\u540c\u6a21\u578b\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u201c\u7ea7\u8054\u201d\u5728\u4e00\u8d77\uff0c\u4f8b\u5982\u4e0a\u56fe\u4e2d(a)\uff0c\u82e5$Model_1$\u662fVGG\uff0c\u800c$Model_2$\u662fResNet\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u8fd9\u6837\u7684\u8bbe\u8ba1\u4f1a\u5bfc$Model_1$\u7684\u8f93\u51fa\u5e76\u4e0d\u80fd\u80fd\u4f5c\u4e3a$Model_2$\u7684\u8f93\u5165\uff0c\u4ece\u800c\u6f14\u5316\u6210\u82b1\u8d39\u4e24\u4e2a\u7f51\u7edc\u7684\u8ba1\u7b97\u5f00\u9500\uff0c\u5bfc\u81f4\u989d\u5916\u7684\u6027\u80fd\u6d6a\u8d39\u3002\\n\\n-  (b)\u6dfb\u52a0\u4e2d\u95f4\u51fa\u53e3\uff08Network with intermediate classifiers\uff09\\n\\n  \u5982\u4e0a\u56fe\u4e2d(b)\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5f80\u5f80\u901a\u8fc7\u5728\u4e00\u4e2a\u9aa8\u5e72\u7f51\u7edc\u7684\u6bcf\u4e2a\u6a21\u5757\u4e4b\u540e\u63d2\u5165\u51fa\u53e3\u5b9e\u73b0\uff0c\u5373\u5728\u6bcf\u4e2a\u6a21\u5757\u7684\u540e\u65b9\u52a0\u5165\u4e00\u4e2a\u51fa\u53e3\uff0c\u901a\u8fc7\u8bbe\u8ba1\u4e0d\u540c\u7684\u9000\u51fa\u51c6\u5219\u6765\u51b3\u5b9a\u6a21\u578b\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u6a21\u5757\u7684\u8ba1\u7b97\u4e4b\u540e\u662f\u5426\u5df2\u7ecf\u4e0d\u518d\u9700\u8981\u540e\u7eed\u7f51\u7edc\u4e86\uff0c\u4ece\u800c\u5b9e\u73b0\u65e9\u9000\u3002\\n\\n\u7136\u800c\uff0c\u8fd9\u79cd\u4f7f\u7528\u65e9\u9000\u7684\u65b9\u6cd5\u5e76\u4e0d\u662f\u6700\u4f18\u7684\u3002\u6709\u7814\u7a76\u6807\u660e\uff0c\u5982\u679c\u5728\u6a21\u578b\u4e2d\u6dfb\u52a0\u4e2d\u95f4\u51fa\u53e3\uff0c\u5f80\u5f80\u4f1a\u5f71\u54cd\u6a21\u578b\u7684\u5206\u7c7b\u6027\u80fd\u3002\u539f\u56e0\u662fCNN\u7684\u66f4\u6df1\u5c42\u8f93\u51fa\u7684feature map\u5f80\u5f80\u624d\u5177\u6709\u66f4\u591a\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u63d0\u524d\u9000\u51fa\u5f80\u5f80\u4f1a\u5bfc\u81f4\u7279\u5f81\u63d0\u53d6\u201c\u5e76\u4e0d\u5230\u4f4d\u201d\u3002\\n\\n\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u591a\u5c3a\u5ea6\u7684\u3001\u5bc6\u96c6\u8fde\u63a5\u7684\u7f51\u7edc\u67b6\u6784\uff1a\\n\\n![image-20210509142111488](./src/Dynamic-Neural-Networks-A-Survey/image-20210509142111488.png)\\n\\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u8f83\u4f4e\u7ef4\u5ea6\u7684\u7279\u5f81\u901a\u8fc7`concat`\u7b49\u64cd\u4f5c\u878d\u5408\u5230\u6df1\u5c42\u7684\u7279\u5f81\u4e2d\u53c2\u4e0e\u5206\u7c7b\uff0c\u8fd9\u6837\u4e0d\u540c\u5c3a\u5ea6\u7684\u7279\u5f81\u90fd\u80fd\u591f\u53c2\u4e0e\u5206\u7c7b\u3002\u5176\u662f\u5426\u9000\u51fa\u7684\u6807\u51c6\u4e3a\u67d0\u4e2a\u5206\u7c7b\u5668\u7684\u7f6e\u4fe1\u5ea6\u662f\u5426\u8fbe\u5230\u67d0\u4e2a\u9608\u503c\u3002\\n\\n![image-20210509170120613](./src/Dynamic-Neural-Networks-A-Survey/image-20210509170120613.png)\\n\\n\u4f8b\u5982\uff0c\u5728\u4e0a\u56fe\u4e2d\uff0c\u4e00\u5f20\u732b\u7684\u7167\u7247\u53c2\u4e0e\u4e86\u5206\u7c7b\uff0c\u5f53\u7f51\u7edc\u5728\u67d0\u4e2a\u5206\u7c7b\u5668\u4e0a\u7684\u8f93\u51fa\uff08\u4e00\u822c\u662f`softmax`\u8f93\u51fa\uff09\u7684\u7f6e\u4fe1\u5ea6\u8fbe\u5230\u4e00\u5b9a\u503c\u7684\u65f6\u5019\uff0c\u7f51\u7edc\u5c31\u53ef\u4ee5\u9000\u51fa\u4e86\uff0c\u540e\u9762\u7684\u7f51\u7edc\u5c06\u4e0d\u88ab\u6267\u884c\u3002\u4ece\u800c\u5b9e\u73b0\u4e86\u52a8\u6001\u51cf\u5c0f\u7f51\u7edc\u7684\u8ba1\u7b97\u91cf\u3002\\n\\n\u8fd8\u6709\u8bb8\u591a\u5177\u6709\u65e9\u9000\u673a\u5236\u7684\u7f51\u7edc\uff0c\u5982\u679c\u6211\u770b\u5230\u4e86\u4f1a\u5355\u72ec\u5199\u4e00\u8282\u6765\u4ecb\u7ecd\u3002\\n\\n##### \u8de8\u5c42\u8fde\u63a5\uff08skip connections\uff09\\n\\n\u65e9\u9000\u673a\u5236\u662f\u901a\u8fc7\u5728\u7f51\u7edc\u6267\u884c\u7684\u67d0\u4e2a\u9636\u6bb5\u9000\u51fa\u4ece\u800c\u8282\u7701\u8ba1\u7b97\u5f00\u9500\u7684\uff0c\u800c\u8de8\u5c42\u8fde\u63a5\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u5219\u4f1a\u6267\u884c\u5b8c\u6574\u4e2a\u7f51\u7edc\uff0c\u53ea\u662f\u5728\u7f51\u7edc\u7684\u4e2d\u95f4\u5c42\u4f1a\u51fa\u73b0\u8de8\u5c42\u7684\u8fde\u63a5\u65b9\u5f0f\u3002\u8de8\u5c42\u8fde\u63a5\u4e00\u822c\u88ab\u5b9e\u73b0\u5728\u4e00\u4e9b\u5177\u6709\u7c7b\u4f3c\u4e8e`skip connection`\u6216\u662f`residual connection`\u7684\u7f51\u7edc\u7ed3\u6784\u4e2d\u3002\\n\\n![image-20210509171717763](./src/Dynamic-Neural-Networks-A-Survey/image-20210509171717763.png)\\n\\n\u8de8\u5c42\u8fde\u63a5\u7684\u4e00\u79cd\u7b80\u5355\u5b9e\u73b0\u65b9\u6cd5\u662f\u5728\u5177\u6709\u8de8\u5c42\u8fde\u63a5\u7684\u7f51\u7edc\u4e2d\u52a0\u5165`Gating module`\u3002\u5982\u4e0a\u56fe\uff0c\u7ecf\u8fc7\u8bad\u7ec3\u7684`Gating module`\u5982\u679c\u8f93\u51fa\u4e3a1\uff0c\u5219\u4e0d\u8df3\u8fc7\u8fd9\u4e00\u5c42\uff1b\\n\\n![image-20210509171732525](./src/Dynamic-Neural-Networks-A-Survey/image-20210509171732525.png)\\n\\n\u5f53`Gating module`\u7684\u8f93\u51fa\u4e3a0\u65f6\uff0c\u5c31\u8df3\u8fc7\u8fd9\u4e00\u5c42\u7684\u8ba1\u7b97\uff0c\u5373\u8f93\u5165\u76f4\u63a5\u88ab\u5f53\u4f5c\u8f93\u51fa\u3002`Gating module`\u4e00\u822c\u662f\u5305\u542b\u4e00\u4e2a\u88ab\u79f0\u4e3a\u95e8\u63a7\u51fd\u6570\uff08Gating function\uff09\u7684\u8ba1\u7b97\u5355\u5143\u3002\\n\\n\u8fd8\u6709\u4e00\u79cd\u5b9e\u73b0\u8df3\u5c42\u7684\u65b9\u6cd5\uff1a\\n\\n![image-20210509172345469](./src/Dynamic-Neural-Networks-A-Survey/image-20210509172345469.png)\\n\\n\u5982\u4e0a\u56fe\uff0c\u8f93\u5165\u5728\u6b63\u5f0f\u8fdb\u5165\u4e3b\u5e72\u7f51\u7edc\u4e4b\u524d\u4f1a\u5148\u7ecf\u8fc7\u4e00\u4e2a\u88ab\u79f0\u4e3a`Policy Network`\u7684\u7f51\u7edc\uff0c\u8fd9\u4e2a\u7f51\u7edc\u4f1a\u51b3\u5b9a\u5bf9\u4e8e\u5f53\u524d\u8f93\u5165\u5e94\u8be5\u8df3\u8fc7\u54ea\u4e9b\u5c42\uff0c\u5e76\u901a\u77e5\u4e3b\u5e72\u7f51\u7edc\u8fd9\u6837\u505a\u3002`Policy Network`\u7684\u8f93\u51fa\u4e00\u822c\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u54ea\u4e9b\u5c42\u5e94\u8be5\u88ab\u8df3\u8fc7\u7684\u4fe1\u606f\u3002\\n\\n\u8fd8\u6709\u8bb8\u591a\u5177\u6709\u8df3\u5c42\u673a\u5236\u7684\u7f51\u7edc\uff0c\u5982\u679c\u6211\u770b\u5230\u4e86\u4f1a\u5355\u72ec\u5199\u4e00\u8282\u6765\u4ecb\u7ecd\u3002\\n\\n#### \u52a8\u6001\u5bbd\u5ea6\uff08Dynamic Width\uff09\\n\\n##### \u52a8\u6001\u901a\u9053\u6570\uff08Dynamic channel pruning in CNNs\uff09\\n\\n\u52a8\u6001\u5bbd\u5ea6\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\uff0c\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u79cd\u7f51\u7edc\u4f1a\u6839\u636e\u8f93\u5165\u52a8\u6001\u8c03\u6574\u7f51\u7edc\u7684\u5bbd\u5ea6\u3002\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684\u601d\u8def\u662f\uff0c\u52a8\u6001\u8c03\u6574\u901a\u9053\u6570\u91cf\uff1a\\n\\n![image-20210509173020737](./src/Dynamic-Neural-Networks-A-Survey/image-20210509173020737.png)\\n\\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u4e5f\u51fa\u73b0\u4e86\u4e00\u4e2a\u88ab\u79f0\u4e3a`Gating module`\u7684\u6a21\u5757\uff0c\u5b83\u6839\u636e\u8f93\u5165\u7684\u4e0d\u540c\u4f1a\u5411\u5377\u79ef\u5c42\u63d0\u4f9b\u4e00\u4e2a\u5411\u91cf\uff0c\u8be5\u5411\u91cf\u51b3\u5b9a\u4e86\u5377\u79ef\u5c42\u8df3\u8fc7\u8f93\u51fa\u54ea\u4e9b\u901a\u9053\u3002\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u6cd5\u662f\uff0c\u8be5\u5411\u91cf\u75310\u548c1\u7ec4\u6210\uff0c\u5377\u79ef\u5c42\u5c06\u4fdd\u75591\u4ee3\u8868\u7684\u901a\u9053\uff0c\u800c\u53d6\u6d880\u4ee3\u8868\u7684\u901a\u9053\u3002\\n\\n\u53e6\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u591a\u4e2a\u4e0d\u540c\u5bbd\u5ea6\u7684\u7f51\u7edc\u5bf9\u8f93\u5165\u8fdb\u884c\u5904\u7406\uff0c\u5f53\u67d0\u4e2a\u6df1\u5ea6\u7684\u7f51\u7edc\u7684\u8f93\u51fa\uff08\u4f8b\u5982`softmax`\u8f93\u51fa\uff09\u8fbe\u5230\u67d0\u4e2a\u9608\u503c\u65f6\uff0c\u5c31\u4e0d\u518d\u52a0\u6df1\u7f51\u7edc\u4e86\u3002\\n\\n##### \u4e13\u5bb6\u5b50\u7f51\u7edc\u52a0\u6743\uff08Mixture of Experts\uff0cMOE\uff09\\n\\n\u8fd9\u79cd\u65b9\u6cd5\u662f\u901a\u8fc7\u5c06\u5f88\u591a\u4e0d\u540c\u7684\u7f51\u7edc\u7684\u7ed3\u679c\u8fdb\u884c\u52a8\u6001\u52a0\u6743\u6765\u63d0\u5347\u7f51\u7edc\u6027\u80fd\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\\n\\n![image-20210509174050883](./src/Dynamic-Neural-Networks-A-Survey/image-20210509174050883.png)\\n\\n\u4e0a\u56fe\u662f\u4e24\u79cd\u53ef\u884c\u7684\u601d\u8def\uff1a\\n\\n- (a)\u662f\u4e00\u79cd\u201c\u8f6f\u52a0\u6743\u201d\uff0c\u5bf9\u591a\u4e2a\u7f51\u7edc\u7684\u8f93\u51fa\u8fdb\u884c\u52a8\u6001\u52a0\u6743\uff0c\u6bcf\u4e2a\u5b50\u7f51\u7edc\u90fd\u4f1a\u88ab\u6267\u884c\u5b8c\uff0c\u901a\u8fc7\u8c03\u8282\u52a0\u6743\u8fbe\u5230\u66f4\u597d\u7684\u6027\u80fd\u3002\\n- (b)\u662f\u4e00\u79cd\u201c\u786c\u52a0\u6743\u201d\uff0c\u901a\u8fc7\u4e00\u4e2a`Gating Module`\u51b3\u5b9a\u67d0\u4e2a\u5b50\u7f51\u7edc\u662f\u5426\u53c2\u4e0e\u51b3\u7b56\u3002\u5982\u679c\u67d0\u4e2a\u5b50\u7f51\u7edc\u4e0d\u53c2\u4e0e\u51b3\u7b56\uff0c\u5219\u5b83\u6839\u672c\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\\n\\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u52a0\u5927\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\u3002\u5728\u540e\u9762\u7684\u52a8\u6001\u53c2\u6570\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u4ecb\u7ecd\u4e00\u79cd\u548c\u8be5\u65b9\u6cd5\u601d\u8def\u5f88\u7c7b\u4f3c\u7684\u65b9\u6cd5\u3002\\n\\n##### \u52a8\u6001\u5168\u8fde\u63a5\u5c42\u5927\u5c0f\uff08Dynamic width of fully-connected layers\uff09\\n\\n\u81ea\u5982\u8d77\u540d\uff0c\u52a8\u6001\u4fee\u6539\u5168\u8fde\u63a5\u5c42\u7684\u5927\u5c0f\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u6a21\u5757\u548c\u8bbe\u8ba1\u3002\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u4ecb\u7ecd\u3002\\n\\n---\\n\\n#### \u52a8\u6001\u8def\u7531\uff08Dynamic Routing\uff09\\n\\n\u4e0a\u9762\u4ecb\u7ecd\u7684\u52a8\u6001\u6df1\u5ea6\u548c\u52a8\u6001\u5bbd\u5ea6\u7684\u65b9\u6cd5\u5e7f\u4e49\u4e0a\u5b9e\u9645\u4e0a\u90fd\u80fd\u89c6\u4e3a\u67d0\u79cd\u7b80\u5355\u7684\u52a8\u6001\u8def\u7531\u65b9\u6cd5\u3002\u8fd9\u91cc\u7684\u52a8\u6001\u8def\u7531\u5355\u72ec\u62ff\u51fa\u6765\uff0c\u6307\u5177\u6709\u66f4\u52a0\u590d\u6742\u7684\u8d85\u7f51\u7edc\u7ed3\u6784\uff08\u8d85\u7f51\u7edc\u4e0d\u518d\u662f\u7b80\u5355\u5730\u94fe\u5f0f\u7ed3\u6784\uff09\u7684\u52a8\u6001\u8def\u7531\uff0c\u8fd9\u79cd\u7ed3\u6784\u751a\u81f3\u4f1a\u7ed9\u4e0d\u540c\u7684\u6837\u672c\u4ee5\u4e0d\u540c\u7684\u8ba1\u7b97\u56fe\u3002\\n\\n![](./src/Dynamic-Neural-Networks-A-Survey/image-20210509114605362.jpg)\\n\\n\u8fd9\u91cc\u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u8bbe\u8ba1\uff1a\\n\\n- (c)\u662f\u4e00\u79cd\u6811\u72b6\u7ed3\u6784\\n- (d)\u662f\u4e00\u79cd\u591a\u5c3a\u5ea6\u7684\u52a8\u6001\u7ed3\u6784\\n\\n---\\n\\n### \u52a8\u6001\u53c2\u6570\uff08Dynamic Parameters\uff09\\n\\n\u52a8\u6001\u53c2\u6570\u6307\u7684\u662f\u7f51\u7edc\u4f1a\u6839\u636e\u8f93\u5165\u7684\u4e0d\u540c\u4f7f\u7528\u4e0d\u540c\u7684\u53c2\u6570\u5bf9\u8f93\u5165\u8fdb\u884c\u8fd0\u7b97\u3002\u53ef\u80fd\u7684\u52a8\u6001\u53c2\u6570\u65b9\u6cd5\u6709\uff1a\\n\\n![image-20210510083907081](./src/Dynamic-Neural-Networks-A-Survey/image-20210510083907081.png)\\n\\n- (a)\u4f7f\u7528\u4e00\u4e2a\u52a8\u6001\u53c2\u6570\u52a0\u6743\u8c03\u8282\uff08Parameter Adjustment\uff09\u6a21\u5757\uff0c\u6839\u636e\u8f93\u5165\u4ea7\u751f\u4e00\u4e2a\u5f71\u54cd\u8fd0\u7b97\u53c2\u6570\u7684\u53c2\u6570\u3002\\n- (b)\u4f7f\u7528\u4e00\u4e2a\u52a8\u6001\u53c2\u6570\u4ea7\u751f\uff08Parameter Generation\uff09\u6a21\u5757\uff0c\u6839\u636e\u8f93\u5165\u7684\u4e0d\u540c\u4ea7\u751f\u4e0d\u540c\u7684\u53c2\u6570\u6bd4\u5982\u65b0\u7684\u5377\u79ef\u6838\uff0c\u5bf9\u8f93\u5165\u8fdb\u884c\u8fd0\u7b97\u3002\\n- (c)\u8f6f\u6ce8\u610f\u529b\uff08Soft attention\uff09\u65b9\u6cd5\\n\\n#### \u52a8\u6001\u53c2\u6570\u52a0\u6743\uff08Attention on weight\uff09\\n\\n\u52a8\u6001\u53c2\u6570\u7684\u8bbe\u8ba1\u80fd\u591f\u63d0\u5347\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u3002\u4e0b\u9762\u4e3e\u4e00\u4e2a\u7b80\u5355\u5730\u4f8b\u5b50\u8fdb\u884c\u8bf4\u660e\uff1a\\n\\n![image-20210510084536681](./src/Dynamic-Neural-Networks-A-Survey/image-20210510084536681.png)\\n\\n\u5728\u4e0a\u56fe\u4e2d`+`\u8868\u793a\u52a0\u548c\uff0c$\\\\alpha_1$\u3001$\\\\alpha_2$\u3001$\\\\alpha_3$\u5206\u522b\u8868\u793a\u4e00\u4e2a\u52a8\u6001\u53c2\u6570\u8c03\u8282\u6a21\u5757\u4ea7\u751f\u7684\u6743\u91cd\u3002\u6839\u636e\u8f93\u5165\u7684\u4e0d\u540c\uff0c\u8fd9\u4e09\u4e2a\u63d0\u524d\u8bbe\u5b9a\u7684\u5377\u79ef\u6838\u901a\u8fc7\u4e0d\u540c\u7684\u6743\u91cd\u52a0\u6743\u5f62\u6210\u65b0\u7684\u5377\u79ef\u6838\u3002\u4e0a\u56fe\u4e2d\u7684\u8fd9\u79cd\u64cd\u4f5c\u7b49\u6548\u4e8e\uff1a\\n\\n![image-20210510084826504](./src/Dynamic-Neural-Networks-A-Survey/image-20210510084826504.png)\\n\\n\u8f93\u5165\u5206\u522b\u4e0e\u4e09\u4e2a\u4e0d\u540c\u7684\u5377\u79ef\u6838\u8fdb\u884c\u8fd0\u7b97\uff0c\u5e76\u4e14\u901a\u8fc7$\\\\alpha_1$\u3001$\\\\alpha_2$\u3001$\\\\alpha_3$\u4e09\u4e2a\u6743\u91cd\u52a0\u6743\u5f62\u6210\u8f93\u51fa\u3002\u8fd9\u79cd\u8bbe\u8ba1\u8ba9\u4eba\u4e0d\u7981\u60f3\u5230\u5728\u52a8\u6001\u7ed3\u6784\u7684\u8bbe\u8ba1\u4e2d\u51fa\u73b0\u7684\u4e13\u5bb6\u5b50\u7f51\u7edc\u52a0\u6743\uff08Mixture of Experts\uff0cMOE\uff09\u65b9\u6cd5\u3002\u4e0d\u8fc7\u4e4b\u524d\u7684\u4e13\u5bb6\u5b50\u7f51\u7edc\u52a0\u6743\u65b9\u6cd5\u5728\u8fd9\u79cd\u60c5\u5f62\u4e0b\u8981\u5377\u79ef\u4e09\u6b21\uff0c\u800c\u52a8\u6001\u53c2\u6570\u52a0\u6743\u7684\u8bbe\u8ba1\u53ea\u5377\u79ef\u4e00\u6b21\u3002\\n\\n\u4e0a\u9762\u8fd9\u4e24\u79cd\u7b49\u6548\u7684\u8868\u8fbe\u53ef\u4ee5\u5199\u4e3a\u4e0b\u5217\u7b49\u5f0f\uff1a\\n$$\\n(\\\\sum_{n}a_n w_n)\\\\cdot x = \\\\sum_{n}a_n(w_n\\\\cdot x)\\n$$\\n\\n\\n#### \u52a8\u6001\u5377\u79ef\u6838\u5f62\u72b6\uff08Kernel shape adaptation\uff09\\n\\n\u52a8\u6001\u5377\u79ef\u6838\u5f62\u72b6\u7684\u65b9\u6cd5\u80fd\u6839\u636e\u8f93\u5165\u7684\u4e0d\u540c\u8c03\u8282\u5377\u79ef\u6838\u7684\u5f62\u72b6\uff0c\u4ee5\u6b64\u6765\u83b7\u5f97\u4e0d\u540c\u7684\u611f\u53d7\u91ce\u3002\u6bd4\u8f83\u8457\u540d\u7684\u76f8\u5173\u5de5\u4f5c\u662f\u4e00\u7bc7\u53eb\u505aDeformable Convolutional Networks\uff08\u53ef\u5f62\u53d8\u5377\u79ef\u7f51\u7edc\uff09\u7684\u8bba\u6587\u3002\\n\\n![image-20210510091338617](./src/Dynamic-Neural-Networks-A-Survey/image-20210510091338617.png)\\n\\n\u4e0a\u56fe\u662f\u8bba\u6587Deformable Convolutional Networks\u4e2d\u7684\u793a\u610f\u56fe\u3002\\n\\n#### \u52a8\u6001\u53c2\u6570\u548c\u6ce8\u610f\u529b\u7684\u5173\u7cfb\uff08Dynamic features or Dynamic weights\uff09\\n\\n\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\uff1a\\n\\n> The goal of dynamic parameters is generating dynamic features. So why not rescale features directly with attention?\\n\\n\u6ce8\u610f\u529b\u673a\u5236\u4e5f\u662f\u4e3a\u4e86\u52a8\u6001\u4ea7\u751f\u7279\u5f81\u7684\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u6709\u52a8\u6001\u53c2\u6570\u7684\u65b9\u6cd5\u5462\uff1f\u4f8b\u5982\uff0c\u5728\u8f83\u4e3a\u51fa\u540d\u7684transformer\u4e2d\uff0c\u662f\u901a\u8fc7key\u548cquery\u7684\u76f8\u4f3c\u5ea6\u5bf9value\u8fdb\u884c\u52a8\u6001\u8c03\u8282\uff1b\u8fd8\u6709SENet\uff08[Squeeze-and-excitation networks](https://arxiv.org/abs/1709.01507)\uff09\u4e2d\uff0c\u5bf9\u4e0d\u540c\u901a\u9053\u8fdb\u884c\u7684\u52a8\u6001\u8c03\u8282\u3002\\n\\n![image-20210510094907451](./src/Dynamic-Neural-Networks-A-Survey/image-20210510094907451.png)\\n\\n\u4e0a\u56fe\u662fSENet\u4e2d\u63d0\u53ca\u7684\u65b9\u6cd5\uff0c\u8f93\u5165\u7ecf\u8fc7\u6b63\u5e38\u7684\u5377\u79ef\u8fd0\u7b97\u4ea7\u751f\u4e00\u4e9bchannel\uff0c\u540c\u65f6\u4e00\u4e2a\u6ce8\u610f\u529b\u6a21\u5757\uff08Attention Module\uff09\u63a5\u6536\u8f93\u5165\u5e76\u4ea7\u751f\u4e00\u4e2a\u6ce8\u610f\u529b\u5411\u91cf\uff0c\u4f5c\u7528\u4e8e\u5377\u79ef\u4ea7\u751f\u7684\u8fd9\u4e9bchannel\uff0c\u4f7f\u5b83\u4eec\u88ab\u4e58\u4ee5\u4e0d\u540c\u7684\u6743\u503c\u3002\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4f5c\u901a\u9053\u6ce8\u610f\u529b\uff08Channel-wise attention\uff09\u3002\\n\\n\u6240\u4ee5\u5728\u67d0\u4e9b\u89d2\u5ea6\u4e0a\u6211\u4eec\u53ef\u4ee5\u8bf4\uff1a\\n$$\\nDynamicFeatures = DynamicWeight\\n$$\\n\u8868\u793a\u4e3a\u516c\u5f0f\u5c31\u662f\uff1a\\n$$\\n(x\\\\times W)\\\\otimes \\\\alpha  =  x\\\\times(W\\\\otimes \\\\alpha)\\\\\\\\\\n$$\\n\u5176\u4e2d\uff0c\u7b26\u53f7$\\\\otimes$\u662f\u514b\u7f57\u5185\u514b\u79ef\uff0c\u53ef\u4ee5\u67e5\u9605\u76f8\u5173\u8d44\u6599\u8fdb\u884c\u4e86\u89e3\u3002\\n\\n\u4e0a\u8ff0\u516c\u5f0f\u4e2d\uff0c\u7b49\u53f7\u5de6\u4fa7\u662f\u52a8\u6001\u5377\u79ef\uff0c\u5148\u4f7f\u7528$W$\u5bf9\u8f93\u5165\u7684$x$\u5b8c\u6210\u5377\u79ef\uff0c\u518d\u4e58\u4e0a\u53c2\u6570$\\\\alpha$\uff1b\u7b49\u53f7\u53f3\u4fa7\u662f\u52a8\u6001\u53c2\u6570\uff0c\u5148\u4f7f\u7528\u53c2\u6570$\\\\alpha$\u5f71\u54cd\u5377\u79ef\u53c2\u6570$w$\uff0c\u518d\u5bf9\u8f93\u5165\u7684$x$\u8fdb\u884c\u5377\u79ef\u3002\u5b83\u4eec\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684\u3002\\n\\n---\\n\\n## \u7a7a\u95f4\u81ea\u9002\u5e94\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\uff08Spatial-wise dynamic networks\uff09\\n\\n\u4f20\u7edf\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\\n\\n> Most conventional networks perform the same computation across different spatial locations of an image.\\n\\n\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\uff0c\u5728\u4e0d\u540c\u4f4d\u7f6e\u5305\u542b\u7684\u4fe1\u606f\u91cf\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\u3002\u6240\u4ee5\u4f20\u7edf\u7f51\u7edc\u5bf9\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\u4f7f\u7528\u76f8\u540c\u7684\u8fd0\u7b97\u65b9\u6cd5\u542c\u4e0a\u53bb\u4f1a\u5e26\u6765\u5f88\u591a\u5197\u4f59\u7684\u8ba1\u7b97\u91cf\u3002\\n\\n\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u5c06\u7a7a\u95f4\u81ea\u9002\u5e94\u65b9\u6cd5\u5927\u81f4\u5206\uff1a\\n\\n- \u50cf\u7d20\u7ea7\uff08Pixel Level\uff09\\n  - \u52a8\u6001\u7ed3\u6784\uff08Dynamic Architecture\uff09\\n  - \u52a8\u6001\u53c2\u6570\uff08Dynamic Parameter\uff09\\n- \u533a\u57df\u7ea7\uff08Region Level\uff09\\n  - \u52a8\u6001\u53d8\u6362\uff08Dynamic Transformation\uff09\\n  - \u786c\u6ce8\u610f\u529b\uff08Hard Attention\uff09\\n- \u5206\u8fa8\u7387\u7ea7\uff08Resolution Level\uff09\\n  - \u81ea\u9002\u5e94\u7f29\u653e\u7387\uff08Adaptive Scaling Ratios\uff09\\n  - \u591a\u5c3a\u5ea6\u67b6\u6784\uff08Multi-scalue Architecture\uff09\\n\\n#### \u50cf\u7d20\u7ea7\u81ea\u9002\u5e94\uff08Pixel Level\uff09\\n\\n\u50cf\u7d20\u7ea7\u7684\u4e00\u79cd\u4ee3\u8868\u5de5\u4f5c\u5982\u4e0b\uff1a\\n\\n![image-20210510144149172](./src/Dynamic-Neural-Networks-A-Survey/image-20210510144149172-1620628910961.png)\\n\\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u5bf9\u4e8e\u8f93\u5165\uff0c\u7ecf\u8fc7\u4e00\u4e2a\u8f7b\u91cf\u5316\u7684\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2aMask\u4ee3\u8868\u54ea\u4e9b\u4f4d\u7f6e\u662f\u91cd\u8981\u7684\u3002\u6839\u636e\u751f\u6210\u7684Mask\u8fdb\u884c\u4e00\u4e2a\u7a00\u758f\u7684\u5377\u79ef\uff0c\u5e76\u5f97\u5230\u4e00\u4e2a\u7a00\u758f\u7684\u8f93\u51fa\u3002\u5bf9\u4e8e\u6ca1\u6709\u88abMask\u8986\u76d6\u7684\u533a\u57df\uff0c\u53ef\u80fd\u901a\u8fc7Skip Connection\u7b49\u65b9\u5f0f\u76f4\u63a5\u8df3\u8fc7\u8fd0\u7b97\uff0c\u76f4\u63a5\u5f97\u5230\u8f93\u51fa\u3002\\n\\n#### \u533a\u57df\u7ea7\u81ea\u9002\u5e94\uff08Region-Level\uff09\\n\\n\u533a\u57df\u7ea7\u7a7a\u95f4\u81ea\u9002\u5e94\u65b9\u6cd5\u7684\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\u662f\uff1a\\n\\n![image-20210510145118821](./src/Dynamic-Neural-Networks-A-Survey/image-20210510145118821.png)\\n\\n\u5c06\u56fe\u7247\u8f93\u5165\u5230\u4e00\u4e2a\u9009\u62e9\u5668\u4e2d\uff0c\u9009\u62e9\u5668\u9009\u51fa\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u4e00\u90e8\u5206\uff08\u62a0\u51fa\u4e00\u4e2a\u5c0fPatch\uff09\uff0c\u5e76\u53ea\u5c06\u8fd9\u4e00\u90e8\u5206\u8f93\u5165\u8fdb\u7f51\u7edc\u6216\u8fd0\u7b97\u6a21\u5757\u3002\\n\\n![image-20210510145427441](./src/Dynamic-Neural-Networks-A-Survey/image-20210510145427441.png)\\n\\n\u4e0a\u56fe\u662f\u4e00\u7bc7\u540d\u4e3a[Glance and Focus: a Dynamic Approach to Reducing Spatial Redundancy in Image Classification](https://arxiv.org/abs/2010.05300)\u7684\u76f8\u5173\u8bba\u6587\u4e2d\u7684\u4e00\u4e2a\u793a\u610f\u56fe\u3002\u5bf9\u4e8e\u8f83\u4e3a\u7b80\u5355\u7684\u6837\u672c\uff0c\u5728\u4e00\u4e2a\u5c0f\u5206\u8fa8\u7387\u4e0a\u76f4\u63a5\u5f97\u5230\u53ef\u4fe1\u7684\u9884\u6d4b\uff1b\u5bf9\u4e8e\u590d\u6742\u7684\u6837\u672c\uff0c\u5728\u7f51\u7edc\u5f97\u5230\u7f6e\u4fe1\u5ea6\u5f88\u9ad8\u7684\u8f93\u51fa\u4e4b\u524d\uff0c\u4e0d\u65ad\u4ece\u56fe\u7247\u4e2d\u9009\u62e9\u201c\u8f83\u4e3a\u91cd\u8981\u201d\u7684\u4e00\u90e8\u5206\u7ee7\u7eed\u63a8\u6d4b\u3002\\n\\n\u8fd9\u79cd\u65b9\u6cd5\u9664\u4e86\u5b9e\u73b0\u4e86\u4e00\u79cd\u6ce8\u610f\u529b\u673a\u5236\u4e4b\u5916\uff0c\u8fd8\u5b9e\u73b0\u4e86\u7f51\u7edc\u7684\u65e9\u9000\u3002\\n\\n#### \u5206\u8fa8\u7387\u7ea7\u81ea\u9002\u5e94\uff08Resolution-Level\uff09\\n\\n\u5206\u8fa8\u7387\u81ea\u9002\u5e94\u4e5f\u662f\u4e00\u79cd\u57fa\u4e8e\u65e9\u9000\u7684\u65b9\u6cd5\uff0c\u5176\u57fa\u672c\u6784\u60f3\u662f\u4f7f\u7528\u9012\u8fdb\u7684\u7f51\u7edc\u6df1\u5ea6\u5904\u7406\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u8f93\u5165\u3002\\n\\n![image-20210510150347394](./src/Dynamic-Neural-Networks-A-Survey/image-20210510150347394.png)\\n\\n\u4e0a\u56fe\u622a\u53d6\u81ea\u76f8\u5173\u5de5\u4f5cRANet\uff08[Resolution Adaptive Networks for Efficient Inference](https://arxiv.org/abs/2003.07326)\uff09\uff0c\u5bf9\u4e8e\u7b80\u5355\u7684\u8f93\u5165\uff0c\u4f7f\u7528\u4e00\u4e2a\u5f88\u5c0f\u7684\u5b50\u7f51\u7edc\uff0c\u82e5\u8fbe\u5230\u5f88\u597d\u7684\u7f6e\u4fe1\u5ea6\u8f93\u51fa\uff0c\u5219\u65e9\u9000\uff1b\u5bf9\u4e8e\u590d\u6742\u7684\u8f93\u5165\uff0c\u4f7f\u7528\u66f4\u6df1\u7684\u7f51\u7edc\u8fdb\u884c\u63a8\u65ad\u3002\\n\\n![image-20210510150607144](./src/Dynamic-Neural-Networks-A-Survey/image-20210510150607144.png)\\n\\n\u4e0a\u56fe\u662fRANet\u7684\u4e00\u79cd\u63a8\u65ad\u8fc7\u7a0b\u3002\u56fe\u4e2d\u5404\u5c42`Conv Block`\u4e4b\u95f4\u7684\u84dd\u8272\u7bad\u5934\u5b9e\u73b0\u4e86\u7279\u5f81\u590d\u7528\u3002\\n\\n## \u65f6\u95f4\u81ea\u9002\u5e94\uff08Temporal-wise dynamic network\uff09\\n\\n\u5bf9\u4e8e\u5e8f\u5217\u7684\u8f93\u5165\uff0c\u4f8b\u5982\u89c6\u9891\u6216\u6587\u672c\u7684\u8f93\u5165\uff0c\u53ef\u4ee5\u4f7f\u7528\u65f6\u95f4\u81ea\u9002\u5e94\u7684\u52a8\u6001\u7f51\u7edc\u7ed3\u6784\u3002\\n\\n\u8fd9\u7bc7\u8bba\u6587\u5c06\u65f6\u95f4\u81ea\u9002\u5e94\u7684\u7f51\u7edc\u5206\u4e3a\uff1a\\n\\n- \u7528\u4e8e\u5904\u7406\u6587\u672c\uff08Text\uff09\\n  - \u52a8\u6001\u66f4\u65b0\u9690\u85cf\u6001\uff08Dynamic Update of Hidden States\uff09\\n  - \u65f6\u95f4\u65e9\u9000\uff08Temporally Early Exiting\uff09\\n  - \u52a8\u6001\u8df3\u8dc3\uff08Dynamic Jumping\uff09\\n- \u7528\u4e8e\u5904\u7406\u89c6\u9891\uff08Video\uff09\\n  - \u52a8\u6001\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08Dynamic RNNs\uff09\\n    - \u52a8\u6001\u66f4\u65b0\u9690\u85cf\u6001\uff08Dynamic Update of Hidden States\uff09\\n    - \u65f6\u95f4\u65e9\u9000\uff08Temporally Early Exiting\uff09\\n    - \u52a8\u6001\u8df3\u8dc3\uff08Dynamic Jumping\uff09\\n  - \u5e27\u91c7\u6837\uff08Frame Sampling\uff09\\n\\n![image-20210510151837557](./src/Dynamic-Neural-Networks-A-Survey/image-20210510151837557.png)\\n\\n\u4e0a\u56fe\u662f\u5e38\u89c1\u7684\u65f6\u95f4\u81ea\u9002\u5e94\u7684\u8bbe\u8ba1\u3002 \u5176\u4e2d\uff1a\\n\\n- (a)\u4e2d\u7684`Agent`\u63a5\u53d7\u65f6\u95f4\u6233\u4e3a$t$\u7684\u8f93\u5165$x_t$\uff0c\u5e76\u5224\u65ad\u8be5\u8f93\u5165\u662f\u5426\u91cd\u8981\u3002\u82e5\u91cd\u8981\uff0c\u5219\u4fdd\u7559\u8f93\u5165\u8fdb\u7f51\u7edc\u5e76\u83b7\u5f97\u5f53\u524d\u65f6\u95f4\u6233\u8f93\u51fa$h_t$\uff1b\u82e5\u4e0d\u91cd\u8981\uff0c\u5219\u76f4\u63a5\u5c06\u4e0a\u4e00\u4e2a\u65f6\u95f4\u6233$h_{t-1}$\u4f5c\u4e3a\u8f93\u51fa\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u8ba1\u7b97\u3002\\n- (b)\u4e2d\u901a\u8fc7\u66f4\u7a84\u4e00\u70b9\u7684RNN\u6a21\u5757\u8fdb\u884c\u66f4\u65b0\uff0c\u5bf9\u4e8e$h_{t-1}$\u548c$h_t$\u4e2d\u4e0b\u534a\u90e8\u5206\u7070\u8272\u7684\u90e8\u5206\u4e5f\u662f\u76f4\u63a5copy\u7684\u3002\\n- (d)\u7684\u57fa\u672c\u601d\u8def\u662f\u91c7\u6837\u8f93\u5165\u4e2d\u8f83\u4e3a\u91cd\u8981\u7684\u4f4d\u7f6e\uff0c\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u901a\u8fc7\u81ea\u9002\u5e94\u8ba9`RNN`\u6a21\u5757\u8df3\u8fc7\u8f93\u5165\u89c6\u9891\u4e2d\u7684\u4e00\u90e8\u5206\u5e27\u3002\u4f8b\u5982[Dynamic Video Segmentation Network](https://arxiv.org/abs/1804.00931)\u3002\\n\\n---\\n\\n## \u8bad\u7ec3\u548c\u63a8\u7406\\n\\n### \u63a8\u7406\uff08Inference\uff09\\n\\n#### \u57fa\u4e8e\u7f6e\u4fe1\u5ea6\uff08Based on confidence\uff09\\n\\n![image-20210509170120613](./src/Dynamic-Neural-Networks-A-Survey/image-20210509170120613.png)\\n\\n\u65e9\u9000\u673a\u5236\u7684\u5e38\u7528\u65b9\u6cd5\u3002\u5f53\u7f51\u7edc\u5728\u67d0\u4e2a\u9636\u6bb5\u8f93\u51fa\u7684`softmax`\u7f6e\u4fe1\u5ea6\u8fbe\u5230\u67d0\u4e2a\u9608\u503c\u65f6\u7f51\u7edc\u5c31\u4f1a\u9000\u51fa\u3002\u8be5\u65b9\u6cd5\u4e0d\u9700\u8981\u7279\u6b8a\u7684\u8fd0\u7b97\u548c\u8bbe\u8ba1\uff0c\u4ec5\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u9608\u503c\u3002\\n\\n#### \u57fa\u4e8e\u653f\u7b56\u7f51\u7edc\uff08Based on Policy Networks\uff09\\n\\n![image-20210509172345469](./src/Dynamic-Neural-Networks-A-Survey/image-20210509172345469.png)\\n\\n\u8be5\u65b9\u6cd5\u5728\u8df3\u5c42\u5b9e\u73b0\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u4e2d\u5e38\u89c1\u3002\u8fd9\u79cd`Policy Network`\u7684\u8bbe\u8ba1\u5f80\u5f80\u662f\u57fa\u4e8e\u4e3b\u5e72\u7f51\u7edc\u7684\u7ed3\u6784\u7684\uff0c\u6bd4\u5982\u5176\u8f93\u51fa\u7684\u957f\u5ea6\u53ef\u80fd\u7b49\u4e8e\u4e3b\u5e72\u7f51\u7edc\u7684`Block`\u603b\u6570\uff0c\u56e0\u6b64\u9700\u8981\u4e13\u95e8\u8bbe\u8ba1\uff0c\u5e76\u4e0d\u662f\u5f88\u901a\u7528\u3002\\n\\n#### \u57fa\u4e8e\u95e8\u63a7\u51fd\u6570\uff08Based on Gating Functions\uff09\\n\\n![image-20210510204008178](./src/Dynamic-Neural-Networks-A-Survey/image-20210510204008178.png)\\n\\n\u8fd9\u79cd\u65b9\u6cd5\u5728\u5f88\u591a\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u4e2d\u5e38\u89c1\u3002\u901a\u5e38`Gating Function`\u7684\u804c\u8d23\u53ef\u80fd\u662f\uff1a\\n\\n- \u51b3\u5b9a\u54ea\u4e9b\u7f51\u7edc\u5c42\u88ab\u8df3\u8fc7\\n- \u51b3\u5b9a\u54ea\u4e9b\u4e13\u5bb6\u7f51\u7edc\uff08Expert Network\uff09\u88ab\u6267\u884c\\n- \u51b3\u5b9a\u54ea\u4e9b\u901a\u9053\uff08Channel\uff09\u88ab\u5ffd\u7565\\n- \u51b3\u5b9a\u56fe\u50cf\u4e2d\u7684\u54ea\u4e9b\u533a\u57df\u88ab\u91c7\u6837\u548c\u5377\u79ef\u7684\\n\\n`Gating Function`\u7684\u8ba1\u7b97\u91cf\u901a\u5e38\u8f83\u5c0f\uff0c\u5e76\u4e14\u8bbe\u8ba1\u4e0a\u5177\u6709\u5373\u63d2\u5373\u7528\u7684\u7279\u70b9\uff0c\u66f4\u52a0\u5e38\u7528\u3002\u4f46\u662f\u8fd9\u7c7b\u65b9\u6cd5\u4e5f\u6709\u4e00\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u66f4\u957f\u7684\u8bad\u7ec3\u8fc7\u7a0b\u3002\\n\\n---\\n\\n### \u8bad\u7ec3\uff08Training\uff09\\n\\n#### \u8bad\u7ec3\u76ee\u6807\uff08Objectives\uff09\\n\\n##### \u65e9\u9000\u7f51\u7edc\u7684\u76ee\u6807\u51fd\u6570\uff08Multi-exit Networks\uff09\\n\\n\u4e00\u79cd\u6bd4\u8f83\u666e\u901a\u7684\u601d\u8def\u662f\uff1a\\n$$\\nL(y,f(x;\\\\theta)) = \\\\sum_{i}\\\\lambda_i CE(y,f_i(x;\\\\theta_i))\\n$$\\n\u5176\u4e2d\uff0c$CE$\u662f\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\uff0c$\\\\lambda_i$\u662f\u7b2c$i$\u4e2a\u9000\u51fa\u4f4d\u7f6e\u7684\u6743\u503c\u3002\u6709\u7684\u5de5\u4f5c\u4e2d\u751a\u81f3$\\\\lambda_i$\u8bbe\u7f6e\u6052\u7b49\u4e8e1\u3002\u4e5f\u6709\u66f4\u52a0\u590d\u6742\u7684\u7528\u4e8e\u63d0\u5347\u591a\u4e2a\u4e0d\u540c\u5206\u7c7b\u5668\u7ec4\u5408\u8bad\u7ec3\u6548\u679c\u7684\u76ee\u6807\uff1a\\n$$\\nL_i = \\\\alpha CE_i + (1-\\\\alpha)KLD_i\\\\\\\\\\nKLD_i = -\\\\sum_{c\\\\in Y}p_k(c|x;\\\\theta ,T)\\\\log\\\\frac{p_i(c|x;\\\\theta ,T)}{p_k(c|x;\\\\theta ,T)}\\n$$\\n\\n##### \u9f13\u52b1\u7a00\u758f\u5ea6\u7684\u76ee\u6807\u51fd\u6570\uff08Training Objectives for Encouraging Sparsity\uff09\\n\\n\u8fd9\u7c7b\u76ee\u6807\u51fd\u6570\u4e3b\u8981\u662f\u4e3a\u4e86\u8bad\u7ec3\u8df3\u5c42\u6216\u662f\u5ffd\u7565\u901a\u9053\u7684\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u800c\u8bbe\u8ba1\u7684\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u7c7b\u7f51\u7edc\u9700\u8981\u52a8\u6001\u8c03\u7528\u7f51\u7edc\u4e2d\u4e0d\u540c\u7684\u6a21\u5757\u3002\u5982\u679c\u4e0d\u5355\u72ec\u8bbe\u8ba1\u65b0\u7684\u76ee\u6807\u51fd\u6570\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f51\u7edc\u9677\u5165\u201c\u5c3d\u53ef\u80fd\u591a\u5730\u8c03\u7528\u7f51\u7edc\u7684\u6a21\u5757\u201d\u6216\u662f\u201c\u7f51\u7edc\u4e2d\u67d0\u4e2a\u6a21\u5757\u4e00\u6b21\u4e5f\u6ca1\u6709\u88ab\u8c03\u7528\u201d\u3002\u56e0\u6b64\u5f88\u591a\u5de5\u4f5c\u52a0\u5165\u4e86\u4e00\u79cd\u79f0\u4e3a\u9f13\u52b1\u7a00\u758f\u5ea6\u7684\u76ee\u6807\u51fd\u6570\uff1a\\n$$\\nL = L_{task} + L_{sparse}\\n$$\\n\u5176\u4e2d\uff0c$L_{sparse}$\u53ef\u4ee5\u4f46\u4e0d\u9650\u4e8e\u8868\u793a\uff1a\\n\\n- \u88ab\u6fc0\u6d3b\u6216\u662f\u88ab\u8c03\u7528\u7684\u7f51\u7edc\u6a21\u5757\u7684\u6bd4\u7387\u3002\u5f88\u660e\u663e\u7684\u662f\uff0c\u5f53\u7f51\u7edc\u8bd5\u56fe\u201c\u5c3d\u53ef\u80fd\u4f7f\u7528\u5168\u90e8\u6a21\u5757\u201d\u65f6\uff0c\u76ee\u6807\u51fd\u6570\u7684\u503c\u4f1a\u589e\u5927\u3002\\n\\n- \u52a8\u6001\u8c03\u7528\u7684\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u662f\u8ba1\u7b97\u91cf\u6216\u662f\u53c2\u6570\u91cf\u7684\u4f30\u7b97\u503c\uff08FLOPs\uff09\u3002\\n\\n#### \u4f18\u5316\u65b9\u6cd5\uff08Optimization\uff09\\n\\n#####  \u68af\u5ea6\u4f30\u8ba1\uff08Gradient Estimation\uff09\\n\\n\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\u662f\u4f7f\u7528`Gumbel-Softmax`\u5bf9\u79bb\u6563\u53d8\u91cf\u518d\u53c2\u6570\u5316\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u4f18\u5316`Gating Function`\uff0c\u4f7f\u5176\u5ae9\u80fd\u6784\u6210\u5b8c\u6574\u7684\u7aef\u5230\u7aef\u8bad\u7ec3\u7cfb\u7edf\u3002\u574f\u6d88\u606f\u5c31\u662f\u8fd9\u79cd\u65b9\u6cd5\u53c8\u5f15\u5165\u4e86\u4e00\u4e2a\u79f0\u4e3a`Gumbel Noise`\u7684\u968f\u673a\u53d8\u91cf\uff0c\u9700\u8981\u66f4\u957f\u7684\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u5e76\u4e14\u5bb9\u6613\u5bf9\u67d0\u4e9b\u8d85\u53c2\u6570\u654f\u611f\u3002\\n\\n##### \u5f3a\u5316\u5b66\u4e60\uff08Reinforcement Learning\uff09\\n\\n\u5f3a\u5316\u5b66\u4e60\u5df2\u7ecf\u88ab\u5e94\u7528\u4e8e\u5f88\u591a\u51b3\u7b56\u4efb\u52a1\u4e2d\u3002\u5f3a\u5316\u5b66\u4e60\u5728\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u4e2d\u4e3b\u8981\u7528\u4e8e\u51b3\u5b9a\u8df3\u5c42\u3001\u51b3\u5b9a\u9009\u62e9\u54ea\u4e9bPatch\u4ee5\u53ca\u51b3\u5b9a\u91c7\u6837\u54ea\u4e9b\u5e27\u3002\\n\\n---\\n\\n## Whatever Disscussion\\n\\n![image-20210510215257391](./src/Dynamic-Neural-Networks-A-Survey/image-20210510215257391.png)\\n\\n\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u5df2\u7ecf\u88ab\u5e94\u7528\u4e8e\u5f88\u591a\u9886\u57df\u4e2d\uff08\u5982\u4e0a\u8868\uff09\u3002\\n\\n\u6700\u540e\uff0c\u8fd9\u7bc7\u8bba\u6587\u8fd8\u5bf9\u4e00\u4e9b\u5f00\u653e\u6027\u95ee\u9898\u8fdb\u884c\u4e86\u8ba8\u8bba\uff1a\\n\\n- \u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u7406\u8bba\uff08Theories\uff09\\n\\n  \u4f8b\u5982\u5728\u591a\u51fa\u53e3\u7684\u7f51\u7edc\u91cc\uff0c\u65e9\u9000\u673a\u5236\u7684\u5224\u65ad\u6807\u51c6\u7684\u9608\u503c\u51b3\u7b56\u65b9\u6cd5\u662f\u6ca1\u6709\u5f88\u597d\u7684\u7406\u8bba\u652f\u6491\u7684\u3002\u56e0\u6b64\uff0c\u7814\u7a76\u5177\u6709\u7406\u8bba\u4fdd\u969c\u7684\u52a8\u6001\u51b3\u7b56\u65b9\u6cd5\u4e5f\u8bb8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u5347\u7f51\u7edc\u6027\u80fd\u3002\\n\\n- \u7ed3\u6784\u8bbe\u8ba1\uff08Architecture Design\uff09\\n\\n  \u591a\u5c3a\u5ea6\u7684\u52a8\u6001\u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u8bf4\u660e\u4e86\u7279\u522b\u7684\u7f51\u7edc\u8bbe\u8ba1\u5bf9\u4e8e\u63d0\u5347\u7f51\u7edc\u7684\u6548\u7387\u662f\u6709\u5f88\u5927\u5e2e\u52a9\u7684\uff1a\u5728\u94fe\u5f0f\u7684\u7ed3\u6784\u4e2d\uff0c\u6d45\u5c42\u7684feature\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u88ab\u7528\u6765\u5206\u7c7b\uff0c\u800c\u4f7f\u7528\u591a\u5c3a\u5ea6\u7684\u8bbe\u8ba1\u5c31\u80fd\u8ba9\u5206\u7c7b\u5668\u8fbe\u5230\u66f4\u597d\u5730\u6548\u679c\u3002\\n\\n- \u5728\u4e0d\u540c\u4efb\u52a1\u4e0a\u7684\u53ef\u7528\u6027\uff08Applicability on more diverse tasks\uff09\\n\\n  \u5f53\u524d\u7684\u5f88\u591a\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u90fd\u662f\u4e3a\u4e86\u5206\u7c7b\u4efb\u52a1\u800c\u8bbe\u8ba1\u7684\u3002\u867d\u7136\u5f88\u591a\u601d\u60f3\uff08\u4f8b\u5982\u65e9\u9000\u548c\u8df3\u5c42\uff09\u7406\u8bba\u4e0a\u53ef\u4ee5\u88ab\u5e94\u7528\u4e8e\u5176\u4ed6\u4efb\u52a1\uff0c\u4f46\u662f\u5927\u591a\u6570\u73b0\u5b58\u7684\u52a8\u6001\u7f51\u7edc\u8bbe\u8ba1\u5e76\u4e0d\u80fd\u50cfResNet\u3001DenseNet\u4e00\u6837\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u6bd4\u8f83\u901a\u7528\u7684\u4e3b\u5e72\u7f51\u7edc\uff0c\u7528\u4e8e\u5f88\u591a\u4e0b\u6e38\u7684\u4efb\u52a1\u3002\\n\\n- \u7406\u8bba\u548c\u5b9e\u9645\u7684\u5dee\u8ddd\uff08Gap between theoretical & practical efficiency\uff09\\n\\n  \u73b0\u5728\u7684\u4e00\u4e9b\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u53d7\u9650\u4e8e\u8ba1\u7b97\u673a\u786c\u4ef6\u6216\u662f\u8f6f\u4ef6\u5e93\u7684\u8bbe\u8ba1\uff0c\u5e76\u4e0d\u80fd\u8fbe\u5230\u7406\u8bba\u4e0a\u7684\u6700\u4f18\u6548\u679c\uff0c\u6bd4\u5982\u4e0a\u6587\u4e2d\u63d0\u5230\u7684\u4e00\u4e9b\u7a7a\u95f4\u81ea\u9002\u5e94\u7684\u8bbe\u8ba1\uff0c\u5f53\u524d\u7684\u56fe\u5f62\u5904\u7406\u5668\uff08GPU\uff09\u53ca\u5176\u8fd0\u7b97\u5e93\u7684\u8bbe\u8ba1\u5bf9\u9759\u6001\u795e\u7ecf\u7f51\u7edc\u4ee5\u53ca\u6574\u5f20\u56fe\u7247\u7684\u5377\u79ef\u91c7\u6837\u8fd0\u7b97\u4f18\u5316\u5df2\u7ecf\u5f88\u597d\u4e86\uff0c\u4f7f\u7528\u8fd9\u79cd\u8bbe\u8ba1\u53cd\u800c\u9700\u8981\u5355\u72ec\u8fdb\u884c\u7279\u6b8a\u8bbe\u8ba1\u3002\u4e00\u4e2a\u91cd\u8981\u7684\u8bae\u9898\u662f\u5982\u4f55\u8bbe\u8ba1\u51fa\u5728\u5f53\u524d\u786c\u4ef6\u6761\u4ef6\u4e0b\u6240\u5e26\u6765\u7684\u8fd0\u7b97\u6548\u7387\u63d0\u5347\u3002\\n\\n- \u9c81\u68d2\u6027\uff08Robustness\uff09\\n\\n  \u5df2\u7ecf\u6709\u5de5\u4f5c\u7814\u7a76\u4e86\u591a\u51fa\u53e3\u7f51\u7edc\u5728\u5bf9\u6297\u653b\u51fb\u65b9\u9762\u7684\u9c81\u68d2\u6027\uff0c\u4e5f\u6709\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u7f51\u7edc\uff0c\u4e0d\u4f46\u5bf9\u7f51\u7edc\u7684\u51c6\u786e\u6027\u53d1\u8d77\u653b\u51fb\uff0c\u8fd8\u5bf9\u7f51\u7edc\u7684\u6548\u7387\u53d1\u8d77\u653b\u51fb\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u7814\u7a76\u65b9\u5411\u3002\\n\\n- \u53ef\u89e3\u91ca\u6027\uff08Interpretability\uff09\\n\\n  \u52a8\u6001\u795e\u7ecf\u7f51\u7edc\u5728\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u7684\u786c\u6ce8\u610f\u529b\u673a\u5236\u548c\u4eba\u7684\u795e\u7ecf\u7cfb\u7edf\u51b3\u7b56\u8fc7\u7a0b\u4e5f\u662f\u975e\u5e38\u76f8\u4f3c\u7684\u3002\u6211\u4eec\u5728\u770b\u4e00\u5f20\u56fe\u7247\u7684\u65f6\u5019\u4e5f\u53ef\u80fd\u662f\u5148\u7c97\u7565\u5730\u770b\u4e00\u773c\uff0c\u7136\u540e\u518d\u5355\u72ec\u53bb\u770b\u6bcf\u4e2a\u5c0fPatch\uff1b\u4eba\u5728\u770b\u89c6\u9891\u7684\u65f6\u5019\u4e5f\u53ef\u80fd\u53ea\u9700\u8981\u770b\u4e00\u4e9b\u5e27\u5c31\u80fd\u5927\u6982Get\u5230\u8fd9\u4e2a\u89c6\u9891\u5728\u8bb2\u8ff0\u4ec0\u4e48\u3002"},{"id":"/[09]Feature-Pyramid-Networks-for-Object-Detection","metadata":{"permalink":"/blog/[09]Feature-Pyramid-Networks-for-Object-Detection","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[09]Feature-Pyramid-Networks-for-Object-Detection.md","source":"@site/blog/[09]Feature-Pyramid-Networks-for-Object-Detection.md","title":"Feature Pyramid Networks for Object Detection","description":"\u8fd9\u7bc7\u7b14\u8bb0\u7684\u5199\u4f5c\u8005\u662fVisualDust\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"detection","permalink":"/blog/tags/detection"},{"label":"FPN","permalink":"/blog/tags/fpn"},{"label":"backbone","permalink":"/blog/tags/backbone"},{"label":"multi-scale-learning","permalink":"/blog/tags/multi-scale-learning"}],"readingTime":10.025,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Feature Pyramid Networks for Object Detection","authors":["visualdust"],"tags":["detection","FPN","backbone","multi-scale-learning"]},"prevItem":{"title":"Dynamic Neural Networks - A Survey","permalink":"/blog/[08]Dynamic-Neural-Networks-A-Survey"},"nextItem":{"title":"A Review on Deep Learning Techniques Applied to Semantic Segmentation","permalink":"/blog/[10]Overview-Of-Semantic-Segmentation"}},"content":"### \u8fd9\u7bc7\u7b14\u8bb0\u7684\u5199\u4f5c\u8005\u662f[VisualDust](https://github.com/visualDust)\u3002\\n\\n\u539f\u8bba\u6587[Feature Pyramid Networks for Object Detection](https://arxiv.org/abs/1612.03144)\u3002\\n\\n\u8fd9\u7bc7\u8bba\u6587\u5c31\u662f\u5927\u5bb6\u719f\u77e5\u7684FPN\u4e86\u3002FPN\u662f**\u6bd4\u8f83\u65e9\u671f\u7684\u4e00\u4efd\u5de5\u4f5c**\uff08\u8bf7\u6ce8\u610f\uff0c\u8fd9\u7bc7\u8bba\u6587\u53ea\u662f\u591a\u5c3a\u5ea6\u7279\u5f81\u878d\u5408\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u4e0d\u8fc7\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u7684\u6bd4\u8f83\u65e9\uff08CVPR2017\uff09\uff0c\u5728\u5f53\u65f6\u770b\u6765\u662f\u975e\u5e38\u5148\u8fdb\u7684\uff09\uff0c\u5728\u5f53\u65f6\u5177\u6709\u5f88\u591a\u4eae\u70b9\uff1aFPN\u4e3b\u8981\u89e3\u51b3\u7684\u662f\u7269\u4f53\u68c0\u6d4b\u4e2d\u7684\u591a\u5c3a\u5ea6\u95ee\u9898\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u7f51\u7edc\u8fde\u63a5\u6539\u53d8\uff0c\u5728\u57fa\u672c\u4e0d\u589e\u52a0\u539f\u6709\u6a21\u578b\u8ba1\u7b97\u91cf\u60c5\u51b5\u4e0b\uff0c\u5927\u5e45\u5ea6\u63d0\u5347\u4e86\u5c0f\u7269\u4f53\u68c0\u6d4b\u7684\u6027\u80fd\u3002\\n\\n## Abstract\uff08\u6458\u8981\uff09\\n\\n> Feature pyramids are a basic component in recognition systems for detecting objects at different scales. But recent deep learning object detectors have avoided pyramid representations, in part because they are compute and memory intensive. In this paper, we exploit the inherent multi-scale, pyramidal hierarchy of deep convolutional networks to construct feature pyramids with marginal extra cost. A top-down architecture with lateral connections is developed for building high-level semantic feature maps at all scales. This architecture, called a Feature Pyramid Network (FPN), shows significant improvement as a generic feature extractor in several applications. Using FPN in a basic Faster R-CNN system, our method achieves state-of-the-art single-model results on the COCO detection benchmark without bells and whistles, surpassing all existing single-model entries including those from the COCO 2016 challenge winners. In addition, our method can run at 5 FPS on a GPU and thus is a practical and accurate solution to multi-scale object detection. Code will be made publicly available.\\n\\n\u8fd9\u7bc7\u8bba\u6587\u5bf9\u4ee5\u540e\u7684\u8bb8\u591a\u7f51\u7edc\u8bbe\u8ba1\u4ea7\u751f\u4e86\u8f83\u5927\u7684\u5f71\u54cd\uff0c\u63a8\u8350\u4f60\u9605\u8bfb[\u539f\u6587](https://arxiv.org/abs/1612.03144)\u3002\u8fd9\u91cc\u53ea\u662f\u5bf9\u8fd9\u7bc7\u8bba\u6587\u7684\u7c97\u6d45\u9605\u8bfb\u7b14\u8bb0\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## \u4ecb\u7ecd\uff08Introduction\uff09\\n\\n\u8be5\u8bba\u6587\u63d0\u51fa\uff0c\u7279\u5f81\u91d1\u5b57\u5854\u662f\u8bc6\u522b\u7cfb\u7edf\u4e2d\u7528\u4e8e\u68c0\u6d4b\u4e0d\u540c\u6bd4\u4f8b\u7269\u4f53\u7684\u57fa\u672c\u7ec4\u4ef6\uff0c\u751a\u81f3\u53f7\u79f0\u624b\u5de5\u7279\u5f81\u8bbe\u8ba1\u65f6\u4ee3\u7684\u4e07\u91d1\u6cb9\uff1a\u6bd4\u5982\u5728OpenCV\u5e93\u7684\u7279\u5f81\u5339\u914dCascade\u5206\u7c7b\u5668\u7528\u4e8e\u4eba\u8138\u8bc6\u522b\u4e2d\u4f7f\u7528\u7279\u5f81\u91d1\u5b57\u5854\u6a21\u578b+AdaBoost\u63d0\u53d6\u4e0d\u540c\u5c3a\u5ea6\u7279\u5f81\u7ecf\u884c\u5206\u7c7b\u7b49\u3002\\n\\n\u539f\u8bba\u6587\u8fd9\u6837\u5f62\u5bb9\u591a\u5c3a\u5ea6\u7684\u597d\u5904\uff1a\\n\\n> The principle advantage of featurizing each level of an image pyramid is that it produces a multi-scale feature representation in which all levels are semantically strong, including the high-resolution levels.\\n\\n\u5728\u8fdb\u5165\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u4e4b\u540e\uff0c\u5982\u4f55\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u66f4\u597d\u5730\u5229\u7528\u591a\u5c3a\u5ea6\u79f0\u4e3a\u4e86\u4e00\u9879\u6311\u6218\u3002\u4e00\u65b9\u9762\uff0c\u4ec5\u4f7f\u7528\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u8fdb\u884c\u68c0\u6d4b\u4f1a\u5bfc\u81f4\u5c0f\u76ee\u6807\u7684\u6f0f\u68c0\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u6bcf\u5c42\u4e0d\u540c\u7ea7\u522b\u7684\u7279\u5f81\u56fe\u4e0a\u8fdb\u884c\u9884\u6d4b\u4ea7\u751f\u4e86\u591a\u4f59\u7684\u6027\u80fd\u6d88\u8017\uff0c\u5e76\u4e14\u6548\u679c\u5e76\u6ca1\u6709\u60f3\u8c61\u7684\u90a3\u4e48\u597d\u3002\u8fd9\u7bc7\u8bba\u6587\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u3002\\n\\n---\\n\\n## \u76f8\u5173\u5de5\u4f5c\uff08Related works\uff09\\n\\n- \u624b\u5de5\u8bbe\u8ba1\u7684\u7279\u5f81\u548c\u65e9\u671f\u795e\u7ecf\u7f51\u7edc\uff08Hand-engineered features and early neural networks\uff09\\n- \u666e\u901a\u7684\u6df1\u5ea6\u5377\u79ef\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\uff08Deep ConvNet object detectors\uff09\\n- \u878d\u5408\u4e86\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u7684\u7279\u5f81\u91d1\u5b57\u5854\u6a21\u578b\uff08Methods using multiple layers\uff09\\n\\n![image-20210512231141905](./src/Feature-Pyramid-Networks-for-Object-Detection/image-20210512231141905.png)\\n\\n\u4e0a\u56fe\u4e3a\u539f\u8bba\u6587\u4e2d\u51fa\u73b0\u7684\u793a\u610f\u56fe\u3002\u5176\u4e2d\uff1a\\n\\n- (a)\u662f\u624b\u5de5\u8bbe\u8ba1\u7279\u5f81\u63cf\u8ff0\u65f6\u4ee3\u7684\u5e38\u89c1\u6a21\u578b\uff0c\u5373\u5bf9\u4e0d\u540c\u5c3a\u5bf8\u7684\u56fe\u7247\u63d0\u53d6\u7279\u5f81\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u5c3a\u5ea6\u76ee\u6807\u7684\u68c0\u6d4b\u8981\u6c42\uff0c\u63d0\u9ad8\u6a21\u578b\u6027\u80fd\u3002\\n\\n- (b)\u662f\u666e\u901a\u7684\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u6a21\u5f0f\uff0c\u901a\u8fc7\u4e0b\u91c7\u6837\u6269\u5927\u611f\u53d7\u91ce\uff0c\u63d0\u53d6\u8bed\u4e49\u4fe1\u606f\u3002\\n\\n- (c)\u662f\u878d\u5408\u4e86\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u7684\u7279\u5f81\u91d1\u5b57\u5854\u6a21\u578b\u3002\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u5728\u5377\u79ef\u8fc7\u7a0b\u4e2d\u6bcf\u5c42\u90fd\u4f1a\u4ea7\u751f\u4e0d\u540c\u5c3a\u5ea6\u7684\u7279\u5f81\u56fe\uff0c\u6240\u4ee5\u5176\u672c\u8eab\u5c31\u5929\u7136\u5177\u6709\u91d1\u5b57\u5854\u7ed3\u6784\u3002\u622a\u6b62\u5230\u8fd9\u7bc7\u8bba\u6587\u7684\u5199\u4f5c\u65f6\u95f4\u4e3a\u6b62\uff0c\u6709\u5f88\u591a\u5728COCO\u548cImageNet\u4e0a\u8868\u73b0\u4f18\u79c0\u7684\u7f51\u7edc\u90fd\u662fpyramid representations\u7684\uff0c\u5373\u8ba9\u4e0d\u540c\u5c42\u9884\u6d4b\u4e0d\u540c\u5c3a\u5ea6\u7684\u7269\u4f53\u3002\u4f46\u662f\u5176\u5bf9\u5c0f\u76ee\u6807\u7684\u68c0\u6d4b\u6548\u679c\u4ecd\u7136\u4e0d\u591f\u597d\uff0c\u539f\u56e0\u5728\u4e8e\u4f4e\u5c3a\u5ea6\u7684\u7279\u5f81\u56fe\u5305\u542b\u7684\u8bed\u4e49\u4fe1\u606f\u8fd8\u4e0d\u591f\u6df1\u523b\uff08\u8bf4\u4fd7\u8bdd\u5c31\u662f\u6b20\u5377\u4e86\uff09\uff0c\u539f\u6587\u662f\u8fd9\u6837\u8bf4\u7684\uff1a\\n\\n  > This in-network feature hierarchy produces feature maps of different spatial resolutions, but introduces large semantic gaps caused by different depths. The high-resolution maps have low-level features that harm their representational capacity for object recognition.\\n\\n  SSD\u5c31\u662f\u7b2c\u4e00\u6279\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u4e4b\u4e00\u3002\u4e0d\u8fc7SSD\u4e3a\u4e86\u907f\u514d\u4f7f\u7528\u8bed\u4e49\u4fe1\u606f\u4e0d\u8db3\u7684\u7279\u5f81\u56fe\uff0cSSD\u5e76\u6ca1\u80fd\u5f88\u597d\u5730\u590d\u7528\u5df2\u6709\u7684\u7279\u5f81\u56fe\uff0c\u8fd9\u8ba9\u5b83\u5bf9\u5c0f\u76ee\u6807\u7684\u68c0\u6d4b\u6548\u679c\u4ecd\u7136\u4e0d\u591f\u597d\u3002\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u6df1\u5ea6\u5f80\u5f80\u548c\u6bcf\u4e00\u6b65\u7684\u5377\u79ef\u7684\u6b65\u957f\u53c2\u6570\u662f\u4e00\u4e2a\u5f88\u77db\u76fe\u7684\u4e1c\u897f\u3002\u5c55\u5f00\u6765\u8bf4\uff0c\u7f51\u7edc\u66f4\u6df1\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u5f97\u4e0d\u901a\u8fc7\u5c06\u6b65\u957f\u6539\u5927\u4ee5\u5e73\u8861\u66f4\u6df1\u7684\u7f51\u7edc\u5e26\u6765\u7684\u53c2\u6570\u91cf\u4e0a\u6da8\u95ee\u9898\u3002\u4f46\u540c\u65f6\u8fd9\u5bfc\u81f4\u4e86\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u6b65\u957f\u5f88\u5927\u7684\u65f6\u5019\uff0c\u751a\u81f3\u53ef\u4ee5\u5927\u8fc7\u8f93\u5165\u56fe\u50cf\u4e2d\u4e00\u4e9b\u7269\u4f53\u7684\u5927\u5c0f\uff0c\u4f7f\u5f97\u4e00\u4e9b\u76ee\u6807\u4e22\u5931\u3002\\n\\n- (d)\u662f\u8fd9\u7bc7\u8bba\u6587\u8981\u63d0\u51fa\u7684FPN\u7f51\u7edc\u7ed3\u6784\u3002\u8be5\u7f51\u7edc\u5728\u8bbe\u8ba1\u65f6\u7684\u4e00\u4e2a\u76ee\u6807\u5c31\u662f\u907f\u514d(c)\u4e2d\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u8ba9\u6bcf\u4e00\u4e2a\u5c3a\u5ea6\u7684\u7279\u5f81\u56fe\u90fd\u4f1a\u5305\u542b\u8db3\u591f\u4e30\u5bcc\u7684\u8bed\u4e49\u4fe1\u606f\u3002\\n\\n---\\n\\n## \u7279\u5f81\u91d1\u5b57\u5854\u7f51\u7edc\uff08Feature Pyramid Networks\uff09\\n\\n\u539f\u8bba\u6587\u8fd9\u6837\u63cf\u8ff0\u8fd9\u7bc7\u8bba\u6587\u7684\u76ee\u7684\uff1a\\n\\n> Our goal is to leverage a ConvNet\u2019s pyramidal feature hierarchy, which has semantics from low to high levels, and build a feature pyramid with high-level semantics throughout.\\n\\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u7bc7\u8bba\u6587\u7684\u76ee\u7684\u5c31\u662f\u5229\u7528\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u5929\u7136\u5b58\u5728\u7684\u91d1\u5b57\u5854\u7279\u5f81\u5c42\u6b21\u7ed3\u6784\uff1a\u8be5\u5c42\u6b21\u7ed3\u6784\u5229\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u9010\u5c42\u7684\u5377\u79ef\u83b7\u5f97\u4e30\u5bcc\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u5e76\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u6784\u5efa\u5177\u6709\u9ad8\u5c42\u8bed\u4e49\u7684\u7279\u5f81\u91d1\u5b57\u5854\u3002\\n\\n\u8fd9\u7bc7\u8bba\u6587\u7684\u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u4e3b\u8981\u5305\u542b\u4e86\u4e24\u4e2a\u90e8\u5206\uff1a\\n\\n- \u81ea\u5e95\u5411\u4e0a\uff08Bottom-up pathway\uff09\\n- \u81ea\u9876\u5411\u4e0b\uff08Top-down pathway and lateral connections\uff09\\n\\n\u5728\u63a5\u4e0b\u6765\u7684\u8bf4\u660e\u4e2d\uff0c\u4f1a\u7ecf\u5e38\u4f7f\u7528`stage`\u7684\u6982\u5ff5\u3002\u5728\u8fd9\u91cc\u8fdb\u884c\u63d0\u524d\u5b9a\u4e49\u8bf4\u660e\uff1a\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u7f51\u7edc\u4e2d\u8f93\u51fa\u7684feature map\u5927\u5c0f\u76f8\u540c\u7684\u5c42\u88ab\u79f0\u4e3a\u662f\u540c\u4e2astage\u7684\u3002\u4e0d\u540cstage\u4f1a\u4ea7\u751f\u4e0d\u540c\u5927\u5c0f\u7684\u7279\u5f81\u56fe\uff0c\u8fd9\u7bc7\u8bba\u6587\u4e3a\u6bcf\u4e2astage\u5b9a\u4e49\u4e00\u4e2a\u91d1\u5b57\u5854\u5c42\u7ea7\uff08pyramid level\uff09\u3002\\n\\n![image-20210513105442041](./src/Feature-Pyramid-Networks-for-Object-Detection/image-20210513105442041.png)\\n\\n\u4f8b\u5982\u4e0a\u56fe\u662fVGG-16\u7684\u7f51\u7edc\u7ed3\u6784\u56fe\uff0c\u56fe\u4e2d\u7528\u7d2b\u8272\u7684\u6587\u5b57\u6807\u51fa\u4e865\u4e2a\u4e0d\u540c\u7684stage\u3002\u5f53\u7136\uff0c\u4e0d\u6328\u5728\u4e00\u8d77\u4f46\u662f\u8f93\u51fa\u7279\u5f81\u56fe\u5927\u5c0f\u76f8\u540c\u7684\u5c42\u4e5f\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2astage\u7684\u3002\\n\\n### \u81ea\u5e95\u5411\u4e0a\uff08Bottom-up pathway\uff09\\n\\n\u81ea\u5e95\u5411\u4e0a\u5c31\u662f\u666e\u901a\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u524d\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u63d0\u53ca\u7684\u91d1\u5b57\u5854\uff08pyramid\uff09\u7279\u5f81\uff0c\u8fd9\u7bc7\u8bba\u6587\u9009\u62e9\u6bcf\u4e2astage\u6700\u540e\u4e00\u5c42\u7684\u8f93\u51fa\u4f5c\u4e3a\u4e00\u4e2a\u7279\u5f81\u56fe\uff0c\u8fd9\u4e2a\u9009\u62e9\u542c\u4e0a\u53bb\u5f88\u5408\u7406\uff0c\u56e0\u4e3a\u8d8a\u4e0a\u5c42\uff08\u6bcf\u4e2astage\u7684\u6700\u540e\u4e00\u4e2a\u5c42\uff09\u7684\u7279\u5f81\u5c31\u5305\u542b\u66f4\u591a\u7684\u8bed\u4e49\u4fe1\u606f\u3002\\n\\n![image-20210513105825996](./src/Feature-Pyramid-Networks-for-Object-Detection/image-20210513105825996.png)\\n\\n\u4f8b\u5982\uff0c\u5728\u4e0a\u56fe\u4e2d\uff0c\u8fd9\u7bc7\u8bba\u6587\u7684\u65b9\u6cd5\u9009\u62e9\u53f3\u4fa7\u7684\u7279\u5f81\u56fe\u8f93\u51fa\u4f5c\u4e3a\u4e00\u4e2astage\u7684\u7279\u5f81\u56fe\u8f93\u51fa\u800c\u4e0d\u662f\u5de6\u4fa7\u7684\u3002\\n\\n### \u81ea\u9876\u5411\u4e0b\uff08Top-down pathway and lateral connections\uff09\\n\\n\u81ea\u9876\u5411\u4e0b\u7684\u7ed3\u6784\u5728\u76f4\u89c2\u611f\u53d7\u4e0a\u662f\u548c\u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u4e0b\u91c7\u6837\u7684\u8fc7\u7a0b\u76f8\u53cd\u7684\uff1a\u5b83\u5c06\u9ad8\u5c42stage\u8f93\u51fa\u7684\u7a7a\u95f4\u4fe1\u606f\u5f88\u7c97\u52a3\uff08\u6bd5\u7adf\u4e4b\u524d\u4e00\u76f4\u5728\u4e0b\u91c7\u6837...\uff09\u4f46\u662f\u8bed\u4e49\u4fe1\u606f\u5f88\u4e30\u5bcc\u7684\u7279\u5f81\u56fe\u8fdb\u884c\u4e0d\u65ad\u4e0a\u91c7\u6837\uff0c\u4e0a\u91c7\u6837\u5230\u548c\u5176\u5bf9\u5e94\u7684stage\u7684\u4e0a\u4e00\u4e2astage\u7684\u7279\u5f81\u56fe\u5927\u5c0f\uff0c\u518d\u901a\u8fc7\u56fe\u4e2d\u8fd9\u79cd\u4fa7\u8fb9\u7684\u8fde\u63a5\uff08lateral connections\uff09\uff0c\u4f7f\u7528\u4f4e\u4e00\u7ea7stage\u7684\u7279\u5f81\u56fe\u6765\u589e\u5f3a\u5b83\u3002\\n\\n![image-20210513110511093](./src/Feature-Pyramid-Networks-for-Object-Detection/image-20210513110511093.png)\\n\\n\u4e0a\u56fe\u662f\u8bba\u6587\u4e2d\u4fa7\u8fb9\u8fde\u63a5\uff08lateral connections\uff09\u7684\u65b9\u5f0f\u3002\u6bcf\u4e2a\u4fa7\u8fb9\u8fde\u63a5\u5c06\u540c\u4e2astage\u7684\u81ea\u5e95\u5411\u4e0a\u7684\u7279\u5f81\u56fe\u548c\u81ea\u9876\u5411\u4e0b\u7684\u7279\u5f81\u56fe\u76f8\u52a0\u3002\u6ce8\u610f\uff0c\u8be5\u8bba\u6587\u4e2d\u7279\u6307\u4e86\u6bcf\u4e24\u4e2astage\u4e4b\u95f4\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u4e4b\u5dee\u662f2\u500d\uff0c\u4e5f\u5c31\u662f\u4e0b\u91c7\u6837\u7387\u662f2\u500d\u3002\u6240\u4ee5\u4e0a\u56fe\u7684\u793a\u610f\u4e2d\u9760\u8fd1\u9876\u5c42\u7684\u7279\u5f81\u56fe\u7ecf\u8fc72\u500d\u4e0a\u91c7\u6837\u540e\u4f7f\u7528\u4fa7\u8fb9\u8fde\u63a5\u548c\u4e0a\u4e00\u7ea7\u7279\u5f81\u56fe\u76f8\u52a0\u7ec4\u6210\u589e\u5f3a\u540e\u7684\u65b0\u7279\u5f81\uff1b\u6280\u672f\u4e0a\uff0c\u5728\u4fa7\u8fb9\u8fde\u63a5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u7bc7\u8bba\u6587\u7684\u65b9\u6cd5\u4f7f\u7528$1\\\\times 1$\u5377\u79ef\u7684\u65b9\u5f0f\u4f7f\u9700\u8981\u76f8\u52a0\u7684\u7279\u5f81\u56fe\u901a\u9053\u6570\u4fdd\u6301\u4e00\u81f4\u3002\\n\\n---\\n\\n## \u5e94\u7528\uff08Applications\uff09\\n\\n\u6709\u7a7a\u5c31\u5199\u3002"},{"id":"/[10]Overview-Of-Semantic-Segmentation","metadata":{"permalink":"/blog/[10]Overview-Of-Semantic-Segmentation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[10]Overview-Of-Semantic-Segmentation.md","source":"@site/blog/[10]Overview-Of-Semantic-Segmentation.md","title":"A Review on Deep Learning Techniques Applied to Semantic Segmentation","description":"\u8fd9\u662f\u4e00\u7bc7\u5173\u4e8e\u7efc\u8ff0\u8bba\u6587\u7684\u89e3\u8bfb\u3002\u539f\u8bba\u6587\uff08A Review on Deep Learning Techniques Applied to Semantic Segmentation\uff09","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"survey","permalink":"/blog/tags/survey"},{"label":"segmentation","permalink":"/blog/tags/segmentation"}],"readingTime":14.67,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"A Review on Deep Learning Techniques Applied to Semantic Segmentation","authors":["visualdust"],"tags":["survey","segmentation"]},"prevItem":{"title":"Feature Pyramid Networks for Object Detection","permalink":"/blog/[09]Feature-Pyramid-Networks-for-Object-Detection"},"nextItem":{"title":"MobileNetV2 - Inverted Residuals and Linear Bottlenecks","permalink":"/blog/[12]MobileNetV2-Inverted-Residuals-and-Linear-bottleneck"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u5173\u4e8e\u7efc\u8ff0\u8bba\u6587\u7684\u89e3\u8bfb\u3002[\u539f\u8bba\u6587\uff08A Review on Deep Learning Techniques Applied to Semantic Segmentation\uff09](https://arxiv.org/pdf/1704.06857.pdf)\\n\\n\u6458\u8981\uff1a\\n\\n> Image semantic segmentation is more and more being of interest for computer vision and machine learning researchers. Many applications on the rise need accurate and efficient segmentation mechanisms: autonomous driving, indoor navigation, and even virtual or augmented reality systems to name a few. This demand coincides with the rise of deep learning approaches in almost every field or application target related to computer vision, including semantic segmentation or scene understanding. This paper provides a review on deep learning methods for semantic segmentation applied to various application areas. Firstly, we describe the terminology of this field as well as mandatory background concepts. Next, the main datasets and challenges are exposed to help researchers decide which are the ones that best suit their needs and their targets. Then, existing methods are reviewed, highlighting their contributions and their significance in the field. Finally, quantitative results are given for the described methods and the datasets in which they were evaluated, following up with a discussion of the results. At last, we point out a set of promising future works and draw our own conclusions about the state of the art of semantic segmentation using deep learning techniques.\\n\\n\u6211\u770b\u4e86\u8fd9\u7bc7\u7efc\u8ff0\u53d7\u76ca\u532a\u6d45\uff0c\u5982\u679c\u6709\u65f6\u95f4\u7684\u8bdd\u8bf7\u9605\u8bfb[\u539f\u4f5c](https://arxiv.org/pdf/1704.06857.pdf)\u3002\u672c\u6587\u53ea\u662f\u5bf9\u539f\u4f5c\u9605\u8bfb\u7684\u7c97\u6d45\u7b14\u8bb0\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4ecb\u7ecd\u5206\u5272\\n\\n\u5bf9\u56fe\u50cf\u8fdb\u884c\u5206\u5272\u4e3b\u8981\u6709\uff1a\u8bed\u4e49\u5206\u5272\uff08Semantic segmentation\uff09\u548c\u5b9e\u4f8b\u5206\u5272\uff08Instance segmentation\uff09\u3002\u5b83\u4eec\u7684\u533a\u522b\u4e00\u76ee\u4e86\u7136\uff1a\\n\\n![image-20210427154733807](./src/overview-of-semantic-segmentation/image-20210427154733807.png)\\n\\n\u5de6\u56fe\uff1a\u539f\u56fe\uff1b\u4e2d\u56fe\uff1a\u8bed\u4e49\u5206\u5272\uff1b\u53f3\u56fe\uff1a\u5b9e\u4f8b\u5206\u5272\u3002\\n\\n\u5f88\u660e\u663e\uff0c\u8bed\u4e49\u5206\u5272\u5e0c\u671b\u5c06\u4e0d\u540c\u7c7b\u522b\u7684\u7269\u4f53\u6240\u5728\u4f4d\u7f6e\u7684\u50cf\u7d20\u5206\u5f00\u6765\uff0c\u4f46\u662f\u5bf9\u4e8e\u76f8\u540c\u7c7b\u522b\u7684\u4e0d\u540c\u7269\u4f53\u5e76\u4e0d\u654f\u611f\uff1b\u800c\u5b9e\u4f8b\u5206\u5272\u4e0d\u4f46\u9700\u8981\u5206\u5f00\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u50cf\u7d20\u5c5e\u4e8e\u54ea\u4e00\u7c7b\uff0c\u8fd8\u8981\u5206\u51fa\u5b83\u5177\u4f53\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5bf9\u8c61\u3002\\n\\n\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u56fe\u50cf\u53ea\u4e0d\u8fc7\u662f\u8bb8\u591a\u50cf\u7d20\u7684\u96c6\u5408\u3002\u56fe\u50cf\u5206\u5272\u5206\u7c7b\u662f\u5bf9\u56fe\u50cf\u4e2d\u5c5e\u4e8e\u7279\u5b9a\u7c7b\u522b\u7684\u50cf\u7d20\u8fdb\u884c\u5206\u7c7b\u7684\u8fc7\u7a0b\uff0c\u56e0\u6b64**\u56fe\u50cf\u5206\u5272\u53ef\u4ee5\u8ba4\u4e3a\u662f\u6309\u50cf\u7d20\u8fdb\u884c\u5206\u7c7b\u7684\u95ee\u9898**\u3002\\n\\n\u5982\u679c\u4f60\u5bf9\u79bb\u6563\u6570\u5b66\u4ee5\u53casoftmax\u5f88\u654f\u611f\u7684\u5316\uff0c\u80af\u5b9a\u7b2c\u4e00\u65f6\u95f4\u4f1a\u4ea7\u751f\u8fd9\u6837\u7684\u8054\u60f3\uff1a\\n\\n![image-20210427222245438](./src/overview-of-semantic-segmentation/image-20210427222245438.png)\\n\\n\u8fd9\u5f20\u56fe\u5b9e\u9645\u4e0a\u662f\u8fd9\u6837\u7684\uff1a\\n\\n![image-20210427222340602](./src/overview-of-semantic-segmentation/image-20210427222340602.png)\\n\\n\u5f53\u7136\uff0c\u5bf9\u4e8e\u5b9e\u9645\u5e94\u7528\u4e2d\u901a\u9053\u6570\u91cf\u7684\u5177\u4f53\u6570\u5b57\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9\u3002\u4f8b\u5982\uff0c\u5728\u524d\u666f\u5206\u5272\u4e2d\uff0c\u4ec5\u9700\u5206\u5272\u51fa\u524d\u666f\u548c\u80cc\u666f\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4e00\u4e2a\u901a\u9053\u3002\u800c\u5168\u666f\u5206\u5272\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u7c7bone-hot\u7f16\u7801\uff0c\u5219\u9700\u8981\u6709\u548c\u5bf9\u8c61\u6570\u76ee+1\u4e00\u6837\u591a\u7684\u901a\u9053\u6570\u3002\\n\\n## \u5206\u5272\u7684\u6280\u672f\\n\\n\u5728\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u6d41\u884c\u4e4b\u524d\uff0cTextonForest\u548c\u57fa\u4e8e\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u7b49\u8bed\u4e49\u5206\u5272\u65b9\u6cd5\u662f\u7528\u5f97\u6bd4\u8f83\u591a\u7684\u65b9\u6cd5\u3002\u4f46\u662f\u672c\u6587\u7ae0\u7684\u80cc\u666f\u662f\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\uff0c\u6240\u4ee5\u4e0d\u505a\u8fc7\u591a\u8ba8\u8bba\u3002\\n\\n\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u5728\u5404\u4e2a\u8ba1\u7b97\u673a\u9886\u57df\u83b7\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u5176\u89e3\u51b3\u8bed\u4e49\u5206\u5272\u95ee\u9898\u53ef\u4ee5\u6982\u62ec\u4e3a\u51e0\u79cd\u601d\u8def\uff1a\\n\\n- \u5757\u5206\u7c7b\uff08Patch classification\uff09\\n- \u5168\u5377\u79ef\u65b9\u6cd5\uff08\u57fa\u4e8eFCN\uff09\\n- \u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ed3\u6784\uff08encoder-decoder\uff0c\u672c\u8d28\u57fa\u4e8eFCN\uff09\\n- \u8de8\u5c42\u8fde\u63a5\u7684encoder-decoder\u7ed3\u6784\\n\\n### \u5757\u5206\u7c7b\uff08Patch classification\uff09\\n\\n\u5757\u5206\u7c7b\u7b97\u5f97\u4e0a\u662f\u4e00\u7c7b\u6700\u53e4\u8001\u7684\u65b9\u6cd5\u3002\\n\\n\u5982\u5176\u540d\uff0c\u628a\u56fe\u50cf\u5206\u6210\u5c0f\u5757\u585e\u7ed9\u7f51\u7edc\u8fdb\u884c\u5206\u7c7b\u3002\u5206\u6210\u6307\u5b9a\u5927\u5c0f\u7684\u5c0f\u5757\u662f\u56e0\u4e3a\u5168\u8fde\u63a5\u7f51\u7edc\u53ea\u63a5\u53d7\u6307\u5b9a\u5927\u5c0f\u7684\u8f93\u5165\u3002\u8fd9\u5927\u6982\u662f\u6700\u521d\u7684\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u5206\u5272\u65b9\u6cd5\u4e86\uff08\u5427\uff09\u3002\\n\\n### \u5168\u5377\u79ef\u65b9\u6cd5\uff08\u57fa\u4e8eFCN\uff09\\n\\n\u5168\u5377\u79ef\u65b9\u6cd5\u5728\u5757\u5206\u7c7b\u4e4b\u540e\uff0c\u4f18\u52bf\u662f\u4f7f\u7528\u5168\u5377\u79ef\u4ee3\u66ff\u4e86\u5757\u5206\u7c7b\u4e2d\u7684\u5168\u8fde\u63a5\u3002\\n\\n\u7528\u4e8e\u4ee3\u66ff\u5168\u8fde\u63a5\u7684\u5168\u5377\u79ef\u65b9\u6cd5\u9664\u4e86\u5728\u5176\u4ed6\u89c6\u89c9\u65b9\u6cd5\u91cc\u5f88\u51fa\u540d\uff0c\u4e5f\u5f88\u5feb\u7528\u5230\u4e86\u5206\u5272\u7b97\u6cd5\u4e2d\u30022014\u5e74\uff0c\u5168\u5377\u79ef\u7f51\u7edc\uff08FCN\uff09\u6a2a\u7a7a\u51fa\u4e16\uff0cFCN\u5c06\u7f51\u7edc\u5168\u8fde\u63a5\u5c42\u7528\u5377\u79ef\u53d6\u4ee3\uff0c\u56e0\u6b64\u4f7f\u4efb\u610f\u56fe\u50cf\u5927\u5c0f\u7684\u8f93\u5165\u90fd\u53d8\u6210\u53ef\u80fd\uff0c\u800c\u4e14\u901f\u5ea6\u6bd4Patch classification\u65b9\u6cd5\u5feb\u5f88\u591a\u3002\uff08\u6211\u7528\u7b80\u5355\u5206\u7c7b\u6a21\u578b\u5b9e\u6d4b\u4e86\u4e00\u4e0b\u4e5f\u662f\uff0c\u5168\u8fde\u63a5\u771f\u7684\u662f\u592a\u70c2\u4e86\uff0c\u53c8\u6162\u53c8\u91cd\uff0c\u4f46\u662f\u4f5c\u4e3a\u591a\u5c42\u611f\u77e5\u673a\u5230\u5168\u5377\u79ef\u7f51\u8def\u4e2d\u95f4\u7684\u8fc7\u5ea6\u7ec4\u4ef6\uff0c\u8fd8\u662f\u529f\u4e0d\u53ef\u6ca1\u7684\u3002\uff09\\n\\n#### \u63d2\u503c\u6cd5\u5b9e\u73b0\u7684\u4e0a\u91c7\u6837\\n\\n\u5728\u5168\u5377\u79ef\u65b9\u6cd5\u4e2d\uff0c\u4e3a\u4e86\u4f7f\u8f93\u51fa\u548c\u8f93\u5165\u5927\u5c0f\u76f8\u540c\uff0c\u5728\u5377\u79ef\u5bfc\u81f4\u7279\u5f81\u56fe\u53d8\u5c0f\u540e\u8fd8\u9700\u8981\u7ecf\u8fc7\u4e0a\u91c7\u6837\u4f7f\u7279\u5f81\u56fe\u53d8\u4e3a\u539f\u6765\u5927\u5c0f\u3002\\n\\n![deconv01](./src/overview-of-semantic-segmentation/deconv01.gif)\\n\\n\u4e0a\u56fe\uff1a\u4e00\u79cd\u53cd\u5377\u79ef\u7684\u793a\u610f\u3002\u5176\u4e2d\u84dd\u8272\u8f83\u5c0f\u7684\u7279\u5f81\u56fe\u662f\u8f93\u5165\uff0c\u901a\u8fc7\u5728\u5b83\u5468\u56f4\u586b\u5145\uff0c\u4f7f\u5176\u53d8\u4e3a\u8f83\u5927\u7684\u7279\u5f81\u56fe\u540e\uff0c\u518d\u8fdb\u884c\u5377\u79ef\u3002\u5f97\u5230\u7684\u7ed3\u679c\u662f\u7eff\u8272\u7684\u7279\u5f81\u56fe\u3002\\n\\n![deconv02](./src/overview-of-semantic-segmentation/deconv02.gif)\\n\\n\u4e0a\u56fe\uff1a\u53e6\u4e00\u79cd\u53cd\u5377\u79ef\u7684\u793a\u610f\u3002\u5176\u4e2d\u84dd\u8272\u8f83\u5c0f\u7684\u7279\u5f81\u56fe\u7ecf\u8fc7\u67d0\u79cd\u586b\u5145\u65b9\u6cd5\u8fdb\u884c\u586b\u5145\uff0c\u53d8\u4e3a\u8f83\u5927\u7684\u7279\u5f81\u56fe\u540e\u518d\u8fdb\u884c\u5377\u79ef\u3002\\n\\n\u53cd\u5377\u79ef\u7684\u5e38\u89c1\u601d\u8def\u662f\u901a\u8fc7\u4e00\u4e9b\u586b\u5145\u7684\u65b9\u6cd5\u5c06\u8f83\u5c0f\u7684\u7279\u5f81\u56fe\u53d8\u5927\uff0c\u7136\u540e\u901a\u8fc7\u5377\u79ef\u83b7\u5f97\u6bd4\u539f\u6765\u7684\u5c0f\u7279\u5f81\u56fe\u66f4\u5927\u7684\u7279\u5f81\u56fe\u3002\u8f83\u4e3a\u5e38\u7528\u7684\u586b\u5145\u65b9\u6cd5\u662f\u63d2\u503c\u6cd5\u3002\\n\\n\u63d2\u503c\u7684\u65b9\u6cd5\u4e3b\u8981\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e00\u7c7b\u662f\u7ebf\u6027\u56fe\u50cf\u63d2\u503c\u65b9\u6cd5\uff1a\\n\\n- \u6700\u8fd1\u90bb\u63d2\u503c(Nearest neighbor interpolation)\\n- \u53cc\u7ebf\u6027\u63d2\u503c(Bi-Linear interpolation)\\n- \u53cc\u7acb\u65b9\u63d2\u503c(Bi-Cubic interpolation)\\n\\n\u53e6\u4e00\u7c7b\u662f\u975e\u7ebf\u6027\u56fe\u50cf\u63d2\u503c\u65b9\u6cd5\uff1a\\n\\n- \u57fa\u4e8e\u5c0f\u6ce2\u53d8\u6362\u7684\u63d2\u503c\u7b97\u6cd5\\n- \u57fa\u4e8e\u8fb9\u7f18\u4fe1\u606f\u7684\u63d2\u503c\u7b97\u6cd5\u3002\\n\\n\u4ee5\u4e0a\u7684\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u4e00\u4e9b\u63d2\u503c\u65b9\u6cd5\uff0c\u9700\u8981\u6211\u4eec\u5728\u51b3\u5b9a\u7f51\u7edc\u7ed3\u6784\u7684\u65f6\u5019\u8fdb\u884c\u6311\u9009\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5c31\u50cf\u662f\u4eba\u5de5\u7279\u5f81\u5de5\u7a0b\u4e00\u6837\uff0c\u5e76\u6ca1\u6709\u7ed9\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u7684\u4f59\u5730\uff0c\u795e\u7ecf\u7f51\u7edc\u4e0d\u80fd\u81ea\u5df1\u5b66\u4e60\u5982\u4f55\u66f4\u597d\u5730\u8fdb\u884c\u63d2\u503c\uff0c\u8fd9\u4e2a\u663e\u7136\u662f\u4e0d\u591f\u7406\u60f3\u7684\u3002\\n\\n#### \u8f6c\u7f6e\u5377\u79ef\u5b9e\u73b0\u7684\u4e0a\u91c7\u6837\\n\\n\u5728\u4e0a\u91c7\u6837\u7684\u65b9\u6cd5\u4e2d\uff0c\u6bd4\u8f83\u51fa\u540d\u7684\u662f\u8f6c\u7f6e\u5377\u79ef\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u53ef\u5b66\u4e60\u7684\u4e0a\u91c7\u6837\u8fc7\u7a0b\u3002\\n\\n\u5178\u578b\u7684\u8f6c\u7f6e\u5377\u79ef\u8fd0\u7b97\u5c06\u91c7\u7528\u6ee4\u6ce2\u5668\u89c6\u56fe\u4e2d\u5f53\u524d\u503c\u7684\u70b9\u79ef\u5e76\u4f5c\u4e3a\u76f8\u5e94\u7684\u8f93\u51fa\u4f4d\u7f6e\u4ea7\u751f\u7684\u5355\u4e2a\u503c\uff0c\u800c\u8f6c\u7f6e\u5377\u79ef\u7684\u8fc7\u7a0b\u57fa\u672c\u60f3\u6cd5\u3002\u5bf9\u4e8e\u8f6c\u7f6e\u5377\u79ef\uff0c\u6211\u4eec\u4ece\u4f4e\u5206\u8fa8\u7387\u7279\u5f81\u56fe\u4e2d\u83b7\u53d6\u5355\u4e2a\u503c\uff0c\u5e76\u5c06\u6ee4\u6ce2\u5668\u4e2d\u7684\u6240\u6709\u6743\u91cd\u4e58\u4ee5\u8be5\u503c\uff0c\u5c06\u52a0\u6743\u503c\u8f93\u51fa\u5230\u66f4\u5927\u7684\u7279\u5f81\u56fe\u3002\\n\\n![image-20210427223356560](./src/overview-of-semantic-segmentation/image-20210427223356560.png)\\n\\n\u4e0a\u56fe\uff1a\u8f6c\u7f6e\u5377\u79ef\u7684\u4e00\u79cd\u793a\u610f\u3002\\n\\n> Tips\uff1a\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u89e3\u5377\u79ef\u5c42\u4e5f\u88ab\u79f0\u4f5c\uff1a\u8f6c\u7f6e\u5377\u79ef(Transposed Convolution)\u3001\u4e0a\u5377\u79ef\uff08upconvolution\uff09\u3001\u5b8c\u5168\u5377\u79ef\uff08full convolution\uff09\u3001\u8f6c\u7f6e\u5377\u79ef\uff08transposed convolution\uff09\u3001\u5fae\u6b65\u5377\u79ef\uff08fractionally-strided convolution\uff09\u3002\\n>\\n> \u8f6c\u7f6e\u5377\u79ef\u5e38\u5e38\u5728\u4e00\u4e9b\u6587\u732e\u4e2d\u4e5f\u79f0\u4e4b\u4e3a\u53cd\u5377\u79ef(Deconvolution)\u548c\u90e8\u5206\u8de8\u8d8a\u5377\u79ef(Fractionally-strided Convolution)\uff0c\u56e0\u4e3a\u79f0\u4e4b\u4e3a\u53cd\u5377\u79ef\u5bb9\u6613\u8ba9\u4eba\u4ee5\u4e3a\u548c\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u4e2d\u53cd\u5377\u79ef\u6df7\u8d77\u6765\uff0c\u9020\u6210\u4e0d\u5fc5\u8981\u7684\u8bef\u89e3\uff0c\u56e0\u6b64\u4e0b\u6587\u90fd\u5c06\u79f0\u4e3a\u8f6c\u7f6e\u5377\u79ef\uff0c\u5e76\u4e14\u5efa\u8bae\u5404\u4f4d\u4e0d\u8981\u91c7\u7528\u53cd\u5377\u79ef\u8fd9\u4e2a\u79f0\u547c\u3002\\n\\n### \u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ed3\u6784\uff08encoder-decoder\uff0c\u672c\u8d28\u57fa\u4e8eFCN\uff09\\n\\nencoder\u7531\u4e8epooling\u9010\u6e10\u51cf\u5c11\u7a7a\u95f4\u7ef4\u5ea6\uff0c\u800cdecoder\u9010\u6e10\u6062\u590d\u7a7a\u95f4\u7ef4\u5ea6\u548c\u7ec6\u8282\u4fe1\u606f\u3002\\n\\n![image-20210428220457279](./src/overview-of-semantic-segmentation/image-20210428220457279.png)\\n\\n\u5b9e\u9645\u4e0a\uff0c\u7b26\u5408\u4e0b\u91c7\u6837\u63d0\u53d6\u7279\u5f81\uff0c\u518d\u4e0a\u91c7\u6837\u6062\u590d\u539f\u5927\u5c0f\u7684\u90fd\u53ef\u4ee5\u79f0\u4e3aencoder-decoder\u7ed3\u6784\u3002\\n\\n#### \u8de8\u5c42\u8fde\u63a5\u7684encoder-decoder\u7ed3\u6784\\n\\n\u901a\u5e38\u4eceencoder\u5230decoder\u8fd8\u6709shortcut connetction\uff08\u6377\u5f84\u8fde\u63a5\uff0c\u4e5f\u5c31\u662f\u8de8\u5c42\u8fde\u63a5\uff0c\u5176\u601d\u60f3\u6211\u731c\u662f\u4eceVGG\u8de8\u5c42\u8fde\u63a5\u51fa\u73b0\u7684\u601d\u60f3\uff09\u3002\\n\\n![image-20210427221642324](./src/overview-of-semantic-segmentation/image-20210427221642324.png)\\n\\n\u4e0a\u56fe\u662f\u5e26\u6709\u8de8\u5c42\u8fde\u63a5\u7684encoder-decoder\u7684\u4ee3\u8868\u4e4b\u4e00\uff1aUNet\u7684\u7ed3\u6784\u3002\\n\\n#### \u9ad8\u4f4e\u5c42\u7279\u5f81\u878d\u5408\\n\\n\u7531\u4e8e\u6c60\u5316\u64cd\u4f5c\u9020\u6210\u7684\u4fe1\u606f\u635f\u5931\uff0c\u4e0a\u91c7\u6837\uff08\u5373\u4f7f\u91c7\u7528\u89e3\u5377\u79ef\u64cd\u4f5c\uff09\u53ea\u80fd\u751f\u6210\u7c97\u7565\u7684\u5206\u5272\u7ed3\u679c\u56fe\u3002\u56e0\u6b64\uff0c\u8bba\u6587\u4ece\u9ad8\u5206\u8fa8\u7387\u7684\u7279\u5f81\u56fe\u4e2d\u5f15\u5165\u8df3\u8dc3\u8fde\u63a5\uff08shortcut/skip connection\uff09\u64cd\u4f5c\u6539\u5584\u4e0a\u91c7\u6837\u7684\u7cbe\u7ec6\u7a0b\u5ea6\uff08\u611f\u89c9\u50cf\u662f\u4eceResNet\u5f00\u59cb\u51fa\u73b0\u7684\u601d\u60f3\uff09\uff1a\\n\\n![FCN-2](./src/overview-of-semantic-segmentation/FCN-2.png)\\n\\n\u5b9e\u9a8c\u8868\u660e\uff0c\u8fd9\u6837\u7684\u5206\u5272\u7ed3\u679c\u66f4\u7ec6\u81f4\u66f4\u51c6\u786e\u3002\u5728\u9010\u5c42fusion\u7684\u8fc7\u7a0b\u4e2d\uff0c\u505a\u5230\u7b2c\u4e09\u884c\u518d\u5f80\u4e0b\uff0c\u7ed3\u679c\u53c8\u4f1a\u53d8\u5dee\uff0c\u6240\u4ee5\u4f5c\u8005\u505a\u5230\u8fd9\u91cc\u5c31\u505c\u4e86\u3002\u53ef\u4ee5\u770b\u5230\u5982\u4e0a\u4e09\u884c\u7684\u5bf9\u5e94\u7684\u7ed3\u679c\uff1a\\n\\n![FCN-3](./src/overview-of-semantic-segmentation/FCN-3.png)\\n\\n### \u7a7a\u6d1e\u5377\u79ef\uff08Dilated/Atrous Convolution\uff0c\u4ee3\u66ff\u4e86\u201c\u6c60\u5316-\u4e0a\u91c7\u6837\u201d\u7684\u8fc7\u7a0b\uff09\\n\\n\u5c3d\u7ba1FCN\u53caencoder-decoder\u7ed3\u6784\u4e2d\u79fb\u9664\u4e86\u5168\u8fde\u63a5\u5c42\uff0c\u4f46\u662fCNN\u6a21\u578b\u7528\u4e8e\u8bed\u4e49\u5206\u5272\u8fd8\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u4e0b\u91c7\u6837\u64cd\u4f5c\u3002\u8fd9\u91cc\u4f7f\u7528\u6c60\u5316\u7684\u4e0b\u91c7\u6837\u4e3a\u4f8b\uff1apooling\u64cd\u4f5c\u53ef\u4ee5\u6269\u5927\u611f\u53d7\u91ce\u56e0\u800c\u80fd\u591f\u5f88\u597d\u5730\u6574\u5408\u4e0a\u4e0b\u6587\u4fe1\u606f\uff08context\u4e2d\u6587\u79f0\u4e3a\u8bed\u5883\u6216\u8005\u4e0a\u4e0b\u6587\uff0c\u901a\u4fd7\u7684\u7406\u89e3\u5c31\u662f\u7efc\u5408\u4e86\u66f4\u591a\u7684\u4fe1\u606f\u6765\u8fdb\u884c\u51b3\u7b56\uff09\uff0c\u5bf9high-level\u7684\u4efb\u52a1\uff08\u6bd4\u5982\u5206\u7c7b\uff09\uff0c\u8fd9\u662f\u5f88\u6709\u6548\u7684\u3002\u4f46\u540c\u65f6\uff0c\u7531\u4e8epooling\u4e0b\u91c7\u6837\u64cd\u4f5c\uff0c\u4f7f\u5f97\u5206\u8fa8\u7387\u964d\u4f4e\uff0c\u56e0\u6b64\u524a\u5f31\u4e86\u4f4d\u7f6e\u4fe1\u606f\uff0c\u800c\u8bed\u4e49\u5206\u5272\u4e2d\u9700\u8981score map\u548c\u539f\u56fe\u5bf9\u9f50\uff0c\u56e0\u6b64\u9700\u8981\u4e30\u5bcc\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002\\n\\nDilated/Atrous Convolution\uff08\u7a7a\u6d1e\u5377\u79ef\uff09\uff0c\u8fd9\u79cd\u7ed3\u6784\u4ee3\u66ff\u4e86\u6c60\u5316\uff0c\u4e00\u65b9\u9762\u5b83\u53ef\u4ee5\u4fdd\u6301\u7a7a\u95f4\u5206\u8fa8\u7387\uff0c\u53e6\u5916\u4e00\u65b9\u9762\u5b83\u7531\u4e8e\u53ef\u4ee5\u6269\u5927\u611f\u53d7\u91ce\u56e0\u800c\u53ef\u4ee5\u5f88\u597d\u5730\u6574\u5408\u4e0a\u4e0b\u6587\u4fe1\u606f\uff08\u6211\u89c9\u5f97\u8fd9\u4e2a\u8bbe\u8ba1\u5f88\u6709\u610f\u601d\uff0c\u539f\u56fe\u7684\u5927\u5c0f\u5b8c\u5168\u4e0d\u4f1a\u6539\u53d8\uff0c\u4e5f\u4e0d\u9700\u8981\u4e0a\u91c7\u6837\u4e86\uff09\u3002\\n\\n![image-20210427221923919](./src/overview-of-semantic-segmentation/image-20210427221923919.png)\\n\\n\u4e0a\u56fe\uff1a\u5728\u67d0\u7bc7\u8bba\u6587\u4e2d\u51fa\u73b0\u7684\u7a7a\u6d1e\u5377\u79ef\u793a\u610f\u56fe\u3002\\n\\n![Atrous_conv](./src/overview-of-semantic-segmentation/Atrous_conv.png)\\n\\n\u4e0a\u56fe\uff1a\u53e6\u4e00\u5f20\u7a7a\u6d1e\u5377\u79ef\u7684\u793a\u610f\u56fe\u3002\\n\\n### \u6761\u4ef6\u968f\u673a\u573a\\n\\n\u5728\u4f7f\u7528\u5168\u5377\u79ef\u7f51\u7edc\u7684\u5206\u5272\u65b9\u6cd5\u4e2d\uff0c\u6709\u4e00\u4e2a\u5f88\u5e38\u7528\u7684\u57fa\u672c\u6846\u67b6\uff1a\\n\\n![img](./src/overview-of-semantic-segmentation/CRF01.jpg)\\n\\n\u5176\u4e2d\uff0c FCN \u8868\u793a\u5404\u79cd\u5168\u5377\u79ef\u7f51\u7edc\uff0cCRF \u4e3a\u6761\u4ef6\u968f\u673a\u573a\uff0cMRF \u4e3a\u9a6c\u5c14\u79d1\u592b\u968f\u673a\u573a\u3002\u5176\u5927\u81f4\u601d\u8def\u5c31\u662f\u524d\u7aef\u4f7f\u7528 FCN \u8fdb\u884c\u7279\u5f81\u7c97\u63d0\u53d6\uff0c\u540e\u7aef\u4f7f\u7528 CRF/MRF \u4f18\u5316\u524d\u7aef\u7684\u8f93\u51fa\uff0c\u6700\u540e\u5f97\u5230\u5206\u5272\u56fe\u3002\\n\\n[\u6761\u4ef6\u968f\u673a\u573a\uff08Conditional Random Field\uff0cCRF\uff09](https://arxiv.org/pdf/1210.5644.pdf) \u540e\u5904\u7406\u64cd\u4f5c\u901a\u5e38\u7528\u4e8e\u8fdb\u4e00\u6b65\u6539\u5584\u5206\u5272\u7684\u6548\u679c\u3002CRFs \u662f\u4e00\u79cd\u57fa\u4e8e\u5e95\u5c42\u56fe\u50cf\u7684\u50cf\u7d20\u5f3a\u5ea6\u8fdb\u884c\u201c\u5e73\u6ed1\u201d\u5206\u5272\uff08\u2018smooth\u2019 segmentation\uff09\u7684\u56fe\u6a21\u578b\uff0c\u5176\u5de5\u4f5c\u539f\u7406\u662f\u76f8\u4f3c\u5f3a\u5ea6\u7684\u50cf\u7d20\u66f4\u53ef\u80fd\u6807\u8bb0\u4e3a\u540c\u4e00\u7c7b\u522b\u3002CRFs \u4e00\u822c\u80fd\u591f\u63d0\u5347 1-2% \u7684\u7cbe\u5ea6\u3002\\n\\n![CRF](./src/overview-of-semantic-segmentation/CRF.png)\\n\\n\u4e0a\u56fe\u4e3aCRF\u793a\u610f\u56fe\u3002\uff08b\uff09\u4e00\u5143\u5206\u7c7b\u7ed3\u5408CRF;\uff08c, d, e\uff09\u662fCRF\u7684\u53d8\u4f53\uff0c\u5176\u4e2d(e)\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u79cdCRF\u3002\\n\\n---\\n\\n## \u5206\u5272\u7684\u6570\u636e\u96c6\\n\\n\u622a\u6b62\u5230\u539f\u7efc\u8ff0\u5199\u4f5c\u65f6\u95f4\u4e3a\u6b62\u65f6\u8f83\u4e3a\u6d41\u884c\u7684\u6570\u636e\u96c6\uff1a\\n\\n![image-20210428094548476](./src/overview-of-semantic-segmentation/image-20210428094548476.png)\\n\\n\u8fd8\u6ca1\u770b\u5b8c\uff0c\u770b\u5b8c\u5c31\u5199\u3002\\n\\n---\\n\\n## \u9886\u57df\u77e5\u540d\u8bba\u6587\\n\\n### \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u5206\u5272\u65b9\u6cd5\\n\\n![image-20210428094705161](./src/overview-of-semantic-segmentation/image-20210428094705161.png)\\n\\n1. FCN\\n\\n   \u4e3b\u8981\u8d21\u732e\uff1a\u4f7f\u7aef\u5bf9\u7aef\u7684\u5377\u79ef\u8bed\u4e49\u5206\u5272\u7f51\u7edc\u53d8\u5f97\u6d41\u884c\u8d77\u6765\uff1b\u901a\u8fc7deconvolutional layers\u8fdb\u884c\u4e0a\u91c7\u6837\uff1b\u901a\u8fc7skip connection\u6539\u5584\u4e86\u4e0a\u91c7\u6837\u7684\u7c97\u7cd9\u5ea6\u3002\\n\\n2. SegNet\\n\\n   \u4e3b\u8981\u8d21\u732e\uff1a\u4f7f\u7528Maxpooling indices\u6765\u589e\u5f3a\u4f4d\u7f6e\u4fe1\u606f\u3002\\n\\n3. Dilated Convolutions\\n\\n   \u4e3b\u8981\u8d21\u732e\uff1a\u4f7f\u7528\u7a7a\u6d1e\u5377\u79ef\u7528\u6765\u8fdb\u884c\u7a20\u5bc6\u9884\u6d4b\uff08dense prediction\uff09\uff1b\u63d0\u51fa\u4e0a\u4e0b\u6587\u6a21\u5757\uff08context module\uff09\uff0c\u4f7f\u7528\u7a7a\u6d1e\u5377\u79ef\uff08Dilated Convolutions\uff09\u6765\u8fdb\u884c\u591a\u5c3a\u5ea6\u4fe1\u606f\u7684\u7684\u6574\u5408\u3002\\n\\n4. DeepLab (v1 & v2)\\n\\n   \u4e3b\u8981\u8d21\u732e\uff1a\u4f7f\u7528atrous\u5377\u79ef\uff0c\u4e5f\u5c31\u662f\u540e\u6765\u7684\u7a7a\u6d1e\u5377\u79ef\uff0c\u6269\u5927\u611f\u53d7\u91ce\uff0c\u4fdd\u6301\u5206\u8fa8\u7387\uff1b\u63d0\u51fa\u4e86atrous spatial pyramid pooling (ASPP)\uff0c\u6574\u5408\u591a\u5c3a\u5ea6\u4fe1\u606f\uff1b\u4f7f\u7528\u5168\u8fde\u63a5\u6761\u4ef6\u968f\u673a\u573a\uff08fully connected CRF)\u8fdb\u884c\u540e\u5904\u7406\uff0c\u6539\u5584\u5206\u5272\u7ed3\u679c\u3002\\n\\n5. RefineNet\\n\\n   \u4e3b\u8981\u8d21\u732e\uff1a\u7cbe\u5fc3\u8bbe\u8ba1\u4e86encoder-decoder\u67b6\u6784\u4e2d\u7684decoder\u90e8\u5206\uff0c\u4f7f\u5f97\u6027\u80fd\u63d0\u5347\uff1b\u6574\u4e2a\u7f51\u7edc\u7684\u8bbe\u8ba1\u90fd\u9075\u5faaresidual connections\uff0c\u7f51\u7edc\u8868\u8fbe\u80fd\u529b\u66f4\u5f3a\uff0c\u68af\u5ea6\u66f4\u5bb9\u6613\u53cd\u5411\u4f20\u64ad\u3002\\n\\n6. PSPNet\\n\\n   \u4e3b\u8981\u8d21\u732e\uff1a\u4f7f\u7528pyramid pooling\u6574\u5408context\uff1b\u4f7f\u7528auxiliary loss\u3002\\n\\n7. Large Kernel Matters\\n\\n   \u4e3b\u8981\u8d21\u732e\uff1a\u63d0\u51fa\u4e00\u79cd\u5177\u6709\u975e\u5e38\u5927\u7684\u5185\u6838\u5377\u79ef\u7684\u7f16\u7801\u5668-\u89e3\u7801\u5668\u4f53\u7cfb\u7ed3\u6784\u3002\\n\\n8. DeepLab v3\\n\\n   \u4e3b\u8981\u8d21\u732e\uff1a\u6539\u8fdb\u7684\u65e0\u5b54\u7a7a\u95f4\u91d1\u5b57\u5854\u6c60\u5316\uff08ASPP\uff09\uff1b\u7ea7\u8054\u4f7f\u7528atrous\u5377\u79ef\u7684\u6a21\u5757\u3002\\n\\n### \u4e0a\u8ff0\u65b9\u6cd5\u7684\u5173\u7cfb\\n\\n![image-20210428094839526](./src/overview-of-semantic-segmentation/image-20210428094839526.png)"},{"id":"/[12]MobileNetV2-Inverted-Residuals-and-Linear-bottleneck","metadata":{"permalink":"/blog/[12]MobileNetV2-Inverted-Residuals-and-Linear-bottleneck","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[12]MobileNetV2-Inverted-Residuals-and-Linear-bottleneck.md","source":"@site/blog/[12]MobileNetV2-Inverted-Residuals-and-Linear-bottleneck.md","title":"MobileNetV2 - Inverted Residuals and Linear Bottlenecks","description":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4e00\u79cd\u8f7b\u91cf\u7ea7\u4e3b\u5e72\u7f51\u7edc\u7684\u8bba\u6587\u3002\u539f\u8bba\u6587\uff08MobileNetV2: Inverted Residuals and Linear Bottlenecks\uff09\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"detection","permalink":"/blog/tags/detection"},{"label":"backbone","permalink":"/blog/tags/backbone"},{"label":"light-weight","permalink":"/blog/tags/light-weight"}],"readingTime":16.645,"hasTruncateMarker":true,"authors":[{"name":"PommesPeter","title":"I want to be strong. But it seems so hard.","url":"https://blog.pommespeter.com/","email":"me@pommespeter.com","imageURL":"https://github.com/PommesPeter.png","key":"pommespeter"}],"frontMatter":{"title":"MobileNetV2 - Inverted Residuals and Linear Bottlenecks","authors":["pommespeter"],"tags":["detection","backbone","light-weight"]},"prevItem":{"title":"A Review on Deep Learning Techniques Applied to Semantic Segmentation","permalink":"/blog/[10]Overview-Of-Semantic-Segmentation"},"nextItem":{"title":"Fast-SCNN - Fast Semantic Segmentation Network","permalink":"/blog/[13]Fast-SCNN-Fast-Semantic-Segmentation-Network"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4e00\u79cd\u8f7b\u91cf\u7ea7\u4e3b\u5e72\u7f51\u7edc\u7684\u8bba\u6587\u3002[\u539f\u8bba\u6587\uff08MobileNetV2: Inverted Residuals and Linear Bottlenecks\uff09](https://arxiv.org/abs/1801.04381)\u3002\\n\\n- \u672c\u6587\u4e3b\u8981\u9488\u5bf9\u8f7b\u91cf\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u4e2d\u7ed3\u6784\u4e0a\u7684\u4e09\u4e2a\u4fee\u6539\u63d0\u9ad8\u4e86\u7f51\u7edc\u6027\u80fd\u3002\\n- \u672c\u6587\u603b\u601d\u8def\uff1a\u4f7f\u7528\u4f4e\u7ef4\u5ea6\u7684\u5f20\u91cf\u5f97\u5230\u8db3\u591f\u591a\u7684\u7279\u5f81\\n\\n\u6458\u8981:\\n\\n> In this paper we describe a new mobile architecture, MobileNetV2, that improves the state of the art performance of mobile models on multiple tasks and bench- marks as well as across a spectrum of different model sizes. We also describe efficient ways of applying these mobile models to object detection in a novel framework we call SSDLite. Additionally, we demonstrate how to build mobile semantic segmentation models through a reduced form of DeepLabv3 which we call Mobile DeepLabv3. is based on an inverted residual structure where the shortcut connections are between the thin bottle- neck layers. The intermediate expansion layer uses lightweight depthwise convolutions to filter features as a source of non-linearity. Additionally, we find that it is important to remove non-linearities in the narrow layers in order to maintain representational power. We demon- strate that this improves performance and provide an in- tuition that led to this design. Finally, our approach allows decoupling of the in- put/output domains from the expressiveness of the trans- formation, which provides a convenient framework for further analysis. We measure our performance on ImageNet classification, COCO object detection [2], VOC image segmentation [3]. We evaluate the trade-offs between accuracy, and number of operations measured by multiply-adds (MAdd), as well as actual latency, and the number of parameters.\\n\\n\x3c!--truncate--\x3e\\n\\n## Introduction\\n\\n\u672c\u6587\u6240\u4ecb\u7ecd\u7684\u7f51\u7edc\u662f\u9488\u5bf9\u4e8e\u8ba1\u7b97\u8d44\u6e90\u53d7\u9650\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u505a\u5b9e\u9645\u843d\u5730\u5e94\u7528\u7b49\u65b9\u9762\u5185\u5bb9\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u63d0\u9ad8\u51c6\u786e\u7387\u5f88\u5927\u7a0b\u5ea6\u4e0e\u9700\u8981\u4f9d\u8d56\u7b97\u529b\u6210\u672c\uff0c\u8ffd\u6c42\u8d8a\u9ad8\u7684\u51c6\u786e\u7387\u7b97\u529b\u6210\u672c\u5f00\u9500\u5c31\u8d8a\uff0c\u4f7f\u5f97\u5f88\u591a\u79fb\u52a8\u8bbe\u5907\u548c\u5d4c\u5165\u5f0f\u5e94\u7528\u65e0\u6cd5\u4f7f\u7528\u8fd9\u79cd\u7c7b\u578b\u7684\u7b97\u6cd5\u3002\\n\\n\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\uff0c\u4e13\u95e8\u9488\u5bf9\u79fb\u52a8\u8bbe\u5907\u6216\u8005\u8d44\u6e90\u9996\u5148\u7684\u73af\u5883\u4e0b\u4ecd\u7136\u80fd\u591f\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\uff0c\u4f46\u5728\u964d\u4f4e\u53c2\u6570\u91cf\u548c\u64cd\u4f5c\u6570\u91cf\u7684\u540c\u65f6\uff0c\u53c8\u8981\u4fdd\u8bc1\u7f51\u7edc\u7684\u51c6\u786e\u7387\u3002\\n\\n\u6211\u4eec\u4e3b\u8981\u7684\u8d21\u732e\u662f\u4e00\u79cd\u65b0\u578b\u7684\u6a21\u5757\uff0c\u4f7f\u7528linear bottleneck\u6a21\u5757\u7684inverted residual\u6a21\u5757\u3002Inverted Residual\u6a21\u5757\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u7ecf\u8fc7\u538b\u7f29\u4e4b\u540e\u7684\u4f4e\u7ef4\u5ea6\u7684\u7279\u5f81\uff0c\u8fd9\u4e2a\u7279\u5f81\u9996\u5148\u662f\u5148\u6269\u5c55\u5230\u9ad8\u7ef4\u7279\u5f81\uff0c\u7136\u540e\u5728\u7ecf\u8fc7\u8f7b\u91cfdepthwise\u5377\u79ef\u4e4b\u540e\u5f97\u5230\u7684.\\n\\n\u672c\u6587\u7684\u65b9\u6cd5\u662f\u9488\u5bf9\u4e8e\u79fb\u52a8\u7aef\u8fdb\u884c\u6d89\u53ca\uff0c\u80fd\u591f\u51cf\u5c11\u5728\u63a8\u7406\u9636\u6bb5\u7684\u5185\u5b58\u5f00\u9500\uff0c\u51cf\u5c11\u4e86\u5bf9\u5185\u5b58\u8bbf\u95ee\u7684\u9700\u6c42\uff0c\u4f7f\u5f97\u8be5\u6a21\u5757\u80fd\u591f\u5728\u5d4c\u5165\u5f0f\u786c\u4ef6\u4e0a\u4f7f\u7528\u3002\\n\\n## Related Work\\n\\n\u9488\u5bf9\u76ee\u524d\u73b0\u6709\u7684\u7f51\u7edc\uff0c\u8bb8\u591a\u56e2\u961f\u90fd\u662f\u624b\u52a8\u5bf9\u7ed3\u6784\u8fdb\u884c\u4f18\u5316\u3001\u6539\u8fdb\u53d6\u5f97\u4e86\u5f88\u597d\u7684\u7ed3\u679c\uff0c\u5982AlexNet,VGGNet,GoogleNet,ResNet\u7b49\u7f51\u7edc\u3002\u5bf9\u5176\u8fdb\u884c\u4e86\u8d85\u53c2\u6570\u7684\u5404\u79cd\u4f18\u5316\u3002\u9488\u5bf9\u8fde\u63a5\u7684\u65b9\u5f0f\u4e5f\u505a\u4e86\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u76ee\u524d\u5f88\u591a\u90fd\u662f\u4fee\u6539\u5377\u79ef\u5757\u5185\u90e8\u7684\u8fde\u63a5\u7ed3\u6784\uff0c\u50cfShuffleNet\u3002\u50cf\u8fd1\u671f\u7684\u4e00\u4e9b\u7814\u7a76\u867d\u7136\u80fd\u591f\u8fbe\u5230\u5f88\u597d\u7684\u6548\u679c\uff0c\u4f46\u662f\u7f51\u7edc\u7ed3\u6784\u5f88\u590d\u6742\uff0c\u65e0\u6cd5\u8fbe\u5230\u9884\u671f\u76ee\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u7f51\u7edc\u57fa\u4e8e[MobileNetV1](https://arxiv.org/abs/1704.04861)\u8fdb\u884c\u6539\u8fdb\uff0c\u5728\u4fdd\u8bc1\u8f7b\u91cf\u3001\u7b80\u5355\u7684\u540c\u65f6\u53c8\u4e0d\u9700\u8981\u989d\u5916\u7279\u6b8a\u7684\u64cd\u4f5c\u5c31\u80fd\u63d0\u9ad8\u51c6\u786e\u7387\uff0c\u5728\u79fb\u52a8\u7aef\u4e0a\u6709\u4e00\u4e2a\u826f\u597d\u7684\u8868\u73b0\u3002\\n\\n## \u521b\u65b0\u70b9\\n\\n### Depthwise Separable Convolutions\\n\\n\u672c\u6587\u7f51\u7edc\u7ed3\u6784\u4e2d\u5173\u952e\u7684\u5377\u79ef\u6a21\u5757\u662fDSC\u6a21\u5757(\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\uff0c\u4ee5\u4e0b\u7b80\u79f0DSC)\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u9ad8\u6548\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4\u4f7f\u7528\u8fd9\u79cd\u7c7b\u578b\u7684\u5377\u79ef\u662f\u5173\u952e\u3002\\n\\n#### \u57fa\u672c\u601d\u60f3\\n\\n- \u5e38\u89c4\u5377\u79ef\uff1a\\n\\n\u5047\u8bbe\u8f93\u5165\u5c42\u4e3a\u4e00\u4e2a\u5927\u5c0f\u4e3a64\xd764\u50cf\u7d20\u3001\u4e09\u901a\u9053\u5f69\u8272\u56fe\u7247\u3002\u7ecf\u8fc7\u4e00\u4e2a\u5305\u542b4\u4e2aFilter\u7684\u5377\u79ef\u5c42\uff0c\u6700\u7ec8\u8f93\u51fa4\u4e2aFeature Map\uff0c\u4e14\u5c3a\u5bf8\u4e0e\u8f93\u5165\u5c42\u76f8\u540c\u3002\\n\\n![image-20210516170258393](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210516170258393.png)\\n\\n\\n\\n\u6b64\u65f6\uff0c\u5377\u79ef\u5c42\u51714\u4e2aFilter\uff0c\u6bcf\u4e2aFilter\u5305\u542b\u4e863\u4e2aKernel\uff0c\u6bcf\u4e2aKernel\u7684\u5927\u5c0f\u4e3a3\xd73\u3002\u56e0\u6b64\u5377\u79ef\u5c42\u7684\u53c2\u6570\u6570\u91cf\u53ef\u4ee5\u7528\u5982\u4e0b\u516c\u5f0f\u6765\u8ba1\u7b97\uff1a\\n\\n```python\\nN_std = 4 \xd7 3 \xd7 3 \xd7 3 = 108\\n```\\n\\n- DSC\\n\\n  \u4e3a\u4e86\u53d6\u4ee3\u4f20\u7edf\u5377\u79ef\u64cd\u4f5c\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u56fe\u7247\u5206\u89e3\u6210\u4e24\u4e2a\u5355\u72ec\u7684\u56fe\u5c42\u3002\\n\\n  \u7b2c\u4e00\u5c42\u505a\u6df1\u5ea6\u5377\u79ef(DW)\uff0c\u901a\u8fc7\u4f7f\u7528\u5bf9\u6bcf\u4e00\u4e2a\u901a\u9053\u4f7f\u7528\u8f7b\u91cf\u7ea7\u7684\u5377\u79ef\u8fdb\u884c\u6ee4\u6ce2\u3002\u5bf9\u6bcf\u4e00\u4e2a\u901a\u9053\u4f7f\u7528\u5377\u79ef\uff0c\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u8fdb\u884c\uff0c\u8fd0\u7b97\u5b8c\u4e4b\u540e\u751f\u62103\u4e2a\u7279\u5f81\u56fe\uff0c\u6b64\u65f6\u901a\u9053\u6570\u5e76\u6ca1\u6709\u6269\u5927\uff0c\u6ca1\u6709\u6709\u6548\u5229\u7528\u4e0d\u540c\u901a\u9053\u4e0a\u76f8\u540c\u4f4d\u7f6e\u7684\u7279\u5f81\u4fe1\u606f\u3002\u6240\u4ee5\u9700\u8981\u63a5\u4e0b\u6765\u7684\u70b9\u5377\u79ef(PW)\\n\\n![image-20210516165901837](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210516165901837.png)\\n\\n```python\\n# \u53c2\u6570\u91cf\\nN_depthwise = 3 \xd7 3 \xd7 3 = 27\\n```\\n\\n\u7b2c\u4e8c\u5c42\u662f\u4e00\u4e2a$1\\\\times 1$\u7684\u5377\u79ef\uff0c\u53eb\u505a\u70b9\u5377\u79ef\uff0c\u8d1f\u8d23\u901a\u8fc7\u8ba1\u7b97\u8f93\u5165\u901a\u9053\u7684\u7ebf\u6027\u7ec4\u5408\u6765\u5efa\u7acb\u65b0\u7684\u7279\u5f81\u3002\\n\\n- ![image-20210516165910834](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210516165910834.png)\\n\\n```python\\n# \u53c2\u6570\u91cf\\nN_pointwise = 1 \xd7 1 \xd7 3 \xd7 4 = 12\\n\\n# \u603b\u548c\\nN_sum = N_depthwise + N_pointwise = 39\\n```\\n\\n- \u8ba1\u7b97\u6d88\u8017\\n\\n  \u6807\u51c6\u7684\u5377\u79ef\u6a21\u5757\uff0c\u5bf9\u4e8e\u4e00\u4e2a$h\\\\times w\\\\times d$\u7684\u56fe\u7247\u6765\u8bf4\uff0c\u4e3a\u4e86\u5f97\u5230$h\\\\times w\\\\times d\'$\uff0c\u4f7f\u7528\u4e00\u4e2a$k\\\\in R^{k\\\\times k\\\\times d\\\\times d\'}$\u7684\u5377\u79ef\u6838\uff0c\u9700\u8981\u8fdb\u884c$h\\\\times w\\\\times d\\\\times d\'\\\\times k^2$\u6b21\u8fd0\u7b97\u3002\\n\\n  DSC\u6a21\u5757\uff0c\u80fd\u591f\u8fbe\u5230\u8ddf\u6807\u51c6\u5377\u79ef\u540c\u6837\u7684\u6548\u679c\u4f46\u662f\u53ea\u9700\u8981$h\\\\times w\\\\times d\\\\times(k^2+d\')$\\n  \\n  \u4e3a\u4ec0\u4e48\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u6027\u80fd\u597d\uff0c\u56e0\u4e3a\u4ed6\u662f\u5148\u505a\u4e00\u6b213x3\u7684\u5377\u79ef(\u5bf93\u4e2a\u901a\u9053\u5206\u522b\u505a\u5377\u79ef)\uff0c\u5206\u6210\u4e09\u4e2a\u901a\u9053\u540e\u5728\u505a1x1\u7684\u5377\u79ef\u63d0\u53d6\u7279\u5f81\uff0c\u8ba1\u7b97\u91cf\u6bd4\u4f20\u7edf\u7684\u51cf\u5c11\u4e86\\n\\n### Linear Bottleneck\\n\\n> \u8fd9\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e3a\u4ec0\u4e48\u4f7f\u7528\u7ebf\u6027\u5206\u7c7b\u5668\u6765\u53d6\u4ee3\u6fc0\u6d3b\u51fd\u6570\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u4f8b\u5b50\u6765\u8bc1\u660e\uff0c\u5148\u662f\u5c06\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570\u62bd\u8c61\u6210\u4e00\u4e2a\u5174\u8da3\u6d41\u5f62\uff0c\u7136\u540e\u6839\u636e\u5174\u8da3\u6d41\u5f62\u5728\u4e0d\u540c\u8f93\u51fa\u7ef4\u5ea6\u7684\u8868\u73b0\u6765\u8bf4\u660e**ReLU\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4f1a\u4e22\u5931\u5927\u91cf\u7684\u4fe1\u606f\uff0c\u4f46\u5728\u9ad8\u7ef4\u7684\u65f6\u5019\u5374\u4e0d\u4f1a\u4e22\u5931**\u3002\u8fd9\u90e8\u5206\u4e3b\u8981\u8bb2**\u7ebf\u6027\u53d8\u6362\u53d6\u4ee3ReLU\u6fc0\u6d3b\u51fd\u6570**\uff0c\u4ee3\u66ff\u539f\u672c\u975e\u7ebf\u6027\u6fc0\u6d3b\u53d8\u6362\u3002\u6240\u4ee5\u5728\u540e\u9762\u4ecb\u7ecdInverted Risdual\u7684\u65f6\u5019\u4f7f\u7528LinearBottleneck\u5c31\u53ef\u4ee5\u6355\u83b7\u5174\u8da3\u6d41\u5f62\u5e76\u4e14\u9632\u6b62\u975e\u7ebf\u6027\u7834\u574f\u592a\u591a\u4fe1\u606f\u3002\\n\\n- \u5174\u8da3\u6d41\u5f62manifold of interest\\n\\n  \u5bf9\u4e8e\u4e00\u4e2an\u4e2a$L_i$\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4\uff0c\u6bcf\u4e00\u5c42\u8f93\u51fa\u7684\u5f20\u91cf\u662f$h_i\\\\times w_i\\\\times d_i$\u7684\u5927\u5c0f\u3002\u5176\u4e2d\u5305\u542b\u4e86$h_i\\\\times w_i$\u4e2a\u50cf\u7d20\u548c$d_i$\u4e2a\u7ef4\u5ea6\u3002manifold of interest\u662f\u6307\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u5d4c\u5165\u4f4e\u7ef4\u5b50\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u6bcf\u4e2a\u5728\u6df1\u5ea6\u5377\u79ef\u5c42\u7684\u901a\u9053\u901a\u8fc7manifold\u7f16\u7801\u4e3a\u5404\u79cd\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53c8\u5d4c\u5165\u4f4e\u7ef4\u5b50\u7a7a\u95f4\u4e2d\u3002\u6211\u4eec\u4eba\u4e3a**\u4e00\u8fde\u4e32\u7684\u5377\u79ef\u6838\u6fc0\u6d3b\u51fd\u6570\u5c31\u5f62\u6210\u4e86\u4e00\u4e2amanifold of interest(\u5174\u8da3\u6d41\u5f62)**\\n  \\n  \u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u5174\u8da3\u6d41\u5f62\u53ef\u4ee5\u5d4c\u5165\u5230\u4f4e\u7ef4\u5b50\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u67e5\u770b\u5355\u4e2ad\u901a\u9053\u7684\u50cf\u7d20\u65f6\uff0c\u8fd9\u4e9b\u503c\u4e2d\u5b58\u5728\u591a\u79cd\u7f16\u7801\u4fe1\u606f\uff0c\u6211\u4eec\u901a\u8fc7\u53d8\u6362\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5d4c\u5165\u5230\u4e0b\u4e00\u4e2a\u4f4e\u7ef4\u7684\u5b50\u7a7a\u95f4\u4e2d(\u901a\u8fc7$1\\\\times1$\u7684\u5377\u79ef\u53d8\u6362\uff0c\u8f6c\u6362\u5174\u8da3\u6d41\u5f62\u7684\u7a7a\u95f4\u7ef4\u5ea6)\\n\\n- \u5b9e\u9645\u4f8b\u5b50\\n\\n  \u5982\u679c\u5f53\u524d\u6fc0\u6d3b\u7a7a\u95f4\u5185\u5174\u8da3\u6d41\u5f62\u5b8c\u6574\u5ea6\u8f83\u9ad8\uff0c\u7ecf\u8fc7ReLU\uff0c\u53ef\u80fd\u4f1a\u8ba9\u6fc0\u6d3b\u7a7a\u95f4\u574d\u584c\uff0c\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u4e22\u5931\u4fe1\u606f\u3002\\n\\n  ![image-20210516162727671](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210516162727671.png)\\n\\n  \u5982\u56fe\u6240\u793a\uff0c\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u6570\u636e\uff0c\u5174\u8da3\u6d41\u5f62\u5c31\u662f\u84dd\u8272\u7684\u87ba\u65cb\u7ebf\uff0c\u672c\u4f8b\u4f7f\u7528\u77e9\u9635$T$\u5c06\u6570\u636e\u5d4c\u5165\u5230n\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u540e\u63a5ReLU\uff0c\u518d\u4f7f\u7528$T^{-1}$\u5c06\u5176\u6295\u5f71\u56de2D\u5e73\u9762\u3002\u53ef\u4ee5\u770b\u5230\u8bbe\u7f6e$n=2,3$\u65f6\u4fe1\u606f\u4e22\u5931\u4e25\u91cd\uff0c\u4e2d\u5fc3\u70b9\u574d\u584c\u6389\u4e86\u3002\u5f53$n=15..30$\u4e4b\u95f4\uff0c\u6062\u590d\u7684\u4fe1\u606f\u660e\u663e\u591a\u4e86\u3002\\n\\n  \u5982\u679c\u8f93\u5165\u5bf9\u5e94\u7684\u8f93\u51fa\u662f\u975e\u96f6\u7684\uff0c\u90a3\u4e48\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u5176\u5b9e\u5bf9\u5e94\u7684\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u6620\u5c04\u5173\u7cfb\u3002\\n\\n  > \u56e0\u4e3a\u8fd9\u4e2a\u7f51\u7edc\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u628a\u7f51\u7edc\u8f7b\u91cf\u5316\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u591f\u4f7f\u7528\u9ad8\u7ef4\u5ea6\u7684\u7279\u5f81\u56fe\uff0c\u7ef4\u5ea6\u8d8a\u9ad8\u8ba1\u7b97\u91cf\u8d8a\u5927\uff0c\u4f46\u662f\u5982\u679c\u7ef4\u5ea6\u592a\u4f4e\u5bfc\u81f4\u7279\u5f81\u4e0d\u660e\u663e\u5c31\u4f1a\u5bfc\u81f4\u51c6\u786e\u7387\u4e0b\u964d\uff0c\u6240\u4ee5\u672c\u6587\u7684**\u76ee\u7684\u662f\u5c3d\u53ef\u80fd\u4f7f\u7528\u4e00\u4e9b\u7ef4\u5ea6\u6bd4\u8f83\u4f4e\u7684\u5377\u79ef\u3002**\\n  >\\n  > \u4f46\u662f\u5982\u679c**\u5bf9\u6bd4\u8f83\u4f4e\u7ef4\u5ea6\u7684\u7279\u5f81\u4f7f\u7528ReLU\u6fc0\u6d3b\u51fd\u6570\u4f1a\u4e22\u5931\u6389\u5f88\u591a\u4fe1\u606f**\u3002\u56e0\u4e3aReLU\u662f\u4e00\u4e2a\u7ebf\u6027\u6620\u5c04\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u7ebf\u6027\u5206\u7c7b\u5668\u5c31\u4f1a\u51cf\u5c11\u7ef4\u5ea6\u4fe1\u606f\u7684\u4e22\u5931\uff0c\u540c\u65f6\u53c8\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u7ef4\u5ea6\u6bd4\u8f83\u4f4e\u7684\u5c42\u3002\\n\\n- \u603b\u7ed3\\n\\n  \u5982\u679cmanifold of interest \u59cb\u7ec8\u4fdd\u6301\u975e\u96f6\u5728\u7ecf\u8fc7ReLU\u53d8\u6362\u4e4b\u540e\uff0c\u90a3\u4e48\u5c31\u662f\u5bf9\u4e8e\u7ebf\u6027\u7684\u53d8\u6362\u3002\\n\\n  ReLU\u80fd\u591f\u4fdd\u7559\u8f93\u5165\u7684manifold\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u53ea\u6709\u5728\u8f93\u5165\u7a7a\u95f4\u4e2d\u4f4e\u7ef4\u5ea6\u7a7a\u95f4\u4e2d\u7684manifold\u624d\u80fd\u4fdd\u7559\u5b8c\u6574\u4fe1\u606f\u3002\u5047\u8bbemanifold of interest\u662f\u4f4e\u7ef4\u5ea6\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6027\u74f6\u9888\u5c42\u63d2\u5165\u5377\u79ef\u5757\u6765\u6355\u83b7\uff0c\u4f7f\u7528\u7ebf\u6027\u5c42\u662f\u4e3a\u4e86\u9632\u6b62\u975e\u7ebf\u6027\u5c42\u6467\u6bc1\u592a\u591a\u4fe1\u606f\uff0c\u4ece\u4f20\u7edf\u7684\u6b8b\u5dee\u5757\u4e2d\u53bb\u9664\u6389\u975e\u7ebf\u6027\u7684\u90e8\u5206\u3002\\n\\n### Inverted Residuals\\n\\n> \u8bbe\u8ba1\u601d\u8def: \u5148\u901a\u8fc7Expansion layer\u6765**\u6269\u5c55\u7ef4\u5ea6**\uff0c\u4e4b\u540e\u5728**\u7528\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u6765\u63d0\u53d6\u7279\u5f81**\uff0c\u4e4b\u540e\u4f7f\u7528Projection layer\u6765\u538b\u7f29\u6570\u636e\uff0c**\u5c06\u9ad8\u7ef4\u5ea6\u7684\u6570\u636e\u6620\u5c04\u56de\u4f4e\u7ef4\u6570\u636e**\uff0c\u8ba9\u7f51\u7edc\u4ece\u65b0\u53d8\u5c0f\u3002\u56e0\u4e3aExpansion layer \u548c Projection layer\u90fd\u662f\u6709\u53ef\u4ee5\u5b66\u4e60\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u6574\u4e2a\u7f51\u7edc\u7ed3\u6784\u53ef\u4ee5\u5b66\u4e60\u5230\u5982\u4f55\u66f4\u597d\u7684\u6269\u5c55\u6570\u636e\u548c\u4ece\u65b0\u538b\u7f29\u6570\u636e\u3002\\n>\\n> \u5148\u5c06\u5f20\u91cf\u7ef4\u5ea6\u6269\u5c55\u5230\u9ad8\u7ef4\uff0c\u5bf9\u9ad8\u7ef4tensor\u63d0\u53d6\u7279\u5f81\uff0c\u7136\u540e\u518d\u6620\u5c04\u56de\u4f4e\u7ef4\u5ea6\u7a7a\u95f4\u3002\\n\\n\u7f51\u7edc\u7ed3\u6784\u5982\u4e0b:\\n\\n![image-20210516160202078](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210516160202078.png)\\n\\n![image-20210517095545070](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210517095545070.png)\\n\\n\u8bbe\u8ba1\u601d\u8def\u4e3b\u8981\u8fd8\u662f\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u6a21\u5757\u7684\u5806\u53e0\uff0c\u5728v1\u7684\u57fa\u7840\u4e0a\uff0c\u9664\u4e86\u4f7f\u7528DSC\u6a21\u5757\u4e4b\u5916\uff0c\u6dfb\u52a0\u4e86**Projection layer**\u548c**Expansion layer**\u3002\u5728\u63d0\u53d6\u7279\u5f81\u7684\u65f6\u5019\u4f7f\u7528\u9ad8\u7ef4tensor(\u9ad8\u7ef4\u4fe1\u606f\u591a)\uff0c\u5728\u5904\u7406\u7279\u5f81\u7684\u65f6\u5019\u4f7f\u7528\u4f4e\u7ef4tensor.\\n\\n**Projection layer**\u4e5f\u662f\u4f7f\u7528$1\\\\times 1$\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u4ed6\u7684\u76ee\u7684\u662f\u5e0c\u671b\u628a**\u9ad8\u7ef4\u7279\u5f81\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4**\u53bb\u3002\u4f7f\u7528 $1\\\\times 1$\u7684\u7f51\u7edc\u7ed3\u6784\u5c06\u9ad8\u7ef4\u7a7a\u95f4\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\u7684\u8bbe\u8ba1\u6709\u7684\u65f6\u5019\u6211\u4eec\u4e5f\u79f0\u4e4b\u4e3a**Bottleneck layer\u3002**\\n\\n**Expansion layer**\u7684\u529f\u80fd\u6b63\u76f8\u53cd\uff0c\u4f7f\u7528$1\\\\times 1$\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u76ee\u7684\u662f\u5c06**\u4f4e\u7ef4\u7a7a\u95f4\u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4**\u3002\u8fd9\u91cc**Expansion factor**\u6709\u4e00\u4e2a\u8d85\u53c2\u6570(Expansion Factor)\u662f\u7ef4\u5ea6\u6269\u5c55\u51e0\u500d\u3002\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6765\u505a\u8c03\u6574\u7684\uff0c\u9ed8\u8ba4\u503c\u662f6\uff0c\u4e5f\u5c31\u662f\u6269\u5c556\u500d\u3002\u4e0e\u4f20\u7edf\u7684\u6b8b\u5dee\u8fde\u63a5\u4e0d\u540c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5757\u5927\u5c0f\u4e3a$h\\\\times w$\uff0c\u6269\u5c55\u56e0\u5b50\u4e3a$t$\u548c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a$k$\uff0c\u8f93\u5165\u901a\u9053\u4e3a$d\'$\uff0c\u8f93\u51fa\u901a\u9053\u4e3a$d\'\'$\u603b\u5171\u9700\u8981\u8fdb\u884c$h\\\\times w\\\\times d\'\\\\times t(d\'+k^2+d\'\')$\u6b21\u4e58\u6cd5\u3002\u901a\u8fc7\u4e00\u4e2a\u989d\u5916\u7684$1\\\\times 1$\u5377\u79ef\u4f7f\u5f97\u7f51\u7edc\u80fd\u591f\u5229\u7528\u66f4\u5c0f\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u4ece\u800c\u5b9e\u73b0\u964d\u4f4e\u7ef4\u5ea6\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f\u964d\u4f4e\u4e58\u6cd5\u8ba1\u7b97\u91cf\u7684\u65b9\u6cd5.\\n\\n![image-20210516161042196](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210516161042196.png)\\n\\n\u6b64\u56fe\u66f4\u8be6\u7ec6\u7684\u5c55\u793a\u4e86\u6574\u4e2a\u6a21\u5757\u7684\u7ed3\u6784\u3002\u6211\u4eec\u8f93\u5165\u662f24\u7ef4\uff0c\u6700\u540e\u8f93\u51fa\u4e5f\u662f24\u7ef4\u3002\u4f46\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6269\u5c55\u4e866\u500d\uff0c\u7136\u540e\u5e94\u7528\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u8fdb\u884c\u5904\u7406\u3002\\n\\n**bottleneck residual block(ResNet)**\u662f\u4e2d\u95f4\u7a84\u4e24\u5934\u80d6**(\u4e2d\u95f4\u662f\u7ef4\u5ea6\u5c0f\u7684\uff0c\u4e24\u8fb9\u662f\u7ef4\u5ea6\u5927\u7684)**\uff0c\u5728MobileNetV2\u4e2d\u6b63\u597d\u53cd\u4e86\u8fc7\u6765**(\u4e2d\u95f4\u662f\u7ef4\u5ea6\u5927\u7684\uff0c\u4e24\u8fb9\u662f\u7ef4\u5ea6\u5c0f\u7684)**\uff0c\u6240\u4ee5\uff0c\u5728MobileNetV2\u7684\u8bba\u6587\u4e2d\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u7f51\u7edc\u7ed3\u6784\u4e3a**Inverted residuals**\u3002\u9700\u8981\u6ce8\u610f\u7684\u662fresidual connection\u662f\u5728\u8f93\u5165\u548c\u8f93\u51fa\u7684\u90e8\u5206\u8fdb\u884c\u8fde\u63a5\u3002\u53e6\u5916\uff0c\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u8bb2\u7684**Linear Bottleneck**\u5728\u8fd9\u91cc\u4f7f\u7528\uff0c\u56e0\u4e3a\u4ece\u9ad8\u7ef4\u5411\u4f4e\u7ef4\u8f6c\u6362\uff0c\u4f7f\u7528ReLU\u6fc0\u6d3b\u51fd\u6570\u53ef\u80fd\u4f1a\u9020\u6210\u4fe1\u606f\u4e22\u5931\u6216\u7834\u574f\uff08\u4e0d\u4f7f\u7528\u975e\u7ebf\u6027\u6fc0\u6d3b\u6570\u6570\uff09\u3002\u6240\u4ee5\u5728projection convolution\u8fd9\u4e00\u90e8\u5206\uff0c**\u6211\u4eec\u4e0d\u518d\u4f7f\u7528ReLU\u6fc0\u6d3b\u51fd\u6570\u800c\u662f\u4f7f\u7528\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u3002**\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u524d\u9762\u8981\u63d0\u5230linear bottleneck\uff09\\n\\n\u4e0e\u4f20\u7edf\u7684Residuals\u4e0d\u540c\uff0c\u4f20\u7edf\u7684ResNet\u7f51\u7edc\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\n![image-20210516161633202](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210516161633202.png)\\n\\n\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5bf9\u6bd4**Inverted**\u7248\u672c\u7684\uff0c\u5728\u6b8b\u5dee\u6c42\u548c\u4e4b\u524d\uff0c\u4ed6\u4eec\u90fd\u662f\u7ef4\u5ea6\u6bd4\u8f83\u5c0f\u7684\uff0c\u7ecf\u8fc7\u4e00\u4e2a$1\\\\times 1$\u5377\u79ef\u4e4b\u540e\u53d8\u56de\u539f\u6765\u7684\u901a\u9053\u6570\uff08\u9ad8\u7ef4->\u4f4e\u7ef4\uff09\u3002\u800cInverted\u7248\u672c\u7684\u662f\u8f93\u5165\u8f83\u4f4e\u7ef4\u5ea6\u7684\uff0c\u5728\u6b8b\u5dee\u6c42\u548c\u4e4b\u524d\u901a\u8fc7Expansion layer\u4f7f\u7528$1\\\\times 1$\u7684\u7f51\u7edc\u67b6\u6784\u5c06\u4f4e\u7ef4\u7a7a\u95f4\u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4\u3002\uff08\u4f4e\u7ef4->\u9ad8\u7ef4\uff09\\n\\n## Supplements\\n\\n\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679ctensor\u7ef4\u5ea6\u8d8a\u4f4e\uff0c\u5377\u79ef\u5c42\u7684\u4e58\u6cd5\u8ba1\u7b97\u91cf\u5c31\u8d8a\u5c0f\u3002\u90a3\u4e48\u5982\u679c\u6574\u4e2a\u7f51\u7edc\u90fd\u662f\u4f4e\u7ef4\u7684tensor\uff0c\u90a3\u4e48\u6574\u4f53\u8ba1\u7b97\u901f\u5ea6\u5c31\u4f1a\u5f88\u5feb\u3002\\n\\n\u7136\u800c\uff0c\u5982\u679c\u53ea\u662f\u4f7f\u7528\u4f4e\u7ef4\u7684tensor\u6548\u679c\u5e76\u4e0d\u4f1a\u597d\u3002\u5982\u679c\u5377\u79ef\u5c42\u7684\u8fc7\u6ee4\u5668\u90fd\u662f\u4f7f\u7528\u4f4e\u7ef4\u7684tensor\u6765\u63d0\u53d6\u7279\u5f81\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u529e\u6cd5\u63d0\u53d6\u5230\u6574\u4f53\u7684\u8db3\u591f\u591a\u7684\u4fe1\u606f\u3002\u6240\u4ee5\uff0c\u5982\u679c\u63d0\u53d6\u7279\u5f81\u6570\u636e\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u80fd\u66f4\u5e0c\u671b\u6709\u9ad8\u7ef4\u7684tensor\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5\u3002V2\u5c31\u8bbe\u8ba1\u8fd9\u6837\u4e00\u4e2a\u7ed3\u6784\u6765\u8fbe\u5230\u5e73\u8861\u3002\\n\\n![image-20210517095431302](./src/MobileNetV2-Inverted-Residuals-and-Linear-bottleneck/image-20210517095431302.png)\\n\\n\u5148\u901a\u8fc7Expansion layer\u6765\u6269\u5c55\u7ef4\u5ea6\uff0c\u4e4b\u540e\u5728\u7528\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u6765\u63d0\u53d6\u7279\u5f81\uff0c\u4e4b\u540e\u4f7f\u7528Projection layer\u6765\u538b\u7f29\u6570\u636e\uff0c\u8ba9\u7f51\u7edc\u4ece\u65b0\u53d8\u5c0f\u3002\u56e0\u4e3aExpansion layer \u548c Projection layer\u90fd\u662f\u6709\u53ef\u4ee5\u5b66\u4e60\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u6574\u4e2a\u7f51\u7edc\u7ed3\u6784\u53ef\u4ee5\u5b66\u4e60\u5230\u5982\u4f55\u66f4\u597d\u7684\u6269\u5c55\u6570\u636e\u548c\u4ece\u65b0\u538b\u7f29\u6570\u636e\u3002\\n\\n\u4f7f\u7528 $1\\\\times 1$\u7684\u7f51\u7edc\u7ed3\u6784\u5c06\u9ad8\u7ef4\u7a7a\u95f4\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\u7684\u8bbe\u8ba1\u6709\u7684\u65f6\u5019\u6211\u4eec\u4e5f\u79f0\u4e4b\u4e3a**Bottleneck layer\u3002**"},{"id":"/[13]Fast-SCNN-Fast-Semantic-Segmentation-Network","metadata":{"permalink":"/blog/[13]Fast-SCNN-Fast-Semantic-Segmentation-Network","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[13]Fast-SCNN-Fast-Semantic-Segmentation-Network.md","source":"@site/blog/[13]Fast-SCNN-Fast-Semantic-Segmentation-Network.md","title":"Fast-SCNN - Fast Semantic Segmentation Network","description":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4e00\u79cd\u5feb\u901f\u8bed\u4e49\u5206\u5272\u7684\u8bba\u6587\u3002\u8bba\u6587\u540d Fast Semantic Segmentation Network","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"backbone","permalink":"/blog/tags/backbone"}],"readingTime":14.145,"hasTruncateMarker":true,"authors":[{"name":"Zerorains","title":"life is but a span, I use python","url":"https://github.com/zeroRains","email":"me@zerorains.top","imageURL":"https://github.com/zeroRains.png","key":"zerorains"}],"frontMatter":{"title":"Fast-SCNN - Fast Semantic Segmentation Network","authors":["zerorains"],"tags":["segmentation","backbone"]},"prevItem":{"title":"MobileNetV2 - Inverted Residuals and Linear Bottlenecks","permalink":"/blog/[12]MobileNetV2-Inverted-Residuals-and-Linear-bottleneck"},"nextItem":{"title":"MobileNets - Efficient Convolutional Neural Networks for Mobile Vision Applications","permalink":"/blog/[14]MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4e00\u79cd\u5feb\u901f\u8bed\u4e49\u5206\u5272\u7684\u8bba\u6587\u3002\u8bba\u6587\u540d:[Fast-SCNN: Fast Semantic Segmentation Network](https://arxiv.org/abs/1902.04502)\\n\\n- \u4e3b\u8981\u662f\u91c7\u7528\u53cc\u6d41\u6a21\u578b\u7684\u67b6\u6784\u8bbe\u8ba1\u8fd9\u4e2a\u7f51\u7edc\\n- \u672c\u6587\u603b\u601d\u8def\uff1a\u51cf\u5c11\u5197\u4f59\u7684\u5377\u79ef\u8fc7\u7a0b\uff0c\u4ece\u800c\u63d0\u9ad8\u901f\u5ea6\\n\\n\u6458\u8981\uff1a\\n\\n> The encoder-decoder framework is state-of-the-art for offline semantic image segmentation. Since the rise in autonomous systems, real-time computation is increasingly desirable. In this paper, we introduce fast segmentation convolutional neural network (Fast-SCNN), an above real-time semantic segmentation model on high resolution image data (1024 \xd7 2048px) suited to efficient computation on embedded devices with low memory. Building on existing two-branch methods for fast segmentation, we introduce our \u2018learning to downsample\u2019 module which computes low-level features for multiple resolution branches simultaneously. Our network combines spatial detail at high resolution with deep features extracted at lower resolution, yielding an accuracy of 68.0% mean intersection over union at 123.5 frames per second on Cityscapes. We also show that large scale pre-training is unnecessary. We thoroughly validate our metric in experiments with ImageNet pre-training and the coarse labeled data of Cityscapes. Finally, we show even faster computation with competitive results on subsampled inputs, without any network modifications.\\n\\n\x3c!--truncate--\x3e\\n\\n## \u6458\u8981\\n\\n\u4e3b\u8981\u8d21\u732e\uff1a\\n\\n1. \u63d0\u51fa\u4e86\u4e00\u4e2a\u6709\u7ade\u4e89\u6027(68.0%miou)\uff0c\u5e76\u4e14\u80fd\u5728\u9ad8\u5206\u8fa8\u7387(1024x2048)\u7684\u56fe\u7247\u5b9e\u73b0\u5b9e\u65f6(123.5FPS)\u8bed\u4e49\u5206\u5272\u7684\u7b97\u6cd5Fast-SCNN.\\n2. \u91c7\u7528\u4e86\u79bb\u7ebf\u578bDCNNs\u4e2d\u6d41\u884c\u7684**\u8df3\u8dc3\u8fde\u63a5(skip connection)**\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u79cd\u6d45\u5c42\u5b66\u4e60\u7684\u4e0b\u91c7\u6837\u6a21\u5757**learning to Down-sample**,\u4ee5\u6b64\u66f4\u52a0\u5feb\u901f\u9ad8\u6548\u5730\u8fdb\u884c\u591a\u5206\u652f\u4f4e\u7ea7\u7279\u5f81\u63d0\u53d6\u3002\\n3. \u5c06Fast-SCNN\u8bbe\u8ba1\u4e3a\u8f7b\u91cf\u578b(low capacity)\uff0c\u5e76\u8bc1\u5b9e\u4e86\u65e0\u8bba\u662f\u4f7f\u7528ImageNet\u6570\u636e\u96c6\u7684\u8bad\u7ec3\u6a21\u578b\u591a\u8bad\u7ec3\u51e0\u4ee3\uff0c\u8fd8\u662f\u5728\u6dfb\u52a0\u7684\u7c97\u7cd9\u6570\u636e\u4e2d\u591a\u8bad\u7ec3\u51e0\u4ee3\u7684\u7ed3\u679c\u662f\u7b49\u6548\u7684\u3002\\n\\n## DCNNs\u7684\u6548\u7387\\n\\n\u9ad8\u6548DCNNs\uff08Diffusion-Convolutional Neural Networks \uff09\u7684\u5e38\u89c1\u6280\u672f\u4e3a\uff1a\\n\\n### \u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef(Depthwise Separable Convolutions):\\n\\nMoblieNet\u5c06\u6807\u51c6\u7684Conv\u5206\u89e3\u4e3a**\u6df1\u5ea6\u5377\u79ef\uff08depthwise convolutions\uff09**\u548c$1 \\\\times 1$**\u70b9\u5f0f\u5377\u79ef(pointwise convolution)**\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u51cf\u5c11\u4e86\u6d6e\u70b9\u8fd0\u7b97\u548c\u5377\u79ef\u53c2\u6570\uff0c\u51cf\u5c11\u4e86\u6a21\u578b\u7684\u8ba1\u7b97\u6210\u672c\u548c\u5185\u5b58\u9700\u6c42\u3002\\n\\n### DCNNs\u7684\u9ad8\u6548\u91cd\u65b0\u8bbe\u8ba1\\n\\nMobileNet-V2\u4f7f\u7528**\u5012\u7f6e\u7684\u74f6\u9888\u6b8b\u5dee\u5757(inverted bottleneck residual blocks)**\u4ee5\u5206\u7c7b\u4efb\u52a1\u6784\u5efa\u6709\u6548\u7684DCNN\u3002\\n\\nContextNeto\u4f7f\u7528\u80fd\u591f\u5012\u7f6e\u74f6\u9888\u6b8b\u5dee\u5757\u8bbe\u8ba1\u4e86\u4e00\u4e2a1\u4e24\u5206\u652f\u7f51\u7edc\uff0c\u4ee5\u8fdb\u884c\u6709\u6548\u7684\u5b9e\u65f6\u8bed\u4e49\u5206\u5272\u3002\\n\\n### \u7f51\u7edc\u538b\u7f29\\n\\n\u4f7f\u7528\u526a\u679d\u51cf\u5c0f\u9884\u8bad\u7ec3\u7f51\u7edc\u7684\u5927\u5c0f\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u5757\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u66f4\u5c0f\u7684\u53c2\u6570\u96c6\u548c\u66f4\u5c0f\u7684\u5185\u5b58\u5360\u7528\u7a7a\u95f4\u3002\\n\\n\\n\\nFast-SCNN\u4e25\u91cd\u4f9d\u8d56\u4e0e\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u548c\u6b8b\u5dee\u74f6\u9888\u5757\uff0c\u8fd8\u5f15\u5165\u4e86\u4e00\u4e2a\u4e24\u5206\u652f\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5c06\u5b66\u4e60\u5185\u5bb9\u6574\u5408\u5230\u4e0b\u91c7\u6837\u7684\u6a21\u5757\u4e2d\uff0c\u4ece\u800c\u5141\u8bb8\u5728\u591a\u4e2a\u5206\u8fa8\u7387\u7ea7\u522b\u4e0a\u8fdb\u884c\u5171\u4eab\u7279\u5f81\u63d0\u53d6\u3002\u7f51\u7edc\u91cf\u5316\u548c\u7f51\u7edc\u538b\u7f29\u53ef\u4ee5\u6b63\u4ea4\u5e94\u7528\uff0c\u7559\u5f85\u540e\u9762\u7684\u5de5\u4f5c\u3002\\n\\n## Fast-SCNN\\n\\n\u7f51\u7edc\u7ed3\u6784\u56fe\uff1a\\n\\n![image-20210512115431363](./src/Fast-SCNN-Fast-Semantic-Segmentation-Network/20210512115432image-20210512115431363.png)\\n\\n\u5728\u5b9a\u4e49\u7f51\u7edc\u7684BN\u5c42\u65f6\u4f7f\u7528\u7c7b\u5404\u79cd\u7c7b\u578b\u7684BN\u5c42,\u4f46\u662f\u9ed8\u8ba4\u90fd\u662f\u4f7f\u7528\u666e\u901a\u7684BN\u5c42\\n\\n\u5e38\u89c4\u7684BN\uff0cSyncBN\uff08\u8de8\u5361BN\uff09\uff0cFrozenBN\uff08\u6d4b\u8bd5\u9636\u6bb5\u4f7f\u7528\u7684BN\uff09\uff0cGN\uff08Group Normalization\uff09\\n\\n![image-20210516102346560](./src/Fast-SCNN-Fast-Semantic-Segmentation-Network/20210516102348image-20210516102346560.png)\\n\\n### \u4e0b\u91c7\u6837\u5b66\u4e60\u6a21\u5757(learning to down-sample)\\n\\n\u5728\u8be5\u6a21\u5757\u4e2d\u4f7f\u7528\u4e86\u4e09\u5c42\u5377\u79ef\uff0c\u7b2c\u4e00\u5c42\u662f\u666e\u901a\u7684\u5377\u79ef(Conv2D)\uff0c\u5176\u4f59\u4e24\u5c42\u662f\u53ef\u5206\u79bb\u5377\u79ef(DSConv)\uff0c\u56e0\u4e3a\u56fe\u50cf\u521a\u521a\u8f93\u5165\u53ea\u6709\u4e09\u4e2a\u901a\u9053\uff0c\u4f7f\u7528DSConv\u7684\u4f18\u52bf\u5e76\u4e0d\u660e\u663e\u6240\u4ee5\uff0c\u91c7\u7528\u666e\u901a\u5377\u79ef\u5c42\u3002\\n\\n\u5728\u4e0b\u91c7\u6837\u5b66\u4e60\u6a21\u5757\u4e2d\uff0c\u4f7f\u7528\u7684\u6b65\u957f\u5747\u4e3a2\uff0c\u7136\u540e\u8fdb\u884cBN\u548cReLU\u3002\u5377\u79ef\u6838\u548c\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u6838\u5747\u4e3a$3\\\\times3$.\\n\\n```python\\n# \u5728\u4e3b\u7f51\u7edc\u4e2d\u7684\u5b9a\u4e49\\nself.learning_to_downsample = LearningToDownsample(32, 48, 64, norm_layer=self.norm_layer) # norm_layerh\u662f\u666e\u901a\u7684BN\\n\\n# \u4e0b\u91c7\u6837\u5b66\u4e60\u6a21\u5757\u7684\u5b9a\u4e49\\nclass LearningToDownsample(nn.Module):\\n    \\"\\"\\"Learning to downsample module\\"\\"\\"\\n\\n    def __init__(self, dw_channels1=32, dw_channels2=48, out_channels=64, norm_layer=nn.BatchNorm2d):\\n        super(LearningToDownsample, self).__init__()\\n        self.conv = _ConvBNReLU(3, dw_channels1, 3, 2) # \u8fd9\u4e2a\u5c31\u662f\u5355\u7eaf\u7684CONV+BN+ReLU\\n        # \u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\uff1a\u4e00\u4e2a\u6df1\u5ea6\u5377\u79ef\uff0c\u4e00\u4e2a\u70b9\u5377\u79ef\u7684\u7ec4\u5408\\n        self.dsconv1 = SeparableConv2d(dw_channels1, dw_channels2, stride=2, relu_first=False, norm_layer=norm_layer)\\n        self.dsconv2 = SeparableConv2d(dw_channels2, out_channels, stride=2, relu_first=False, norm_layer=norm_layer)\\n\\n    def forward(self, x):\\n        x = self.conv(x) #  \u666e\u901a\u5377\u79ef\\n        x = self.dsconv1(x) # \u53ef\u5206\u79bb\u5377\u79ef\\n        x = self.dsconv2(x)\\n        return x\\n```\\n\\n```python\\n# \u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\\nclass SeparableConv2d(nn.Module):\\n    def __init__(self, inplanes, planes, kernel_size=3, stride=1, dilation=1, relu_first=True,\\n                 bias=False, norm_layer=nn.BatchNorm2d):\\n        super().__init__()\\n        # \u6df1\u5ea6\u5377\u79ef\uff0c\u5377\u79ef\u6838\u4e3a3\u6b65\u957f1\uff0cpadding1\uff0c\u7a7a\u6d1e1\u7684\u5377\u79ef\u5c42\\n        depthwise = nn.Conv2d(inplanes, inplanes, kernel_size,\\n                              stride=stride, padding=dilation,\\n                              dilation=dilation, groups=inplanes, bias=bias)\\n        # \u5bf9\u5e94\u7684BN\\n        bn_depth = norm_layer(inplanes)\\n        # \u70b9\u5377\u79ef\uff0c\u5c31\u662f\u666e\u901a\u76841x1\u5377\u79ef\\n        pointwise = nn.Conv2d(inplanes, planes, 1, bias=bias)\\n        # \u5bf9\u5e94\u7684BN\\n        bn_point = norm_layer(planes)\\n        # \u662f\u5426\u4f7f\u7528\u6fc0\u6d3b\u51fd\u6570\\n        if relu_first:\\n            self.block = nn.Sequential(OrderedDict([(\'relu\', nn.ReLU()),\\n                                                    (\'depthwise\', depthwise),\\n                                                    (\'bn_depth\', bn_depth),\\n                                                    (\'pointwise\', pointwise),\\n                                                    (\'bn_point\', bn_point)\\n                                                    ]))\\n        else:\\n            self.block = nn.Sequential(OrderedDict([(\'depthwise\', depthwise),\\n                                                    (\'bn_depth\', bn_depth),\\n                                                    (\'relu1\', nn.ReLU(inplace=True)),\\n                                                    (\'pointwise\', pointwise),\\n                                                    (\'bn_point\', bn_point),\\n                                                    (\'relu2\', nn.ReLU(inplace=True))\\n                                                    ]))\\n\\n    def forward(self, x):\\n        return self.block(x)\\n```\\n\\n\\n\\n### \u5168\u5c40\u7279\u5f81\u63d0\u53d6\u5668(Global Feature Extrator)\\n\\n\u5168\u5c40\u7279\u5f81\u63d0\u53d6\u5668\u6a21\u5757\u7684\u76ee\u7684\u5728\u4e8e\u6355\u83b7\u5206\u5272\u56fe\u50cf\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u8be5\u6a21\u5757\u76f4\u63a5\u5c06\u4e0b\u91c7\u6837\u5b66\u4e60\u6a21\u5757\u7684\u7ed3\u679c(\u5206\u8fa8\u7387\u4e3a\u539f\u56fe\u7684$\\\\frac 18$)\u4f5c\u4e3a\u800c\u8f93\u5165\u3002\u8be5\u6a21\u5757\u5f15\u5165\u4e86MobileNet-V2\u4e2d\u63d0\u51fa\u7684\u6709\u6548\u7684\u74f6**\u9888\u6b8b\u5dee\u7f51\u7edc(efficient bottleneck residual blocks)**\u3002\u5f53\u8f93\u5165\u7684\u56fe\u50cf\u548c\u8f93\u51fa\u7684\u56fe\u50cf\u5c3a\u5bf8\u76f8\u540c\u65f6\uff0c\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\u94fe\u63a5\u74f6\u9888\u6b8b\u5dee\u5757\u3002\\n\\n\u5728\u74f6\u9888\u6b8b\u5dee\u5757\u4e2d\u4f7f\u7528\u4e86\u6709\u6548\u7684\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u53c2\u6570\u91cf\u548c\u6d6e\u70b9\u6570\u8fd0\u7b97\u3002\u6700\u540e\u8fd8\u6dfb\u52a0\u4e86\u4e00\u4e2a\u91d1\u5b57\u5854\u6c60\u5316\u6a21\u5757(pyramid pooling module \u7b80\u79f0PPM)\uff0c\u7528\u4e8e\u6c47\u603b\u57fa\u4e8e\u4e0d\u540c\u533a\u57df\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\\n\\n\u5728\u5404\u5c42\u7684\u8be6\u7ec6\u53c2\u6570\u5982\u4e0b\u8868\uff1a\\n\\n![image-20210512135253006](./src/Fast-SCNN-Fast-Semantic-Segmentation-Network/20210512135254image-20210512135253006.png)\\n\\n\u6bcf\u4e00\u6761\u6a2a\u7ebf\u5206\u522b\u8868\u793a\uff0c\u4e0b\u91c7\u6837\u5b66\u4e60\u6a21\u5757\uff0c\u5168\u5c40\u7279\u5f81\u63d0\u53d6\u5668\uff0c\u7279\u5f81\u878d\u5408\uff0c\u5206\u7c7b\u56db\u4e2a\u603b\u4f53\u6a21\u5757\\n\\n\u5176\u4e2dt,c,n,s\u5206\u522b\u8868\u793a\u74f6\u9888\u5757\u7684\u62d3\u5c55\u56e0\u5b50\uff0c\u8f93\u5165\u901a\u9053\u6570\uff0c\u4f7f\u7528\u8be5\u5c42\u7684\u6b21\u6570\uff0c\u6b65\u957f\\n\\n\\n\\n\u74f6\u9888\u5757\u7684\u53c2\u6570\u8868\uff1a\\n\\n![image-20210512135638073](./src/Fast-SCNN-Fast-Semantic-Segmentation-Network/20210512135639image-20210512135638073.png)\\n\\n\u74f6\u9888\u6b8b\u5dee\u5757\u5c06\u8f93\u5165\u4e3ac\u7684\u56fe\u50cf\u8f6c\u5316\u4e3a\u5177\u6709\u62d3\u5c55\u56e0\u5b50t\u7684c`\\n\\n\u6700\u540e\u7684\u70b9\u5377\u79ef\u4e0d\u9002\u7528\u975e\u7ebf\u6027\u51fd\u6570f\\n\\n```python\\n# \u4e3b\u7f51\u7edc\u58f0\u660e\\nself.global_feature_extractor = GlobalFeatureExtractor(64, [64, 96, 128], 128, 6, [3, 3, 3],norm_layer=self.norm_layer)\\n\\n# \u5168\u5c40\u7279\u5f81\u63d0\u53d6\u5668\u5bf9\u5e94\u7684\u6a21\u5757\u7c7b\\nclass GlobalFeatureExtractor(nn.Module):\\n    \\"\\"\\"Global feature extractor module\\"\\"\\"\\n    # \u8f93\u5165\u7684\u901a\u9053\u6570\uff0c\u6bcf\u4e00\u5c42\u7684\u901a\u9053\u6570\uff0c\u8f93\u51fa\u7684\u901a\u9053\u6570\uff0c\u62d3\u5c55\u56e0\u5b50t\uff0c\u5757\u5728\u6bcf\u4e00\u5c42\u7684\u6570\u91cf\\n    def __init__(self, in_channels=64, block_channels=(64, 96, 128), out_channels=128,\\n                 t=6, num_blocks=(3, 3, 3), norm_layer=nn.BatchNorm2d):\\n        super(GlobalFeatureExtractor, self).__init__()\\n        # \u521b\u5efa\u74f6\u9888\u6b8b\u5dee\u5757\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684InvertedResidual\u53eb\u505a\u53cd\u5411\u6b8b\u5dee\u3002\\n        # \u53ea\u6709\u6b65\u957f\u4e3a1\u5e76\u4e14\u8f93\u5165\u901a\u9053\u548c\u8f93\u51fa\u901a\u9053\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u8fd9\u5404\u4e2a\u53cd\u5411\u6b8b\u5dee\u624d\u4f1a\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\\n        self.bottleneck1 = self._make_layer(InvertedResidual, in_channels, block_channels[0], num_blocks[0],\\n                                            t, 2, norm_layer=norm_layer)\\n        self.bottleneck2 = self._make_layer(InvertedResidual, block_channels[0], block_channels[1],\\n                                            num_blocks[1], t, 2, norm_layer=norm_layer)\\n        self.bottleneck3 = self._make_layer(InvertedResidual, block_channels[1], block_channels[2],\\n                                            num_blocks[2], t, 1, norm_layer=norm_layer)\\n        # \u505a\u4e00\u4e2a\u91d1\u5b57\u5854\u6c60\u5316\\n        self.ppm = PyramidPooling(block_channels[2], norm_layer=norm_layer)\\n        # \u6700\u540e\u4f7f\u75281x1\u5377\u79ef\u8f93\u51fa\u6210\u5bf9\u5e94\u7684\u901a\u9053\uff0c\u8fdb\u884c\u8f93\u51fa\\n        self.out = _ConvBNReLU(block_channels[2] * 2, out_channels, 1, norm_layer=norm_layer)\\n\\n    def _make_layer(self, block, inplanes, planes, blocks, t=6, stride=1, norm_layer=nn.BatchNorm2d):\\n        # \u4f7f\u7528\u7684\u6a21\u5757\uff0c\u8f93\u5165\u7684\u901a\u9053\u6570\uff0c\u8f93\u51fa\u7684\u901a\u9053\u6570\uff0c\u5757\u7684\u6570\u91cf\uff0c\u62d3\u5c55\u56e0\u5b50t\uff0c\u6b65\u957f\\n        # \u521d\u59cb\u5316\u4e00\u4e2a\u5bb9\u5668\\n        layers = []\\n        # \u5c06\u5757\u4e2d\u7684\u4fe1\u606f\u52a0\u5165\\n        layers.append(block(inplanes, planes, stride, t, norm_layer=norm_layer))\\n        # \u91cd\u590d\u8fd9\u4e2a\u5757\u5bf9\u5e94\u6b21\\n        for i in range(1, blocks):\\n            layers.append(block(planes, planes, 1, t, norm_layer=norm_layer))\\n        #  \u5c06\u5bf9\u5e94\u7684\u5185\u5bb9\u653e\u5165Sequential\u5bb9\u5668\u4e2d\\n        return nn.Sequential(*layers)\\n\\n    def forward(self, x):\\n        x = self.bottleneck1(x)\\n        x = self.bottleneck2(x)\\n        x = self.bottleneck3(x)\\n        x = self.ppm(x)\\n        x = self.out(x)\\n        return x\\n```\\n\\n```python\\n# \u53cd\u5411\u5377\u79ef\u5757\\nclass InvertedResidual(nn.Module):\\n    def __init__(self, in_channels, out_channels, stride, expand_ratio, dilation=1, norm_layer=nn.BatchNorm2d):\\n        # \u53c2\u6570\uff1a\u8f93\u5165\u901a\u9053\uff0c\u8f93\u51fa\u901a\u9053\uff0c\u6b65\u957f\uff0c\u62d3\u5c55\u56e0\u5b50\uff0c\u7a7a\u6d1e\u5377\u79ef\uff0c\\n        super(InvertedResidual, self).__init__()\\n        assert stride in [1, 2]\\n        # \u662f\u5426\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\\n        self.use_res_connect = stride == 1 and in_channels == out_channels\\n\\n        layers = list()\\n        # \u4e2d\u95f4\u7684\u901a\u9053\u6570\uff0c\u4f7f\u7528\u62d3\u5c55\u56e0\u5b50*\u8f93\u5165\u7684\u901a\u9053\u6570\\n        inter_channels = int(round(in_channels * expand_ratio))\\n        if expand_ratio != 1:\\n            # pw\\n            # \u5148\u505a\u4e00\u4e2a\u6807\u51c6\u5377\u79ef\u561b\uff0c\u4f7f\u7528\u4e2d\u95f4\u901a\u9053\u6570\u4f5c\u4e3a\u8f93\u51fa,1x1\u5377\u79ef\\n            layers.append(_ConvBNReLU(in_channels, inter_channels, 1, relu6=True, norm_layer=norm_layer))\\n        layers.extend([\\n            # dw \u8fd9\u91cc\u4f7f\u7528\u4e86\u5206\u7ec4\u5377\u79ef\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u548c\u666e\u901a\u7684\u5377\u79ef\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u5982\u679cgroups\u6574\u597d\u662f\u8f93\u5165\u901a\u9053\u6570\u7684\u4e00\u4e2a\u56e0\u7d20\uff0c\u5219\u8f93\u5165\u7684\u901a\u9053\u4f1a\u88ab\u5206\u6210\u5bf9\u5e94\u7684\u7ec4\u8fdb\u884c\u5377\u79ef\\n            _ConvBNReLU(inter_channels, inter_channels, 3, stride, dilation, dilation,\\n                        groups=inter_channels, relu6=True, norm_layer=norm_layer),\\n            # pw-linear\\n            # \u4f7f\u75281x1\u5377\u79ef\u5c06\u4e2d\u95f4\u901a\u9053\u6570\u8f6c\u5316\u6210\u6700\u7ec8\u7684\u901a\u9053\u6570\\n            nn.Conv2d(inter_channels, out_channels, 1, bias=False),\\n            norm_layer(out_channels)])\\n        self.conv = nn.Sequential(*layers)\\n\\n    def forward(self, x):\\n        # \u6b8b\u5dee\u8fde\u63a5\\n        if self.use_res_connect:\\n            return x + self.conv(x)\\n        else:\\n            return self.conv(x)\\n```\\n\\n```python\\n# PPM(\u91d1\u5b57\u5854\u6c60\u5316\u6a21\u5757)\\nclass PyramidPooling(nn.Module):\\n    def __init__(self, in_channels, sizes=(1, 2, 3, 6), norm_layer=nn.BatchNorm2d, **kwargs):\\n        super(PyramidPooling, self).__init__()\\n        # \u5b9a\u4e49\u8f93\u51fa\u4e3a\u8f93\u5165\u7684\u56db\u5206\u4e4b\u4e00\\n        out_channels = int(in_channels / 4)\\n        # \u521b\u5efa\u5e73\u5747\u6c60\u5316\u548c\u5377\u79ef\u5c42\u6a21\u5757\u5217\u8868\\n        self.avgpools = nn.ModuleList()\\n        self.convs = nn.ModuleList()\\n        # \u904d\u5386\u5e73\u5747\u6c60\u5316\u7684\u5c3a\u5bf8\\n        for size in sizes:\\n            # \u4f7f\u7528\u81ea\u9002\u5e94\u5e73\u5747\u6c60\u5316\uff0c\u8fd9\u91cc\u7684\u53c2\u6570\uff0c\u8868\u793a\u7ecf\u8fc7\u81ea\u9002\u5e94\u5e73\u5747\u6c60\u5316\u7684\u7279\u5f81\u56fe\u8f93\u5165\u4e3ac X h X w\uff0c\u51fa\u6765\u7684\u7ed3\u679c\u4e3ac X size X size\\n            self.avgpools.append(nn.AdaptiveAvgPool2d(size))\\n            # \u4f7f\u7528\u666e\u901a\u5377\u79ef\u5c42\u8fdb\u884c\u5377\u79ef1x1\u7684\u5377\u79ef\u6838\\n            self.convs.append(_ConvBNReLU(in_channels, out_channels, 1, norm_layer=norm_layer, **kwargs))\\n\\n    def forward(self, x):\\n        size = x.size()[2:]\\n        feats = [x]\\n        for (avgpool, conv) in zip(self.avgpools, self.convs):\\n            # \u6ca1\u8bb0\u9519\u7684\u8bddinterpolate\u5e94\u8be5\u662f\u4e0a\u91c7\u6837\u5230size\u7684\u5927\u5c0f\\n            feats.append(F.interpolate(conv(avgpool(x)), size, mode=\'bilinear\', align_corners=True))\\n        # \u8bb0\u5f55\u5b8c\u5e73\u5747\u6c60\u5316\u7684\u7ed3\u679c\u540e\uff0c\u5c31\u8fdb\u884c\u62fc\u63a5\\n        return torch.cat(feats, dim=1)\\n```\\n\\n\\n\\n### \u7279\u5f81\u878d\u5408\u6a21\u5757(Feature Fusion Module)\\n\\n![image-20210512140501709](./src/Fast-SCNN-Fast-Semantic-Segmentation-Network/20210512140504image-20210512140501709.png)\\n\\n\u5148\u524d\u4e0b\u91c7\u6837\u5b66\u4e60\u6a21\u5757\u8ba1\u7b97\u7684\u7279\u5f81\u56fe\uff08\u8868\u7684\u5de6\u8fb9\uff09\u53ea\u7ecf\u8fc7\u4e00\u4e2a$1 \\\\times 1$\u7684\u5377\u79ef\u5373\u53ef\uff0c\u5728x\u6b21\u4e0b\u91c7\u6837\u540e\u7684\u7ed3\u679c(\u7ecf\u8fc7\u5168\u5c40\u7279\u5f81\u63d0\u53d6\u6a21\u5757\u7684\u7279\u5f81\u56fe\uff0c\u8868\u7684\u53f3\u8fb9)\uff0c\u4e0a\u91c7\u6837X\u6b21\uff0c\u4f7f\u7528\u53ef\u5206\u79bb\u5377\u79ef\u548c\u4e00\u4e2a\u975e\u7ebf\u6027\u51fd\u6570\uff0c\u518d\u4f7f\u7528\u4e00\u4e2a$1 \\\\times1$\u7684\u5377\u79ef\uff0c\u6700\u540e\u5c06\u4e24\u4e2a\u7279\u5f81\u56fe\u52a0\u8d77\u6765\uff0c\u518d\u4f7f\u7528\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570f\\n\\n```python\\n# \u5728\u4e3b\u7c7b\u4e2d\u7684\u58f0\u660e\uff1a\\nself.feature_fusion = FeatureFusionModule(64, 128, 128, norm_layer=self.norm_layer)\\n\\n# \u7279\u5f81\u878d\u5408\u6a21\u5757\\nclass FeatureFusionModule(nn.Module):\\n    \\"\\"\\"Feature fusion module\\"\\"\\"\\n    # \u8f93\u5165\u7684\u53c2\u6570\u4e3a\u9ad8\u8f93\u5165\u7684\u901a\u9053\u6570\uff0c\u4f4e\u8f93\u5165\u7684\u901a\u9053\u6570\uff0c\u8f93\u51fa\u7684\u901a\u9053\u6570\\n    def __init__(self, highter_in_channels, lower_in_channels, out_channels, scale_factor=4, norm_layer=nn.BatchNorm2d):\\n        super(FeatureFusionModule, self).__init__()\\n        # \u8bbe\u7f6e\u89c4\u6a21\\n        self.scale_factor = scale_factor\\n        # \u4f7f\u7528\u666e\u901a\u5377\u79ef\u5c06\u4f4e\u901a\u9053\u6570\u8f6c\u5316\u6210\u8f93\u51fa\u7684\u901a\u9053\u6570\\n        self.dwconv = _ConvBNReLU(lower_in_channels, out_channels, 1, norm_layer=norm_layer)\\n        # \u518d\u5bf9\u4f4e\u7ef4\u5377\u79ef\u7684\u5c06\u8bf6\u8fc7\u518d\u505a\u4e00\u4e2a1x1\u5377\u79ef\uff0c\u4f46\u662f\u4e0d\u6fc0\u6d3b\\n        self.conv_lower_res = nn.Sequential(\\n            nn.Conv2d(out_channels, out_channels, 1),\\n            norm_layer(out_channels)\\n        )\\n        # \u5bf9\u9ad8\u7ef4\u5ea6\u7684\u5377\u79ef\uff0c\u53ea\u4f7f\u75281x1\u5377\u79ef\uff0c\u4e0d\u4f7f\u7528\u6fc0\u6d3b\u51fd\u6570\\n        self.conv_higher_res = nn.Sequential(\\n            nn.Conv2d(highter_in_channels, out_channels, 1),\\n            norm_layer(out_channels)\\n        )\\n        self.relu = nn.ReLU(True)\\n\\n    def forward(self, higher_res_feature, lower_res_feature):\\n        # \u5148\u5c06\u4f4e\u7ef4\u7279\u5f81\u56fe\u4e0a\u91c7\u6837\u5230\u73b0\u5728\u76844\u500d\\n        lower_res_feature = F.interpolate(lower_res_feature, scale_factor=4, mode=\'bilinear\', align_corners=True)\\n        # \u5c06\u4f4e\u7eac\u5ea6\u7684\u901a\u9053\u6570\u8f6c\u5316\u6210\u8f93\u51fa\u7684\u901a\u9053\u6570\\n        lower_res_feature = self.dwconv(lower_res_feature)\\n        # \u518d\u505a\u4e00\u6b211x1\u5377\u79ef\uff0c\u4f46\u662f\u4e0d\u6fc0\u6d3b\\n        lower_res_feature = self.conv_lower_res(lower_res_feature)\\n        # \u5bf9\u9ad8\u7eac\u5ea6\u8fdb\u884c1x1\u5377\u79ef\uff0c\u4f46\u662f\u4e0d\u6fc0\u6d3b\\n        higher_res_feature = self.conv_higher_res(higher_res_feature)\\n        # \u5c06\u4f4e\u7eac\u5ea6\u548c\u9ad8\u7eac\u5ea6\u52a0\u8d77\u6765\\n        out = higher_res_feature + lower_res_feature\\n        # \u6700\u540e\u6fc0\u6d3b\u4ed6\u5c31\u884c\\n        return self.relu(out)\\n```\\n\\n\\n\\n### \u5206\u7c7b\u6a21\u5757(classifier)\\n\\n\u5728\u5206\u7c7b\u6a21\u5757\u4e2d\u91c7\u7528\u4e24\u4e2a\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef(DSConv)\u548c\u4e00\u4e2a\u666e\u901a\u5377\u79ef(Conv2D\uff0c\u7ea0\u6b63\u4e00\u4e0b\uff0c\u4e4b\u524d\u8bf4\u8fc7\u7684\u70b9\u5377\u79ef\u662fConv2D)\u3002\\n\\n\u4e3a\u4e86\u9002\u5e94\u68af\u5ea6\u4e0b\u964d\uff0c\u6240\u4ee5\u5728\u8bad\u7ec3\u4e2d\u4f7f\u7528\u4e86Softmax\u6fc0\u6d3b\u51fd\u6570\uff0c\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d,\u7531\u4e8eargmax\u548csorftmax\u90fd\u662f\u5355\u8c03\u9012\u589e\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u4f7f\u7528argmax\u4ee3\u66ffsoftmax\u51cf\u5c0f\u8ba1\u7b97\u5f00\u9500\u3002\\n\\n\u5982\u679c\u9700\u8981Fast-SCNN\u7684\u6982\u7387\u6a21\u578b\uff0c\u624d\u5728\u63a8\u7406\u65f6\u4f7f\u7528softmax\u3002\\n\\n```python\\n# \u5728\u4e3b\u7c7b\u4e2d\u7684\u58f0\u660e\uff1a\\nself.classifier = Classifer(128, self.nclass, norm_layer=self.norm_layer)\\n\\n# \u5206\u7c7b\u6a21\u5757\\nclass Classifer(nn.Module):\\n    \\"\\"\\"Classifer\\"\\"\\"\\n\\n    def __init__(self, dw_channels, num_classes, stride=1, norm_layer=nn.BatchNorm2d):\\n        # \u53c2\u6570\uff1a\u8f93\u5165\u7684\u901a\u9053\u6570\uff0c\u5206\u7c7b\u6570\uff0c\u6b65\u957f\uff0cBN\\n        super(Classifer, self).__init__()\\n        # \u4f7f\u75282\u4e2a\u6df1\u5ea6\u5206\u79bb\u5377\u79ef\\n        self.dsconv1 = SeparableConv2d(dw_channels, dw_channels, stride=stride, relu_first=False,\\n                                       norm_layer=norm_layer)\\n        self.dsconv2 = SeparableConv2d(dw_channels, dw_channels, stride=stride, relu_first=False,\\n                                       norm_layer=norm_layer)\\n        # \u8bbe\u7f6e\u968f\u673a\u5931\u6d3b(dropout2d)\uff0c\u7136\u540e\u8fdb\u884c\u5377\u79ef\uff0c\u4e0d\u9002\u7528BN\u4e0d\u4f7f\u7528\uff0c\u6fc0\u6d3b\uff0c\u4f7f\u75281x1\u5377\u79ef\\n        self.conv = nn.Sequential(\\n            nn.Dropout2d(0.1),\\n            nn.Conv2d(dw_channels, num_classes, 1)\\n        )\\n\\n    def forward(self, x):\\n        x = self.dsconv1(x)\\n        x = self.dsconv2(x)\\n        x = self.conv(x)\\n        return x\\n\\n```"},{"id":"/[14]MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications","metadata":{"permalink":"/blog/[14]MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[14]MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications.md","source":"@site/blog/[14]MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications.md","title":"MobileNets - Efficient Convolutional Neural Networks for Mobile Vision Applications","description":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4e00\u79cd\u8f7b\u91cf\u7ea7\u4e3b\u5e72\u7f51\u7edc\u7684\u8bba\u6587\u3002\u539f\u8bba\u6587\uff08MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications\uff09\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"detection","permalink":"/blog/tags/detection"},{"label":"backbone","permalink":"/blog/tags/backbone"},{"label":"light-weight","permalink":"/blog/tags/light-weight"}],"readingTime":8.6,"hasTruncateMarker":true,"authors":[{"name":"PommesPeter","title":"I want to be strong. But it seems so hard.","url":"https://blog.pommespeter.com/","email":"me@pommespeter.com","imageURL":"https://github.com/PommesPeter.png","key":"pommespeter"}],"frontMatter":{"title":"MobileNets - Efficient Convolutional Neural Networks for Mobile Vision Applications","authors":["pommespeter"],"tags":["detection","backbone","light-weight"]},"prevItem":{"title":"Fast-SCNN - Fast Semantic Segmentation Network","permalink":"/blog/[13]Fast-SCNN-Fast-Semantic-Segmentation-Network"},"nextItem":{"title":"Gated Channel Transformation for Visual Recognition","permalink":"/blog/[15]Gated-Channel-Transformation-for-Visual-Recognition"}},"content":"\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4e00\u79cd\u8f7b\u91cf\u7ea7\u4e3b\u5e72\u7f51\u7edc\u7684\u8bba\u6587\u3002[\u539f\u8bba\u6587\uff08MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications\uff09](https://arxiv.org/abs/1704.04861)\u3002\\n\\n- \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5e94\u7528\u4e8e\u79fb\u52a8\u6216\u8005\u5d4c\u5165\u5f0f\u8bbe\u5907\u7684\u9ad8\u6548\u795e\u7ecf\u7f51\u7edc\\n- \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u64cd\u4f5c\u6570\u8f83\u5c0f\u7684\u5377\u79ef\u6a21\u5757\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef(Depthwise Separable Convolution\uff0c\u4ee5\u4e0b\u79f0DSC)\\n\\n\u6458\u8981:\\n\\n> We present a class of efficient models called MobileNets for mobile and embedded vision applications. MobileNets are based on a streamlined architecture that uses depthwise separable convolutions to build light weight deep neural networks. We introduce two simple global hyper-parameters that efficiently trade off between latency and accuracy. These hyper-parameters allow the model builder to choose the right sized model for their application based on the constraints of the problem. We present extensive experiments on resource and accuracy tradeoffs and show strong performance compared to other popular models on ImageNet classification. We then demonstrate the effectiveness of MobileNets across a wide range of applications and use cases including object detection, finegrain classification, face attributes and large scale geo-localization.\\n\\n\x3c!--truncate--\x3e\\n\\n# Introduction\\n\\n\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5df2\u7ecf\u666e\u904d\u5e94\u7528\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\uff0c\u4f46\u662f\u968f\u7740\u795e\u7ecf\u7f51\u7edc\u7f51\u7edc\u7684\u53d1\u5c55\uff0c\u5404\u79cd\u7c7b\u578b\u7684\u8bc6\u522b\u7cbe\u5ea6\u4e0d\u65ad\u5728\u63d0\u9ad8\uff0c\u4f46\u4e0e\u6b64\u540c\u65f6\u5bfc\u81f4\u901f\u5ea6\u65b9\u9762\u5374\u5f88\u6162\uff0c\u63d0\u9ad8\u51c6\u786e\u7387\u4e0d\u4e00\u5b9a\u4f1a\u8ba9\u901f\u5ea6\u6216\u5927\u5c0f\u66f4\u5c0f\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7\u4e00\u79cd\u6709\u6548\u7684\u7f51\u7edc\u7ed3\u6784\u548c\u4e24\u79cd\u8d85\u53c2\u6570\uff1a\u901a\u9053\u957f\u5ea6\u8c03\u6574\u7cfb\u6570(width multiplier)\u548c\u5206\u8fa8\u7387\u8c03\u6574\u7cfb\u6570(resolution multiplier)\\n\\n# Realted Work\\n\\n\u73b0\u5728\u9488\u5bf9\u8f7b\u91cf\u7f51\u7edc\u65b9\u9762\u7684\u7814\u7a76\u4e5f\u518d\u4e0d\u65ad\u589e\u52a0\uff0c\u4f46\u5f88\u591a\u8fd8\u662f\u6ca1\u6709\u6ce8\u610f\u901f\u5ea6\uff0c\u53ea\u662f\u5173\u6ce8\u6a21\u578b\u5927\u5c0f\uff0c\u4e0d\u8003\u8651\u901f\u5ea6\u3002\u800c\u672c\u6587\u7b97\u6cd5\u4e3b\u8981\u662f\u7528\u4e86\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef(depthwise separable convolution)\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c.\u6700\u8fd1DSC\u7528\u4e8eInception\u7f51\u7edc\u6765\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002\u5728Factorized Network\u4e2d\u4ecb\u7ecd\u4e86\u4e00\u79cd\u7c7b\u4f3c\u7684\u5206\u79bb\u5f0f\u5377\u79ef\u3002\u53e6\u4e00\u4e2a\u5c0f\u578b\u7f51\u7edc\u662fSqueezeNet\uff0c\u5b83\u4f7f\u7528\u74f6\u9888\u65b9\u6cd5\u8bbe\u8ba1\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u7f51\u7edc\u3002\u76ee\u524d\u8fd8\u6709\u7684\u529e\u6cd5\u662f\u901a\u8fc7hash\uff0c\u526a\u679d\uff0c\u84b8\u998f\uff0c\u77e2\u91cf\u91cf\u5316\uff0c\u54c8\u592b\u66fc\u7f16\u7801\u7b49\u65b9\u5f0f\u8fdb\u884c\u4f18\u5316\u3002\\n\\n### MobileNet Architecture\\n\\n> depthwise\u5377\u79ef\uff1a\u5bf9\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u5355\u72ec\u4f7f\u7528\u4e00\u4e2a\u5377\u79ef\u6838\u5904\u7406\u3002\\n>\\n> pointwise\u5377\u79ef\uff1a$1\\\\times1$\u5377\u79ef\uff0c\u7528\u4e8e\u5c06depthwise\u5377\u79ef\u7684\u8f93\u51fa\u7ec4\u5408\u8d77\u6765\u3002\\n\\n- Depthwise Separable Convolution\\n\\n  \u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u662f\u4e00\u4e2a\u628a\u6807\u51c6\u7684\u5377\u79ef\u5206\u89e3\u6210\u6df1\u5ea6\u5377\u79ef(depthwise convolution)\u548c\u4e00\u4e2a$1\\\\times1$\u7684\u5377\u79ef\uff0c\u88ab\u79f0\u4e3a\u70b9\u5377\u79ef(pointwise convolution).\u7528\u5355\u4e2a\u5377\u79ef\u5bf9\u8f93\u5165\u56fe\u7247\u6bcf\u4e00\u4e2a\u901a\u9053\u90fd\u8fdb\u884c\u4e00\u6b21\u6df1\u5ea6\u5377\u79efDW\uff0c\u7136\u540e\u518d\u5bf9\u6df1\u5ea6\u5377\u79ef\u7684\u8f93\u51fa\u7ed3\u679c\u4f7f\u7528$1\\\\times1$\u7684\u5377\u79ef\u3002\\n\\n  \u5bf9\u4e8e\u6807\u51c6\u7684\u5377\u79ef\u6765\u8bf4\uff0c\u662f\u4e00\u6b65\u5c31\u5c06\u4e24\u4e2afilter\u548c\u8f93\u5165\u7ec4\u5408\u6210\u4e00\u4e2a\u65b0\u7684\u8f93\u51fa\uff0c\u800cDSC\u5219\u662f\u5206\u6210\u4e24\u5c42\uff0c\u4e00\u5c42\u662f\u505a\u6ee4\u6ce2\uff0c\u53e6\u4e00\u5c42\u662f\u505a\u7ec4\u5408\u62fc\u63a5\u3002\\n\\n  + \u8ba1\u7b97\u5206\u6790\\n\\n    > \u5bf9\u4e8eDW\\n    >\\n    > - \u8f93\u5165: $D_F\\\\times D_F\\\\times M$\uff0c\u8f93\u51fa:$D_F\\\\times D_F\\\\times M$\uff0c\u5377\u79ef\u6838:$D_K\\\\times D_K$\\n    >\\n    > - \u8ba1\u7b97\u91cf: $D_K\\\\times D_K\\\\times M\\\\times D_F\\\\times D_F$\\n    > - \u7406\u89e3: \u5c06\u8f93\u5165\u7684\u7279\u5f81\u56fe($$D_F\\\\times D_F\\\\times M$$)\u770b\u505a\u662fM\u4e2a$D_F\\\\times D_F\\\\times1$\u7684\u7279\u5f81\u56fe\uff0c\u5bf9\u8fd9M\u4e2a\u7279\u5f81\u56fe\u5206\u522b\u505a\u5377\u79ef\uff0c\u56e0\u4e3a\u8f93\u5165\u901a\u9053\u6570\u4e3a1\uff0c\u8f93\u51fa\u901a\u9053\u6570\u4e5f\u4e3a1\u3002\u5b9e\u8d28\u4e0a\uff0c\u8fd9\u5c31\u662f\u5bf9\u5377\u79ef\u7684\u901a\u9053\u6570\u8fdb\u884c\u5206\u7ec4\uff0c\u7136\u540e\u5bf9\u6bcf\u7ec4\u7684\u7279\u5f81\u56fe\u5206\u522b\u8fdb\u884c\u5377\u79ef\uff0c\u662f\u7ec4\u5377\u79ef\uff08group convolution\uff09\u7684\u4e00\u79cd\u6269\u5c55\uff0c\u6bcf\u7ec4\u53ea\u6709\u4e00\u4e2a\u7279\u5f81\u56fe\u3002\\n    >\\n    > \u5bf9\u4e8ePW:\\n    >\\n    > - \u8f93\u5165: $D_F\\\\times D_F\\\\times M$\uff0c\u8f93\u51fa:$D_F\\\\times D_F\\\\times N$\uff0c\u5377\u79ef\u6838:$1\\\\times1\\\\times M\\\\times N$\\n    > - \u8ba1\u7b97\u91cf: $1\\\\times1\\\\times M\\\\times N\\\\times D_F\\\\times D_F$\\n    > - \u7406\u89e3: \u5c31\u662f$1\\\\times1$\u5377\u79ef\uff0c\u662f\u666e\u901a\u7684\u5377\u79ef\u64cd\u4f5c\u3002\\n\\n    \u6807\u51c6\u5377\u79ef\u5904\u7406\u4e00\u5f20$D_F\\\\times D_F\\\\times M$\u7684\u7279\u5f81\u56fe$\\\\bold F$\uff0c\u5f97\u5230\u4e00\u5f20$D_G\\\\times G_F\\\\times N$\u7684\u7279\u5f81\u56fe$\\\\bold G$\uff0c\u5176\u4e2d$D_F$\u662f\u7a7a\u95f4\u7684\u957f\u548c\u5bbd\uff0c$M$\u662f\u8f93\u5165\u901a\u9053\u6570\uff0c$D_G$\u662f\u6307\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u7684\u957f\u5bbd\uff0c$N$\u662f\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u3002\u6807\u51c6\u5377\u79ef\u5728\u505a\u8fd0\u7b97\u7684\u65f6\u5019\u4f7f\u7528\u4e00\u4e2a$D_K\\\\times D_K$\u7684\u5377\u79ef\u6838\u8fdb\u884c\u8fd0\u7b97\uff0c\u5355\u6b21\u8ba1\u7b97\u7684\u8ba1\u7b97\u6d88\u8017\u4e3a$D_K\\\\times D_K\\\\times M\\\\times N$\uff0c\u5176\u4e2d$D_K$\u662f\u6307\u5377\u79ef\u6838\u7684\u5927\u5c0f\uff0c\u4e00\u5171\u9700\u8981\u603b\u5171\u5f97\u5230\u4e00\u5f20\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u603b\u8ba1\u7b97\u91cf\u6d88\u8017\u662f$D_K\\\\times D_K\\\\times M\\\\times N\\\\times D_F\\\\times D_F$\u901a\u8fc7\u8be5\u5f0f\u5b50\u53ef\u4ee5\u5f97\u5230\u8ba1\u7b97\u6d88\u8017\u53d6\u7edd\u4e8e\u7279\u5f81\u56fe\u5927\u5c0f\u3001\u5377\u79ef\u6838\u5927\u5c0f\u3001\u8f93\u51fa\u901a\u9053\u6570\u7b49\u56e0\u7d20\u3002\u6807\u51c6\u5377\u79ef\u901a\u8fc7\u5377\u79ef\u6838\u548c\u7279\u5f81\u7684\u7ec4\u5408\u80fd\u4ea7\u751f\u65b0\u7684\u7279\u5f81(\u63d0\u53d6\u7279\u5f81\u7684\u672c\u8d28)\u3002\\n\\n    ![image-20210518103843290](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518103843290.png)\\n\\n    \u800c\u5bf9\u4e8eDSC\u6765\u8bf4\uff0c\u56e0\u4e3a\u5377\u79ef\u7684\u8fc7\u7a0b\u53ef\u4ee5\u88ab\u5206\u6210\u4e24\u6b65\uff0c\u4e00\u6b65\u662f\u6ee4\u6ce2\uff0c\u53e6\u4e00\u6b65\u662f\u7ec4\u5408\uff0c\u5c06\u8fd9\u4e24\u6b65\u5206\u79bb\u7684\u5377\u79ef\u5c31\u662f\u672c\u6587\u63d0\u51fa\u7684DSC\u3002\u4e0b\u9762\u5bf9\u5176\u8ba1\u7b97\u8fdb\u884c\u5206\u6790\u3002DSC\u4e3b\u8981\u5206\u6210\u4e24\u5c42\uff0c\u6df1\u5ea6\u5377\u79ef\u5c42(Depthwise Convolution,\u4ee5\u4e0b\u7b80\u79f0DW)\u548c\u70b9\u5377\u79ef\u5c42(Pointwise Convolution,\u4ee5\u4e0b\u7b80\u79f0PW)\u3002\u7528\u5355\u4e2a\u5377\u79ef\u5bf9\u8f93\u5165\u56fe\u7247\u6bcf\u4e00\u4e2a\u901a\u9053\u90fd\u8fdb\u884c\u4e00\u6b21\u6df1\u5ea6\u5377\u79efDW\uff0c\u7136\u540e\u518d\u5bf9\u6df1\u5ea6\u5377\u79ef\u7684\u8f93\u51fa\u7ed3\u679c\u4f7f\u7528$1\\\\times1$\u7684\u5377\u79ef\uff0c\u5bf9DW\u4e4b\u540e\u7684\u5c42\u8fdb\u884c\u7ebf\u6027\u7ec4\u5408\u3002\u7ecf\u8fc7\u8ba1\u7b97\uff0c\u8fdb\u884cDW\u65f6\u7684\u8ba1\u7b97\u91cf\u4e3a$D_K\\\\times D_K\\\\times M\\\\times D_F\\\\times D_F$\uff0c\u56e0\u4e3a\u5bf9\u7b2c $m$ \u4e2a\u901a\u9053\u8fdb\u884cDW\u4e4b\u540e\u751f\u4ea7\u7279\u5f81\u56fe $\\\\bold F$ \u4e2d\u5bf9\u5e94\u7b2c $m$ \u4e2a\u901a\u9053\u7684\u7279\u5f81\u56fe$\\\\bold G$\u3002\u4f46\u8fd9\u6837\u76ee\u524d\u53ea\u662f\u628a\u901a\u9053\u8fdb\u884c\u6ee4\u6ce2\uff0c\u4f46\u8fd8\u6ca1\u6709\u8fdb\u884c\u7ec4\u5408\u4ea7\u751f\u65b0\u7684\u7279\u5f81\uff0c\u5bf9DW\u4ea7\u751f\u7684\u7279\u5f81\u56fe\u4f7f\u7528PW\uff0c\u4e00\u4e2a$1\\\\times1$\u7684\u5377\u79ef\u4ea7\u751f\u65b0\u7684\u7279\u5f81\u3002\\n\\n    ![image-20210518105644144](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518105644144.png)\\n\\n    ![image-20210518105705131](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518105705131.png)\\n\\n    PW\u7684\u8ba1\u7b97\u6d88\u8017\u4e3a$M\\\\times N\\\\times D_F\\\\times D_F$.\u6240\u4ee5\u5bf9\u4e8eDSC\u6765\u8bf4\u603b\u7684\u8ba1\u7b97\u91cf\u4e3a$(N+D_K\\\\times D_K)\\\\times M\\\\times D_F\\\\times D_F$.\u901a\u8fc7\u4e24\u5f0f\u76f8\u9664\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e24\u79cd\u8ba1\u7b97\u91cf\u4e0a\u7684\u5dee\u8ddd\\n    $$\\n    \\\\frac{(N+D_K\\\\times D_K)\\\\times M\\\\times D_F\\\\times D_F}{D_K\\\\times D_K\\\\times M\\\\times N\\\\times D_F\\\\times D_F}\\\\\\\\ = \\\\frac{1}{N} + \\\\frac{1}{D_K^2}\\n    $$\\n\\n  + \u603b\u7ed3\\n\\n    \u6240\u4ee5\u76f8\u5bf9\u6765\u8bf4\uff0cDSC\u51cf\u5c11\u4e86\u5f88\u591a\u8ba1\u7b97\u91cf\u3002\\n\\n- Network Structure\\n\\n  \u5bf9\u4e8eMobileNet\uff0c\u5c31\u662f\u4f7f\u7528\u4e86DSC\u7ed3\u6784\u6765\u5806\u53e0\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\uff0c\u6700\u540e\u5f97\u5230\u7684\u7f51\u7edc\u7ed3\u6784\u56fe\u5982\u4e0b\uff1a\\n\\n  ![image-20210518105953216](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518105953216.png)\\n\\n  ![image-20210518110406332](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518110406332.png)\\n\\n  ![image-20210518112758044](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518112758044.png)\\n\\n- Hyper-Parameters\\n\\n  - Width Multiplier\\n\\n    \u8fd9\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u4e3a\u4e86\u4f7f\u5f97\u7f51\u7edc\u66f4\u52a0\u5c0f\u548c\u8f7b\u91cf\uff0c\u901a\u8fc7\u4e00\u4e2a\u901a\u9053\u957f\u5ea6\u7cfb\u6570$\\\\alpha$\u6765\u8c03\u6574DSC\u7684\u901a\u9053\u957f\u5ea6\uff0c\u5bf9\u8f93\u51fa\u7684\u901a\u9053\u6570\u4e58\u4e0a$\\\\alpha$\u6765\u8c03\u6574DSC\u8f93\u51fa\u7684\u901a\u9053\u957f\u5ea6\uff0c\u8ba1\u7b97\u6d88\u8017\u7684\u8868\u8fbe\u5f0f\u4e3a$D_K\\\\times D_K\\\\times\\\\alpha M\\\\times D_F\\\\times D_F+\\\\alpha M\\\\times\\\\alpha N\\\\times D_F\\\\times D_F,(\\\\alpha\\\\in [0,1])$.\u4e00\u822c\u6765\u8bf4\uff0c$\\\\alpha$\u4f1a\u8c03\u6574\u6210$1,0.75,0.5,0.25$\uff0c\u5f53$\\\\alpha=1$\u7684\u65f6\u5019\u662f\u539f\u59cb\u7684mobilenet\uff0c$\\\\alpha<1$\u65f6\uff0c\u662f\u538b\u7f29\u8fc7\u7684mobilnet\u3002\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u66f4\u5c0f\u7684\u6a21\u578b\u3002\\n\\n  - Resolution Multiplier\\n\\n    \u53e6\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u53eb\u505a\u5206\u8fa8\u7387\u5927\u5c0f\u7cfb\u6570$\\\\rho,(\\\\rho\\\\in[0,1])$\uff0c\u5373\u5bf9\u8f93\u5165\u7684\u56fe\u7247\u548c\u6bcf\u4e00\u5c42\u7684\u7279\u5f81\u56fe\u5927\u5c0f\u4e58\u4e00\u4e2a\u7cfb\u6570\uff0c\u8fd9\u4e2a\u7cfb\u6570\u7528\u6765\u8c03\u6574\u8f93\u5165\u56fe\u50cf\u548c\u7279\u5f81\u56fe\u7684\u5927\u5c0f\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u51cf\u5c11\u53c2\u6570\u91cf\u3002\u56fe\u50cf\u8f93\u5165\u4e00\u822c\u7684\u53d6\u503c\u4e3a$224,192,160,128$\uff0c\u5f53$\\\\rho=1$\u7684\u65f6\u5019\u662f\u539f\u59cb\u7684mobilenet\uff0c$\\\\rho<1$\u65f6\uff0c\u662f\u538b\u7f29\u8fc7\u7684mobilnet\u3002\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u66f4\u5c0f\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u51cf\u5c11$\\\\rho^2$\u500d\u7684\u53c2\u6570\u3002\\n\\n  - \u603b\u7ed3\\n\\n    \u7efc\u5408\u4e0a\u9762\u4e24\u4e2a\u8d85\u53c2\u6570\uff0c\u6700\u7ec8\u7684\u53c2\u6570\u91cf\u4e3a$D_K\\\\times D_K\\\\times\\\\alpha M\\\\times\\\\rho D_F\\\\times\\\\rho D_F+\\\\alpha M\\\\times\\\\alpha N\\\\times\\\\rho D_F\\\\times\\\\rho D_F,(\\\\alpha\\\\in[0,1],\\\\rho\\\\in[0,1])$\\n\\n### Experiments\\n\\n![image-20210518111850667](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518111850667.png)\\n\\n![image-20210518111920979](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518111920979.png)\\n\\n![image-20210518111929583](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518111929583.png)\\n\\n![image-20210518111942245](./src/MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications/image-20210518111942245.png)"},{"id":"/[15]Gated-Channel-Transformation-for-Visual-Recognition","metadata":{"permalink":"/blog/[15]Gated-Channel-Transformation-for-Visual-Recognition","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[15]Gated-Channel-Transformation-for-Visual-Recognition.md","source":"@site/blog/[15]Gated-Channel-Transformation-for-Visual-Recognition.md","title":"Gated Channel Transformation for Visual Recognition","description":"\u8bba\u6587\u540d\u79f0\uff1aGated Channel Transformation for Visual Recognition","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"}],"readingTime":9.48,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"Gated Channel Transformation for Visual Recognition","authors":["asthestarsfall"],"tags":["attention-mechanism"]},"prevItem":{"title":"MobileNets - Efficient Convolutional Neural Networks for Mobile Vision Applications","permalink":"/blog/[14]MobileNets-Efficient-Convolutional-Neural-Networks-for-Mobile-Vision-Applications"},"nextItem":{"title":"Convolutional Block Attention Module","permalink":"/blog/[16]Convolutional-Block-Attention-Module"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1a[Gated Channel Transformation for Visual Recognition](https://arxiv.org/abs/1909.11519)\\n>\\n> \u4f5c\u8005\uff1aZongxin Yang, Linchao Zhu, Y u Wu, and Yi Yang\\n>\\n> Code\uff1ahttps://github.com/z-x-yang/GCT\\n\\n## \u6458\u8981\\n\\n- GCT\u6a21\u5757\u662f\u4e00\u4e2a\u666e\u904d\u9002\u7528\u7684\u95e8\u63a7\u8f6c\u6362\u5355\u5143\uff0c\u53ef\u4e0e\u7f51\u7edc\u6743\u91cd\u4e00\u8d77\u4f18\u5316\u3002\\n- \u4e0d\u540c\u4e8eSEnet\u901a\u8fc7\u5168\u8fde\u63a5\u7684\u9690\u5f0f\u5b66\u4e60\uff0c\u5176\u4f7f\u7528\u53ef\u89e3\u91ca\u7684\u53d8\u91cf\u663e\u5f0f\u5730\u5efa\u6a21\u901a\u9053\u95f4\u7684\u5173\u7cfb\uff0c\u51b3\u5b9a\u662f\u7ade\u4e89\u6216\u662f\u5408\u4f5c\u3002\\n\\n**\u5173\u952e\u8bcd\uff1a\u53ef\u89e3\u91ca\u6027\u3001\u663e\u5f0f\u5173\u7cfb\u3001\u95e8\u63a7**\\n\\n## \u4ecb\u7ecd\\n\\n- \u5355\u4e2a\u5377\u79ef\u5c42\u53ea\u5bf9Feature Map\u4e2d\u6bcf\u4e2a\u7a7a\u95f4\u4f4d\u7f6e\u7684\u4e34\u8fd1\u5c40\u90e8\u4e0a\u4e0b\u6587\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5c40\u90e8\u6b67\u4e49\u3002\u901a\u5e38\u6709\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\uff1a\u4e00\u662f\u589e\u52a0\u7f51\u7edc\u7684\u6df1\u5ea6\uff0c\u5982VGG\uff0cResnet\uff0c\u4e8c\u662f\u589e\u52a0\u7f51\u7edc\u7684\u5bbd\u5ea6\u6765\u83b7\u5f97\u66f4\u591a\u7684\u5168\u5c40\u4fe1\u606f\uff0c\u5982GEnet\u5927\u91cf\u4f7f\u7528\u9886\u57df\u5d4c\u5165\uff0cSEnet\u901a\u8fc7\u5168\u5c40\u5d4c\u5165\u4fe1\u606f\u6765\u5efa\u6a21\u901a\u9053\u5173\u7cfb\u3002\\n- \u7136\u800cSEnet\u4e2d\u4f7f\u7528fc\u5c42\u4f1a\u51fa\u73b0\u4e24\u4e2a\u95ee\u9898\uff1a\\n  1. \u7531\u4e8e\u4f7f\u7528\u4e86fc\u5c42\uff0c\u51fa\u4e8e\u8282\u7701\u53c2\u6570\u7684\u8003\u8651\uff0c\u65e0\u6cd5\u5728\u6240\u6709\u5c42\u4e0a\u4f7f\u7528\\n  2. fc\u5c42\u7684\u53c2\u6570\u8f83\u4e3a\u590d\u6742\uff0c\u96be\u4ee5\u5206\u6790\u4e0d\u540c\u901a\u9053\u95f4\u7684\u5173\u8054\u6027\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd**\u9690\u5f0f**\u5b66\u4e60\\n  3. \u653e\u5728\u67d0\u4e9b\u5c42\u4e4b\u540e\u4f1a\u51fa\u73b0\u95ee\u9898\\n\\n\x3c!--truncate--\x3e\\n\\n## \u76f8\u5173\u5de5\u4f5c\\n\\n### \u95e8\u63a7\u673a\u5236\\n\\n\u95e8\u63a7\u673a\u5236\u5df2\u7ecf\u6210\u529f\u5730\u5e94\u7528\u4e8e\u4e00\u4e9b\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u4e2d\u3002LSTM\u5f15\u5165\u4e86\u8f93\u5165\u95e8\u3001\u8f93\u51fa\u95e8\u548c\u9057\u5fd8\u95e8\uff0c\u7528\u4e8e\u8c03\u8282\u6a21\u5757\u7684\u8fdb\u51fa\u4fe1\u606f\u6d41\u3002\u57fa\u4e8e\u95e8\u63a7\u673a\u5236\uff0c\u4e00\u4e9b\u6ce8\u610f\u529b\u65b9\u6cd5\u4fa7\u91cd\u4e8e\u5c06\u8ba1\u7b97\u8d44\u6e90\u96c6\u4e2d\u4e8e\u7279\u5f81\u4fe1\u606f\u6700\u4e30\u5bcc\u7684\u90e8\u5206\u3002\\n\\n### \u5f52\u4e00\u5316\u5c42\\n\\n\u8fd1\u5e74\u6765\uff0c\u5f52\u4e00\u5316\u5c42\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6df1\u5ea6\u7f51\u7edc\u4e2d\u3002\u5c40\u90e8\u54cd\u5e94\u5f52\u4e00\u5316\uff08LRN\uff09\u4e3a\u6bcf\u4e2a\u50cf\u7d20\u8ba1\u7b97\u901a\u9053\u95f4\u4e00\u4e2a\u5c0f\u90bb\u57df\u5185\u7684\u7edf\u8ba1\u4fe1\u606f\uff1b\u6279\u91cf\u5f52\u4e00\u5316\uff08BN\uff09\u5229\u7528\u6279\u7ef4\u5ea6\u4e0a\u7684\u5168\u5c40\u7a7a\u95f4\u4fe1\u606f\uff1b\u5c42\u5f52\u4e00\u5316\uff08LN\uff09\u6cbf\u7740\u901a\u9053\u7ef4\u5ea6\u800c\u4e0d\u662f\u6279\u5904\u7406\u7ef4\u5ea6\u8ba1\u7b97\uff1b\u7ec4\u5f52\u4e00\u5316\uff08GN\uff09\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5c06\u901a\u9053\u5212\u5206\u4e3a\u7ec4\uff0c\u5e76\u5728\u6bcf\u4e2a\u7ec4\u5185\u8ba1\u7b97\u5747\u503c\u548c\u65b9\u5dee\u6765\u8fdb\u884c\u5f52\u4e00\u5316\u3002\\n\\n##  GCT\\n\\n\u8bbe\u8ba1\u601d\u8def\uff1a\\n\\n1. \u901a\u8fc7p-norm\u5d4c\u5165\u5168\u5c40\u4e0a\u4e0b\u6587\u4fe1\u606f\\n2. \u901a\u8fc7\u5d4c\u5165\u4fe1\u606f\u4e0e\u53ef\u8bad\u7ec3\u53c2\u6570\u6765\u8fdb\u884c\u901a\u9053\u5f52\u4e00\u5316\\n3. \u901a\u8fc7\u95e8\u63a7\u6743\u91cd\u4e0e\u504f\u7f6e\u6765\u5b9e\u73b0\u901a\u9053\u95e8\u63a7\u6ce8\u610f\u529b\u673a\u5236\\n\\n### \u6574\u4f53\u7ed3\u6784\\n\\n![image-20210513113146461](https://gitee.com/Thedeadleaf/images/raw/master/image-20210513113146461.png)\\n\\nGCT\u6a21\u5757\u4e3b\u8981\u5305\u62ec\u4e09\u4e2a\u90e8\u5206\u2014\u2014**\u5168\u5c40\u4e0a\u4e0b\u6587\u5d4c\u5165**\u3001**\u901a\u9053\u5f52\u4e00\u5316**\u3001\u548c**\u95e8\u63a7\u81ea\u9002\u5e94**\u3002\u5176\u4e2d\uff0c\u5f52\u4e00\u5316\u64cd\u4f5c\u65f6**\u65e0\u53c2**\u7684\u3002\\n\\n\u540c\u65f6\uff0c\u4e3a\u4e86\u4f7fGCT**\u53ef\u5b66\u4e60**\uff0c\u5f15\u5165\u4e86\u4e09\u4e2a\u6743\u91cd\u2014\u2014$\\\\alpha\u3001\\\\gamma\u3001\\\\beta$\uff0c$\\\\alpha$\u8d1f\u8d23\u81ea\u9002\u5e94\u5d4c\u5165\u8f93\u51fa\u3002\u95e8\u63a7\u6743\u91cd$\\\\gamma$\u548c\u504f\u7f6e$\\\\beta$\u8d1f\u8d23\u63a7\u5236\u95e8\u7684\u6fc0\u6d3b\u3002\\n\\n\u53e6\u5916\uff0c**GCT\u7684\u53c2\u6570\u590d\u6742\u5ea6\u4e3a$O(C)$,\u800cSEnet \u7684\u590d\u6742\u5ea6\u4e3a$O(C^2)$\u3002**\\n\\n\u5219GCT\u6a21\u5757\u7684\u6fc0\u6d3b\u7279\u5f81\u4e3a\uff1a\\n$$\\n\\\\hat x=F(x|\\\\alpha,\\\\gamma,\\\\beta),\\\\alpha,\\\\gamma,\\\\beta \\\\in \\\\mathbb{R}^c\\n$$\\n\\n### \u5168\u5c40\u4e0a\u4e0b\u6587\u5d4c\u5165\\n\\n\u8f83\u5927\u7684\u611f\u53d7\u91ce\u53ef\u4ee5\u907f\u514d\u5c40\u90e8\u8bed\u4e49\u6b67\u4e49\uff0c\u56e0\u6b64\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5168\u5c40\u4e0a\u4e0b\u6587\u5d4c\u5165\u6a21\u5757\u6765**\u805a\u5408\u6bcf\u4e2a\u901a\u9053\u4e2d\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002**\\n\\n**GAP\uff08\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff09\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u5931\u6548**\uff0c\u5982\u5c06SE\u6a21\u5757\u90e8\u7f72\u5728LN\u5c42\u4e4b\u540e\uff0c\u56e0\u4e3aLN\u56fa\u5b9a\u4e86\u6bcf\u4e2a\u901a\u9053\u7684\u5e73\u5747\u6570\uff0c\u5bf9\u4e8e\u4efb\u610f\u8f93\u5165\uff0cGAP\u7684\u8f93\u51fa\u90fd\u662f\u6052\u5b9a\u7684\u3002\\n\\n\u8fd9\u91cc**\u9009\u7528\u4e86p-norm\u6765\u8fdb\u884c\u5168\u5c40\u4e0a\u4e0b\u6587\u5d4c\u5165**\uff0c2-norm\u7684\u6548\u679c\u6700\u597d\uff0c1-norm\u7684\u6548\u679c\u4e0e\u5176\u5341\u5206\u63a5\u8fd1\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u5f53p=1\u65f6\uff0c\u5bf9\u4e8e\u975e\u8d1f\u8f93\u5165\uff08\u5982\u90e8\u7f72\u5728ReLU\u4e4b\u540e\uff09\uff0c\u5c06\u7b49\u4ef7\u4e8eGAP\\n\\n\u5176\u4e2d\u53c2\u6570$\\\\alpha$\u5b9a\u4e49\u4e3a$\\\\alpha=[\\\\alpha_1...\\\\alpha_C]$\uff0c\u5f53$\\\\alpha_n$\u63a5\u8fd10\u65f6\uff0c\u8be5\u901a\u9053\u5c06\u4e0d\u53c2\u4e0e\u901a\u9053\u5f52\u4e00\u5316\\n\\n\u8be5\u6a21\u5757\u5b9a\u4e49\u4e3a\uff1a\\n$$\\ns_c=\\\\alpha||x_c||_p=\\\\alpha\\\\{[\\\\sum_{i=1}^H\\\\sum_{i=1}^W(x_c^{i,j})^p]+\\\\varepsilon\\\\}^{\\\\frac{1}{p}}\\n$$\\n\u5176\u4e2d$\\\\varepsilon$\u4e3a\u4e00\u4e2a\u6781\u5c0f\u7684\u5e38\u6570\u907f\u514d\u4e86\u96f6\u70b9\u5904\u6c42\u5bfc\u95ee\u9898\u3002\\n\\n### \u901a\u9053\u5f52\u4e00\u5316\\n\\n\u5f52\u4e00\u5316\u65b9\u6cd5\u53ef\u4ee5\u5728\u795e\u7ecf\u5143(\u6216\u901a\u9053)\u4e4b\u95f4\u5efa\u7acb**\u7ade\u4e89\u5173\u7cfb**\uff0c\u4f7f\u5f97\u5176\u4e2d\u901a\u9053\u54cd\u5e94\u8f83\u5927\u7684\u503c\u53d8\u5f97\u76f8\u5bf9\u66f4\u5927\uff0c\u5e76\u6291\u5236\u5176\u4ed6\u53cd\u9988\u8f83\u5c0f\u7684\u901a\u9053\uff08\u8be5\u8bf4\u6cd5\u6700\u65e9\u53ef\u80fd\u5728[LRN\u8bba\u6587](https://papers.nips.cc/paper/2012/file/c399862d3b9d6b76c8436e924a68c45b-Paper.pdf)\u4e2d\u63d0\u51fa\uff0c\u4f46\u662f\u8be5\u8bba\u6587\u5e76\u6ca1\u6709\u7ed9\u51fa\u4efb\u4f55\u89e3\u91ca\uff0c\u6216\u8bb8\u5f53**$\\\\frac{\\\\sqrt{C}}{||s_c||_2}>1$**\u5927\u4e8e1\u65f6\u4f1a\u8d77\u5230\u5efa\u7acb\u7ade\u4e89\u5173\u7cfb\u7684\u4f5c\u7528\uff09\uff0c\u8fd9\u91cc\u4f7f\u7528$l_2$\u6b63\u5219\u5316\u6765\u8fdb\u884c\u901a\u9053\u5f52\u4e00\u5316\u3002\\n\\n\u7c7b\u4f3c\u4e8eLRN\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a\\n$$\\n\\\\hat{s_c}=\\\\frac{\\\\sqrt{C}s_c}{||s||_2}=\\\\frac{\\\\sqrt{C}s_c}{[(\\\\sum_{i=1}^{C}s_c^2)+\\\\varepsilon]^{\\\\frac{1}{2}}}\\n$$\\n\\n### \u95e8\u63a7\u81ea\u9002\u5e94\\n\\n\u5b9a\u4e49\u5982\u4e0b\uff1a\\n$$\\n\\\\hat{x_c}=x_c[1+\\\\tanh(\\\\gamma_c\\\\hat{s_c}+\\\\beta_c)]\\n$$\\n\u5f53\u4e00\u4e2a\u901a\u9053\u7684\u95e8\u63a7\u6743\u91cd\u88ab\u79ef\u6781\u6fc0\u6d3b\u65f6\uff0cGCT\u4fc3\u8fdb\u8be5\u901a\u9053\u4e0e\u5176\u4ed6\u901a\u9053\u7ade\u4e89\u3002\u5f53\u95e8\u63a7\u6743\u91cd\u88ab\u6d88\u6781\u6fc0\u6d3b\u65f6\uff0cGCT\u9f13\u52b1\u8be5\u901a\u9053\u4e0e\u5176\u4ed6\u901a\u9053\u5408\u4f5c\u3002\\n\\n\u6b64\u5916\uff0c\u5f53\u95e8\u63a7\u6743\u91cd\u548c\u95e8\u63a7\u504f\u7f6e\u4e3a0\u65f6\uff0c\u5141\u8bb8\u539f\u59cb\u7279\u5f81\u4f20\u9012\u5230\u4e0b\u4e00\u5c42\uff1a\\n$$\\n\\\\hat{x}=F(x|\\\\alpha,0,0)=x\\n$$\\n\u8be5\u7279\u6027\u53ef\u4ee5\u6709\u6548\u89e3\u51b3\u6df1\u5c42\u7f51\u7edc\u9000\u5316\u95ee\u9898\uff0cResNet\u4e5f\u4ece\u8be5\u601d\u60f3\u4e2d\u53d7\u76ca\u3002\\n\\n\u56e0\u6b64\u5efa\u8bae\u5728GCT\u5c42\u521d\u59cb\u5316\u4e2d\u5c06\u03b3\u548c\u03b2\u521d\u59cb\u5316\u4e3a0\u3002\u8fd9\u6837\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u7684\u521d\u59cb\u6b65\u9aa4\u4f1a\u66f4\u52a0\u7a33\u5b9a\uff0cGCT\u7684\u6700\u7ec8\u8868\u73b0\u4e5f\u4f1a\u66f4\u597d\u3002\\n\\n### \u4ee3\u7801\\n\\n```python\\nclass GCT(nn.Module):\\n\\n    def __init__(self, num_channels, epsilon=1e-5, mode=\'l2\', after_relu=False):\\n        super(GCT, self).__init__()\\n\\n        self.alpha = nn.Parameter(torch.ones(1, num_channels, 1, 1))\\n        self.gamma = nn.Parameter(torch.zeros(1, num_channels, 1, 1))\\n        self.beta = nn.Parameter(torch.zeros(1, num_channels, 1, 1))\\n        self.epsilon = epsilon\\n        self.mode = mode\\n        self.after_relu = after_relu\\n\\n    def forward(self, x):\\n\\n        if self.mode == \'l2\':\\n            embedding = (x.pow(2).sum((2, 3), keepdim=True) +\\n                         self.epsilon).pow(0.5) * self.alpha #[B,C,1,1]\\n            norm = self.gamma / \\\\ \\n                (embedding.pow(2).mean(dim=1, keepdim=True) + self.epsilon).pow(0.5)\\n            # [B,1,1,1],\u516c\u5f0f\u4e2d\u7684\u6839\u53f7C\u5728mean\u4e2d\u4f53\u73b0\\n        elif self.mode == \'l1\':\\n            if not self.after_relu:\\n                _x = torch.abs(x)\\n            else:\\n                _x = x\\n            embedding = _x.sum((2, 3), keepdim=True) * self.alpha\\n            norm = self.gamma / \\\\\\n                (torch.abs(embedding).mean(dim=1, keepdim=True) + self.epsilon)\\n        else:\\n            print(\'Unknown mode!\')\\n            sys.exit()\\n\\n        gate = 1. + torch.tanh(embedding * norm + self.beta)\\n        # \u8fd9\u91cc\u76841+tanh\u5c31\u76f8\u5f53\u4e8e\u4e58\u52a0\u64cd\u4f5c\\n        return x * gate\\n\\t\\t\\n```\\n\\n## \u53ef\u89e3\u91ca\u6027\\n\\n### \u95e8\u63a7\u6743\u91cd\\n\\n\u5c06\u95e8\u63a7\u6743\u91cd\u5728ResNet-50\u4e0a\u7684\u5206\u5e03\u8fdb\u884c\u53ef\u89c6\u5316\uff1a\\n\\n![image-20210520220336157](https://gitee.com/Thedeadleaf/images/raw/master/20210520220347.png)\\n\\n- value\u4ee3\u8868\u6743\u91cd\u7684\u503c\\n- index of layers\u8868\u793a\u6743\u91cd\u6240\u5728\u7f51\u7edc\u5c42\u6570\u7684\u7ef4\u6570\uff0c\u8d8a\u5927\u8bf4\u660e\u5176\u4f4d\u7f6e\u8d8a\u9760\u8fd1\u8f93\u51fa\\n- density of params\u8868\u793a\u53c2\u6570\u7684\u5bc6\u5ea6\uff0c\u8fd9\u91cc\u505a\u4e86$\\\\log(1+z)$\u7684\u5904\u7406\u6765\u653e\u7f29$z$\u8f74\\n\\n\u8ba1\u7b97\u95e8\u63a7\u6743\u91cd\u5728\u4e0d\u540c\u4f4d\u7f6e\u7684\u5747\u503c\u548c\u65b9\u5dee\uff1a\\n\\n![image-20210520220709174](https://gitee.com/Thedeadleaf/images/raw/master/20210520222730.png)\\n\\n\\n\\n\u53ef\u4ee5\u770b\u5230\uff1a\\n\\n- \u7f51\u7edc\u6d45\u5c42\uff0c\u95e8\u63a7\u6743\u91cd\u7684\u5747\u503c\u5c0f\u4e8e0\uff0cGCT\u6a21\u5757\u503e\u5411\u4e8e\u51cf\u5c0f\u901a\u9053\u5dee\u5f02\u6027\uff0c\u9f13\u52b1\u901a\u9053\u4e4b\u95f4\u5408\u4f5c\u3002\\n- \u7f51\u7edc\u6df1\u5c42\uff0c\u95e8\u63a7\u6743\u91cd\u7684\u5747\u503c\u5927\u4e8e0\uff0cGCT\u6a21\u5757\u503e\u5411\u4e8e\u589e\u52a0\u901a\u9053\u5dee\u5f02\u6027\uff0c\u9f13\u52b1\u901a\u9053\u4e4b\u95f4\u7ade\u4e89\u3002\\n\\n### \u5bf9\u4e8e\u5408\u4f5c\u548c\u7ade\u4e89\u7684\u89e3\u91ca\\n\\n- \u5728\u7f51\u7edc\u6d45\u5c42\uff0c\u4e3b\u8981\u5b66\u4e60\u4f4e\u7ea7\u7279\u5f81\uff0c\u5982\u7eb9\u7406\uff0c\u8fb9\u7f18\u7b49\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u57fa\u7840\u7279\u5f81\uff0c\u6211\u4eec\u9700\u8981\u901a\u9053\u4e4b\u95f4\u8fdb\u884c\u5408\u4f5c\uff0c\u4ee5\u66f4\u52a0\u5e7f\u6cdb\u5730\u63d0\u53d6\u7279\u5f81\u3002\\n- \u5728\u7f51\u7edc\u6df1\u5c42\uff0c\u4e3b\u8981\u5b66\u4e60\u9ad8\u7ea7\u7279\u5f81\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u5dee\u5f02\u5f80\u5f80\u5f88\u5927\uff0c\u800c\u4e14\u4e0e\u4efb\u52a1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u6211\u4eec\u9700\u8981\u901a\u9053\u4e4b\u95f4\u8fdb\u884c\u7ade\u4e89\uff0c\u6765\u83b7\u5f97\u66f4\u6709\u4ef7\u503c\u7684\u7279\u5f81\u4fe1\u606f\u3002\\n\\n## \u6eb6\u89e3\u7814\u7a76\\n\\n\u672c\u6587\u5e76\u6ca1\u6709\u5bf9**GCT\u5404\u90e8\u5206\u5757\u7684\u6709\u6548\u6027\u8fdb\u884c\u63a2\u7d22**\uff0c\u800c\u662f\u5bf9\u5404\u4e2a\u90e8\u5206\u4e2d\u7684p-norm\u65b9\u6cd5\u4ee5\u53ca\u6fc0\u6d3b\u51fd\u6570\u8fdb\u884c\u5bf9\u6bd4\u3002\\n\\n\u6587\u4e2d\u4ec5\u4ec5\u7ed9\u51fa\u4e86\u95e8\u63a7\u6743\u91cd\u7684\u6709\u6548\u6027\uff0c\u5e76\u6ca1\u6709\u5177\u4f53\u5206\u6790\u95e8\u63a7\u504f\u7f6e\u548c\u5d4c\u5165\u6743\u91cd\u7684\u4f5c\u7528\u3002\\n\\n## \u8865\u5145\\n\\n### \u8bad\u7ec3\\n\\n\u5c06GCT\u6a21\u5757\u6dfb\u52a0\u8fdb\u5df2\u6709\u7684\u6a21\u578b\u65f6\uff0c\u53ef\u4ee5\u5148\u51bb\u7ed3\u7f51\u7edc\u7684\u5176\u4ed6\u53c2\u6570\u800c\u53ea\u8bad\u7ec3GCT\u6a21\u5757\u4e2d\u7684\u53c2\u6570\uff0c\u4e4b\u540e\u518d\u5c06\u7f51\u7edc\u89e3\u51bb\u4e00\u8d77\u8bad\u7ec3\u3002\\n\\n\u4e5f\u53ef\u4ee5\u5c06GCT\u4ece\u4e00\u5f00\u59cb\u5c31\u52a0\u5165\u7f51\u7edc\u4e4b\u4e2d\uff0c\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u3002\\n\\n### \u601d\u8003\\n\\n\u901a\u8fc75.1\u4e2d\u7684\u6743\u91cd\u5206\u5e03\u56fe\u53ef\u4ee5\u53d1\u73b0\uff0c\u6709\u76f8\u5f53\u5927\u7684\u4e00\u90e8\u5206\u6743\u91cd\u96c6\u4e2d\u57280\u5de6\u53f3\uff0c\u662f\u5426\u53ef\u4ee5\u8bf4\u660eGCT\u5b58\u5728\u4e00\u5b9a\u7684\u5197\u4f59\uff1f\\n\\n\u53ef\u4ee5\u63a2\u7d22\u66f4\u591a\u5168\u5c40\u4fe1\u606f\u5d4c\u5165\u7684\u65b9\u6cd5\u4ee5\u53ca\u5f52\u4e00\u5316\u7684\u65b9\u6cd5\u3002"},{"id":"/[16]Convolutional-Block-Attention-Module","metadata":{"permalink":"/blog/[16]Convolutional-Block-Attention-Module","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[16]Convolutional-Block-Attention-Module.md","source":"@site/blog/[16]Convolutional-Block-Attention-Module.md","title":"Convolutional Block Attention Module","description":"\u8bba\u6587\u540d\u79f0\uff1aCBAM: Convolutional Block Attention Module","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"}],"readingTime":7.31,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"Convolutional Block Attention Module","authors":["asthestarsfall"],"tags":["attention-mechanism"]},"prevItem":{"title":"Gated Channel Transformation for Visual Recognition","permalink":"/blog/[15]Gated-Channel-Transformation-for-Visual-Recognition"},"nextItem":{"title":"Boundary IoU - Improving Object-Centric Image Segmentation Evaluation","permalink":"/blog/[17]Boundary-IoU-Improving-Object-Centri-Image-Segmentation-Evaluation"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1a[CBAM: Convolutional Block Attention Module](https://arxiv.org/abs/1807.06521)\\n>\\n> \u4f5c\u8005\uff1aSanghyun Woo, Jongchan Park, Joon-Young Lee, and In So Kweon\uff0cKorea Advanced Institute of Science and Technology, Daejeon, Korea\\n\\n## \u6458\u8981\\n\\n- CBAM\uff08Convolutional Block Attention Moudule)\u662f\u4e00\u79cd\u7b80\u5355\u6709\u6548\u7684[\u524d\u9988](https://www.cnblogs.com/samshare/p/11801806.html)\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6ce8\u610f\u529b\u6a21\u5757\u3002 \\n- \u8be5\u6a21\u5757\u4e3a\u6df7\u5408\u57df\u6ce8\u610f\u529b\u673a\u5236\uff08\uff09\u4ece\u901a\u9053\u548c\u7a7a\u95f4\u4e24\u4e2a\u65b9\u9762\u4f9d\u6b21\u63a8\u65adattention map\u3002\\n- CBAM\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u901a\u7528\u6a21\u5757\uff0c\u53ef\u4ee5\u65e0\u7f1d\u96c6\u6210\u5230\u4efb\u4f55CNN\u4e2d\u3002\\n\\n**\u5173\u952e\u8bcd:\u7269\u4f53\u8bc6\u522b\uff0c\u6ce8\u610f\u673a\u5236\uff0c\u95e8\u63a7\u5377\u79ef**\\n\\n## \u4ecb\u7ecd\\n\\n- \u5377\u79ef\u795e\u7ecf\u7f51\u7edc(CNNs)\u57fa\u4e8e\u5176\u4e30\u5bcc\u7684\u8868\u8fbe\u80fd\u529b\u663e\u8457\u63d0\u9ad8\u4e86\u89c6\u89c9\u4efb\u52a1\u7684\u6027\u80fd\uff0c\u76ee\u524d\u7684\u4e3b\u8981\u5173\u6ce8\u7f51\u7edc\u7684\u4e09\u4e2a\u91cd\u8981\u56e0\u7d20\uff1a**\u6df1\u5ea6\uff0c\u5bbd\u5ea6\u548c\u57fa\u6570**\uff08Cardinality\uff09\u3002\\n- \u4eceLeNet\u5230\u6b8b\u5dee\u7f51\u7edc\uff0c\u7f51\u7edc\u53d8\u7684\u66f4\u52a0\u6df1\u5165\uff0c\u8868\u8fbe\u5f62\u5f0f\u66f4\u52a0\u4e30\u5bcc\uff1bGoogLeNet\u8868\u660e\u5bbd\u5ea6\u662f\u63d0\u9ad8\u6a21\u578b\u6027\u80fd\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\uff1bXception\u548cResNext\u5219\u901a\u8fc7\u589e\u52a0\u7f51\u7edc\u7684**\u57fa\u6570**\uff0c\u5728\u8282\u7701\u53c2\u6570\u7684\u540c\u65f6\uff0c\u6765\u83b7\u5f97\u6bd4\u6df1\u5ea6\u3001\u5bbd\u5ea6\u66f4\u5f3a\u7684\u8868\u8fbe\u80fd\u529b\uff08\u5f15\u7528\u4e8eResNext\u8bba\u6587\uff09\u3002\\n- \u9664\u4e86\u8fd9\u4e9b\u56e0\u7d20\u4e4b\u5916\uff0c\u672c\u6587\u8003\u5bdf\u4e86\u4e0e\u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u4e0d\u540c\u7684\u65b9\u9762\u2014\u2014\u6ce8\u610f\u529b\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u6ce8\u610f\u529b\u673a\u5236\\n\\n- \u6ce8\u610f\uff08attention\uff09\u5728\u4eba\u7c7b\u611f\u77e5\u4e2d\u8d77\u7740\u91cd\u8981\u7684\u4f5c\u7528\u3002\u4eba\u7c7b\u89c6\u89c9\u7cfb\u7edf\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\uff0c\u5b83\u4e0d\u4f1a\u8bd5\u56fe\u4e00\u6b21\u6027\u5904\u7406\u6574\u4e2a\u573a\u666f\uff0c\u800c\u662f\u5229\u7528\u4e00\u7cfb\u5217\u7684\u5c40\u90e8\u4e00\u77a5\uff08a sequence of partial glimpses\uff09\u6765\u83b7\u5f97\u5bf9\u663e\u8457\u90e8\u5206\u7684\u5173\u6ce8\u3002\\n- \u8fd1\u5e74\u6765\u6709\u4e00\u4e9b\u5c1d\u8bd5\u5c06\u6ce8\u610f\u529b\u673a\u5236\u52a0\u5165CNN\u4e2d\uff0c\u5982\u4f7f\u7528Endcoder-Decoder\u7ed3\u6784\u6ce8\u610f\u529b\u6a21\u5757\u7684Residual Attention Network\uff0c\u4f7f\u7528\u201cSqueeze-Excitation\u201c\u6a21\u5757\u7684SEnet\u3002\\n- \u5177\u4f53\u53ef\u89c1[\u6ce8\u610f\u529b\u673a\u5236](https://asthestarsfalll.icu/2021/05/12/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6/)\\n\\n## CBAM\\n\\n### \u6574\u4f53\u7ed3\u6784\\n\\n![image-20210512124618161](https://gitee.com/Thedeadleaf/images/raw/master/image-20210512124618161.png)\\n\\n- CBAM\u5728\u6df7\u5408\u57df\uff08\u901a\u9053\u57df\u3001\u7a7a\u95f4\u57df\uff09\u4e0a\u5f15\u5165\u6ce8\u610f\u529b\u673a\u5236\uff0c\u62e5\u6709\u66f4\u5f3a\u7684\u8868\u8fbe\u80fd\u529b\uff1b\\n\\n- \u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u88ab\u6982\u62ec\u4e3a\uff1a\\n  $$\\n  F\u2019=M_c(F)\\\\otimes F\\\\\\\\\\n  F\'\'=M_s(F\')\\\\otimes F\'\\n  $$\\n  \u5176\u4e2d$F$\u4e3a\u6a21\u5757\u7684\u8f93\u5165\uff0c$M_c\u3001M_s$\u8868\u793a\u901a\u9053\u6ce8\u610f\u529b\u56fe\u548c\u7a7a\u95f4\u6ce8\u610f\u529b\u56fe\uff0c$\\\\otimes$\u8868\u793aelement-wise multiply\uff0c\u5728\u5177\u4f53\u7684\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u4f1a\u76f8\u5e94\u7684\u8fdb\u884c\u5e7f\u64ad\u3002\\n\\n### Channel attention module\\n\\n![image-20210512130136918](https://gitee.com/Thedeadleaf/images/raw/master/image-20210512130136918.png)\\n\\n\u5229\u7528\u901a\u9053\u4e4b\u95f4\u7684\u5173\u7cfb\u751f\u6210\u901a\u9053\u6ce8\u610f\u56fe\uff08channel attention map\uff09\uff0c\u5177\u4f53\u53ef\u89c1[\u6ce8\u610f\u529b\u673a\u5236](https://asthestarsfalll.icu/2021/05/12/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6/)\\n\\n\u901a\u9053\u6ce8\u610f\u529b\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u56fe\u50cf\u7684\u201c\u4ec0\u4e48\u201d\u66f4\u6709\u610f\u4e49\u3002\\n\\n\u5b9e\u73b0\u8fc7\u7a0b\uff1a\\n\\n1. \u5bf9input\u8fdb\u884c**\u5168\u5c40\u5e73\u5747\u6c60\u5316**\u548c**\u5168\u5c40\u6700\u5927\u6c60\u5316**\u6765\u805a\u96c6\u7a7a\u95f4\u5185\u7684\u4fe1\u606f;\\n2. \u901a\u8fc7\u4e00\u4e2a**\u5171\u4eab\u7684**MLP(\u591a\u5c42\u611f\u77e5\u673a)(\u5177\u4f53\u5b9e\u73b0\u53ef\u75281X1\u5377\u79ef\u5c42),\u4e3a\u4e86\u51cf\u5c11\u53c2\u6570\u9690\u85cf\u5c42\u7684\u901a\u9053\u6570\u88ab\u8bbe\u7f6e\u4e3a$\\\\frac{C}{R}$\uff0c\u5728\u7b2c\u4e00\u5c42\u4e4b\u540e\u8bbe\u7f6e\u4e86ReLU\u51fd\u6570\u6765\u5f15\u5165\u975e\u7ebf\u6027\uff08\u7c7b\u4f3c\u4e8eSENet\uff0c\u8fd9\u79cd\u7ed3\u6784\u51fa\u73b0\u5728\u5404\u79cd\u7f51\u7edc\u4e4b\u4e2d\uff0c\u4f5c\u7528\u4e4b\u4e00\u662f\u4e3a\u4e86\u51cf\u5c11\u53c2\u6570\u548c\u8ba1\u7b97\u91cf\uff0c\u4f5c\u7528\u4e4b\u4e8c\u662f\u4e3a\u4e86\u83b7\u5f97\u66f4\u591a\u7684\u975e\u7ebf\u6027\uff09\uff1b\\n3. \u5bf9\u5e94\u6c42\u548c\u4e4b\u540e\u7ecf\u8fc7\u4e00\u4e2aReLU\u5c42\u5f97\u5230\u6700\u7ec8\u7684Channel attention map\\n4. \u5c06\u5176\u4e0einput\u76f8\u4e58\uff08\u4f1a\u81ea\u52a8\u8fdb\u884c\u5e7f\u64ad\uff09\u3002\\n\\n\u4ee3\u7801\u590d\u73b0\uff1a\\n\\n```python\\nclass Channel_module(nn.Module):\\n    def __init__(self,  in_ch, ratio=16):\\n        super(Channel_module, self).__init__()\\n        self.global_avg = nn.AdaptiveAvgPool2d(1)\\n        self.global_max = nn.AdaptiveMaxPool2d(1)\\n        self.fc1 = nn.Conv2d(in_ch, in_ch//ratio, 1, bias=False)\\n        self.relu = nn.ReLU(inplace=True)\\n        self.fc2 = nn.Conv2d(in_ch//ratio, in_ch, 1, bias=False)\\n\\n    def forward(self, x):\\n        a = self.fc2(self.relu(self.fc1(self.global_avg(x))))\\n        m = self.fc2(self.relu(self.fc1(self.global_avg(x))))\\n        attention = F.sigmoid(a+m)\\n        return x*attention\\n```\\n\\n### Spatial attention module\\n\\n![image-20210512133601683](https://gitee.com/Thedeadleaf/images/raw/master/image-20210512133601683.png)\\n\\n\u5229\u7528\u7a7a\u95f4\u4e4b\u95f4\u7684\u5173\u7cfb\u6765\u751f\u6210\u7a7a\u95f4\u6ce8\u610f\u529b\u56fe\uff08spatial attention map\uff09\\n\\n\u7a7a\u95f4\u6ce8\u610f\u529b\u4e3b\u8981\u5173\u6ce8\u201c\u54ea\u91cc\u201d\u6709\u91cd\u8981\u4fe1\u606f\uff0c\u4e0e\u901a\u9053\u6ce8\u610f\u529b\u76f8\u8f85\u76f8\u6210\u3002\\n\\n\u5b9e\u73b0\u8fc7\u7a0b\uff1a\\n\\n1. \u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u5206\u522b\u8fdb\u884c\u5e73\u5747\u6c60\u5316\u548c\u6700\u5927\u6c60\u5316\uff0c\u7136\u540e\u8fdb\u884cconcat\uff1b\\n2. \u7ecf\u8fc7\u4e00\u4e2a7X7\u7684\u5377\u79ef\u5c42\uff0c\u5c06\u901a\u9053\u6570\u964d\u4e3a1\uff1b\\n3. Sigmoid\u51fd\u6570\uff1b\\n4. \u4e0einputs\u4e5f\u5c31\u662f\u4e0a\u4e00\u5c42\u7684Channel-refined feature\u5bf9\u5e94\u76f8\u4e58\u3002\\n\\n\u4ee3\u7801\u590d\u73b0\uff1a\\n\\n```python\\nclass Spatial_module(nn.Module):\\n    def __init__(self, kernel_size=7):\\n        super(Spatial_module, self).__init__()\\n        self.conv = nn.Conv2d(2, 1, kernel_size, padding=3,\\n                              bias=False)  # \u4f7f\u7528padding\u4fdd\u6301\u5927\u5c0f\u4e0d\u53d8\\n\\n    def forward(self, x):\\n        a = torch.mean(x, dim=1, keepdim=True)  # \u6cbf\u7740channel\u7ef4\u5ea6\u8ba1\u7b97\u5747\u503c\u548c\u6700\u5927\u503c\\n        m, _ = torch.max(x, dim=1, keepdim=True)\\n        cx = torch.cat([a, m], dim=1)\\n        cx = F.sigmiod(self.conv(cx))\\n        return cx*x\\n```\\n\\n### Arrangement of attention modules.\\n\\n\u4ee5\u4e0a\u4e24\u4e2a\u6ce8\u610f\u529b\u6a21\u5757\u8ba1\u7b97\u4e92\u8865\u7684\u6ce8\u610f\u529b\uff0c\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u8fd9\u4e24\u4e2a\u6a21\u5757\u53ef\u4ee5\u5e76\u884c\u6216\u662f\u987a\u5e8f\u6392\u5217\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u987a\u5e8f\u6392\u5217\u6bd4\u5e76\u884c\u6392\u5217\u6548\u679c\u66f4\u597d\uff0c\u5176\u4e2d\u901a\u9053\u4f18\u5148\u987a\u5e8f\u7565\u597d\u4e8e\u7a7a\u95f4\u4f18\u5148\u987a\u5e8f\u3002\\n\\n## Ablation studies\uff08\u6d88\u878d\u7814\u7a76\uff09\\n\\n\u4f5c\u8005\u56e2\u961f\u9996\u5148\u5bfb\u627e\u8ba1\u7b97\u901a\u9053\u6ce8\u610f\u7684\u6709\u6548\u65b9\u6cd5\uff0c\u7136\u540e\u662f\u7a7a\u95f4\u6ce8\u610f\u3002\u6700\u540e\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u7ed3\u5408\u901a\u9053\u5173\u6ce8\u6a21\u5757\u548c\u7a7a\u95f4\u5173\u6ce8\u6a21\u5757\u3002\\n\\n### Channel attention\\n\\n\u4f5c\u8005\u56e2\u961f\u6bd4\u8f83\u4e863\u79cd\u4e0d\u540c\u7684\u901a\u9053\u6ce8\u610f\u529b:\u5e73\u5747\u6c60\u5316\u3001\u6700\u5927\u6c60\u5316\u548c\u4e24\u79cd\u6c60\u5316\u7684\u8054\u5408\u4f7f\u7528\u3002\\n\\n![image-20210512160839407](https://i.loli.net/2021/05/12/kFItTg6yD1u5joJ.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u6700\u5927\u6c60\u5316\u4e0e\u5e73\u5747\u6c60\u5316\u540c\u6837\u91cd\u8981\uff0c\u800cSENet\u5ffd\u7565\u4e86\u6700\u5927\u6c60\u5316\u7684\u91cd\u8981\u6027\u3002\\n\\n**\u5bf9\u663e\u8457\u90e8\u5206\u8fdb\u884c\u7f16\u7801\u7684\u6700\u5927\u6c60\u5316\u7279\u5f81\u53ef\u4ee5\u8865\u507f\u5bf9\u5168\u5c40\u4fe1\u606f\u8f6f\u7f16\u7801\u7684\u5e73\u5747\u6c60\u5316\u7279\u5f81**\u3002\\n\\n\u5728\u7a7a\u95f4\u6ce8\u610f\u529b\u7684\u7814\u7a76\u5f53\u4e2d\uff0c\u5c06\u76f4\u63a5\u4f7f\u7528\u6700\u5927\u6c60\u5316\u7279\u5f81\u548c\u5e73\u5747\u6c60\u5316\u7279\u5f81\uff0c\u5e76\u5c06R\u8bbe\u7f6e\u4e3a16\u3002\\n\\n### Spatial attention\\n\\n\u4f5c\u8005\u56e2\u961f\u8003\u8651\u4e86\u4e24\u79cd\u7a7a\u95f4\u6ce8\u610f\u529b\u7684\u65b9\u6848\uff1a**\u4e00\u662f\u4f7f\u7528\u901a\u9053\u7ef4\u5ea6\u4e0a\u7684\u5e73\u5747\u6c60\u5316\u548c\u6700\u5927\u6c60\u5316\uff0c\u4e8c\u662f\u4f7f\u75281X1\u5377\u79ef\u8fdb\u884c\u964d\u7ef4**\u3002\u6b64\u5916\u8fd8\u7814\u7a76\u4e863X3\u548c7X7\u5377\u79ef\u6838\u7684\u5f71\u54cd\u3002\u5728\u5b9e\u9a8c\u5f53\u4e2d\uff0c\u5c06\u7a7a\u95f4\u6ce8\u610f\u529b\u6a21\u5757\u7f6e\u4e8e\u901a\u9053\u6ce8\u610f\u529b\u6a21\u5757\u4e4b\u540e\u3002\\n\\n![image-20210512162421957](https://gitee.com/Thedeadleaf/images/raw/master/image-20210512162421957.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u9053\u6c60\u5316\u7684\u6548\u679c\u66f4\u597d\uff0c\u540c\u65f6\uff0c\u4f7f\u7528\u8f83\u5927\u7684\u6838\u4f1a\u4ea7\u751f\u66f4\u597d\u7684\u7cbe\u5ea6\uff0c\u8fd9\u610f\u5473\u7740\u9700\u8981\u4e00\u4e2a\u66f4\u5927\u7684\u611f\u53d7\u91ce\u6765\u51b3\u5b9a\u7a7a\u95f4\u4e0a\u7684\u91cd\u8981\u533a\u57df\u3002\\n\\n### Arrangement of the channel and spatial attention.\\n\\n\u4f5c\u8005\u56e2\u961f\u8003\u8651\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u6a21\u5757\u5b89\u6392\u65b9\u6848\uff1a\u901a\u9053\u4f18\u5148\uff0c\u7a7a\u95f4\u4f18\u5148\u548c\u5e76\u884c\u3002\\n\\n![image-20210512163932604](https://gitee.com/Thedeadleaf/images/raw/master/image-20210512163932604.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u9053\u4f18\u5148\u7684\u6548\u679c\u66f4\u597d\u3002\\n\\n### \u6700\u7ec8\u6548\u679c\\n\\n![image-20210512164218849](https://gitee.com/Thedeadleaf/images/raw/master/image-20210512164218849.png)"},{"id":"/[17]Boundary-IoU-Improving-Object-Centri-Image-Segmentation-Evaluation","metadata":{"permalink":"/blog/[17]Boundary-IoU-Improving-Object-Centri-Image-Segmentation-Evaluation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[17]Boundary-IoU-Improving-Object-Centri-Image-Segmentation-Evaluation.md","source":"@site/blog/[17]Boundary-IoU-Improving-Object-Centri-Image-Segmentation-Evaluation.md","title":"Boundary IoU - Improving Object-Centric Image Segmentation Evaluation","description":"\u8bba\u6587\u540d\u79f0\uff1aBoundary IoU: Improving Object-Centric Image Segmentation Evaluation","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"loss-function","permalink":"/blog/tags/loss-function"},{"label":"iou","permalink":"/blog/tags/iou"}],"readingTime":18.71,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"Boundary IoU - Improving Object-Centric Image Segmentation Evaluation","authors":["asthestarsfall"],"tags":["loss-function","iou"]},"prevItem":{"title":"Convolutional Block Attention Module","permalink":"/blog/[16]Convolutional-Block-Attention-Module"},"nextItem":{"title":"Involution - Inverting the Inherence of Convolution for Visual Recognition","permalink":"/blog/[18]Involution-Inverting-the-Inherence-of-Convolution-for-Visual-Recognition"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1a[Boundary IoU: Improving Object-Centric Image Segmentation Evaluation](https://arxiv.org/abs/2103.16562)\\n>\\n> \u4f5c\u8005\uff1aBowen Cheng\uff0cRoss Girshick\uff0cPiotr Doll\xe1r\uff0cAlexander C. Berg\uff0cAlexander Kirillov\\n>\\n> Code\uff1ahttps://github.com/bowenc0221/boundary-iou-api\\n\\n\u5199\u5728\u524d\u9762\uff1a\\n\\n\u200b\\t**\u6b63\u5982\u5b83\u7684\u540d\u5b57\uff0cBoundary IoU\u5c31\u662f\u8fb9\u754c\u8f6e\u5ed3\u4e4b\u95f4\u7684IoU\u3002**\\n\\n\u200b\\t\u91cd\u70b9\u4e3a3.4\u8282\u30015.1\u8282\uff0c\u5176\u4ed6\u57fa\u672c\u90fd\u662f\u5bf9\u6bd4\u5b9e\u9a8c\u3002\\n\\n\\n# \u6458\u8981\\n\\n- \u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8e\u8fb9\u754c\u8d28\u91cf\u7684\u5206\u5272\u8bc4\u4ef7\u65b9\u6cd5\u2014\u2014Boundary IoU\uff1b\\n- Boundary IoU\u5bf9\u5927\u5bf9\u8c61\u7684\u8fb9\u754c\u8bef\u5dee\u6bd4\u6807\u51c6\u63a9\u7801IoU\u6d4b\u91cf\u660e\u663e\u66f4\u654f\u611f\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fc7\u5206\u60e9\u7f5a\u8f83\u5c0f\u5bf9\u8c61\u7684\u8bef\u5dee\uff1b\\n- \u6bd4\u5176\u4ed6\u65b9\u6cd5\u66f4\u9002\u5408\u4f5c\u4e3a\u8bc4\u4ef7\u5206\u5272\u7684\u6307\u6807\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n# \u4ecb\u7ecd\\n\\n- \u5bf9\u4e8e\u5206\u5272\u4efb\u52a1\uff0c\u4e0d\u540c\u7684\u8bc4\u4f30\u6307\u6807\u5bf9\u4e0d\u540c\u7c7b\u578b\u9519\u8bef\u7684\u654f\u611f\u6027\u4e0d\u540c\uff0c\u7f51\u7edc\u53ef\u4ee5\u8f7b\u6613\u89e3\u51b3\u5bf9\u5e94\u654f\u611f\u7684\u7c7b\u578b\uff0c\u800c\u5176\u4ed6\u9519\u8bef\u7c7b\u578b\u7684\u6548\u679c\u5219\u4e0d\u5c3d\u4eba\u610f\uff1b\\n\\n- mask\u7684\u8fb9\u754c\u8d28\u91cf\u662f\u56fe\u50cf\u5206\u5272\u7684\u4e00\u4e2a\u91cd\u8981\u6307\u6807\uff0c\u5404\u79cd\u4e0b\u6e38\u4efb\u52a1\u76f4\u63a5\u53d7\u76ca\u4e8e\u66f4\u7cbe\u786e\u7684\u76ee\u6807\u5206\u5272\uff1b\\n\\n- \u76ee\u524d\u7684\u5206\u5272\u7f51\u7edc\u7684\u9884\u6d4b\u4e0d\u591f\u4fdd\u771f\uff0c\u8fb9\u7f18\u4e5f\u5f88\u7c97\u7cd9\uff0c**\u8fd9\u79cd\u60c5\u51b5\u8bf4\u660e\u76ee\u524d\u7684\u8bc4\u4f30\u6307\u6807\u53ef\u80fd\u5bf9\u76ee\u6807\u8fb9\u754c\u7684\u9884\u6d4b\u8bef\u5dee\u5177\u6709\u6709\u9650\u7684\u654f\u611f\u6027**\uff1b\\n\\n  ![image-20210508214206239](https://gitee.com/Thedeadleaf/images/raw/master/20210508214210.png)\\n\\n- \u5728\u5927\u91cf\u7684\u8bba\u6587\u4e2d\uff0cAP\u6700\u9ad8\u53ef\u8fbe\u5230\u516b\u4e5d\u5341\uff0c\u800c\u5f88\u5c11\u6709\u8bba\u6587\u4f1a\u63d0\u53ca\u4ed6\u4eecmask\u7684\u8fb9\u754c\u8d28\u91cf\u3002\\n\\n- \u5bf9\u4e8e\u5b9e\u4f8b\u5206\u5272\uff0c\u672c\u6587\u63d0\u51fa**Boundary Average Precision** (Boundary AP)\uff0c\u5bf9\u4e8e\u5168\u666f\u5206\u5272\uff0c\u63d0\u51fa**Boundary Panop-tic Quality** (Boundary PQ)\u3002\\n\\n# \u76f8\u5173\u6307\u6807\\n\\n\u5404\u79cd\u76f8\u5173\u6307\u6807\u5982\u4e0b\uff1a\\n\\n![image-20210508222750295](https://gitee.com/Thedeadleaf/images/raw/master/20210508223158.png)\\n\\n\u9996\u5148\u89e3\u91ca\u51e0\u4e2a\u540d\u8bcd\uff1a\\n\\n1. \u5bf9\u79f0\uff08Symmetric\uff09\uff1aGT\uff08GroundTruth\uff09\u548cPred\uff08prediction\uff09\u7684\u4ea4\u6362\u662f\u5426\u6539\u53d8\u6d4b\u91cf\u503c\\n\\n2. \u503e\u5411\uff08Preference\uff09\uff1a\u8861\u91cf\u65b9\u6cd5\u662f\u5426\u504f\u5411\u67d0\u4e00\u7c7b\u578b\u7684\u9884\u6d4b\u3002\\n\\n3. \u4e0d\u7075\u654f\u5ea6\uff08Insensitivity\uff09\uff1a\u6d4b\u91cf\u4e0d\u592a\u654f\u611f\u7684\u8bef\u5dee\u7c7b\u578b\u3002\\n\\n4. \u4e09\u5206\u56fe\uff08Trimap\uff09\uff1a\u5bf9\u7ed9\u5b9a\u56fe\u50cf\u7684\u4e00\u79cd\u7c97\u7565\u5212\u5206\u5c06\u7ed9\u5b9a\u56fe\u50cf\u5212\u5206\u4e3a\u524d\u666f\u3001\u80cc\u666f\u548c\u5f85\u6c42\u672a\u77e5\u533a\u57df\u3002\\n\\n   <img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/20210509151808.png\\" alt=\\"img\\" />\\n\\n5. Mask-based Measure\uff1a\u8003\u8651\u7269\u4f53\u7684\u6240\u6709\u50cf\u7d20\\n\\n6. Boundary-based Measure\uff1a\u8861\u91cf\u9884\u6d4b\u8fb9\u754c\u7684\u5206\u5272\u8d28\u91cf\uff0c\u4e0d\u540c\u4e8eMask-based Measure\uff0c\u8be5\u65b9\u6cd5\u53ea\u8bc4\u4f30\u8fb9\u754c\u53ca\u5176\u90bb\u8fd1\u7684\u50cf\u7d20\u3002\\n\\n7. d\uff1a\u8fb9\u754c\u7a84\u5e26\u7684\u50cf\u7d20\u5bbd\u5ea6\\n\\n\u901a\u8fc7\u5206\u6790\u5404\u79cd\u76f8\u5173\u6307\u6807\u7684\u7f3a\u70b9\uff0c\u6211\u4eec\u5f97\u51faBoundary IoU\u5e94\u8be5\u62e5\u6709\u7684\u7279\u6027\uff1a**\u540c\u65f6\u8003\u8651\u5206\u7c7b\u3001\u5b9a\u4f4d\u548c\u5206\u5272\u8d28\u91cf\u3002**\\n\\n## Mask IoU\u548cPixel Accuracy\\n\\n\u6240\u6709\u50cf\u7d20\u5bf9\u6307\u6807\u7684\u8d21\u732e\u90fd\u662f\u76f8\u540c\u7684\uff0c\u800c\u7269\u4f53\u5185\u90e8\u7684\u50cf\u7d20\u5448\u4e8c\u6b21\u578b\u589e\u957f\uff0c\u5176\u8fb9\u754c\u4ec5\u4f1a\u7ebf\u6027\u589e\u957f\uff0c\u56e0\u6b64**\u5bf9\u8f83\u5927\u7269\u4f53\u7684\u8fb9\u754c\u4e0d\u591f\u654f\u611f**\u3002\\n\\nMask IoU\u8ba1\u7b97\u65b9\u5f0f\u793a\u610f\u56fe\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/20210510161356.png\\" alt=\\"image-20210510161350211\\" />\\n\\n## Trimap IoU\\n\\n\u57fa\u4e8e\u8fb9\u754c\u7684\u5206\u5272\u6307\u6807\uff0c\u5176\u8ba1\u7b97\u8ddd\u79bbGT\u548cpred\u8fb9\u754cd\u50cf\u7d20\u7a84\u5e26\u5185\u7684IoU\uff0c\u8ba1\u7b97\u65b9\u5f0f\u793a\u610f\u56fe\u5982\u4e0b\uff08\u65b9\u4fbf\u8d77\u89c1\uff0c\u7b80\u5316\u4e3a\u77e9\u5f62\u4e14\u53ea\u663e\u793a\u8fb9\u754c\u90e8\u5206\uff09\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/20210509163907.png\\" alt=\\"image-20210509163853163\\" />\\n\\n**\u9700\u8981\u6ce8\u610f\u5206\u6bcd\u7684**$G_d\\\\cap G$\u3002\\n\\n## Feature Measure\\n\\nF-Measure\u6700\u521d\u88ab\u63d0\u51fa\u7528\u4e8e\u8fb9\u7f18\u68c0\u6d4b\uff0c\u4f46\u5b83\u4e5f\u88ab\u7528\u4e8e\u8bc4\u4ef7\u5206\u5272\u8d28\u91cf\u3002\u5728\u6700\u521d\u7684\u516c\u5f0f\u4e2d\uff0c\u4f7f\u7528\u4e8c\u5206\u56fe\u5339\u914d\u6765\u8fdb\u884c\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u9ad8\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u6765\u8bf4\u8ba1\u7b97\u6210\u672c\u5f88\u5927\uff1b\u56e0\u6b64\u63d0\u51fa\u4e86\u4e00\u79cd\u5141\u8bb8\u91cd\u590d\u5339\u914d\u7684\u8fd1\u4f3c\u7b97\u6cd5\uff0c**precision\u4e3apred\u8f6e\u5ed3\u4e2d \\\\ \u8ddd\u79bbGT\u8f6e\u5ed3\u4e2d\u50cf\u7d20 \\\\ \u5728d\u4e2a\u50cf\u7d20\u4ee5\u5185\u7684 \\\\ \u50cf\u7d20 \\\\ \u6240\u5360pred\u7684\u6bd4\u4f8b**\uff08\u5df2\u65ad\u53e5\uff09\uff0crecall\u540c\u7406\u3002\u4e0d\u662f\u5f88\u7406\u89e3\uff0c\u539f\u6587\u5982\u4e0b\uff1a\\n\\n![image-20210510151147870](https://gitee.com/Thedeadleaf/images/raw/master/20210510151207.png)\\n\\nPrecision\u548cRecall\u8ba1\u7b97\u65b9\u5f0f\u793a\u610f\u56fe\u5982\u4e0b\uff08\u53ef\u80fd\uff09\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/20210510153516.png\\" alt=\\"image-20210510152547915\\" />\\n\\n## Boundary  IoU\\n\\nBoundary IoU\u5bf9\u5927\u7269\u4f53\u8fb9\u754c\u8bef\u5dee\u66f4\u52a0\u654f\u611f\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fc7\u5206\u60e9\u7f5a\u5c0f\u7269\u4f53\u3002\\n\\n\u76f4\u89c2\u4e0a\u5c31\u662fGT\u548cPred\u8f6e\u5ed3\u7684\u4ea4\u96c6\u9664\u4ee5\u5e76\u96c6\uff0c\u4f46\u662f**\u8fd9\u91cc\u7684\u8f6e\u5ed3\u662f\u5728\u5bf9\u8c61\u5185\u90e8\u7684**$G_d\u3001P_d$\uff0c\u4e0d\u5305\u62ec\u5728\u5bf9\u8c61\u5916\u9762\u7684\u90e8\u5206\uff0c\u8be6\u7ec6\u8bf7\u770b9.1\u3002\\n\\n\u867d\u7136\u770b\u8d77\u6765\u548cTrimap IoU\u5f88\u76f8\u4f3c\uff0c\u4f46\u4e2a\u4eba\u8ba4\u4e3a\u5b83\u662fMask IoU\u7684\u8fb9\u754c\u5347\u7ea7\u7248\u672c\uff0c\u53bb\u9664\u4e86\u5bf9\u8c61\u5185\u90e8\u5de8\u91cf\u50cf\u7d20\u5bf9\u6574\u4f53\u7684\u5f71\u54cd\uff08\u89c15.1Mask IoU\u7684\u5206\u6790\uff09\uff0c\u4f7f\u5176\u62e5\u6709\u66f4\u4f18\u79c0\u7684\u6027\u8d28\u3002 \\n\\n\u5b8c\u6574\u7684\u8bba\u6587\u4e2d\u7ed9\u51fa\u7684\u793a\u610f\u56fe\u5982\u4e0b\uff1a\\n\\n![image-20210510153535293](https://gitee.com/Thedeadleaf/images/raw/master/20210510154511.png)\\n\\n\u6211\u753b\u7684\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/20210510154514.png\\" alt=\\"image-20210510154509338\\" />\\n\\n# \u654f\u611f\u6027\u5206\u6790\\n\\n\u4e3a\u4e86\u8fdb\u884c\u7cfb\u7edf\u7684\u6bd4\u8f83\uff0c\u672c\u6587\u5bf9GT\u8fdb\u884c\u5904\u7406\u5f62\u6210\u4f2a\u9884\u6d4b\uff0c\u901a\u8fc7**\u6a21\u62df**\u4e0d\u540c\u7684\u8bef\u5dee\u7c7b\u578b\u6765\u5c3d\u53ef\u80fd\u7684\u6a21\u62df\u771f\u5b9e\u8bef\u5dee\u7c7b\u578b\u3002\\n\\n## \u5c3a\u5ea6\u8bef\u5dee\\n\\n\u901a\u8fc7\u5bf9GT\u8fdb\u884c\u81a8\u80c0\u548c\u8150\u8680\u64cd\u4f5c\uff0c\u8bef\u5dee\u4e25\u91cd\u7a0b\u5ea6\u7531\u8fd0\u7b97\u6838\u534a\u5f84\u63a7\u5236\u3002\\n\\n![image-20210509185608432](https://gitee.com/Thedeadleaf/images/raw/master/20210509185613.png)\\n\\n## \u8fb9\u754c\u5b9a\u4f4d\u8bef\u5dee\\n\\n\u5c06\u968f\u673a\u9ad8\u65af\u566a\u58f0\u6dfb\u52a0\u5230GT\u4e0a\u6bcf\u4e00\u4e2a\u591a\u8fb9\u5f62\u9876\u70b9\u7684**\u5750\u6807**\u4e0a\uff0c\u8bef\u5dee\u4e25\u91cd\u7a0b\u5ea6\u7531\u9ad8\u65af\u566a\u58f0\u7684\u6807\u51c6\u5dee\u786e\u5b9a\u3002\\n\\n![image-20210509185545908](https://gitee.com/Thedeadleaf/images/raw/master/20210509185617.png)\\n\\n## \u7269\u4f53\u5b9a\u4f4d\u8bef\u5dee\\n\\n\u5c06GT\u4e2d\u7684\u5bf9\u8c61\u968f\u673a\u504f\u79fb\u4e00\u4e9b\u50cf\u7d20\uff0c\u8bef\u5dee\u4e25\u91cd\u7a0b\u5ea6\u7531\u4f4d\u79fb\u50cf\u7d20\u957f\u5ea6\u63a7\u5236\u3002\\n\\n![image-20210509185530435](https://gitee.com/Thedeadleaf/images/raw/master/20210509185622.png)\\n\\n## \u8fb9\u754c\u8fd1\u4f3c\u8bef\u5dee\\n\\n\u5229\u7528Sharply\u7684\u7b80\u5316\u516c\u5f0f\u6765\u5220\u9664\u591a\u8fb9\u5f62\u9876\u70b9\uff0c\u540c\u65f6\u4fdd\u6301\u7b80\u5316\u591a\u8fb9\u5f62\u5c3d\u53ef\u80fd\u63a5\u8fd1\u539f\u59cb\u56fe\u50cf\uff0c\u8bef\u5dee\u4e25\u91cd\u7a0b\u5ea6\u7531\u51fd\u6570\u7684\u5bb9\u9519\u53c2\u6570\u63a7\u5236\u3002\\n\\n![image-20210509185108649](https://gitee.com/Thedeadleaf/images/raw/master/20210509185624.png)\\n\\n## \u5185\u90e8\u63a9\u7801\u9519\u8bef\\n\\n\u5411GT\u4e2d\u6dfb\u52a0\u968f\u673a\u6027\u5f62\u72b6\u7684\u5b54\uff0c\u867d\u7136\u8fd9\u79cd\u8bef\u5dee\u7c7b\u578b\u5e76\u4e0d\u5e38\u89c1\uff0c\u4f46\u662f\u672c\u6587\u5c06\u5176\u5305\u542b\u8fdb\u6765\uff0c\u7528\u4ee5\u8bc4\u4f30\u5185\u90e8\u63a9\u819c\u8bef\u5dee\u7684\u5f71\u54cd\u3002\\n\\n![image-20210509185508685](https://gitee.com/Thedeadleaf/images/raw/master/20210509185630.png)\\n\\n## \u5b9e\u73b0\u7ec6\u8282\\n\\n**\u6570\u636e\u96c6**\uff1a\u4f5c\u8005\u4eceLVIS V0.5\u9a8c\u8bc1\u96c6\u4e2d\u968f\u673a\u62bd\u53d6\u5b9e\u4f8b\u63a9\u7801\uff0c\u56e0\u4e3a\u8be5\u6570\u636e\u96c6\u62e5\u6709\u9ad8\u8d28\u91cf\u7684\u6ce8\u91ca\u3002\\n\\n![](https://gitee.com/Thedeadleaf/images/raw/master/20210509190212.png)\\n\\n**\u5b9e\u73b0\u8fc7\u7a0b**\uff1a\u901a\u8fc7\u6539\u53d8\u8bef\u5dee\u7c7b\u578b\u548c\u8bef\u5dee\u7684\u4e25\u91cd\u7a0b\u5ea6\uff0c\u8bb0\u5f55\u6bcf\u79cd\u7c7b\u578b\u7684\u5e73\u5747\u503c\u548c\u6807\u51c6\u5dee\uff0c\u6b64\u5916\uff0c\u8fd8\u901a\u8fc7\u5212\u5206\u4e0d\u540c\u7684\u533a\u57df\uff0c\u6765\u6bd4\u8f83\u5bf9\u4e0d\u540c\u5927\u5c0f\u7269\u4f53\u7684\u6307\u6807\u8bc4\u4ef7\u3002\\n\\n\u5176\u4e2dd\u8bbe\u7f6e\u4e3a\u56fe\u50cf\u5bf9\u89d2\u7ebf\u76842%\u3002\\n\\n# \u73b0\u6709\u65b9\u6cd5\u5206\u6790\\n\\n## Mask IoU\\n\\n### \u7406\u8bba\u5206\u6790\\n\\n**\u5c3a\u5ea6\u4e0d\u53d8\u6027**\uff08\u81ea\u5df1\u53d6\u7684\uff09\uff1a\u5373\u5bf9\u4e8e\u4e00\u4e2a**\u56fa\u5b9a**\u7684Mask IoU\u503c\uff0c\u5206\u5272\u5bf9\u8c61\u9762\u79ef\u8d8a\u5927\uff0c\u5219\u5176\u9519\u8bef\u50cf\u7d20\u8d8a\u591a\uff0c\u4e8c\u8005\u4e4b\u95f4\u7684\u53d8\u5316\u5173\u7cfb\u6210\u6b63\u6bd4\uff0c\u5176\u6bd4\u4f8b\u5373\u4e3aMask IoU\u7684\u503c\u3002\\n\\n**\u60e9\u7f5a\u5dee\u5f02\u6027**\uff08\u81ea\u5df1\u53d6\u7684\uff09\uff1a\u7136\u800c\uff0c\u5f53\u7f29\u653e\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5185\u90e8\u50cf\u7d20\u6570\u91cf\u5448\u4e8c\u6b21\u589e\u957f\uff0c\u8fb9\u754c\u50cf\u7d20\u4ec5\u4e3a\u7ebf\u6027\u589e\u957f\uff0c\u4e8c\u8005\u4e0d\u540c\u7684\u589e\u957f\u7387\u5bfc\u81f4Mask IoU\u5bb9\u5fcd\u66f4\u5927\u7684\u5bf9\u8c61\u8fb9\u754c\u4e0a\u7684\u66f4\u591a\u9519\u8bef\u5206\u7c7b\u3002\\n\\n### \u5b9e\u8bc1\u5206\u6790\\n\\n**\u5c3a\u5ea6\u4e0d\u53d8\u6027**\u57fa\u4e8e\u4e00\u4e2a\u5047\u8bbe\uff0c\u5373GT\u6807\u6ce8\u4e2d\u7684\u8fb9\u754c\u8bef\u5dee\u4e5f\u968f\u7740\u5bf9\u8c61\u7684\u5927\u5c0f\u800c\u589e\u957f\u3002\\n\\n\u7136\u800c\u5df2\u6709\u7814\u7a76\u8868\u660e\uff0c\u4e0d\u8bba\u7269\u4f53\u5927\u5c0f\uff0c\u88ab\u4e0d\u540c\u6807\u6ce8\u5668\u6807\u8bb0\u7684\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u4e24\u4e2a\u8f6e\u5ed3\u4e4b\u95f4\u7684\u50cf\u7d20\u8ddd\u79bb\u5f88\u5c11\u8d85\u8fc7\u56fe\u50cf\u5bf9\u89d2\u7ebf\u76841%\u3002\uff08\u5c31\u53eb\u5b83**\u6807\u6ce8\u76f8\u4f3c\u6027**\u5427\uff09\\n\\n\u672c\u6587\u901a\u8fc7\u7814\u7a76LVIS\u63d0\u4f9b\u7684\u53cc\u6807\u6ce8\u56fe\u50cf\u6765\u8bc1\u5b9e\u8fd9\u4e00\u70b9\uff0c\u5982\u4e0b\uff1a\\n\\n![image-20210509201406961](https://gitee.com/Thedeadleaf/images/raw/master/20210509203230.png)\\n\\n\u5176\u4e2d\u51b0\u7bb1\u7684\u9762\u79ef\u662f\u673a\u7ffc\u9762\u79ef\u7684100\u500d\uff0c\u4f46\u5728\u76f8\u540c\u5206\u8fa8\u7387\u7684\u533a\u57df\u5185\uff0c\u6ce8\u91ca\u4e4b\u95f4\u7684\u5dee\u5f02\u5728\u89c6\u89c9\u4e0a\u5341\u5206\u76f8\u4f3c\u3002\\n\\n\u4e24\u8005\u7684\u4e24\u4e2a\u8f6e\u5ed3\u7684Mask IoU\u5206\u522b\u4e3a0.97,0.81\uff0c\u800c\u5b83\u4eec\u7684Boundary IoU\u5219\u66f4\u4e3a\u63a5\u8fd1\uff0c\u5206\u522b\u4e3a0.87\uff0c0.81\u3002\u8bf4\u660eMask IoU**\u5bf9\u5c0f\u5c3a\u5bf8\u56fe\u7247\u7684\u201c\u60e9\u7f5a\u201d\u66f4\u5927**\u3002\\n\\n**\u5b9e\u9a8c**\uff1a\u901a\u8fc7\u4e25\u91cd\u7a0b\u5ea6\u76f8\u540c\u7684\u81a8\u80c0/\u8150\u8680\u6765\u6a21\u62df**\u5c3a\u5ea6\u8bef\u5dee**\uff0c\u5176\u663e\u8457\u964d\u4f4e\u4e86\u5c0f\u7269\u4f53\u7684Mask IoU\uff0c\u800cMask IoU\u968f\u7269\u4f53\u5927\u5c0f\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u89c1\u4e0b\u56fe\uff1a\\n\\n![image-20210510093853486](https://gitee.com/Thedeadleaf/images/raw/master/20210510093856.png)\\n\\n### \u603b\u7ed3\\n\\n- Mask IoU\u7684\u4e3b\u8981\u4e0d\u8db3\u5728\u4e8e\u5bf9\u5927\u7269\u4f53\u8fb9\u754c\u7684\u4e0d\u654f\u611f\u6027\u3002\\n- \u76f8\u6bd4\u4e4b\u4e0b\uff0cBoundary IoU\u66f4\u6ce8\u91cd\u7269\u4f53\u7684\u8fb9\u754c\u3002\\n\\n## Trimap IoU\\n\\nTrimap IoU\u662f\u4e0d\u5bf9\u79f0\u7684\uff0c\u4ea4\u6362GT\u548cPred\u5c06\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u503c\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u5176\u66f4\u503e\u5411\u4e8e\u6bd4GT\u66f4\u5927\u7684pred\uff1a\\n\\n![image-20210510095821668](https://gitee.com/Thedeadleaf/images/raw/master/20210510095941.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff1a\\n\\n- \u4e0d\u8bba\u81a8\u80c0\u7684\u4e25\u91cd\u7a0b\u5ea6\u662f\u591a\u5c11\uff0c\u5176\u503c\u603b\u4f1a\u5927\u4e8e\u67d0\u4e2a\u6b63\u503c\uff0c\u5bf9\u5c0f\u7269\u4f53\u7684\u201c\u60e9\u7f5a\u201d\u4f9d\u7136\u8fc7\u5927\u3002\\n- \u8150\u8680\u5219\u4f1a\u4e0b\u964d\u5230\u96f6\u3002\\n\\n\u7b80\u5355\u7684\u8bc1\u660e\uff1a\\n\\n![image-20210510165235885](https://gitee.com/Thedeadleaf/images/raw/master/20210511114830.png)\\n\\n\u84dd\u8272\u90e8\u5206\u4e3apseudo-predictions \uff08\u4f2a\u9884\u6d4b\uff09\uff0c\u7ea2\u8272\u65b9\u6846\u4e3aGT\u8f6e\u5ed3\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5f53pseudo-predictions \u5b8c\u5168\u5305\u542b\u4e86GT\u65f6\uff0c\u5176\u503c\u4e0d\u4f1a\u518d\u6539\u53d8\\n\\n\u540c\u7406\uff0c\u5f53\u4f2a\u9884\u6d4b\u5b8c\u5168\u88abGT\u6240\u5305\u542b\uff0c\u5206\u5b50\u4e3a0\uff0c\u6700\u7ec8\u503c\u4e3a0\u3002\\n\\n## F-measure\\n\\nF-measure\u5b8c\u5168\u5ffd\u7565\u4e86\u5c0f\u7684\u8f6e\u5ed3\u8bef\u5dee\uff0c\u4f46\u662f\u8868\u73b0\u6548\u679c\u5f88\u5dee\uff0c\u4f1a\u5728\u5f88\u77ed\u7684\u4e25\u91cd\u7a0b\u5ea6\u4e2d\u5feb\u901f\u4e0b\u964d\u52300\uff1a\\n\\n![image-20210510170006064](https://gitee.com/Thedeadleaf/images/raw/master/20210511114828.png)\\n\\n## \u603b\u7ed3\\n\\n\u7efc\u4e0a\u53ef\u77e5\uff0cF-measure\u548cTrimap IoU\u90fd\u4e0d\u80fd\u4ee3\u66ffMask IoU\uff0c\u800cMask IoU\u4e5f\u6709\u7740\u4e0d\u80fd\u5ffd\u89c6\u7684\u7f3a\u9677\uff0c\u56e0\u6b64\uff0c\u672c\u6587\u63d0\u51faBoundary IoU\u3002\\n\\n# Boundary IoU\\n\\n## \u516c\u5f0f\\n\\n\u4e00\u4e2a\u7b80\u5316\u7684IoU\u516c\u5f0f\\n$$\\nIoU = \\\\frac{G_d\\\\cap P_d}{G_d\\\\cup P_d}\\n$$\\n\u8be5\u516c\u5f0f\u76f4\u63a5\u4f7f\u7528$G_d\u3001P_d$,\u4e22\u5931\u4e86\u8fb9\u7f18\u7684\u5c16\u9510\u90e8\u5206\u7684\u4fe1\u606f\\n\\nBoundary IoU\u516c\u5f0f\u5982\u4e0b\uff1a\\n$$\\nBoudary-IoU(G,P)=\\\\frac{|(G_d\\\\cap G)\\\\cap(P_d\\\\cap P)|}{|(G_d\\\\cap G)\\\\cup(P_d\\\\cap P)|}\\n$$\\n\u5176\u4e2d\u53c2\u6570d\u63a7\u5236\u4e86\u6d4b\u91cf\u7684\u7075\u654f\u6027\uff0c\u5f53d\u8db3\u591f\u5927\u65f6\uff0cBoundary IoU\u5c31\u76f8\u5f53\u4e8eMask IoU;\u82e5\u4f7f\u7528\u8f83\u5c0f\u7684d\uff0cBoundary IoU\u5219\u4f1a\u5ffd\u7565\u5185\u90e8\u50cf\u7d20\uff0c\u4f7f\u5176\u5bf9\u8fb9\u754c\u50cf\u7d20\u66f4\u52a0\u654f\u611f\u3002\\n\\n\u6b64\u5916\uff0c\u5bf9\u4e8e\u8f83\u5c0f\u7684\u5bf9\u8c61\uff0cBoundary IoU\u5341\u5206\u63a5\u8fd1\u751a\u81f3\u7b49\u4ef7\u4e8eMask IoU\uff0c\u8fd9\u4e3b\u8981\u53d6\u51b3\u4e8e\u53c2\u6570d\u3002\\n\\n## Mask IoU vs Boundary IoU\uff1a\u654f\u611f\u6027\u5206\u6790\\n\\n\u672c\u6587\u5bf9\u6bd4\u4e86Mask IoU\u548cBoundary IoU\u5728\u9762\u79ef\u5927\u4e8e$96^2$\u7684\u7269\u4f53\u7684\u4e0d\u540c\u8bef\u5dee\u7c7b\u578b\u4e0b\u7684\u8868\u73b0\uff1a\\n\\n![image-20210510173824215](https://gitee.com/Thedeadleaf/images/raw/master/20210510181123.png)\\n\\n![image-20210510173839905](https://gitee.com/Thedeadleaf/images/raw/master/20210510181124.png)\\n\\n\u5bf9\u4e8e\u6bcf\u79cd\u8bef\u5dee\u7c7b\u578b\uff0cBoundary IoU\u90fd\u80fd\u66f4\u597d\u7684\u5229\u75280-1\u7684\u8303\u56f4\\n\\n\u4f7f\u7528\u7684\u56fa\u5b9a\u7684\u8bef\u5dee\u4e25\u91cd\u7a0b\u5ea6\uff0c\u5bf9\u5927\u5c0f\u4e0d\u540c\u7684\u5bf9\u8c61\u4f7f\u7528\u4f2a\u9884\u6d4b\uff0c\u4ee5$16^2$\u4e3a\u589e\u91cf\u5212\u5206\u533a\u57df\uff0c\u4e8c\u8005\u8868\u73b0\u5982\u4e0b\uff1a\\n\\n![image-20210510181102929](https://gitee.com/Thedeadleaf/images/raw/master/20210510181127.png)\\n\\n![image-20210510181118302](https://gitee.com/Thedeadleaf/images/raw/master/20210510181129.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff1a\\n\\n- \u5bf9\u4e8e\u8f83\u5927\u7684\u5bf9\u8c61\uff0cBoundary IoU\u5728\u76f8\u540c\u4e25\u91cd\u7a0b\u5ea6\u4e0b\u4fdd\u6301\u5e73\u7f13\uff0c\u800cMask IoU\u5219\u660e\u663e\u7684\u504f\u5411\u4e8e\u5927\u7269\u4f53\uff1b\\n- \u5bf9\u4e8e\u8f83\u5c0f\u7684\u5bf9\u8c61\uff0c\u4e8c\u8005\u62e5\u6709\u76f8\u4f3c\u7684\u6307\u6807\uff0c\u8bf4\u660e\u4ed6\u4eec\u90fd\u6ca1\u6709\u5bf9\u5176\u8fdb\u884c\u8fc7\u5ea6\u60e9\u7f5a\u3002\\n\\n## Boundary IoU vs  Trimap IoU\\n\\n\u4e8c\u8005\u5177\u6709\u4e00\u5b9a\u7684\u76f8\u4f3c\u6027\uff0cBoundary IoU\u5c06Pred\u548cGT\u8fb9\u7f18\u4e0a\u7684\u50cf\u7d20\u90fd\u8003\u8651\u4e86\u8fdb\u6765\uff0c\u8fd9\u4e2a\u7b80\u5355\u7684\u6539\u8fdb\u6539\u53d8\u4e86Trimap IoU\u4e24\u70b9\u4e0d\u8db3\uff0c\u4e00\u662f\u4e0d\u5bf9\u79f0\uff0c\u4e8c\u89c14.2\u3002\\n\\n## Boundary IoU vs F-measure\\n\\nF-measure\u5bf9\u8f6e\u5ed3\u4e4b\u95f4\u4f7f\u7528\u4e86\u786c\u9884\u6d4b\u2014\u2014\u5982\u679c\u8f6e\u5ed3\u4e4b\u95f4\u7684\u50cf\u7d20\u5728\u8ddd\u79bbd\u5185\u90a3\u4e48Precision\u548cRecall\u90fd\u662f\u5b8c\u7f8e\u7684\uff0c\u7136\u800c\u5f53\u5b83\u4eec\u90fd\u4f4d\u4e8ed\u4e4b\u5916\uff0c\u5219\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u5339\u914d\uff08\u89c14.3 \uff0c\u5176\u503c\u4f1a\u5f88\u5feb\u7684\u964d\u4e3a0\uff09\u3002\\n\\n\u800cBoundary IoU\u4f7f\u7528\u4e00\u79cd\u8f6f\u5206\u5272\uff0c\u53d8\u5316\u5e73\u7f13\u3002\\n\\n\u5728\u9644\u5f55\u4e2d\u5c06\u4f1a\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\u3002\\n\\n## \u50cf\u7d20\u8ddd\u79bb\u53c2\u6570d\\n\\n\u4e0a\u6587\u63d0\u8fc7\uff0c\u5f53d\u8db3\u591f\u5927\u65f6\uff0cBoundary IoU\u7b49\u4ef7\u4e8eMask IoU\uff0c\u5f53d\u8fc7\u5c0f\uff0cBoundary IoU\u5219\u4f1a\u51fa\u73b0\u4e25\u91cd\u60e9\u7f5a\u7684\u60c5\u51b5\u3002\\n\\n\u4e3a\u4e86\u9009\u62e9\u5408\u9002\u7684\u53c2\u6570d\uff0c\u672c\u6587\u5728COCO\u548cASE20K\u4e24\u4e2a\u6570\u636e\u96c6\uff08\u5b83\u4eec\u62e5\u6709\u76f8\u4f3c\u7684\u5206\u8fa8\u7387\uff09\u4e0a\u8fdb\u884c\u5b9e\u9a8c\uff0c\u53d1\u73b0\u5f53d\u4e3a\u56fe\u50cf**\u5bf9\u89d2\u7ebf\u76842%\uff08\u5927\u7ea6\u4e3a15\u4e2a\u50cf\u7d20\uff09**\u65f6\uff0c\u4e24\u6570\u636e\u96c6\u7684Boundary IoU\u7684\u4e2d\u4f4d\u6570\u8d85\u8fc70.9\u3002\\n\\n\u5bf9\u4e8eCityscapes\u4e2d\u66f4\u5927\u5206\u8fa8\u7387\u7684\u56fe\u50cf\uff0c\u4f5c\u8005\u4e5f\u5efa\u8bae\u4f7f\u7528\u76f8\u540c\u7684\u50cf\u7d20\u8ddd\u79bb\uff0815\u4e2a\u5de6\u53f3\uff09\uff0c\u8bbe\u7f6ed\u4e3a\u5bf9\u89d2\u7ebf\u76840.5%\\n\\n\u5bf9\u4e8e\u5176\u4ed6\u6570\u636e\u96c6\uff0c\u4f5c\u8005\u5efa\u8bae\u8003\u8651\u4e24\u4e2a\u56e0\u7d20\uff08**\u6ca1\u770b\u61c2**\uff1a\\n\\n1. \u5c06\u6ce8\u91ca\u4e00\u81f4\u6027\u5c06\u4e0b\u754c\u8bbe\u4e3ad\\n2. D\u5e94\u6839\u636e\u5f53\u524d\u65b9\u6cd5\u7684\u6027\u80fd\u9009\u62e9\uff0c\u5e76\u968f\u7740\u6027\u80fd\u7684\u63d0\u9ad8\u800c\u964d\u4f4e\u3002\\n\\n## Boundary IoU\u7684\u5c40\u9650\\n\\nBoundary IoU\u4e0d\u8bc4\u4f30\u8ddd\u79bb\u8f6e\u5ed3\u8d85\u8fc7d\u7684\u50cf\u7d20\uff0c\u4f8b\u5982\u4e00\u4e2a\u5706\u5f62Mask\u548c\u4e00\u4e2a\u73af\u5f62Mask\uff1a\\n\\n![image-20210510190200706](https://gitee.com/Thedeadleaf/images/raw/master/20210511114822.png)\\n\\n\u663e\u7136\uff0c\u5176Boundary Iou\u503c\u6781\u9ad8\u4e3a1\\n\\n\u4e3a\u4e86\u60e9\u7f5a\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f5c\u8005\u5efa\u8bae\u7ec4\u5408Boundary IoU\u548cMask IoU\uff0c\u5e76\u53d6\u4ed6\u4eec\u7684\u6700\u5c0f\u503c\u3002\\n\\n\u6b64\u5916\uff0c\u5728\u5b9e\u9a8c\u4e2d\u8fd8\u53d1\u73b0\uff0c99.9%\u7684\u60c5\u51b5Boundary IoU\u90fd\u662f\u5c0f\u4e8e\u7b49\u4e8eMask IoU\u7684\uff0c\u6781\u5c11\u6570\u60c5\u51b5\u5982\u4e0a\u56fe\u4f1a\u51fa\u73b0Boundary IoU\u5927\u4e8eMask IoU\u3002\\n\\n# \u5e94\u7528\\n\\n\u5982\u4e0a\u6587\u6240\u8bf4\uff0c\u4f5c\u8005\u5c06\u4e24\u79cdIoU\u7ec4\u5408\uff0c\u53d6\u5176\u6700\u5c0f\u3002\\n\\n## Boundary AP for instance segmentation\\n\\n\u5b9e\u4f8b\u5206\u5272\u4efb\u52a1\u7684\u76ee\u6807\u662f\u7528\u50cf\u7d20\u7ea7\u63a9\u7801\u63cf\u7ed8\u6bcf\u4e2a\u5bf9\u8c61\uff0c\u5176\u8bc4\u4f30\u6307\u6807\u662f\u540c\u65f6\u8bc4\u4f30\u591a\u4e2a\u65b9\u9762\uff0c\u5982\u5206\u7c7b\u3001\u5b9a\u4f4d\u548c\u5206\u5272\u8d28\u91cf\u3002\\n\\n\u672c\u6587\u901a\u8fc7\uff08Synthetic predictions\uff0cSynthetic\uff0c\u7efc\u5408\u7684\uff1b\u5408\u6210\u7684\uff0c\u4eba\u9020\u7684\uff0c\u7ed3\u5408\u4e0a\u4e0b\u6587\u4e2a\u4eba\u611f\u89c9\u5e94\u8be5\u53d6\u201c\u4eba\u9020\u201d\u4e4b\u610f\uff09 \u5408\u6210\u9884\u6d4b\u4e0e\u771f\u5b9e\u6a21\u578b\u6765\u8fdb\u884c\u5b9e\u9a8c\u3002\\n\\n### \u5408\u6210\u9884\u6d4b\\n\\n> \u7efc\u5408\u9884\u6d4b\u5141\u8bb8\u6211\u4eec\u5355\u72ec\u7684\u8bc4\u4f30\u5206\u5272\u8d28\u91cf\u3002\\n\\n- **\u5177\u4f53\u65b9\u6cd5**\uff1a\\n\\n  \u4f7f\u7528COCO\u6570\u636e\u96c6\uff0c\u5c06GT\u7f29\u5c0f\u4e3a28X28\u7684\u8fde\u7eed\u503c\u63a9\u7801\uff0c\u4f7f\u7528\u53cc\u7ebf\u6027\u63d2\u503cupscale it back\uff0c\u6700\u540e\u5c06\u5176\u4e8c\u503c\u5316\u3002\u5982\u4e0b\u56fe\u6240\u793a\\n\\n  ![image-20210510230301360](https://gitee.com/Thedeadleaf/images/raw/master/20210510230303.png)\\n\\n  \u8fd9\u79cd\u5408\u6210Mask\u5341\u5206\u63a5\u8fd1GT\uff0c\u4f46\u8fd9\u79cd\u5dee\u5f02\u968f\u7740\u7269\u4f53\u5927\u5c0f\u7684\u589e\u5927\u800c\u589e\u5927\uff0c\u56e0\u6b64\u8d8a\u5927\u7684\u7269\u4f53\u7ecf\u8fc7\u5904\u7406\u540e\u7684IoU\u503c\u5e94\u8be5\u8d8a\u4f4e\u3002\\n\\n  ![image-20210510223226154](https://gitee.com/Thedeadleaf/images/raw/master/20210511122838.png)\\n\\n  \u4e0b\u6807\u8868\u793a\u7269\u4f53\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u4e8e\u8d8a\u5927\u7684\u7269\u4f53\uff0cBoundary IoU\u7684\u503c\u8d8a\u4f4e\uff0c\u800cMask IoU\u7684\u503c\u5219\u7ef4\u6301\u5728\u9ad8\u6c34\u5e73\uff0c**\u8fd9\u8fdb\u4e00\u6b65\u663e\u793a\u4e86Boundary IoU\u5bf9\u4e8e\u5927\u7269\u4f53\u8fb9\u754c\u7684\u654f\u611f\u6027**\u3002\\n\\n- \u5b9e\u9a8c\u7ed3\u679c\uff1a\u5728Mask RCNN\u3001PointRend\u3001\u4ee5\u53caBMask RCNN\u6a21\u578b\u4e0a\u8fdb\u884c\u5b9e\u9a8c\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a\\n\\n  ![image-20210510224102719](https://gitee.com/Thedeadleaf/images/raw/master/20210511122836.png)\\n\\n  ![image-20210510224120918](https://gitee.com/Thedeadleaf/images/raw/master/20210511122835.png)\\n\\n  \u4f17\u6240\u5468\u77e5\uff0cMask RCNN\u5bf9\u5927\u7269\u4f53\u7684\u5206\u5272\u8868\u73b0\u4e0d\u5c3d\u4eba\u610f\uff08\u6211\u4e0d\u77e5\u9053\uff09\uff0c\u4ece\u4e0a\u8868\u53ef\u4ee5\u770b\u51faBoundary Ap\u7684\u4f18\u8d8a\u6027\\n\\n  \u6b64\u5916\uff0c\u4e0a\u8868\u8fd8\u8bc1\u660e\u4e86\u76f8\u8f83\u4e8eBMask RCNN\uff0cPointRend\u5bf9\u8f83\u5927\u5bf9\u8c61\u7684\u8868\u73b0\u66f4\u597d\u3002\\n\\n  ![image-20210510224713604](https://gitee.com/Thedeadleaf/images/raw/master/20210511122833.png)\\n\\n  \u4e0a\u8868\u663e\u793a\u4e86\u66f4\u6df1\u7684\u4e3b\u5e72\u7f51\u7edc\u5e76\u4e0d\u80fd\u5e26\u6765\u5206\u5272\u8d28\u91cf\u7684\u663e\u8457\u63d0\u5347\u3002\\n\\n### \u771f\u5b9e\u9884\u6d4b\\n\\n> \u5229\u7528\u73b0\u6709\u7684\u5206\u5272\u6a21\u578b\u5f97\u5230\u7684\u771f\u5b9e\u9884\u6d4b\u8fdb\u4e00\u6b65\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4e86\u89e3Boundary IoU\u5728\u5b9e\u4f8b\u5206\u5272\u4efb\u52a1\u5404\u4e2a\u65b9\u9762\u7684\u8868\u73b0\u3002\\n\\n- **\u5177\u4f53\u65b9\u6cd5**\uff1a\\n\\n  \u4e3a\u4e86\u5c06\u5206\u5272\u8d28\u91cf\u4e0e\u5206\u7c7b\u548c\u5b9a\u4f4d\u9519\u8bef\u5206\u79bb\u5f00\uff0c\u4f5c\u8005\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u63d0\u4f9b\u4e86Ground Truth Box\uff0c\u5e76\u4e3a\u5176\u5206\u914d\u968f\u673a\u7f6e\u4fe1\u5ea6\u3002\\n\\n- **\u5b9e\u9a8c\u7ed3\u679c**\uff1a\\n\\n  \u6a21\u578b\u5728COCO\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\uff0c\u5728LVIS v0.5\u4e0a\u9a8c\u8bc1\\n\\n  ![image-20210511115502161](https://gitee.com/Thedeadleaf/images/raw/master/20210511115505.png)\\n\\n  \u6a21\u578b\u5728Cityscapes\u4e0a\u8bad\u7ec3\u548c\u9a8c\u8bc1\\n\\n  ![image-20210511115655795](https://gitee.com/Thedeadleaf/images/raw/master/20210511115657.png)\\n\\n## Boundary  PQ\\n\\n\u4e0b\u56fe\u4e3a\u6807\u51c6PQ\u7684\u516c\u5f0f\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/20210511115040.png\\" alt=\\"image-20210511115032369\\" />\\n\\n\u5c06\u5176\u4e2d\u7684Mask IoU\u66ff\u6362\u4e3aMask IoU\u4e0eBoundary IoU\u7684\u7ec4\u5408\uff0c\u53d6\u5176\u6700\u5c0f\u503c\u3002\\n\\n### \u5408\u6210\u9884\u6d4b\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/20210511122826.png\\" alt=\\"image-20210511120047274\\" />\\n\\n### \u771f\u5b9e\u9884\u6d4b\\n\\n![image-20210511120131765](https://gitee.com/Thedeadleaf/images/raw/master/20210511122824.png)\\n\\n# \u603b\u7ed3\\n\\n\u200b\\t\\t\u4e0d\u540c\u4e8eMask IoU\uff0cBoundary IoU\u63d0\u4f9b\u4e86\u4e00\u4e2a\u660e\u786e\u7684\uff0c\u5b9a\u91cf\u7684\u68af\u5ea6\uff0c\u5956\u52b1\u6539\u5584\u8fb9\u754c\u5206\u5272\u8d28\u91cf\u3002\u4f5c\u8005\u5e0c\u671bBoundary IoU\u53ef\u4ee5\u9f13\u52b1\u66f4\u591a\u4eba\u5f00\u53d1\u9ad8\u4fdd\u771fMask\u9884\u6d4b\u65b0\u65b9\u6cd5\u3002\u6b64\u5916\uff0cBoundary  IoU\u5141\u8bb8\u5bf9\u590d\u6742\u7684\u4efb\u52a1(\u5982\u5b9e\u4f8b\u548c\u5168\u666f\u5206\u5272)\u7684\u5206\u5272\u76f8\u5173\u9519\u8bef\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u5206\u6790\u3002\u5728\u6027\u80fd\u5206\u6790\u5de5\u5177(\u5982TIDE[2])\u4e2d\u7ed3\u5408\u5ea6\u91cf\u53ef\u4ee5\u66f4\u597d\u5730\u6d1e\u5bdf\u5b9e\u4f8b\u5206\u6bb5\u6a21\u578b\u7684\u7279\u5b9a\u9519\u8bef\u7c7b\u578b\u3002\uff08**\u76f4\u63a5\u7ffb\u8bd1\u7684**\uff09\\n\\n# \u8865\u5145\\n\\n## $G_d$\u548c$G_d\\\\cap G$\\n\\n![image-20210511121230297](https://gitee.com/Thedeadleaf/images/raw/master/20210511121300.png)\\n\\n## \u4ee3\u7801\u590d\u73b0\\n\\n\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u56fe\u50cf\u7684Boundary Iou\\n\\n```python\\n# \u5c06\u4e8c\u503cMask\u8f6c\u5316\u4e3aBoundary mask\\ndef mask_to_boundary(mask, dilation_ratio=0.01):\\n    h, w = mask.shape\\n    img_diag = np.sqrt(h ** 2 + w ** 2)\\n    dilation = int(round(dilation_ratio * img_diag))\\n    if dilation < 1:\\n        dilation = 1\\n    # Pad image so mask truncated by the image border is also considered as boundary.\\n    # \u5c06mask\u4f7f\u75280\u586b\u5145\u4e00\u5708\uff0c\u9632\u6b62dilation\u4e3a1\u65f6\\n    new_mask = cv2.copyMakeBorder(\\n        mask, 1, 1, 1, 1, cv2.BORDER_CONSTANT, value=0)\\n    kernel = np.ones((3, 3), dtype=np.uint8)\\n    # \u5bf9mask\u8fdb\u884c\u8150\u8680\u64cd\u4f5c\\n    new_mask_erode = cv2.erode(new_mask, kernel, iterations=dilation)\\n    mask_erode = new_mask_erode[1: h + 1, 1: w + 1]\\n    # G_d intersects G\\n    return mask - mask_erode\\n\\ndef boundary_iou(mask, pred):\\n    intersect = mask*pred\\n    ite = np.sum(intersect == 1)\\n    un = mask+pred\\n    union = np.sum(un >= 1)\\n    return ite/union\\n```\\n\\n![image-20210519091807762](https://gitee.com/Thedeadleaf/images/raw/master/20210519091830.png)\\n\\n![image-20210519091815466](https://gitee.com/Thedeadleaf/images/raw/master/20210519091840.png)\\n\\n![image-20210519091826066](https://gitee.com/Thedeadleaf/images/raw/master/20210519091833.png)"},{"id":"/[18]Involution-Inverting-the-Inherence-of-Convolution-for-Visual-Recognition","metadata":{"permalink":"/blog/[18]Involution-Inverting-the-Inherence-of-Convolution-for-Visual-Recognition","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[18]Involution-Inverting-the-Inherence-of-Convolution-for-Visual-Recognition.md","source":"@site/blog/[18]Involution-Inverting-the-Inherence-of-Convolution-for-Visual-Recognition.md","title":"Involution - Inverting the Inherence of Convolution for Visual Recognition","description":"\u8bba\u6587\u540d\u79f0\uff1aInvolution: Inverting the Inherence of Convolution for Visual Recognition","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"non-convolution","permalink":"/blog/tags/non-convolution"}],"readingTime":5.875,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"Involution - Inverting the Inherence of Convolution for Visual Recognition","authors":["asthestarsfall"],"tags":["attention-mechanism","non-convolution"]},"prevItem":{"title":"Boundary IoU - Improving Object-Centric Image Segmentation Evaluation","permalink":"/blog/[17]Boundary-IoU-Improving-Object-Centri-Image-Segmentation-Evaluation"},"nextItem":{"title":"PointRend - Image Segmentation as Rendering","permalink":"/blog/[19]PointRend-Image-Segmentation-as-Rendering"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1a[*Involution: Inverting the Inherence of Convolution for Visual Recognition*](https://arxiv.org/abs/2103.06255)\\n>\\n> \u4f5c\u8005\uff1aDuo Li\uff0c Jie Hu\uff0c Changhu Wang\uff0c Xiangtai Li\uff0c Qi She\uff0c Lei Zhu\uff0c Tong Zhang\uff0c Qifeng Chen\uff0c The Hong Kong University of Science and Technology\uff0c ByteDance AI Lab\uff0c Peking University\uff0c Beijing University of Posts and Telecommunications\\n\\n# Convolution\\n\\n1. [\u7a7a\u95f4\u65e0\u5173\u6027(spatial agnostic)](https://arxiv.org/abs/1805.12177)\uff1asame kernel for different position\\n   - \u4f18\u70b9\uff1a\u53c2\u6570\u5171\u4eab\uff0c\u5e73\u79fb\u7b49\u53d8\\n   - \u7f3a\u70b9\uff1a\u4e0d\u80fd\u7075\u6d3b\u6539\u53d8\u53c2\u6570\uff0c\u5377\u79ef\u6838\u5c3a\u5bf8\u4e0d\u80fd\u8fc7\u5927\uff0c\u53ea\u80fd\u901a\u8fc7\u5806\u53e0\u6765\u6269\u5927\u611f\u53d7\u91ce\u3001\u6355\u6349\u957f\u8ddd\u79bb\u5173\u7cfb\\n2. \u901a\u9053\u7279\u5f02\u6027(channel specific)\uff1adifferent kernels for different channels\\n   - \u4f18\u70b9\uff1a\u5145\u5206\u63d0\u53d6\u4e0d\u540c\u901a\u9053\u4e0a\u7684\u4fe1\u606f\\n   - \u7f3a\u70b9\uff1a\u6709\u5197\u4f59\\n\\nConvolution kernel \u5c3a\u5bf8\u4e3a B,C_out,C_in,K,K\\n\\n# Involution\\n\\n\u4e0econvolution\u4e0d\u540c\uff0cinvolution\u62e5\u6709**\u5b8c\u5168\u76f8\u53cd**\u7684\u6027\u8d28\uff1a\\n\\n1. \u7a7a\u95f4\u7279\u5f02\u6027\uff1akernel privatized for different position\\n2. \u901a\u9053\u4e0d\u53d8\u6027\uff1akernel shared across different channels\\n\\ninvolution kernel \u7684\u5c3a\u5bf8\u4e3aB,G,KK,H,W.\\n\\n\x3c!--truncate--\x3e\\n\\n# how to generate involution kernels\\n\\nkernel generated based on input featrue map(self-attention\u7684\u4e00\u79cd\u4f53\u73b0\uff1f) to ensure kernel size aligned with the input tensor size\\n\\n\u4e00\u79cd\u7b80\u5355\u7684kernel generation function,\u65b9\u4fbf\u8d77\u89c1\u4ee5\u4e00\u4e2a\u50cf\u7d20\u4e3a\u4f8b\\n\\n![image-20210426192156487](https://gitee.com/Thedeadleaf/images/raw/master/20210507124123.png)\\n\\n1. inputs\u4e3a\u7ef4\u5ea61\xd71\xd7C\uff1b\\n2. \u7ebf\u6027\u53d8\u6362\uff1a$W_0$\uff1a\u901a\u9053\u538b\u7f29\uff0c\u8282\u7701\u8ba1\u7b97\u91cf\uff1b$W_1$\uff1a\u9996\u5148\u53d8\u4e3a1\xd71\xd7(K\xd7K\xd7G)\uff0c\u518d\u62c6\u5206\u4e3aG\u7ec4\uff0c\u6700\u540e\u53d8\u6362\u4e3aK\xd7K\xd7G\uff1b\uff08\u5176\u751f\u6210\u7684\u5377\u79ef\u6838\u5305\u542b\u4e86\u6240\u6709\u901a\u9053\u4e0a\u7684\u4fe1\u606f\uff0c\u5bf9\u4e0d\u540c\u901a\u9053\u4e4b\u95f4\u7684\u4fe1\u606f\u4ea4\u6362\u6709\u4e00\u5b9a\u7684\u4f5c\u7528\uff09\\n3. \u751f\u6210\u7684kernel\u4e0e(i,j)\u50cf\u7d20\u9886\u57df\u8fdb\u884c\u4e58\u52a0\u64cd\u4f5c\uff0c\u56e0\u4e3a\u7ef4\u5ea6\u4e0d\u540c\uff0c\u9700\u8981\u8fdb\u884c\u5e7f\u64ad\uff0c\u5f97\u5230\u5927\u5c0f\u4e3ak\xd7k\xd7C\uff1b\\n4. \u6700\u540e\u8fdb\u884c\u805a\u5408\uff0c\u8f93\u51fa\u5927\u5c0f\u4e3a1\xd71\xd7C\u3002\\n\\n```python\\nclass Involution(nn.Module):\\n    def __init__(self, channel, group, kernel, s):\\n        super(Involution, self).__init__()\\n        self.channel = channel\\n        self.group = group\\n        self.kernel_size = kernel\\n        ratio=4\\n\\n        self.o = nn.AvgPool2d(s, s) if s > 1 else nn.Identity()\\n        self.reduce = nn.Sequential(\\n            nn.Conv2d(channel, channel//ratio, 1),\\n            nn.BatchNorm2d(channel//ratio),\\n            nn.ReLU(inplace=True)\\n        )\\n        self.span = nn.Conv2d(channel//ratio, kernel**2*group, 1)\\n        # \u4ece\u4e00\u4e2aBatch\u4e2d\u63d0\u53d6\u51fa\u5377\u79ef\u6ed1\u52a8\u7684\u5c40\u90e8\u533a\u57df\u5757\uff0c\u8f83\u96be\u7406\u89e3\uff0c\u5efa\u8bae\u81ea\u884c\u767e\u5ea6\\n        # \u666e\u901a\u7684\u5377\u79ef\u64cd\u4f5c\u5b9e\u9645\u4e0a\u5c31\u76f8\u5f53\u4e8e\u5c06feature map unfold\u4e0econv kernel\u4e58\u52a0\u4e4b\u540e\u518dfold\\n        self.unfold = nn.Unfold(\\n            kernel_size=kernel, padding=(kernel-1)//2, stride=s)\\n\\n    def forward(self, x):\\n        kernel = self.span(self.reduce(self.o(x)))  # B,KKG,H,W\\n        B, _, H, W = kernel.shape\\n        kernel = kernel.view(B, self.group, self.kernel_size **\\n                             2, H, W).unsqueeze(2)  # B,G,1,kk,H,W\uff0cunsqueeze\uff1a\u589e\u52a0\u4e00\u4e2a\u7ef4\u5ea6\u7528\u4e8e\u5e7f\u64ad\\n\\n        x_unfolded = self.unfold(x)  # B,CKK,HW\\n        x_unfolded = x_unfolded.view(\\n            B, self.group, self.channel//self.group, self.kernel_size**2, H, W)# B,G,C/G,KK,H,W\\n\\n        out = (kernel*x_unfolded).sum(dim=3)  # B,G,C/G,H,W\\n        out = out.view(B, self.channel, H, W) # B,C,H,w\\n        return out\\n\\n```\\n\\n\u66f4\u591a\uff1a\\n\\n1. \u5bf9Involution kernel\u7684\u751f\u6210\u65b9\u5f0f\u8fdb\u884c\u66f4\u591a\u7684\u63a2\u7d22\uff1b\\n2. \u8fdb\u4e00\u6b65\u63a2\u7d22Convolution-Involution\u7684\u6df7\u5408\u7ed3\u6784\u3002\\n\\n# Involution\\tvs\\tConvolution\\n\\n\u4f18\u70b9\uff1a\\n\\n1. \u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\u90fd\u5f88\u5c11\\n\\n   - \u5bf9\u4e8eConvolution\uff0c\u5176\u53c2\u6570\u91cf\u4e3a\uff1a\\n     $$\\n     K^2C_{in}C_{out}\\n     $$\\n     \u8ba1\u7b97\u91cf\u5927\u7ea6\u4e3a\uff1a\\n     $$\\n     HWK^2C_{in}C_{out}\\n     $$\\n\\n   - \u5bf9\u4e8eInvolution\uff0c\u5176\u53c2\u6570\u91cf\u4e3a\uff1a\\n     $$\\n     \\\\frac{C^2+CGK^2}{r}\\n     $$\\n     \u8ba1\u7b97\u91cf\u5927\u7ea6\u4e3a\uff1a\\n     $$\\n     HWK^2C\\n     $$\\n\\n   \u53ef\u4ee5\u770b\u5230\uff0cinvolution\u7684\u8ba1\u7b97\u91cf\u4e0e\u901a\u9053\u6570\u5448\u7ebf\u6027\u5173\u7cfb\u3002\\n\\n2. \u80fd\u6709\u6548\u5efa\u6a21\u957f\u8ddd\u79bb\u5173\u7cfb\\n\\n   \u76f8\u8f83\u4e8eConvolution\uff0cinvolution kernel\u53ef\u4ee5\u4f7f\u7528\u66f4\u5927\u7684\u5377\u79ef\u6838\u800c\u4e0d\u8fc7\u591a\u589e\u52a0\u5176\u53c2\u6570\u91cf\uff0c\u5176\u611f\u53d7\u91ce\u4e5f\u5c31\u8d8a\u5927\u3002\\n\\n3. involution\u662f\u52a8\u6001\u7684\uff0c\u800cconvolution\u662f\u9759\u6001\u7684\u3002\\n\\n\u7f3a\u70b9\uff1a\\n\\n1. \u901a\u9053\u95f4\u7684\u4fe1\u606f\u4ea4\u6362\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53d7\u5230\u5f71\u54cd\\n\\n   \u867d\u7136\u540c\u4e00\u7ec4\u5185\u5171\u4eab\u540c\u4e00\u4e2akernel\uff0c\u4f46\u662f\u4e0d\u540c\u7ec4\u901a\u9053\u95f4\u7684\u4fe1\u606f\u4ea4\u6362\u8fd8\u662f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\\n\\n2. \u901f\u5ea6\u76f8\u8f83\u4e8eConvolution\u6ca1\u6709\u4f18\u52bf\\n\\n\\n\\n# Relation to Self-Attention\\n\\n> self-attention\u53ef\u4ee5\u770b\u4f5c\u5e7f\u4e49involution\u7684\u4e00\u79cd\u5b9e\u4f8b\\n\\n\u53ef\u4ee5\u770b\u5230\u4e0eself-attention\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\uff1a\\n\\n![image-20210427212347084](https://gitee.com/Thedeadleaf/images/raw/master/20210507124139.png)\\n\\n\u76f8\u4f3c\uff1a\\n\\n1. \u5176\u4e2dH\u53ef\u4ee5\u7c7b\u6bd4\u4e3ainvolution\u4e2d\u7684G\uff1b\\n2. self-attention\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5173\u7cfb\u77e9\u9635\u53ef\u4ee5\u7c7b\u6bd4\u4e3ainvolution\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684kernel\u3002\\n\\n\u4e0d\u540c\uff1a\\n\\n1. \u76f8\u6bd4\u4e8eself-attention\uff0cInvolution\u6f5c\u5728\u7f16\u7801\u4e86\u4f4d\u7f6e\u4fe1\u606f\uff0c\u800cself-attention\u9700\u8981position encoding\u6765\u533a\u5206\u4f4d\u7f6e\u4fe1\u606f.\\n2. \u4e0d\u5728\u9700\u8981\u4f7f\u7528Q-K\uff0c\u4ec5\u4f9d\u9760\u5355\u4e2a\u50cf\u7d20\u751f\u6210kernel\uff0c\u800c\u975e\u4f9d\u9760\u50cf\u7d20\u95f4\u7684\u5173\u7cfb\u751f\u6210attention map.\\n\\n\u603b\u7ed3\uff1aself-attention\u662fInvolution\u7684\u4e00\u79cd\u5b9e\u4f8b\u5316\uff0c\u4e14Involution\u7684\u8868\u8fbe\u66f4\u4e3a\u5bbd\u6cdb\u548c\u7b80\u6d01\u3002\\n\\n# Ablantion    Analysis\\n\\n![image-20210427213135224](https://gitee.com/Thedeadleaf/images/raw/master/20210507124142.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff1a\\n\\n- Involution\u80fd\u5728\u4e0d\u663e\u8457\u63d0\u5347\u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\u7684\u524d\u63d0\u4e0b\uff0c\u589e\u5927kernel\u7684\u611f\u53d7\u91ce\uff0c\u63d0\u5347\u7f51\u7edc\u6027\u80fd;\\n- \u5728\u663e\u8457\u964d\u4f4e\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u51c6\u786e\u5ea6\u635f\u5931\u5374\u4e0d\u5927\u3002\\n\\n# \u5176\u4ed6\\n\\n1. \u5173\u4e8e\u5377\u79ef\u7684\u53ef\u66ff\u4ee3\u6027\\n\\n   \u7279\u5f81\u5728\u7a7a\u95f4\u4f4d\u7f6e\u4e0a\u5dee\u5f02\u660e\u663e\uff0c\u6211\u4eec\u66f4\u9700\u8981\u6ce8\u610f\u957f\u8ddd\u79bb\u5173\u7cfb\u65f6\uff0cinvolution\u6216\u8bb8\u662f\u4e2a\u597d\u7684\u9009\u62e9\u3002\\n\\n2. \u8bad\u7ec3\u4e0e\u4f18\u5316\\n\\n   \u4e0d\u540c\u4e8econvolution\uff0cinvolution\u5b9e\u9645\u4e0a\u662f\u4e8c\u9636\u4f18\u5316\uff0c\u9700\u8981\u4f18\u5316\u7684\u5e76\u4e0d\u662fkernel\uff0c\u800c\u662fkernel\u751f\u6210\u51fd\u6570\u91cc\u7684\u53c2\u6570\uff0c\u8fd9\u5c31\u4f1a\u9020\u6210\u5f88\u591a\u95ee\u9898\uff08\u6700\u8fd1\u7684transformer\u4f18\u5316\u8fc7\u7a0b\u4e5f\u6709\u5f88\u591a\u95ee\u9898\uff09\uff0c\u4f5c\u8005\u5efa\u8bae\u5bf9\u4e8e\u67d0\u4e9b\u7f51\u7edc\u9700\u8981\u4f7f\u7528gradient clipping\u7b49\u65b9\u6cd5\u6765\u8fdb\u884c\u66f4\u597d\u7684\u4f18\u5316\u3002\\n\\n3. \u786c\u4ef6\u652f\u6301\\n\\n   involution\u7684\u4f18\u5316\u5e76\u6ca1\u6709convolution\u597d\uff0c\u4e5f\u6ca1\u6709\u76f8\u5e94\u786c\u4ef6\u7684\u652f\u6301\uff0c\u56e0\u6b64\u867d\u7136\u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\u90fd\u51cf\u5c0f\u4e86\uff0c\u4f46\u662f\u5b9e\u9645\u5e76\u6ca1\u6709convolution\u5feb\uff0c\u4f5c\u8005\u5efa\u8bae\u4f7f\u7528CUDA\u7f16\u5199Involution\u3002"},{"id":"/[19]PointRend-Image-Segmentation-as-Rendering","metadata":{"permalink":"/blog/[19]PointRend-Image-Segmentation-as-Rendering","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[19]PointRend-Image-Segmentation-as-Rendering.md","source":"@site/blog/[19]PointRend-Image-Segmentation-as-Rendering.md","title":"PointRend - Image Segmentation as Rendering","description":"image-20210601121147760","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"refinement","permalink":"/blog/tags/refinement"}],"readingTime":17.905,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"PointRend - Image Segmentation as Rendering","authors":["visualdust"],"tags":["segmentation","refinement"]},"prevItem":{"title":"Involution - Inverting the Inherence of Convolution for Visual Recognition","permalink":"/blog/[18]Involution-Inverting-the-Inherence-of-Convolution-for-Visual-Recognition"},"nextItem":{"title":"Transformer - Attention is all you need","permalink":"/blog/[20]Transformer-Attention-is-all-you-need"}},"content":"![image-20210601121147760](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601121147760.png)\\n\\n> \u201c\u6211\u4eec\u5e0c\u671b\u9884\u6d4b\u5206\u5272\u56fe\u7684\u8fb9\u754c\u533a\u57df\u66f4\u52a0\u51c6\u786e\uff0c\u6211\u4eec\u5c31\u4e0d\u5e94\u8be5\u4f7f\u7528\u5747\u5300\u91c7\u6837\uff0c\u800c\u5e94\u8be5\u66f4\u52a0\u503e\u5411\u4e8e\u56fe\u50cf\u8fb9\u754c\u533a\u57df\u3002\u201d\\n\\n\u8fd9\u662f\u4e00\u7bc7\u7528\u4e8e\u6539\u5584\u56fe\u50cf\u5206\u5272\u95ee\u9898\u4e2d\u8fb9\u7f18\u5206\u5272\u6548\u679c\u7684\u65b9\u6cd5\u7684\u8bba\u6587\u7684\u9605\u8bfb\u7b14\u8bb0\u3002\u8be5\u65b9\u6cd5\u201c\u5c06\u5206\u5272\u95ee\u9898\u770b\u4f5c\u6e32\u67d3\u95ee\u9898\u201d\uff0c\u8fbe\u5230\u4e86\u8f83\u597d\u7684\u6548\u679c\u3002\u8bba\u6587\u539f\u6587\uff1a[PointRend: Image Segmentation as Rendering](https://arxiv.org/abs/1912.08193)\u3002\u5728\u9605\u8bfb\u8fd9\u7bc7\u7b14\u8bb0\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5148\u4e86\u89e3\u56fe\u50cf\u5206\u5272\u6280\u672f\u3002\u5bf9\u5206\u5272\u7684\u6280\u672f\u8fdb\u884c\u7b80\u8981\u7684\u4e86\u89e3\uff0c\u53ef\u4ee5\u53c2\u8003[\u53e6\u4e00\u7bc7\u7b14\u8bb0](./[10]Overview-Of-Semantic-Segmentation)\u3002\\n\\n## Abstract\uff08\u6458\u8981\uff09\\n\\n> We present a new method for efficient high-quality image segmentation of objects and scenes. By analogizing classical computer graphics methods for efficient rendering with over- and undersampling challenges faced in pixel labeling tasks, we develop a unique perspective of image segmentation as a rendering problem. From this vantage, we present the PointRend (Point-based Rendering) neural network module: a module that performs point-based segmentation predictions at adaptively selected locations based on an iterative subdivision algorithm. PointRend can be flexibly applied to both instance and semantic segmentation tasks by building on top of existing state-of-the-art models. While many concrete implementations of the general idea are possible, we show that a simple design already achieves excellent results. Qualitatively, PointRend outputs crisp object boundaries in regions that are over-smoothed by previous methods. Quantitatively, PointRend yields significant gains on COCO and Cityscapes, for both instance and semantic segmentation. PointRend\'s efficiency enables output resolutions that are otherwise impractical in terms of memory or computation compared to existing approaches. Code has been made available at [this https URL](https://github.com/facebookresearch/detectron2/tree/master/projects/PointRend).\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4ecb\u7ecd\uff08Introduction\uff09\\n\\n\u6211\u4eec\u5e0c\u671b\u9884\u6d4b\u5206\u5272\u56fe\u7684\u8fb9\u754c\u533a\u57df\u66f4\u52a0\u51c6\u786e\uff0c\u6211\u4eec\u5c31\u4e0d\u5e94\u8be5\u4f7f\u7528\u5747\u5300\u91c7\u6837\uff0c\u800c\u5e94\u8be5\u66f4\u52a0\u503e\u5411\u4e8e\u56fe\u50cf\u8fb9\u754c\u533a\u57df\u3002\u8fd9\u79cd\u7c7b\u4f3c\u7684\u91c7\u6837\u95ee\u9898\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u5df2\u7ecf\u88ab\u7814\u7a76\u4e86\u51e0\u5341\u5e74\u4e86\uff0c\u56fe\u50cf\u6e32\u67d3\uff0c\u5c06\u4e00\u4e2a\u6a21\u578b\uff08\u6bd4\u5982\uff0c3D\u7f51\u683c\uff09\u6620\u5c04\u4e3a\u4e00\u4e2arasterized image\uff08\u5373\u4e00\u4e2a\u50cf\u7d20\u7684\u89c4\u5219\u7f51\u683c\uff09\uff0c\u867d\u7136\u8f93\u51fa\u662f\u89c4\u5219\u7684\uff0c\u4f46\u662f\u8ba1\u7b97\u7684\u65f6\u5019\u5374\u4e0d\u662f\u6839\u636e\u7f51\u683c\u4e0a\u5747\u5300\u91c7\u6837\u6765\u8ba1\u7b97\u3002\u5e38\u89c1\u7684\u7b56\u7565\u5c31\u662f\u5728\u56fe\u50cf\u5e73\u9762\u5185\u81ea\u9002\u5e94\u5730\u91c7\u6837\u4e00\u4e9b\u70b9\u4ea7\u751f\u4e0d\u89c4\u5219\u7684\u5b50\u96c6\uff0c\u518d\u6765\u8fdb\u884c\u8ba1\u7b97\u3002\\n\\n\u8fd9\u7bc7\u6587\u7ae0\u7684\u4e2d\u5fc3\u601d\u60f3\u5c31\u662f\u5c06\u56fe\u50cf\u5206\u5272\u95ee\u9898\u89c6\u4f5c\u56fe\u50cf\u6e32\u67d3\u95ee\u9898\uff0c\u4f7f\u7528\u6765\u81ea\u4e8e\u8ba1\u7b97\u673a\u56fe\u50cf\u5b66\u4e2d\u7684\u7ecf\u5178\u601d\u60f3\u8bbe\u8ba1\u5230\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6e32\u67d3\u51fa\u66f4\u9ad8\u8d28\u91cf\u7684\u5206\u5272\u56fe\u3002\u8fd9\u4e2a\u8bbe\u8ba1\u7684\u6838\u5fc3\u5185\u5bb9\u662f PointRend\uff08\u57fa\u4e8e\u70b9\u7684\u6e32\u67d3\uff09\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\uff1a\u201c\u4e00\u4e2a\u57fa\u4e8e\u8fed\u4ee3\u7ec6\u5206\u7b97\u6cd5\u5728\u81ea\u9002\u5e94\u9009\u62e9\u7684\u4f4d\u7f6e\u6267\u884c\u57fa\u4e8e\u70b9\u7684\u5206\u5272\u9884\u6d4b\u7684\u6a21\u5757\u201d\u3002\u8be5\u6a21\u5757\u4f7f\u7528\u7ec6\u5206\u7b56\u7565\u81ea\u9002\u5e94\u5730\u9009\u62e9\u4e00\u7ec4\u975e\u5747\u5300\u70b9\u6765\u8ba1\u7b97\u6807\u7b7e\uff0c\u5bb9\u6613\u7406\u89e3\u7684\u8bf4\u6cd5\u662f\u8be5\u6a21\u5757\u81ea\u52a8\u9009\u53d6\u8fb9\u7f18\u4e0a\u96be\u4ee5\u6b63\u786e\u5f52\u7c7b\u7684\u70b9\u8fdb\u884c\u518d\u6b21\u5206\u7c7b\u3002 \u5b83\u7684\u7ec6\u5206\u7b56\u7565\u4f7f\u7528\u6bd4\u76f4\u63a5\u5bc6\u96c6\u8ba1\u7b97\u5c11\u4e00\u4e2a\u6570\u91cf\u7ea7\u7684\u6d6e\u70b9\u8fd0\u7b97\u6765\u6709\u6548\u5730\u8ba1\u7b97\u9ad8\u5206\u8fa8\u7387\u5206\u5272\u56fe\u3002\\n\\n\u8bf7\u6ce8\u610f\uff0cPointRend\u662f\u4e00\u4e2a\u7f51\u7edc\u6a21\u5757\u800c\u4e0d\u662f\u72ec\u7acb\u7684\u7f51\u7edc\u3002\u8be5\u6a21\u5757\u63a5\u53d7\u4e00\u4e2a\u6216\u591a\u4e2aCNN\u8f93\u51fa\u7684feature map\uff0c\u5e76\u4ea7\u751f\u6bd4\u8f93\u5165\u66f4\u9ad8\u5206\u8fa8\u7387\u7684\u9884\u6d4b\u3002\\n\\n> PointRend is a general module that admits many possible implementations.\\n\\nPointRend \u53ef\u4ee5\u5408\u5e76\u5230\u6d41\u884c\u7684\u5143\u67b6\u6784\u4e2d\uff0c\u7528\u4e8e\u5b9e\u4f8b\u5206\u5272\uff08\u4f8b\u5982\uff0cMask R-CNN\uff09\u548c\u8bed\u4e49\u5206\u5272\uff08\u4f8b\u5982FCN\uff09\u3002\\n\\n![image-20210601154033700](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601154033700.png)\\n\\n\u4e0a\u56fe\u662f\u4e00\u79cd\u53ef\u80fd\u7684PointRend\u7ed3\u6784\u6a21\u5f0f\u56fe\uff1a\u9009\u62e9\u4e00\u4e9b\u5206\u5272\u56f0\u96be\u7684\u70b9\uff0cCNN\u4ea7\u751f\u7684\u7279\u5f81\u56fe\u88ab\u8f93\u5165\u5230MLP\u4e2d\uff0c\u548c\u7c97\u5206\u5272\u7ed3\u679c\u878d\u5408\uff0c\u6700\u7ec8\u8f93\u51fa\u5206\u5272\u56f0\u96be\u70b9\u7684\u9884\u6d4b\u7ed3\u679c\u3002\\n\\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u7bc7\u8bba\u6587\u7684\u521b\u65b0\u5728\u4e8e\u91cd\u65b0\u9009\u62e9\u8fb9\u7f18\u56f0\u96be\u70b9\u7684\u79cd\u7c7b\u3002\u672c\u8d28\u4e0a\u8fd9\u7bc7\u8bba\u6587\u5176\u5b9e\u662f\u4e00\u4e2a\u65b0\u578b\u4e0a\u91c7\u6837\u65b9\u6cd5\uff0c\u9488\u5bf9\u7269\u4f53\u8fb9\u7f18\u7684\u56fe\u50cf\u5206\u5272\u8fdb\u884c\u4f18\u5316\uff0c\u4f7f\u5176\u5728\u96be\u4ee5\u5206\u5272\u7684\u7269\u4f53\u8fb9\u7f18\u90e8\u5206\u6709\u66f4\u597d\u7684\u8868\u73b0\u3002\u5728\u6574\u4e2aPointRend\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u4e2d\u6709\u7c7b\u4f3c\u4e8e\u6e32\u67d3\u7684\u601d\u60f3\uff0c\u4f46\u8bf7\u4e0d\u8981\u5bf9\u201c\u6e32\u67d3\u201d\u8fc7\u5ea6\u7406\u89e3\u3002\\n\\n---\\n\\n## \u65b9\u6cd5\uff08Method\uff09\\n\\n### PointRend\u6a21\u5757\\n\\n\u7c7b\u4f3c\u4e8e\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\uff0c\u5c4f\u5e55\u4e0a\u67d0\u4e2a\u4f4d\u7f6e\u7684\u50cf\u7d20\u662f\u4ece\u4e00\u4e2a\u66f2\u7ebf\u3001\u6a21\u578b\u7b49\u901a\u8fc7\u88ab\u79f0\u4e3a\u6e32\u67d3\u7684\u6620\u5c04\u4ea7\u751f\uff0c\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u56fe\u50cf\u5206\u5272\u89c6\u4e3a\u5e95\u5c42\u8fde\u7eed\u5b9e\u4f53\u7684\u7c7b\u522b\u56fe\uff0c\u800c\u5206\u5272\u8f93\u51fa\uff0c\u5373\u9884\u6d4b\u6807\u7b7e\u7684\u50cf\u7d20\u96c6\u5408\uff0c\u662f\u4ece\u4e2d\u201c\u6e32\u67d3\u201d\u51fa\u6765\u7684\u3002\\n\\n![image-20210601161409751](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601161409751.png)\\n\\n\u4e0a\u56fe\u662f\u8fd9\u4e2a\u6a21\u5f0f\u7684\u7b80\u56fe\u3002\u5176\u4e2d\uff0cPointRend\u7684\u5173\u952e\u6b65\u9aa4\u5c31\u662f\u8bad\u7ec3\u4e00\u4e2a\u201c\u89e3\u7801\u5668\u201d\uff08\u6216\u8005\u53eb\u201c\u6e32\u67d3\u5668\u201d\uff09\uff0c\u4ecechannel\u4e2d\u201c\u89e3\u7801\u201d\uff08\u6216\u8005\u201c\u6e32\u67d3\u201d\uff09\u51fa\u9884\u6d4b\u56f0\u96be\u7684\u50cf\u7d20\u6240\u5c5e\u7684\u7c7b\u522b\u3002\\n\\nPointRend\u6a21\u5757\u63a5\u53d7\u4e00\u4e2a\u6216\u591a\u4e2a\u5178\u578b\u7684$C$\u901a\u9053\u7684CNN\u7279\u5f81\u56fe\uff08$f\\\\in \\\\R^{C\\\\times H\\\\times W}$\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd9\u4e9b\u8f93\u5165\u7279\u5f81\u56fe\u5f80\u5f80\u6bd4\u9700\u8981\u9884\u6d4b\u7684\u56fe\u50cf\u7684\u5b9e\u9645\u5c3a\u5bf8\u8981\u5c0f4~16\u500d\u3002PointRend\u6a21\u5757\u4f1a\u8f93\u51fa\u4e00\u4e2a\u5927\u5c0f\u4e3a$p\\\\in \\\\R^{k\\\\times H\' \\\\times W\'}$\u7684\u5bf9K\u4e2a\u7c7b\u522b\u7684\u9884\u6d4b\u3002\u901a\u5e38\u8f93\u51fa\u7684\u5927\u5c0f\u4f1a\u5927\u4e8e\u8f93\u5165\u7684\u5927\u5c0f\u3002\\n\\n\uff08\u5982\u679c\u8bfb\u4e0d\u61c2\u4e86\u8bf7\u5148\u53c2\u8003[\u53e6\u4e00\u7bc7\u7b14\u8bb0](./[10]Overview-Of-Semantic-Segmentation)\u4e86\u89e3\u56fe\u50cf\u7684\u5206\u5272\u6280\u672f\uff09\\n\\n### PointRend\u6a21\u5757\u7684\u7ec4\u6210\\n\\nPointRend\u6a21\u5757\u7531\u5355\u4e2a\u4e3b\u8981\u7684\u90e8\u5206\u7ec4\u6210\uff1a\\n\\n1. \u4e00\u4e2a**\u70b9\u7684\u9009\u62e9\u7b56\u7565**\u3002PointRend\u6a21\u5757\u5e76\u4e0d\u4f1a\u5bf9\u6574\u5e45\u56fe\u7247\u4e0a\u7684\u6240\u6709\u70b9\u8fdb\u884c\u9884\u6d4b\uff08\u8fd9\u6837\u4f1a\u4ea7\u751f\u5de8\u5927\u7684\u5f00\u9500\uff09\uff0c\u800c\u662f\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u770b\u4e0a\u53bb\u201c\u96be\u4ee5\u9884\u6d4b\u7684\u5b9e\u503c\u70b9\u201d\u8fdb\u884c\u9884\u6d4b\uff08\u5b9e\u503c\u70b9\u7684\u7279\u5f81\u662f\u901a\u8fc7\u8f93\u5165$f$\u7684\u53cc\u7ebf\u6027\u63d2\u503c\u8ba1\u7b97\u7684\uff09\u3002\\n2. \u4e00\u4e2a**\u7279\u5f81\u63d0\u53d6\u5668**\uff08\u6216\u8005\u53eb\u201c\u89e3\u7801\u5668\u201d\uff0c\u6216\u662f\u201c\u6e32\u67d3\u5668\u201d\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9009\u5b9a\u7684\u70b9\uff0c\u5728\u8f93\u5165\u4e2d\u76f8\u5173\u7684\u90e8\u5206\u53ef\u80fd\u662f$i\\\\in \\\\R^{C\\\\times 1\\\\times 1}$\u7684\u4e00\u4e2a\u957f\u957f\u7684\u901a\u9053\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9009\u5b9a\u7684\u70b9\uff0c\u7279\u5f81\u63d0\u53d6\u5668\u63d0\u53d6\u8be5\u70b9\u7684\u7279\u5f81\u8868\u793a\u3002\\n3. \u4e00\u4e2a**\u5206\u7c7b\u5668**\uff08\u539f\u6587\u4e2d\u79f0\u4e4b\u4e3a\u201cpoint head\u201d\uff09\u3002\u8fd9\u4e2a\u5206\u7c7b\u5668\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u88ab\u8bad\u7ec3\u6765\u4ece\u8fd9\u4e2a\u9010\u70b9\u7279\u5f81\u8868\u793a\u4e2d\u9884\u6d4b\u4e00\u4e2a\u6807\u7b7e\u3002\u5bf9\u4e8e\u8fd9\u90e8\u5206\u6765\u8bf4\uff0c\u6bcf\u4e2a\u70b9\u90fd\u662f\u72ec\u7acb\u7684\u3002\\n\\n\u8fd9\u51e0\u4e2a\u7ec4\u6210\u90e8\u5206\u5c06\u4f1a\u5728\u4e0b\u6587\u4e2d\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002\\n\\nPointRend \u67b6\u6784\u53ef\u5e94\u7528\u4e8e\u5b9e\u4f8b\u5206\u5272\uff08\u4f8b\u5982\uff0c\u5728 Mask R-CNN\u4e0a\uff09\u548c\u8bed\u4e49\u5206\u5272\uff08\u4f8b\u5982\uff0c\u5728 FCNs\u4e0a\uff09\u4efb\u52a1\u3002\\n\\n![image-20210601154033700](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601154033700.png)\\n\\n\u5982\u4e0a\u56fe\uff0cPointRend \u6a21\u5757\u5e94\u7528\u4e8e\u6bcf\u4e2a\u533a\u57df\u3002\u5b83\u901a\u8fc7\u5bf9\u4e00\u7ec4\u9009\u5b9a\u70b9\u8fdb\u884c\u9884\u6d4b\uff0c\u4ee5\u4ece\u7c97\u5230\u7ec6\u7684\u65b9\u5f0f\u8ba1\u7b97\u63a9\u7801\u3002\u5bf9\u4e8e\u8bed\u4e49\u5206\u5272\uff0c\u53ef\u4ee5\u5c06\u6574\u4e2a\u56fe\u50cf\u89c6\u4e3a\u5355\u4e2a\u533a\u57df\uff0c\u56e0\u6b64\u4e0d\u5931\u4e00\u822c\u6027\u3002\\n\\n### \u70b9\u7684\u9009\u62e9\u7b56\u7565\uff08Point selection for Inference and Training\uff09\\n\\nPointRend\u65b9\u6cd5\u7684\u6838\u5fc3\u662f\u7075\u6d3b\u548c\u81ea\u9002\u5e94\u5730\u9009\u62e9\u56fe\u50cf\u5e73\u9762\u4e2d\u9884\u6d4b\u5206\u5272\u6807\u7b7e\u7684\u70b9\u3002\u76f4\u89c9\u4e0a\uff0c\u8fd9\u4e9b\u70b9\u5e94\u8be5\u66f4\u5bc6\u96c6\u5730\u9760\u8fd1\u9ad8\u9891\u533a\u57df\uff0c\u4f8b\u5982\u7269\u4f53\u8fb9\u754c\uff0c\u7c7b\u4f3c\u4e8e\u5149\u7ebf\u8ffd\u8e2a\u4e2d\u7684\u6297\u952f\u9f7f\u95ee\u9898\u3002\\n\\nPointRend\u7684\u63a8\u7406\u9009\u62e9\u7b56\u7565\u53d7\u5230\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u81ea\u9002\u5e94\u7ec6\u5206\u7684\u7ecf\u5178\u6280\u672f\u7684\u542f\u53d1\u3002\u8be5\u6280\u672f\u7528\u4e8e\u901a\u8fc7\u4ec5\u5728\u503c\u4e0e\u5176\u90bb\u5c45\u663e\u8457\u4e0d\u540c\u7684\u4f4d\u7f6e\u8fdb\u884c\u8ba1\u7b97\u6765\u9ad8\u6548\u5730\u6e32\u67d3\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\u3002\u5bf9\u4e8e\u5176\u4ed6\u4f4d\u7f6e\uff0c\u8fd9\u4e9b\u503c\u662f\u901a\u8fc7\u63d2\u5165\u5df2\u7ecf\u8ba1\u7b97\u51fa\u7684\u8f93\u51fa\u503c\u83b7\u5f97\u7684\u3002\u4e0b\u9762\u662f\u4e00\u6bb5\u89e3\u91ca\uff1a\\n\\n![image-20210601170513086](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601170513086.png)\\n\\n\u5728\u6e32\u67d3\u95ee\u9898\u4e2d\uff0c\u4f8b\u5982\uff0c\u5728\u4e00\u5757\u5206\u8fa8\u7387\u4e3a1080p\u7684\u5c4f\u5e55\u4e0a\u663e\u793a\u4e00\u5f202k\u7684\u56fe\u7247\u65f6\uff0c\u5f80\u5f80\u663e\u793a\u8bbe\u5907\u4e0d\u9700\u8981\u5bf92k\u56fe\u7247\u7684\u6240\u6709\u50cf\u7d20\u90fd\u8fdb\u884c\u5904\u7406\uff0c\u4ec5\u5904\u7406\u4e00\u90e8\u5206\u5373\u53ef\u663e\u793a\u51fa\u8db3\u591f\u7684\u5206\u8fa8\u7387\u3002\u4f46\u5f53\u7528\u6237\u653e\u5927\u56fe\u7247\uff0c\u57281080p\u7684\u663e\u793a\u5c4f\u4e0a\u663e\u793a\u4e00\u5f202k\u56fe\u7247\u4e2d\u7684\u4e00\u89d2\u65f6\uff0c\u663e\u793a\u8bbe\u5907\u5c31\u9700\u8981\u5bf9\u8fd9\u5f20\u56fe\u7247\u8fdb\u884c\u66f4\u7cbe\u7ec6\u7684\u5904\u7406\u8ba9\u5b83\u4eec\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u66f4\u591a\u7ec6\u8282\u3002\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u53d1\u73b0\uff0c1\u548c2\u90e8\u5206\u548c\u539f\u6765\u7684\u50cf\u7d20\u5dee\u8ddd\u4e0d\u5927\uff0c\u4e0d\u9700\u8981\u4ece\u56fe\u7247\u6587\u4ef6\u6e32\u67d3\uff0c\u5904\u7406\u65f6\u4ec5\u9700\u540c\u4e0a\u6587\u4e2d\u7684\u201c\u8fd9\u4e9b\u503c\u662f\u901a\u8fc7\u63d2\u5165\u5df2\u7ecf\u8ba1\u7b97\u51fa\u7684\u8f93\u51fa\u503c\u83b7\u5f97\u7684\u201d\uff0c\u4ece\u653e\u5927\u524d\u7684\u56fe\u4e0a\u63d2\u503c\u5373\u53ef\u5f97\u5230\u3002\u9700\u8981\u91cd\u65b0\u5904\u7406\u7684\uff0c\u662f1\u548c2\u7684\u8fb9\u7f18\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u201c\u503c\u4e0e\u5176\u90bb\u5c45\u663e\u8457\u4e0d\u540c\u7684\u4f4d\u7f6e\u201d\u3002\\n\\n>  \u7c7b\u6bd4\u6e32\u67d3\u95ee\u9898\u4e2d\u7684\u7ec6\u5206\u8fc7\u7a0b\u548c\u5206\u5272\u95ee\u9898\u4e2d\u7684\u4e0a\u91c7\u6837\u8fc7\u7a0b\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u5206\u5272\u4e2d\u7684\u4e0a\u91c7\u6837\u8fc7\u7a0b\u4e2d\u65f6\u6211\u4eec\u9700\u8981\u5173\u6ce8\u8fb9\u7f18\uff0c\u5bf9\u8fb9\u7f18\u8fdb\u884c\u7ec6\u5316\u5373\u53ef\u3002\\n\\n\u6240\u4ee5\u70b9\u7684\u9009\u62e9\u7b56\u7565\uff0c\u5c31\u662f\u5728\u4e0a\u91c7\u6837\u8fc7\u7a0b\u4e2d\u9009\u62e9\u201c\u4e0d\u786e\u5b9a\u7684\u70b9\u201d\uff0c\u6216\u201c\u8fb9\u754c\u7684\u70b9\u201d\u3002\\n\\n#### \u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\uff08Inference\uff09\\n\\n> \u5bf9\u4e8e\u6bcf\u4e2a\u533a\u57df\uff0c\u6211\u4eec\u4ee5\u7c97\u5230\u7ec6\u7684\u65b9\u5f0f\u8fed\u4ee3\u5730\u201c\u6e32\u67d3\u201d\u8f93\u51fa\u63a9\u7801\u3002\\n\\n\u5728\u7f51\u7edc\u7684\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u5230\u8fbePointRend\u6a21\u5757\u65f6\uff0c\u4f1a\u603b\u4f53\u7ecf\u5386\u4ee5\u4e0b\u6b65\u9aa4\uff1a\\n\\n1. \u4f7f\u7528\u53cc\u7ebf\u6027\u63d2\u503c\u5bf9\u5176\u5148\u524d\u9884\u6d4b\u7684\u5206\u5272\u8fdb\u884c\u4e0a\u91c7\u6837\u3002\\n2. \u5728\u8fd9\u4e2a\u4e0a\u91c7\u6837\u7684\u7279\u5f81\u56fe\u4e0a\u9009\u62e9 N \u4e2a\u6700\u4e0d\u786e\u5b9a\u7684\u70b9\uff08\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u63a9\u7801\uff0c\u53ef\u4ee5\u9009\u62e9\u6982\u7387\u6700\u63a5\u8fd1 0.5 \u7684\u90a3\u4e9b\u70b9\uff09\u3002\\n3. \u4e3a\u8fd9 N \u4e2a\u70b9\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8ba1\u7b97\u9010\u70b9\u7279\u5f81\u8868\u793a\uff08\u5728\u7b2c 3.2 \u8282\u4e2d\u7b80\u8981\u63cf\u8ff0\uff09\u5e76\u9884\u6d4b\u5b83\u4eec\u7684\u6807\u7b7e\u3002\\n4. \u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u5206\u5272\u88ab\u4e0a\u91c7\u6837\u5230\u6240\u9700\u7684\u5206\u8fa8\u7387\u3002\\n\\n![image-20210601200340192](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601200340192.png)\\n\\n\u4e0a\u56fe\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u653e\u5728\u6574\u4e2a\u7f51\u7edc\u4e2d\u7684\u5927\u81f4\u6d41\u7a0b\u793a\u610f\u56fe\uff0c\u4e0b\u9762\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u5c40\u90e8\u6d41\u7a0b\u56fe\u3002\\n\\n![image-20210601205123801](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601205123801.png)\\n\\n\u6574\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6bd4\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u4e0a\u91c7\u6837\u591a\u4e86\u4e00\u4e2a\u9009\u62e9\u4e0d\u786e\u5b9a\u70b9\u548c\u9884\u6d4b\u5176\u79cd\u7c7b\u7684\u8fc7\u7a0b\u3002\u6574\u4e2a\u524d\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u7b80\u5355\u6613\u61c2\u3002\\n\\n\u8f93\u5165\u5927\u5c0f\u4e3a $M_0 \\\\times M_0$ \u5e76\u4e14\u8f93\u51fa\u5927\u5c0f\u4e3a $M\\\\times M$ \u7684PointRend\u6a21\u5757\u4e00\u6b21\u8fd0\u7b97\u6240\u9700\u8981\u9884\u6d4b\u7684\u50cf\u7d20\u603b\u91cf\u4e0d\u4f1a\u8d85\u8fc7 $N \\\\log_2 {\\\\frac{M}{M_0}}$ \uff0c\u8fd9\u6bd4 $M\\\\times M$ \u5c0f\u5f97\u591a\uff0c\u5e76\u4f7fPointRend \u66f4\u6709\u6548\u5730\u8fdb\u884c\u9ad8\u5206\u8fa8\u7387\u9884\u6d4b\u3002\u4f8b\u5982\uff0c\u5982\u679c $M_0$ \u4e3a 7 \u5e76\u4e14\u6240\u9700\u5206\u8fa8\u7387\u4e3a $M =224$ \uff0c\u5219\u6267\u884c 5 \u4e2a\u7ec6\u5206\u6b65\u9aa4\u3002\u5982\u679c\u6211\u4eec\u5728\u6bcf\u4e00\u6b65\u9009\u62e9 $N =28^2$ \u4e2a\u70b9\uff0cPointRend \u53ea\u5bf9 $ 28^2 \xb7 4.25 $ \u4e2a\u70b9\u8fdb\u884c\u9884\u6d4b\uff0c\u8fd9\u6bd4 $224^2$ \u5c0f 15 \u500d\u3002\\n\\n#### \u8bad\u7ec3\u65f6\u7684\u201c\u4e0d\u786e\u5b9a\u201d\u70b9\u9009\u53d6\uff08Training\uff09\\n\\n\u5728\u4e4b\u524d\u7684\u4e00\u4e9b\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u63d0\u5230PointRend\u6a21\u5757\u4e2d\u9700\u8981\u9009\u62e9\u4e00\u4e9b\u201c\u4e0d\u786e\u5b9a\u201d\u7684\u70b9\u8fdb\u884c\u5206\u7c7b\u3002\u90a3\u4e48\uff0c\u600e\u4e48\u9009\u62e9\u201c\u4e0d\u786e\u5b9a\u201d\u7684\u70b9\u5462\uff1f\u6211\u4eec\u5728\u4e0a\u9762\u63d0\u5230:\\n\\n> \u5728\u8fd9\u4e2a\u4e0a\u91c7\u6837\u7684\u7279\u5f81\u56fe\u4e0a\u9009\u62e9 N \u4e2a\u6700\u4e0d\u786e\u5b9a\u7684\u70b9\\n\\n![image-20210601154033700](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601154033700-1622553357332.png)\\n\\n\u91c7\u6837\u7b56\u7565\u5728\u7279\u5f81\u56fe\u4e0a\u9009\u62e9N\u4e2a\u70b9\uff0c\u8fd9N\u4e2a\u70b9\u5e94\u8be5\u662f\u201c\u4e0d\u786e\u5b9a\u201d\u7684\u3002PointRend\u5728\u9009\u62e9\u70b9\u65f6\u4f7f\u7528\u4e09\u4e2a\u539f\u5219\u4f7f\u9009\u62e9\u5230\u7684\u70b9\u662f\u201c\u4e0d\u786e\u5b9a\u201d\u7684\uff1a\\n\\n1. \u8fc7\u5ea6\u751f\u6210\uff1a\u5e73\u5747\u4ece\u8f93\u5165\u4e2d\u9009\u62e9$kN$\u4e2a\u70b9\uff08\u5176\u4e2d$k>1$\uff09\u3002\\n\\n2. \u91cd\u8981\u6027\u91c7\u6837\uff1a\u6839\u636e\u7c97\u9884\u6d4b\uff08\u4e0a\u65b9\u56fe\u7247\u4e2d\u7684\u201ccoarse prediction\u201d\uff09\u7ed3\u679c\u5224\u65ad\u6bcf\u4e2a\u70b9\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u4ece\u4e2d\u9009\u62e9\u201c\u4e0d\u786e\u5b9a\u7c97\u7565\u9884\u6d4b\u7684\u70b9\u201d\uff0c\u4ece\u521a\u624d\u9009\u53d6\u7684$kN$\u7684\u70b9\u4e2d\u9009\u51fa\u6700\u4e0d\u786e\u5b9a\u7684$\\\\beta N$\u4e2a\u70b9\uff08\u5176\u4e2d$\\\\beta \\\\in [0,1]$\uff09\u3002\\n\\n3. Coverage \uff08\u8bf4\u5b9e\u8bdd\u6682\u65f6\u6ca1\u770b\u61c2\u8fd9\u4e00\u4e2a\u662f\u5e72\u5565\u7684\uff09\uff1a\u5269\u4f59\u7684$(1-\\\\beta)N$\u4e2a\u70b9\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u3002\u5982\u4e0b\u56fe\u4e2d\u91c7\u7528\u4e86\u4e0d\u540c\u7684$k$\u548c$\\\\beta$\u6765\u8bf4\u660e\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5de6\u4fa7\u662f\u5747\u5300\u5206\u5e03\u7684\u793a\u610f\u56fe\uff0c\u53f3\u4fa7\u662f\u91c7\u7528\u4e0d\u540c\u7684$k$\u548c$\\\\beta$\u7684\u793a\u610f\u56fe\u3002\\n\\n   ![image-20210601211914002](./src/PointRend-Image-Segmentation-as-Rendering/image-20210601211914002.png)\\n\\n`\u539f\u5219\u4e0a\uff0c\u8fd9\u91cc\u7684\u9009\u62e9\u70b9\u7684\u7b56\u7565\u53ef\u4ee5\u4e0e\u4e0a\u6587\u4e2d\u63a8\u7406\u65f6\u70b9\u7684\u7ec6\u5206\u7b56\u7565\u7c7b\u4f3c\u3002**\u7136\u800c\uff0c\u7ec6\u5206\u7684\u7b56\u7565\u4f1a\u5f15\u5165\u5bf9\u795e\u7ecf\u7f51\u7edc\u7684\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u4e0d\u592a\u53cb\u597d\u7684\u8fd0\u7b97\u6b65\u9aa4**\uff0c\u6240\u4ee5\u5728\u9009\u62e9\u70b9\u7684\u65f6\u5019\u8fd9\u7bc7\u8bba\u6587\u4e2d\u9009\u62e9\u4e86\u975e\u8fed\u4ee3\u7684\u968f\u673a\u91c7\u6837\u7b56\u7565\u3002`\\n\\n### \u70b9\u7684\u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b\uff08Point-wise Representation and Point Head\uff09\\n\\n\u5728\u7279\u5f81\u63d0\u53d6\u90e8\u5206\uff0cPointRend\u901a\u8fc7\u878d\u5408\u7c97\u7279\u5f81\u548c\u7ec6\u7c92\u5ea6\u7279\u5f81\u83b7\u5f97\u66f4\u5408\u9002\u7684\u7279\u5f81\uff0c\u7136\u540e\u901a\u8fc7\u5206\u7c7b\u5f97\u5230\u8be5\u70b9\u7684\u7c7b\u522b\u3002\\n\\n#### \u7ec6\u7c92\u5ea6\u7279\u5f81\uff08Fine-grained features\uff09\\n\\n> \u7ec6\u7c92\u5ea6\u7279\u5f81\u5c31\u662f\u5404\u79cd\u5206\u5272\u7f51\u7edc\u4e2d\u7528\u4e8e\u7a20\u5bc6\u9884\u6d4b\u7684\u76f4\u63a5\u7279\u5f81\u3002\\n\\n\u4e3a\u4e86\u8ba9 PointRend \u5448\u73b0\u7cbe\u7ec6\u7684\u5206\u5272\u7ec6\u8282\uff0cPoint Rend\u65b9\u6cd5\u4e2d\u4ece\u524d\u5e8fCNN\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u4f4d\u7f6e\u63d0\u53d6\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\uff0c\u7136\u540e\u8fdb\u884c\u53cc\u7ebf\u6027\u63d2\u503c\u4e0a\u91c7\u6837\u4f5c\u4e3a\u8fd9\u4e2a\u4f4d\u7f6e\u50cf\u7d20\u7684\u7ec6\u7c92\u5ea6\u7279\u5f81\u3002\u53ef\u4ee5\u4ece\u5355\u4e2a\u7279\u5f81\u6620\u5c04\u4e2d\u63d0\u53d6\u8fd9\u4e2a\u7279\u5f81\uff08\u4f8b\u5982ResNet\u4e2d\u7684$res_2$\uff09\uff1b\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u4ece\u591a\u4e2a\u7279\u5f81\u56fe\u878d\u5408\u5f97\u5230\uff08\u4f8b\u5982$res_2$\u5230$res_5$\uff0c\u6216\u662f\u4ece\u5b83\u4eec\u7684\u7279\u5f81\u91d1\u5b57\u5854\u5bf9\u5e94\u5c42\u7684\u8f93\u51fa\u63d0\u53d6\uff09\u3002\\n\\n#### \u7c97\u9884\u6d4b\u7279\u5f81\uff08Coarse prediction features\uff09\\n\\n> \u7c97\u7c92\u5ea6\u8ba9\u7279\u5f81\u201c\u66f4\u5177\u7a7a\u95f4\u6027\u201d\u3002\\n\\n\u5355\u7eaf\u4f7f\u7528\u7ec6\u7c92\u5ea6\u7279\u5f81\u5bb9\u6613\u5bfc\u81f4\u5148\u5929\u6027\u7684\u4e0d\u8db3\uff0c\u90a3\u5c31\u662f\u548c\u5468\u56f4\u8f83\u5927\u8303\u56f4\u5185\u7684\u50cf\u7d20\u5f88\u96be\u4ea7\u751f\u5173\u8054\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u7a7a\u95f4\u4fe1\u606f\u4e22\u5931\u3002\u8fd9\u662f\u524d\u5e8fCNN\u4e0b\u91c7\u6837\u5bfc\u81f4\u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u540c\u65f6\u5904\u5728\u4e24\u4e2a\u4e0d\u540c\u5b9e\u4f53\u8fb9\u754c\u4e0a\u7684\u70b9\u53ea\u5177\u6709\u4e00\u4efd\u76f8\u540c\u7684\u7ec6\u7c92\u5ea6\u7279\u5f81\uff0c\u4f46\u662f\u4e00\u4e2a\u70b9\u53ea\u80fd\u88ab\u5206\u7ed9\u4e00\u4e2a\u5b9e\u4f53\uff08\u4e5f\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u5177\u6709\u76f8\u540c\u7ec6\u7c92\u5ea6\u7279\u5f81\u7684\u70b9\u5728\u4e0d\u540c\u7684\u5b9e\u4f53\u533a\u57df\u5185\u5e94\u8be5\u88ab\u5206\u7c7b\u4e3a\u4e0d\u540c\u6807\u7b7e\uff09\uff0c\u8fd9\u5c31\u9700\u8981\u8be5\u70b9\u7684\u989d\u5916\u7684\u533a\u57df\u4fe1\u606f\u3002\\n\\n\u8fd8\u6709\uff0c\u6839\u636e\u4ea7\u751f\u7ec6\u7c92\u5ea6\u7279\u5f81\u6240\u4f7f\u7528\u7684\u7279\u5f81\u56fe\u7684\u4e0d\u540c\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u7ec6\u7c92\u5ea6\u7279\u5f81\u5185\u53ea\u5305\u542b\u76f8\u5bf9\u4f4e\u7ea7\u7684\u4fe1\u606f\u7684\u60c5\u51b5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5177\u6709\u66f4\u591a\u4e0a\u4e0b\u6587\u548c\u8bed\u4e49\u4fe1\u606f\u7684\u7279\u5f81\u6e90\u4f1a\u5bf9\u5206\u5272\u7684\u7cbe\u5ea6\u4ea7\u751f\u5f88\u5927\u7684\u5e2e\u52a9\u3002\\n\\n\u57fa\u4e8e\u8fd9\u4e9b\u8003\u8651\uff0c\u7b2c\u4e8c\u79cd\u7279\u5f81\u7c7b\u578b\u662f\u6765\u81ea\u7f51\u7edc\u7684\u7c97\u5206\u5272\u9884\u6d4b\uff0c\u5373\u533a\u57df\uff08\u6846\uff09\u4e2d\u6bcf\u4e2a\u70b9\u7684 K \u7ef4\u5411\u91cf\u4ee3\u8868 K \u7c7b\u9884\u6d4b\u3002\\n\\n#### \u5206\u7c7b\u5668\uff08\u201c\u70b9\u5934\u201d\uff0cPoint Head\uff09\\n\\n\u70b9\u5934\u3002\u7ed9\u5b9a\u6bcf\u4e2a\u9009\u5b9a\u70b9\u7684\u9010\u70b9\u7279\u5f81\u8868\u793a\uff0cPointRend \u4f7f\u7528\u7b80\u5355\u7684\u591a\u5c42\u611f\u77e5\u5668 (MLP) \u8fdb\u884c\u9010\u70b9\u5206\u5272\u9884\u6d4b\u3002\u8fd9\u4e2a MLP \u5728\u6240\u6709\u70b9\uff08\u548c\u6240\u6709\u533a\u57df\uff09\u4e0a\u5171\u4eab\u6743\u91cd\uff0c\u7c7b\u4f3c\u4e8e\u56fe\u5377\u79ef\u6216 PointNet\u3002\u7531\u4e8e MLP \u9884\u6d4b\u6bcf\u4e2a\u70b9\u7684\u5206\u5272\u6807\u7b7e\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u7684\u7279\u5b9a\u4e8e\u4efb\u52a1\u7684\u5206\u5272\u635f\u5931\u8fdb\u884c\u8bad\u7ec3\u3002\\n\\n## \u5b9e\u9a8c\uff08Experiments\uff09\\n\\n\u8bf7\u53c2\u8003\u539f\u6587\u3002"},{"id":"/[20]Transformer-Attention-is-all-you-need","metadata":{"permalink":"/blog/[20]Transformer-Attention-is-all-you-need","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[20]Transformer-Attention-is-all-you-need.md","source":"@site/blog/[20]Transformer-Attention-is-all-you-need.md","title":"Transformer - Attention is all you need","description":"\u8bba\u6587\u540d\u79f0\uff1aAttention Is All you Need","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"transformer","permalink":"/blog/tags/transformer"}],"readingTime":20.415,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"Transformer - Attention is all you need","authors":["asthestarsfall"],"tags":["attention-mechanism","transformer"]},"prevItem":{"title":"PointRend - Image Segmentation as Rendering","permalink":"/blog/[19]PointRend-Image-Segmentation-as-Rendering"},"nextItem":{"title":"RefineMask - Towards High-Quality Instance Segmentationwith Fine-Grained Features","permalink":"/blog/[21]RefineMask-Towards-High-Quality-Instance-Segmentationwith-Fine-Grained_Features"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1a[Attention Is All you Need](https://arxiv.org/pdf/1706.03762.pdf)\\n>\\n> \u4f5c\u8005\uff1aAshish Vaswani\uff0cNoam Shazeer\uff0cNiki Parmar\uff0cJakob Uszkoreit\uff0cLlion Jones\uff0cAidan N. Gomez\uff0c\u0141ukasz Kaiser\uff0cIllia Polosukhin\\n>\\n> code\uff1ahttps://github.com/jadore801120/attention-is-all-you-need-pytorch/blob/master/transformer/Models.py\\n\\n## \u524d\u8a00\\n\\n\u57fa\u4e8eRNN\u6216CNN\u7684Encoder-Decoder\u6a21\u578b\u5728NLP\u9886\u57df\u5360\u636e\u5927\u58c1\u6c5f\u5c71\uff0c\u7136\u800c\u5979\u4eec\u4e5f\u5e76\u975e\u662f\u5b8c\u7f8e\u65e0\u7f3a\u7684\uff1a\\n\\n- LSTM\uff0cGRU\u7b49RNN\u6a21\u578b\u53d7\u9650\u4e8e\u56fa\u6709\u7684\u5faa\u73af\u987a\u5e8f\u7ed3\u6784\uff0c\u65e0\u6cd5\u5b9e\u73b0**\u5e76\u884c\u8ba1\u7b97**\uff0c\u5728\u5e8f\u5217\u8f83\u957f\u65f6\uff0c\u8ba1\u7b97\u6548\u7387\u5c24\u5176\u4f4e\u4e0b\uff0c\u867d\u7136\u6700\u8fd1\u7684\u5de5\u4f5c\u5982[\u56e0\u5b50\u5206\u89e3\u6280\u5de7](http://arxiv.org/abs/1703.10722)[^1]\uff0c[\u6761\u4ef6\u8ba1\u7b97](https://arxiv.org/abs/1701.06538)[^2]\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u8ba1\u7b97\u6548\u7387\u548c\u6027\u80fd\uff0c\u4f46\u662f\u987a\u5e8f\u8ba1\u7b97\u7684\u9650\u5236\u4f9d\u7136\u5b58\u5728\uff1b\\n- Extended Neural GPU[^3],[ByteNet](https://arxiv.org/abs/1610.10099)[^4],\u548c[ConvS2S](https://arxiv.org/abs/1705.03122)[^5] \u7b49CNN\u6a21\u578b\u867d\u7136\u53ef\u4ee5\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\uff0c\u4f46\u662f\u5b66\u4e60\u4efb\u610f\u4e24\u4e2a\u4f4d\u7f6e\u7684\u4fe1\u53f7\u7684\u957f\u8ddd\u79bb\u5173\u7cfb\u4f9d\u65e7\u6bd4\u8f83\u56f0\u96be\uff0c\u5176\u8ba1\u7b97\u590d\u6742\u5ea6\u968f\u8ddd\u79bb\u7ebf\u6027\u6216\u5bf9\u6570\u589e\u957f\u3002\\n\\n\u800c\u8c37\u6b4c\u9009\u62e9\u629b\u5f03\u4e86\u4e3b\u6d41\u6a21\u578b\u56fa\u6709\u7684\u7ed3\u6784\uff0c\u63d0\u51fa\u4e86**\u5b8c\u5168**\u57fa\u4e8e\u6ce8\u610f\u529b\u673a\u5236\u7684Transformer\uff0c\u62e5\u6709\u5176\u4ed6\u6a21\u578b\u65e0\u6cd5\u6bd4\u62df\u7684\u4f18\u52bf\uff1a\\n\\n- Transformer\u53ef\u4ee5\u9ad8\u6548\u7684\u5e76\u884c\u8bad\u7ec3\uff0c\u56e0\u6b64\u901f\u5ea6\u5341\u5206\u5feb\uff0c\u57288\u4e2aGPU\u4e0a\u8bad\u7ec3\u4e863.5\u5929\uff1b\\n- \u5bf9\u4e8e\u957f\u8ddd\u79bb\u5173\u7cfb\u7684\u5b66\u4e60\uff0cTransformer\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230\u4e86\u5e38\u6570\uff0c\u5e76\u4e14\u4f7f\u7528\u591a\u5934\u6ce8\u610f\u529b\u6765\u62b5\u6d88\u4f4d\u7f6e\u4fe1\u606f\u7684\u5e73\u5747\u52a0\u6743\u9020\u6210\u7684\u6709\u6548\u5206\u8fa8\u7387\u964d\u4f4e\\n- Transform\u662f\u4e00\u79cd\u81ea\u7f16\u7801\uff08Auto-Encoding\uff09\u6a21\u578b\uff0c\u80fd\u591f\u540c\u65f6\u5229\u7528\u4e0a\u4e0b\u6587\\n\\n## \u6574\u4f53\u7ed3\u6784\\n\\nTransfromer\u7684\u6574\u4f53\u7ed3\u6784\u662f\u4e00\u4e2aEncoder-Decoder\uff0c\u81ea\u7f16\u7801\u6a21\u578b\u4e3b\u8981\u5e94\u7528\u4e8e\u8bed\u610f\u7406\u89e3\uff0c\u5bf9\u4e8e\u751f\u6210\u4efb\u52a1\u8fd8\u662f\u81ea\u56de\u5f52\u6a21\u578b\u66f4\u6709\u4f18\u52bf\\n\\n![image-20210605151335569](https://gitee.com/Thedeadleaf/images/raw/master/image-20210605151335569.png)\\n\\n\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u4e3a\u56db\u4e2a\u90e8\u5206\uff1a\u8f93\u5165\uff0c\u7f16\u7801\u5757\uff0c\u89e3\u7801\u5757\u4e0e\u8f93\u51fa\\n\\n![](https://gitee.com/Thedeadleaf/images/raw/master/photo_2021-06-05_15-27-55.jpg)\\n\\n\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6309\u7167\u987a\u5e8f\u6765\u4e86\u89e3\u6574\u4e2a\u7ed3\u6784\uff0c\u5e0c\u671b\u5728\u9605\u8bfb\u4e0b\u6587\u524d\u4f60\u53ef\u4ee5\u4ed4\u7ec6\u89c2\u5bdf\u8fd9\u5e45\u56fe\uff0c\u9605\u8bfb\u65f6\u4e5f\u8bf7\u53c2\u8003\u8be5\u56fe\\n\\n\x3c!--truncate--\x3e\\n\\n### \u8f93\u5165\\n\\n\u4f7f\u7528`nn.Embedding`\u8fdb\u884cWord Embedding\uff0c\u8bba\u6587\u4e2d\u5d4c\u5165\u7ef4\u5ea6$d_{model}=512$\\n\\n\u5728\u5d4c\u5165\u65f6\uff0c\u5de6\u53f3\u4e24\u90e8\u5206\u7684\u6743\u91cd\u4f1a\u5171\u4eab\\n\\n\u5f97\u5230\u8bcd\u5d4c\u5165\u5411\u91cf\u540e\u9700\u8981\u4e58\u4ee5$\\\\sqrt{d_{model}}$\uff0c\u5176\u539f\u56e0\u53ef\u80fd\u662f\u4e3a\u4e86\u76f8\u5bf9\u51cf\u5c0f\u4f4d\u7f6e\u7f16\u7801\u7684\u5f71\u54cd\\n\\n\u540c\u65f6\u4f1a\u5c06\u4e0a\u4e00\u5c42\u7684\u8f93\u51fa\u52a0\u5165\u8fdb\u6765\uff0c\u7f51\u7edc\u7684\u7b2c\u4e00\u5c42\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528Inputs\u5145\u5f53\u201c\u4e0a\u4e00\u5c42\u201d\\n\\n\u5728\u8f93\u5165\u4e4b\u540e\u4f1a\u8fdb\u884c**\u4f4d\u7f6e\u7f16\u7801**\uff0c\u4f7f\u5f97Transformer\u62e5\u6709\u6355\u6349\u5e8f\u5217\u987a\u5e8f\u7684\u80fd\u529b\\n\\n### Encoder-Decoder\\n\\n\u6574\u4f53\u7ed3\u6784\u5982\u56fe\\n\\n![image-20210606010226377](https://gitee.com/Thedeadleaf/images/raw/master/image-20210606010226377.png)\\n\\nEncoder-Decoder\u7684\u5185\u90e8\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a\\n\\n![image-20210606010346416](https://gitee.com/Thedeadleaf/images/raw/master/image-20210606010346416.png)\\n\\n- **Encoder**\uff1a\u7f16\u7801\u5757\u662f\u75316\u4e2a\u5b8c\u5168\u76f8\u540c\u7684layer\u7ec4\u6210\u7684\uff0c\u6bcf\u4e2alayer\u6709\u4e24\u4e2a\u5b50\u5c42\\n\\n  \u7b2c\u4e00\u5c42\u5305\u62ec\u4e00\u4e2a$Multi-Head Self-Attention$\u3001$Layer-Normalization$\u548c\u6b8b\u5dee\u8fde\u63a5\\n\\n  \u7b2c\u4e8c\u5c42\u5305\u62ec\u4e00\u4e2a\u4e8c\u5c42\u7684\u5168\u8fde\u63a5\u524d\u9988\u5c42\uff1a$FFN(x)=max(0,xW_1+b_1)W_2+b_2$,\u4e2d\u95f4\u5c42\u7684\u7ef4\u5ea6\u4e3a2048\uff1b\u540c\u6837\u5305\u542b$Layer-Normalization$\u548c\u6b8b\u5dee\u8fde\u63a5\\n\\n- **Decoder**\uff1a\u89e3\u7801\u5757\u540c\u6837\u75316\u4e2a\u5b8c\u5168\u76f8\u540c\u7684layer\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5b50\u5c42\u540c\u6837\u6709\u6b8b\u5dee\u8fde\u63a5\u548c$Layer-Normalization$\\n\\n  \u989d\u5916\u6dfb\u52a0\u4e86\u7b2c\u4e09\u4e2a\u5b50\u5c42\u2014\u2014$Masked-Multi-Head-Attention$\uff0c\u8fd9\u662f\u9488\u5bf9\u4e8e\u4e0a\u4e00\u5c42\u8f93\u51fa\u7684\uff0c\u5c06\u5728\u4e0b\u6587\u8be6\u7ec6\u89e3\u8bfb\\n\\n  \u6b64\u5916\uff0c\u8fd8\u4fee\u6539\u4e86\u5b50\u6ce8\u610f\u529b\u5b50\u5c42\uff08\u5982\u4e0a\u56fe\uff0c\u7531\u539f\u6765\u7684Self-Attention\u53d8Encoder-Decoder Attention\uff09\\n\\n**Layer Normalization**\uff1aNLP\u4efb\u52a1\u4e2d\u4e3b\u8981\u4f7f\u7528$Layer-Norm$\u800c\u4e0d\u662f$Batch-Norm$\uff0c\u56e0\u4e3a\u5728\u6279\u6b21\u4e0a\u8fdb\u884c\u5f52\u4e00\u5316\u4f1a\u6df7\u4e71\u4e0d\u540c\u8bed\u53e5\u4e4b\u95f4\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u8bed\u53e5\u4e4b\u4e2d\u8fdb\u884c\u5f52\u4e00\u5316\u3002\\n\\n### \u8f93\u51fa\\n\\n\u5bf9\u89e3\u7801\u5668\u7684\u8f93\u51fa\u4f7f\u7528\u666e\u901a\u7684\u7ebf\u6027\u53d8\u5316\u4e0e$Softmax$\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u5c42\u7684\u8f93\u5165\\n\\n## \u6ce8\u610f\u529b\u673a\u5236\\n\\n### Self-Attention\\n\\n\u5177\u4f53\u5185\u5bb9\u53ef\u53c2\u8003\u6211\u7684\u53e6\u4e00\u7bc7\u535a\u5ba2\u2014\u2014[\u6ce8\u610f\u529b\u673a\u5236](https://asthestarsfalll.icu/2021/05/12/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6/index.html)\\n\\n### \u7f29\u653e\u70b9\u79ef\u6ce8\u610f\u529b\\n\\n\u7f29\u653e\u70b9\u79ef\u6ce8\u610f\u529b\uff0c\u56fe\u5f0f\u5982\u4e0b\uff1a\\n\\n![image-20210606005714922](https://gitee.com/Thedeadleaf/images/raw/master/image-20210606005714922.png)\\n\\n\u5176\u516c\u5f0f\u4e3a\\n$$\\nAttention(Q,K,V)=softmax(\\\\frac{QK^T}{\\\\sqrt{d_k}})V\\n$$\\n\u7f29\u653e\u70b9\u79ef\u6307\u7684\u662f\u5176\u4e2d\u7684\u6253\u5206\u51fd\u6570\\n$$\\n\\\\frac{QK^T}{\\\\sqrt d}\\n$$\\n\u5e38\u89c1\u7684\u6ce8\u610f\u529b\u6a21\u578b\u6709\u52a0\u6027\u6a21\u578b\u548c\u70b9\u79ef\u6a21\u578b\uff0c\u70b9\u79ef\u6a21\u578b\u76f8\u8f83\u4e8e\u52a0\u6027\u6a21\u578b\u6548\u7387\u66f4\u9ad8\uff0c\u4f46\u662f\u5f53\u8f93\u5165\u5411\u91cf\u7ef4\u5ea6\u8fc7\u9ad8\uff0c\u70b9\u79ef\u6a21\u578b\u901a\u5e38\u6709\u8f83\u5927\u7684\u65b9\u5dee\uff0c\u4ece\u800c\u5bfc\u81f4softmax\u51fd\u6570**\u68af\u5ea6\u5f88\u5c0f**\uff0c\u800c\u7f29\u653e\u70b9\u79ef\u6a21\u578b\u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\\n\\n\u53e6\u4e3a\uff0cTransformer\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e86\u6b8b\u5dee\u8fde\u63a5\\n\\n**[Softmax\u68af\u5ea6\u95ee\u9898](https://www.zhihu.com/search?type=content&q=Transformer%20softmax%20scaled)**\uff1a\\n$$\\nS_i=\\\\frac{e^{x_i}}{\\\\sum_{j=1}^Ne^{x_j}}\\n$$\\n\u6211\u4eec\u77e5\u9053\uff0c$Softmax$\u7684\u4f5c\u7528\u662f\u62c9\u5927\u6570\u636e\u4e4b\u95f4\u7684\u5dee\u8ddd\\n\\n \u5bf9\u4e8e\u4e00\u7ec4\u6570\u636e$[x,x,2x]$\uff0c\u8ba9\u6211\u4eec\u7ed9\u5176\u8d4b\u4e0d\u540c\u7684\u503c\uff0c\u6765\u89c2\u5bdf\u65b9\u5dee\u548c$S_3$\u7684\u53d8\u5316\\n\\n```python\\nimport numpy as np\\nx = np.array([np.exp([i, i, 2*i]) for i in [1, 10, 100]])\\nprint(np.square(np.linalg.norm(x, axis=1, ord=2)))  # \u65b9\u5deeS\\nprint(x[:, 2]/x.sum(axis=1).T) # S3\\n```\\n\\n\\n$$\\n\\\\begin{cases}\\nx=1\\\\quad S=6.938\\\\quad S_3=0.576 \\\\\\\\\\nx=10 \\\\quad S=2.253e17\\\\quad S_3=0.999\\\\\\\\\\nx=100\\\\quad S=5.221e173\\\\quad S_3=1.0\\n\\\\end{cases}\\n$$\\n\\n\u5373\u4f7f\u6570\u636e\u4e4b\u95f4\u6210\u6bd4\u4f8b\uff0c**\u5728\u6570\u91cf\u7ea7\u8f83\u5927\u65f6\uff0cSoftmax\u5c06\u51e0\u4e4e\u5168\u90e8\u7684\u6982\u7387\u5206\u5e03\u90fd\u5206\u914d\u7ed9\u4e86\u6700\u5927\u7684\u90a3\u4e2a\u6570**\\n\\nSoftmax\u7684\u68af\u5ea6\u4e3a\\n$$\\n\\\\frac{\\\\partial S(x)}{\\\\partial x}=\\n\\\\left[\\\\begin{array}       \\n{c}y_1&0&\\\\cdots&0\\\\\\\\\\n0&y_2&\\\\cdots&0\\\\\\\\\\n\\\\vdots&\\\\vdots&\\\\ddots&\\\\vdots\\\\\\\\\\n0&0&\\\\cdots&y_d\\n\\\\end{array}\\\\right]-\\n\\\\left[\\\\begin{array}\\n{}\\ny_1^2&y_1y_2&\\\\cdots&y_1y_d\\\\\\\\\\ny_2y_1&y_2^2&\\\\cdots&y_2y_d\\\\\\\\\\n\\\\vdots&\\\\vdots&\\\\ddots&\\\\vdots\\\\\\\\\\ny_dy_1&y_dy_2&\\\\cdots&y_d^2\\n\\\\end{array}\\\\right]\\n$$\\n\u5f53\u51fa\u73b0\u4e0a\u8ff0\u7684\u60c5\u51b5\u65f6\uff0csoftmax\u4f1a\u8f93\u51fa\u4e00\u4e2a\u8fd1\u4f3cone-hot\u7684\u5411\u91cf$[1,0,0,\\\\cdots,0]$,\u6b64\u65f6\u68af\u5ea6\u4e3a\\n$$\\n\\\\frac{\\\\partial S(x)}{\\\\partial x}=\\n\\\\left[\\\\begin{array}       \\n{c}1&0&\\\\cdots&0\\\\\\\\\\n0&0&\\\\cdots&0\\\\\\\\\\n\\\\vdots&\\\\vdots&\\\\ddots&\\\\vdots\\\\\\\\\\n0&0&\\\\cdots&0\\n\\\\end{array}\\\\right]-\\n\\\\left[\\\\begin{array}\\n{}\\n1^2&0&\\\\cdots&0\\\\\\\\\\n0&0&\\\\cdots&0\\\\\\\\\\n\\\\vdots&\\\\vdots&\\\\ddots&\\\\vdots\\\\\\\\\\n0&0&\\\\cdots&0\\n\\\\end{array}\\\\right]=0\\n$$\\n**\u7f29\u653e\u70b9\u79ef\u4e3a\u4ec0\u4e48\u6709\u6548\uff1f**\\n\\n\u5728\u8bba\u6587\u7684\u6ce8\u811a\u4e2d\u7ed9\u51fa\u4e86\u5982\u4e0b\u5047\u8bbe\uff1a\\n\\n**\u5047\u8bbe\u5411\u91cf $Q$\u548c$K$ \u7684\u5404\u4e2a\u5206\u91cf\u662f\u4e92\u76f8\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\uff0c\u5747\u503c\u662f0\uff0c\u65b9\u5dee\u662f1\uff0c\u90a3\u4e48\u70b9\u79ef$QK$\u7684\u5747\u503c\u662f0\uff0c\u65b9\u5dee\u662f $d_k$**\\n\\n\u5177\u4f53\u63a8\u7406\u8fc7\u7a0b\u53ef\u53c2\u8003\u6211\u7684\u53e6\u4e00\u7247\u535a\u5ba2[\u6982\u7387\u8bba](https://asthestarsfalll.icu/2021/05/07/%E6%A6%82%E7%8E%87%E8%AE%BA/index.html)2.3.5\u548c2.3.6\u8282\\n\\n\u6211\u4eec\u5728\u9ad8\u4e8c\u5c31\u5b66\u8fc7\u65b9\u5dee\u7684\u4e00\u4e2a\u57fa\u672c\u6027\u8d28\uff0c\u5bf9\u4e8e\u968f\u673a\u53d8\u91cf$Y=aX+b$\\n$$\\n\\\\sigma_Y^2=a^2\\\\sigma_X^2\\n$$\\n\u6240\u4ee5\u9664\u4ee5$\\\\sqrt{d_k}$\u53ef\u4ee5\u5c06\u65b9\u5dee\u63a7\u5236\u4e3a1\uff0c\u4ece\u800c\u6709\u6548\u5730\u89e3\u51b3\u68af\u5ea6\u6d88\u5931\u7684\u60c5\u51b5\\n\\n### Multi-Head Attention\\n\\n\u591a\u5934\u6ce8\u610f\u529b\uff0c\u56fe\u5f0f\u5982\u4e0b\\n\\n![image-20210606012114964](https://gitee.com/Thedeadleaf/images/raw/master/image-20210606012114964.png)\\n\\n\u76f8\u6bd4\u4e8e\u4f7f\u7528$d_{model}$\u7ef4\u6570\uff08\u6b64\u5904\u4e3a512\u7ef4\uff09\u7684$Q\u3001K\u3001V$\u6765\u6267\u884c\u4e00\u4e2a$Attention$\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u7ebf\u6027\u6620\u5c04\u5f97\u5230\u591a\u4e2a$Q\u3001K\u3001V$\u6765\u5e76\u884c\u5f97\u6267\u884c$Attention$\u6548\u679c\u66f4\u4f73\uff0c\u539f\u56e0\u5982\u4e0b\uff1a\\n\\n- \u5176\u589e\u5f3a\u4e86\u6a21\u578b\u4e13\u6ce8\u4e8e\u4e0d\u540c\u4fe1\u606f\u7684\u80fd\u529b\\n- \u4e3a\u6ce8\u610f\u529b\u5c42\u63d0\u4f9b\u4e86\u591a\u4e2a\u201c\u8868\u793a\u5b50\u7a7a\u95f4\u201d\\n\\n**\u5177\u4f53\u64cd\u4f5c**\uff1a\\n\\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5934\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u5957\u5355\u72ec\u7684\u6743\u91cd\u77e9\u9635$W_Q\u3001W_K\u3001W_V$\uff0c\u5e76\u4e14\u5c06\u5176\u7ef4\u5ea6\u964d\u81f3$d_{model}/H$\\n\\n\u751f\u6210H\u4e2a\u4e0d\u540c\u7684\u6ce8\u610f\u529b\u77e9\u9635\uff0c\u5c06\u5176\u62fc\u63a5\u5728\u4e00\u8d77\\n\\n\u6700\u540e\u4f7f\u7528\u4e00\u4e2a\u5355\u72ec\u7684\u6743\u91cd\u77e9\u9635$W^O$\u5f97\u5230\u6700\u7ec8\u7684\u6ce8\u610f\u529b\u6743\u91cd\\n$$\\nMutiHead(Q,K,V)=Concat(head_1,head_2,\\\\cdots,head_h)W^O\\\\\\\\where\\\\quad head_i=Attention(QW^Q_i,KW^K_i,VW^V_i)\\n$$\\n\\n\u7531\u4e8e\u7ef4\u5ea6\u505a\u4e86\u7f29\u653e\uff0c\u591a\u5934\u6ce8\u610f\u529b\u7684\u603b\u4ee3\u4ef7\u548c\u4ec5\u4f7f\u7528\u4e00\u4e2a\u6ce8\u610f\u529b\u7684\u4ee3\u4ef7\u76f8\u8fd1\\n\\n**\u4e0e\u5377\u79ef\u7684\u5173\u7cfb**\uff1a\\n\\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u591a\u5934\u6ce8\u610f\u529b\u5b9e\u9645\u4e0a\u4e0e\u5377\u79ef\u6709\u7740\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\\n\\n\u6b63\u5982\u591a\u4e2a\u5934\u53ef\u4ee5\u6ce8\u610f\u4e0d\u540c\u7684\u4fe1\u606f\uff0c\u4e0d\u540c\u7684\u5377\u79ef\u6838\u53ef\u4ee5\u63d0\u53d6\u56fe\u50cf\u4e2d\u4e0d\u540c\u7684\u7279\u5f81\\n\\n\u540c\u6837\uff0c\u6b63\u5982\u7279\u5f81\u56fe\u591a\u4e2a\u901a\u9053\u5185\u7684\u4fe1\u606f\u5197\u4f59\uff0c\u591a\u5934\u6ce8\u610f\u529b\u4e5f\u5b58\u5728\u7740**\u4fe1\u606f\u5197\u4f59**\\n\\n## \u4f4d\u7f6e\u7f16\u7801\\n\\n[\u4e3b\u8981\u53c2\u8003](https://blog.csdn.net/muyuu/article/details/110925334?ops_request_misc=&request_id=&biz_id=102&utm_term=%E4%BD%8D%E7%BD%AE%E7%BC%96%E7%A0%81&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-7-.first_rank_v2_pc_rank_v29)\\n\\n### \u4e3a\u4ec0\u4e48\u9700\u8981\u4f4d\u7f6e\u7f16\u7801\uff1f\\n\\n\u4e0a\u6587\u5df2\u7ecf\u63d0\u5230\uff0cTransformer\u662f\u4e00\u79cd\u5e76\u884c\u8ba1\u7b97\uff0c\u4e3a\u4e86\u8ba9\u6a21\u578b\u80fd\u591f\u6355\u6349\u5230\u5e8f\u5217\u7684\u987a\u5e8f\u5173\u7cfb\uff0c\u5f15\u5165\u4e86\u4f4d\u7f6e\u7f16\u7801\uff0c\u6765\u83b7\u5f97\u5355\u8bcd\u4e4b\u95f4\u7684**\u76f8\u5bf9\u8ddd\u79bb**\u3002\\n\\n### \u6b63\u4f59\u5f26\u4f4d\u7f6e\u7f16\u7801\\n\\n$$\\nPE(pos,2i) = \\\\sin(\\\\frac{pos}{10000^{\\\\frac{2i}{d_{model}}}})\\\\\\\\\\nPE(pos,2i+1) = \\\\cos(\\\\frac{pos}{10000^{\\\\frac{2i}{d_{model}}}})\\\\\\\\\\n$$\\n\\n\u5bf9\u4e8e\u5947\u6570\u4f4d\u7f6e\u4f7f\u7528\u4f59\u5f26\u51fd\u6570\u8fdb\u884c\u7f16\u7801\\n\\n\u5bf9\u4e8e\u5076\u6570\u4f4d\u7f6e\u4f7f\u7528\u6b63\u5f26\u51fd\u6570\u8fdb\u884c\u7f16\u7801\\n\\n**\u6ce8\u610f**\uff1a\u8fd9\u91cc\u7684\u4f4d\u7f6e\u6307\u7684\u662f\u4e00\u4e2a\u8bcd\u5411\u91cf\u91cc\u6570\u636e\u7684\u4f4d\u7f6e\uff0cpos\u6307\u7684\u624d\u662f\u5355\u8bcd\u5728\u8bed\u53e5\u4e2d\u7684\u4f4d\u7f6e\\n\\n\u4f8b\u5982\u67d0\u4e2a\u5355\u8bcd\u5728\u8bed\u53e5\u4e2d\u7684\u4f4d\u7f6e\u4e3aPos=5\uff0c$d_{model}=512$\uff0c\u5219\u5176\u4f4d\u7f6e\u7f16\u7801\u5411\u91cf\u4e3a\\n$$\\n\\\\left[\\\\begin{array}{c}sin(\\\\frac{5}{10000^{\\\\frac{0}{512}}})\\\\\\\\cos(\\\\frac{5}{10000^{\\\\frac{0}{512}}})\\\\\\\\sin(\\\\frac{5}{10000^{\\\\frac{2}{512}}})\\\\\\\\cos(\\\\frac{5}{10000^{\\\\frac{2}{512}}})\\\\\\\\\\\\vdots\\\\\\\\sin(\\\\frac{5}{10000^{\\\\frac{512}{512}}})\\\\end{array}\\\\right]\\n$$\\n\u53ef\u4ee5\u770b\u5230\uff0c$2i\u30012i+1$\u4ec5\u4ec5\u51b3\u5b9a\u4f7f\u7528\u7684\u662f$sin$\u8fd8\u662f$cos$\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a$i$\uff0c\u5185\u90e8\u662f\u76f8\u540c\u7684\\n\\n\u5f97\u5230\u4f4d\u7f6e\u7f16\u7801\u4e4b\u540e\uff0c\u5c06\u5176\u4e0e\u8bcd\u5411\u91cf\u76f8\u52a0\uff0c\u4f5c\u4e3a\u6700\u7ec8\u7684\u8f93\u5165\\n\\n\u8fd9\u91cc\u7684\u76f4\u89c9\u662f\uff0c\u5c06\u4f4d\u7f6e\u7f16\u7801\u6dfb\u52a0\u5230\u8bcd\u5411\u91cf\uff0c\u5b83\u4eec\u6295\u5f71\u5230$Q/K/V$\u5e76\u4e14\u8fdb\u884c\u70b9\u79ef\u65f6\uff0c\u4f1a\u63d0\u4f9b\u6709\u610f\u4e49\u7684\u8ddd\u79bb\u4fe1\u606f\\n\\n### \u4e3a\u4ec0\u4e48\u4f4d\u7f6e\u7f16\u7801\u662f\u6709\u6548\u7684\uff1f\\n\\n\u6211\u4eec\u5728\u5c0f\u5b66\u4e8c\u5e74\u7ea7\u5c31\u5b66\u8fc7\u4e09\u89d2\u51fd\u6570\u7684\u8bf1\u5bfc\u516c\u5f0f\uff1a\\n$$\\n\\\\sin(\\\\alpha+\\\\beta)=sin(\\\\alpha)cos(\\\\beta)+cos(\\\\alpha)sin(\\\\beta)\\\\\\\\\\ncos(\\\\alpha+\\\\beta)=cos(\\\\alpha)cos(\\\\beta)-sin(\\\\alpha)sin(\\\\beta)\\n$$\\n\\n\\n\u53ef\u4ee5\u5f97\u5230\uff1a\\n$$\\nPE(pos+k,2i)=PE(pos,2i)PE(k,2i+1)+PE(pos,2i+1)PE(k,2i)\\\\\\\\\\nPE(pos+k,2i+1)=PE(pos,2i+1)PE(k,2i+1)-PE(pos,2i)PE(k,2i)\\n$$\\n\u6211\u4eec\u4ee4$u(k)=PE(k,2i)\u3001v(k)=PE(k,2i+1)$\uff0c\u5f97\uff1a\\n$$\\n\\\\left[\\\\begin{array}\\n{c}PE(pos+k,2i)\\\\\\\\ PE(pos+k,2i+1)\\n\\\\end{array} \\\\right]=\\n\\\\left[\\\\begin{array}\\n{c}v(k)&u(k)\\\\\\\\-u(k)&v(k)\\n\\\\end{array} \\\\right]\\n\\\\left[\\\\begin{array}\\n{c}PE(pos,2i)\\\\\\\\PE(pos,2i+1)\\n\\\\end{array}\\\\right]\\n$$\\n\u7ed9\u5b9a\u76f8\u5bf9\u8ddd\u79bb$k$\uff0c$PE(pos+k)$\u4e0e$PE(pos)$\u4e4b\u95f4\u5177\u6709**\u7ebf\u6027\u5173\u7cfb**\\n\\n\u56e0\u6b64\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7**\u7edd\u5bf9\u4f4d\u7f6e**\u7684\u7f16\u7801\u6765\u66f4\u597d\u5730\u6355\u6349\u5355\u8bcd\u7684**\u76f8\u5bf9\u4f4d\u7f6e**\u5173\u7cfb\\n\\n### \u66f4\u591a\\n\\n\u6beb\u65e0\u7591\u95ee\uff0c\u4f4d\u7f6e\u7f16\u7801\u5728\u6574\u4e2aTransformer\u4e2d\u7684\u4f5c\u7528\u662f\u5de8\u5927\u7684\\n\\n\u6ca1\u6709\u4f4d\u7f6e\u7f16\u7801\u7684Tranformer\u5c31\u662f\u4e00\u4e2a\u5de8\u578b\u8bcd\u888b\\n\\n\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u770b\u770b\u6b63\u4f59\u5f26\u4f4d\u7f6e\u7f16\u7801\u7684\u5c40\u9650\\n\\n#### \u76f8\u5bf9\u8ddd\u79bb\u7684\u65b9\u5411\u6027\\n\\n\u6211\u4eec\u77e5\u9053\uff0c**\u70b9\u79ef**\u53ef\u4ee5\u8868\u793a\u76f8\u5bf9\u8ddd\u79bb\uff0c\u6ce8\u610f\u529b\u673a\u5236\u4e2d\u5c31\u4f7f\u7528\u70b9\u79ef\u4f5c\u4e3a\u6253\u5206\u51fd\u6570\u6765\u83b7\u53d6$Q\u3001K$\u7684\u76f8\u4f3c\u5ea6\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u4e24\u4e2a\u76f8\u5bf9\u8ddd\u79bb\u4e3ak\u7684\u4f4d\u7f6e\u7f16\u7801\u7684\u8ddd\u79bb\\n\\n\u5bf9\u4e8e$PE_{pos}$\uff0c\u4ee4$c_i=\\\\frac{1}{10000^{\\\\frac{2i}{d}}}$\uff1a\\n$$\\n\\\\begin{align}\\nPE_{pos}&=\\n\\\\left[\\\\begin{array}\\n{c}PE(pos,0)\\\\\\\\PE(pos,1)\\\\\\\\PE(pos,2)\\\\\\\\ \\\\vdots\\\\\\\\PE(pos,d)\\n\\\\end{array}\\\\right]\\\\\\\\\\n&=\\n\\\\left[\\\\begin{array}\\n{c}sin(c_0pos)\\\\\\\\cos(c_0pos)\\\\\\\\sin(c_1pos)\\\\\\\\\\\\vdots\\\\\\\\cos(c_{\\\\frac{d}{2}-1}pos)\\n\\\\end{array}\\\\right]\\n\\\\end{align}\\n$$\\n\u5185\u79ef\u53ef\u5f97\uff1a\\n$$\\n\\\\begin{align}PE_{pos}^TPE_{pos+k}&=\\n\\\\sum_{i=0}^{\\\\frac{d}{2}-1}{sin(c_ipos)sin(c_i(pos+k))+cos(c_ipos)cos(c_i(pos+k))}\\\\\\\\\\n&=\\\\sum_{i=0}^{\\\\frac{d}{2}-1}\\n{cos(c_i(pos+k-pos))}\\\\\\\\\\n&=\\\\sum_{i=0}^{\\\\frac{d}{2}-1}cos(c_ik)\\n\\\\end{align}\\n$$\\n\u800c\u4f59\u5f26\u51fd\u6570\u662f\u4e00\u4e2a**\u5076\u51fd\u6570**\uff0c\u56e0\u6b64\u6b63\u4f59\u5f26\u4f4d\u7f6e\u7f16\u7801\u4ec5\u80fd\u6355\u6349\u5230\u4e24\u5355\u8bcd\u4e4b\u95f4\u7684\u8ddd\u79bb\u5173\u7cfb\uff0c\u800c\u65e0\u6cd5\u5224\u65ad\u5176\u8ddd\u79bb\u5173\u7cfb\\n\\n#### \u81ea\u6ce8\u610f\u529b\u5bf9\u4f4d\u7f6e\u7f16\u7801\u7684\u5f71\u54cd\\n\\n\u5728Transfromer\u4e2d\uff0c\u4f4d\u7f6e\u7f16\u7801\u4e4b\u540e\u4f1a\u8fdb\u884c\u81ea\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\uff0c\u516c\u5f0f\u5982\u4e0b\uff1a\\n$$\\nscore(x_i)=\\\\frac{(x_iW_Q)(x_iW_K)^T}{\\\\sqrt{d}}=\\\\frac{((x_i^{position}+x_i^{word})W_Q)((x_i^{position}+x_i^{word})W_K)^T}{\\\\sqrt{d}}\\n$$\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u7ecf\u8fc7\u81ea\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\uff0c\u6a21\u578b\u5b9e\u9645\u4e0a\u662f\u65e0\u6cd5\u4fdd\u7559\u5355\u8bcd\u4e4b\u95f4\u7684\u4f4d\u7f6e\u4fe1\u606f\\n\\n\u90a3\u4e48Transformer\u662f\u5982\u4f55work\u7684\u5462\uff1f\\n\\n**\u9898\u5916\u8bdd**\uff1a\u5728bert\u4e2d\u76f4\u63a5\u4f7f\u7528\u4e86Learned Position Embedding\u800c\u975eSinusoidal position encoding\\n\\n## \u89e3\u7801\u5757\\n\\n### Masked Multi-Head Attention\\n\\n\u5728\u673a\u5668\u7ffb\u8bd1\u4e2d\uff0c\u89e3\u7801\u8fc7\u7a0b\u662f\u4e00\u4e2a\u987a\u5e8f\u64cd\u4f5c\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u5f53\u89e3\u7801\u7b2c$k$\u4e2a\u7279\u5f81\u5411\u91cf\u65f6\uff0c\u6211\u4eec\u53ea\u80fd\u770b\u5230\u7b2c$k-1$\u53ca\u5176\u4e4b\u524d\u7684\u89e3\u7801\u7ed3\u679c\uff0c\u56e0\u6b64\u4f7f\u7528\u4e86\u6dfb\u52a0\u4e86Mask\uff0c\u5c06\u5f53\u524d\u8bcd\u4e4b\u540e\u7684\u8bcd\u5168\u90fd\u76d6\u4f4f\\n\\n### Endcoder-Decoder Attention\\n\\n\u8bbe\u8ba1\u4e86\u4e00\u79cd\u89e3\u7801\u5757\u4e0e\u7f16\u7801\u5757\u7684\u4ea4\u4e92\u6a21\u5f0f\\n\\n\u89e3\u7801\u5757\u6700\u7ec8\u7684\u8f93\u5165\u4f1a\u751f\u6210\u4e0d\u540c\u7684$K\uff0cV$\uff08\u5728\u4ee3\u7801\u4e2d\u662f\u8fd9\u6837\u4f53\u73b0\u7684\uff09\uff0c\u8f93\u5165\u7ed9\u6240\u6709\u7684\u89e3\u7801\u5668\uff0c\u800c$Q$\u5219\u662f\u6765\u81ea\u4e8eMasked Multi-Head Attention\\n\\n## \u4ee3\u7801\u8bb2\u89e3\\n\\n### \u4f4d\u7f6e\u7f16\u7801\\n\\n```python\\nclass PositionalEncoding(nn.Module):\\n\\n    def __init__(self, d_hid, n_position=200):\\n        super(PositionalEncoding, self).__init__()\\n\\n        # Not a parameter\\n        # \u5728\u5185\u5b58\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u5e38\u91cf\uff0c\u540c\u65f6\uff0c\u6a21\u578b\u4fdd\u5b58\u548c\u52a0\u8f7d\u7684\u65f6\u5019\u53ef\u4ee5\u5199\u5165\u548c\u8bfb\u51fa\u3002\\n        self.register_buffer(\\n            \'pos_table\', self._get_sinusoid_encoding_table(n_position, d_hid))\\n\\n    def _get_sinusoid_encoding_table(self, n_position, d_hid):\\n        \'\'\' Sinusoid position encoding table \'\'\'\\n        # TODO: make it with torch instead of numpy\\n\\t\\t# \u67d0\u4e2a\u8bcd\u5411\u91cf\u7684\u201c\u89d2\u5ea6\u201d\\n        def get_position_angle_vec(position):\\n            return [position / np.power(10000, 2 * (hid_j // 2) / d_hid) for hid_j in range(d_hid)]\\n\\t\\t# \u6240\u6709\u8bcd\u5411\u91cf\u7684\u201c\u89d2\u5ea6\u201d\\n        sinusoid_table = np.array([get_position_angle_vec(pos_i) for pos_i in range(n_position)])\\n        # \u83b7\u5f97\u4f4d\u7f6e\u7f16\u7801\\n        sinusoid_table[:, 0::2] = np.sin(sinusoid_table[:, 0::2])  # dim 2i\\n        sinusoid_table[:, 1::2] = np.cos(sinusoid_table[:, 1::2])  # dim 2i+1\\n\\n        return torch.FloatTensor(sinusoid_table).unsqueeze(0) # \u53bb\u9664\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\\n    \\n    def forward(self, x):\\n        return x + self.pos_table[:, :x.size(1)].clone().detach() # \u4e0e\u8bcd\u5411\u91cf\u76f8\u52a0\\n```\\n\\n### \u524d\u9988\u5c42\\n\\n```python\\nclass PositionwiseFeedForward(nn.Module):\\n    \'\'\' A two-feed-forward-layer module \'\'\'\\n\\n    def __init__(self, d_in, d_hid=2048, dropout=0.1):\\n        super().__init__()\\n        self.w_1 = nn.Linear(d_in, d_hid) # position-wise\\n        self.w_2 = nn.Linear(d_hid, d_in) # position-wise\\n        self.layer_norm = nn.LayerNorm(d_in, eps=1e-6)\\n        self.dropout = nn.Dropout(dropout)\\n\\n    def forward(self, x):\\n\\n        residual = x\\n\\n        x = self.w_2(torch.relu(self.w_1(x)))\\n        x = self.dropout(x)\\n        x += residual\\n\\n        x = self.layer_norm(x)\\n\\n        return x\\n```\\n\\n### \u7f29\u653e\u70b9\u79ef\u548c\u591a\u5934\u81ea\u6ce8\u610f\u529b\\n\\n```python\\nclass ScaledDotProductAttention(nn.Module):\\n    \'\'\' Scaled Dot-Product Attention \'\'\'\\n\\n    def __init__(self, temperature, attn_dropout=0.1):\\n        super().__init__()\\n        self.temperature = temperature # \u6839\u53f7d_k,\u7528\u6765\u653e\u7f29\\n        self.dropout = nn.Dropout(attn_dropout)\\n\\n    def forward(self, q, k, v, mask=None):\\n\\n        attn = torch.matmul(q / self.temperature, k.transpose(2, 3))\\n\\n        if mask is not None:\\n            attn = attn.masked_fill(mask == 0, -1e9) #\u8ba9mask\u4e2d\u662f0\u7684\u90e8\u5206\u53d8\u4e3a-1e9\\n\\n        attn = self.dropout(F.softmax(attn, dim=-1))\\n        output = torch.matmul(attn, v)\\n\\n        return output, attn\\n    \\n    \\nclass MultiHeadAttention(nn.Module):\\n    \'\'\' Multi-Head Attention module \'\'\'\\n\\n    def __init__(self, n_head, d_model, d_k, d_v, dropout=0.1): # d_model=512\\n        super().__init__()\\n\\n        self.n_head = n_head #\u5934\u6570\\n        self.d_k = d_k # \u7ef4\u5ea6\\n        self.d_v = d_v\\n        \\n\\t\\t# \u76f4\u63a5\u83b7\u5f97\u6240\u6709\u5934\u7684\u6743\u91cd\u77e9\u9635\uff0cd_q=d_k\\n        # \u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u521d\u59cb\u5316\u548c\u8bad\u7ec3\u6743\u91cd\u77e9\u9635\\n        self.w_qs = nn.Linear(d_model, n_head * d_k, bias=False) \\n        self.w_ks = nn.Linear(d_model, n_head * d_k, bias=False)\\n        self.w_vs = nn.Linear(d_model, n_head * d_v, bias=False)\\n        self.fc = nn.Linear(n_head * d_v, d_model, bias=False)\\n\\n        self.attention = ScaledDotProductAttention(temperature=d_k ** 0.5)\\n\\n        self.dropout = nn.Dropout(dropout)\\n        self.layer_norm = nn.LayerNorm(d_model, eps=1e-6)\\n\\n    def forward(self, q, k, v, mask=None):\\n\\n        d_k, d_v, n_head = self.d_k, self.d_v, self.n_head\\n        sz_b, len_q, len_k, len_v = q.size(0), q.size(1), k.size(1), v.size(1)\\n\\n        residual = q # \u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\\n\\n        # Pass through the pre-attention projection: b x lq x (n*dv)\\n        # Separate different heads: b x lq x n x dv\\n        q = self.w_qs(q).view(sz_b, len_q, n_head, d_k)\\n        k = self.w_ks(k).view(sz_b, len_k, n_head, d_k)\\n        v = self.w_vs(v).view(sz_b, len_v, n_head, d_v)\\n\\n        # Transpose for attention dot product: b x n x lq x dv\\n        # \u5c06n\u6362\u5230\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\uff0c\u7c7b\u4f3c\u4e8e\u7279\u5f81\u56fe\u5f53\u4e2d\u7684\u901a\u9053\\n        q, k, v = q.transpose(1, 2), k.transpose(1, 2), v.transpose(1, 2)\\n\\n        if mask is not None:\\n            mask = mask.unsqueeze(1)   # For head axis broadcasting.\\n\\n        q, attn = self.attention(q, k, v, mask=mask)\\n\\n        # Transpose to move the head dimension back: b x lq x n x dv\\n        # Combine the last two dimensions to concatenate all the heads together: b x lq x (n*dv)\\n        q = q.transpose(1, 2).contiguous().view(sz_b, len_q, -1) # \u81ea\u884c\u767e\u5ea6contiguous()\\n        q = self.dropout(self.fc(q)) # \u76f8\u5f53\u4e8e\u4e0a\u9762\u8bf4\u7684WO\\n        q += residual\\n\\n        q = self.layer_norm(q)\\n\\n        return q, attn\\n```\\n\\n### \u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\\n\\n```python\\nclass EncoderLayer(nn.Module):\\n    \'\'\' Compose with two layers \'\'\'\\n\\n    def __init__(self, d_model, d_inner, n_head, d_k, d_v, dropout=0.1):\\n        super(EncoderLayer, self).__init__()\\n        self.slf_attn = MultiHeadAttention(\\n            n_head, d_model, d_k, d_v, dropout=dropout) # \u591a\u5934\u81ea\u6ce8\u610f\u529b\\n        self.pos_ffn = PositionwiseFeedForward(\\n            d_model, d_inner, dropout=dropout) # \u524d\u9988\u5c42\\n\\n    def forward(self, enc_input, slf_attn_mask=None):\\n        \\n        enc_output, enc_slf_attn = self.slf_attn(\\n            enc_input, enc_input, enc_input, mask=slf_attn_mask) # q attention\\n        enc_output = self.pos_ffn(enc_output) # \u76f8\u5f53\u5bf9\u4e24\u4e2a\u8f93\u51fa\u540c\u65f6\u505a\u4e86softmax,attention\u5df2\u7ecf\u505a\u8fc7\u4e86\\n        \\n        return enc_output, enc_slf_attn\\n\\n\\nclass DecoderLayer(nn.Module):\\n    \'\'\' Compose with three layers \'\'\'\\n\\n    def __init__(self, d_model, d_inner, n_head, d_k, d_v, dropout=0.1):\\n        super(DecoderLayer, self).__init__()\\n        self.slf_attn = MultiHeadAttention(\\n            n_head, d_model, d_k, d_v, dropout=dropout)\\n        self.enc_attn = MultiHeadAttention(\\n            n_head, d_model, d_k, d_v, dropout=dropout)\\n        self.pos_ffn = PositionwiseFeedForward(\\n            d_model, d_inner, dropout=dropout)\\n\\n    def forward(self, dec_input, enc_output,slf_attn_mask=None, dec_enc_attn_mask=None):\\n        # masked-multi-head-attention\\n        dec_output, dec_slf_attn = self.slf_attn(\\n            dec_input, dec_input, dec_input, mask=slf_attn_mask) # q,attention\\n        # encoder-decoder-attention\\n        # \u4f7f\u7528decoder\u7684\u8f93\u51faq\u751f\u6210\u8be5\u5c42\u7684q\uff0cencoder\u7684\u8f93\u51faq\u751f\u6210\u8be5\u5c42\u7684k,v\\n        dec_output, dec_enc_attn = self.enc_attn(\\n            dec_output, enc_output, enc_output, mask=dec_enc_attn_mask) # mask=none\\n        dec_output = self.pos_ffn(dec_output)\\n        \\n        return dec_output, dec_slf_attn, dec_enc_attn\\n    \\n\\n\\n```\\n\\n### \u7f16\u7801\u5757\u548c\u89e3\u7801\u5757\\n\\n```python\\nclass Encoder(nn.Module):\\n    \'\'\' A encoder model with self attention mechanism. \'\'\'\\n\\n    def __init__(\\n            self, n_src_vocab, d_word_vec, n_layers, n_head, d_k, d_v,\\n            d_model, d_inner, pad_idx, dropout=0.1, n_position=200, scale_emb=False):\\n        \'\'\'\\n        n_src_vocab\uff1a\u8bcd\u5178\u5927\u5c0f\\n        d_word_vec\uff1a\u5d4c\u5165\u7684\u7ef4\u5ea6\\n \\t\\tn_layer\uff1a\u7f16\u7801\u5757\u5c42\u6570\\n        n\u2014\u2014head\uff1a\u5934\u6570\\n        d_k\uff0cd_v\uff1ak\uff0cq\u548cv\u7684\u7ef4\u5ea6\\n        d_model\uff1a\u8bcd\u5411\u91cf\u7ef4\u5ea6\\n        d_inner\uff1a\u524d\u9988\u5c42\u4e2d\u95f4\u5c42\u7ef4\u5ea6\\n        pad_idx\uff1a\u586b\u5145\u957f\u5ea6\\n        scale_emb\uff1a\u662f\u5426\u8fdb\u884c\u7f29\u653e\\n        \'\'\'\\n\\n        super().__init__()\\n\\n        self.src_word_emb = nn.Embedding(\\n            n_src_vocab, d_word_vec, padding_idx=pad_idx) # \u8fdb\u884c\u5d4c\u5165\\n        \\n        self.position_enc = PositionalEncoding(\\n            d_word_vec, n_position=n_position) # \u4f4d\u7f6e\u5d4c\u5165\\n        \\n        self.dropout = nn.Dropout(p=dropout)\\n        \\n        self.layer_stack = nn.ModuleList([\\n            EncoderLayer(d_model, d_inner, n_head, d_k, d_v, dropout=dropout)\\n            for _ in range(n_layers)]) # \u5b9a\u4e49Encoder stack\\n        \\n        self.layer_norm = nn.LayerNorm(d_model, eps=1e-6) # \u5c42\u5f52\u4e00\u5316\\n        \\n        self.scale_emb = scale_emb \\n        self.d_model = d_model\\n\\n    def forward(self, src_seq, src_mask, return_attns=False):\\n\\n        enc_slf_attn_list = []\\n\\n        # -- Forward\\n        enc_output = self.src_word_emb(src_seq) # \u8bcd\u5d4c\u5165\\n        if self.scale_emb:\\n            enc_output *= self.d_model ** 0.5\\n        enc_output = self.dropout(self.position_enc(enc_output)) # \u4f4d\u7f6e\u7f16\u7801\u548cDrop out\\n        enc_output = self.layer_norm(enc_output) # \u5c42\u5f52\u4e00\u5316\\n\\n        for enc_layer in self.layer_stack:\\n            enc_output, enc_slf_attn = enc_layer(\\n                enc_output, slf_attn_mask=src_mask)\\n            enc_slf_attn_list += [enc_slf_attn] if return_attns else []\\n\\n        if return_attns:\\n            return enc_output, enc_slf_attn_list\\n        return enc_output,\\n\\n\\nclass Decoder(nn.Module):\\n    \'\'\' A decoder model with self attention mechanism. \'\'\'\\n\\n    def __init__(self, n_trg_vocab, d_word_vec, n_layers, n_head, d_k, d_v,\\n            d_model, d_inner, pad_idx, n_position=200, dropout=0.1, scale_emb=False):\\n\\n        super().__init__()\\n\\n        self.trg_word_emb = nn.Embedding(\\n            n_trg_vocab, d_word_vec, padding_idx=pad_idx)\\n        self.position_enc = PositionalEncoding(\\n            d_word_vec, n_position=n_position)\\n        self.dropout = nn.Dropout(p=dropout)\\n        self.layer_stack = nn.ModuleList([\\n            DecoderLayer(d_model, d_inner, n_head, d_k, d_v, dropout=dropout)\\n            for _ in range(n_layers)])\\n        self.layer_norm = nn.LayerNorm(d_model, eps=1e-6)\\n        self.scale_emb = scale_emb\\n        self.d_model = d_model\\n\\n    def forward(self, trg_seq, trg_mask, enc_output, src_mask, return_attns=False):\\n\\n        dec_slf_attn_list, dec_enc_attn_list = [], []\\n\\n        # -- Forward\\n        dec_output = self.trg_word_emb(trg_seq)\\n        if self.scale_emb:\\n            dec_output *= self.d_model ** 0.5\\n        dec_output = self.dropout(self.position_enc(dec_output))\\n        dec_output = self.layer_norm(dec_output)\\n\\n        for dec_layer in self.layer_stack:\\n            dec_output, dec_slf_attn, dec_enc_attn = dec_layer(\\n                dec_output, enc_output, slf_attn_mask=trg_mask, dec_enc_attn_mask=src_mask)\\n            dec_slf_attn_list += [dec_slf_attn] if return_attns else []\\n            dec_enc_attn_list += [dec_enc_attn] if return_attns else []\\n\\n        if return_attns:\\n            return dec_output, dec_slf_attn_list, dec_enc_attn_list\\n        return dec_output,\\n```\\n\\n\\n\\n### \u7ec4\u5efaTransformer\\n\\n```python\\nclass Transformer(nn.Module):\\n    \'\'\' A sequence to sequence model with attention mechanism. \'\'\'\\n\\n    def __init__(\\n            self, n_src_vocab, n_trg_vocab, src_pad_idx, trg_pad_idx,\\n            d_word_vec=512, d_model=512, d_inner=2048,\\n            n_layers=6, n_head=8, d_k=64, d_v=64, dropout=0.1, n_position=200,\\n            trg_emb_prj_weight_sharing=True, emb_src_trg_weight_sharing=True,\\n            scale_emb_or_prj=\'prj\'):\\n\\n        super().__init__()\\n\\n        self.src_pad_idx, self.trg_pad_idx = src_pad_idx, trg_pad_idx\\n\\n        # In section 3.4 of paper \\"Attention Is All You Need\\", there is such detail:\\n        # \\"In our model, we share the same weight matrix between the two\\n        # embedding layers and the pre-softmax linear transformation...\\n        # In the embedding layers, we multiply those weights by \\\\sqrt{d_model}\\".\\n        #\\n        # Options here:\\n        #   \'emb\': multiply \\\\sqrt{d_model} to embedding output\\n        #   \'prj\': multiply (\\\\sqrt{d_model} ^ -1) to linear projection output\\n        #   \'none\': no multiplication\\n\\n        assert scale_emb_or_prj in [\'emb\', \'prj\', \'none\']\\n        scale_emb = (scale_emb_or_prj ==\\n                     \'emb\') if trg_emb_prj_weight_sharing else False\\n        self.scale_prj = (scale_emb_or_prj ==\\n                          \'prj\') if trg_emb_prj_weight_sharing else False\\n        self.d_model = d_model\\n\\n        self.encoder = Encoder(\\n            n_src_vocab=n_src_vocab, n_position=n_position,\\n            d_word_vec=d_word_vec, d_model=d_model, d_inner=d_inner,\\n            n_layers=n_layers, n_head=n_head, d_k=d_k, d_v=d_v,\\n            pad_idx=src_pad_idx, dropout=dropout, scale_emb=scale_emb)\\n\\n        self.decoder = Decoder(\\n            n_trg_vocab=n_trg_vocab, n_position=n_position,\\n            d_word_vec=d_word_vec, d_model=d_model, d_inner=d_inner,\\n            n_layers=n_layers, n_head=n_head, d_k=d_k, d_v=d_v,\\n            pad_idx=trg_pad_idx, dropout=dropout, scale_emb=scale_emb)\\n\\n        self.trg_word_prj = nn.Linear(d_model, n_trg_vocab, bias=False)\\n\\n        for p in self.parameters(): # \u521d\u59cb\u5316\u65b9\u6cd5\\n            if p.dim() > 1:\\n                nn.init.xavier_uniform_(p)\\n\\n        assert d_model == d_word_vec, \\\\\\n            \'To facilitate the residual connections, \\\\\\n         the dimensions of all module outputs shall be the same.\'\\n\\n        if trg_emb_prj_weight_sharing:\\n            # Share the weight between target word embedding & last dense layer\\n            self.trg_word_prj.weight = self.decoder.trg_word_emb.weight # \u5171\u4eab\u6743\u91cd\\n\\n        if emb_src_trg_weight_sharing:\\n            self.encoder.src_word_emb.weight = self.decoder.trg_word_emb.weight\\n\\n    def forward(self, src_seq, trg_seq):\\n\\n        src_mask = get_pad_mask(src_seq, self.src_pad_idx)\\n        trg_mask = get_pad_mask(\\n            trg_seq, self.trg_pad_idx) & get_subsequent_mask(trg_seq)\\n\\n        enc_output, *_ = self.encoder(src_seq, src_mask) # \u53ea\u63a5\u53d7\u7b2c\u4e00\u4e2a\\n        dec_output, *_ = self.decoder(trg_seq, trg_mask, enc_output, src_mask)\\n        seq_logit = self.trg_word_prj(dec_output)\\n        if self.scale_prj:\\n            seq_logit *= self.d_model ** -0.5\\n\\n        return seq_logit.view(-1, seq_logit.size(2))\\n    \\n    \\n    \\n    \\ndef get_pad_mask(seq, pad_idx):\\n    return (seq != pad_idx).unsqueeze(-2)\\n\\ndef get_subsequent_mask(seq):\\n    \'\'\' For masking out the subsequent info. \'\'\'\\n    \'\'\'\u4f1a\u751f\u6210\u4e00\u4e2a\u5982\u4e0b\u7684bool\u77e9\u9635\uff1a\\n    tensor([[[ True, False, False],\\n        \\t [ True,  True, False],\\n             [ True,  True,  True]]])\\n    \'\'\'\\n    sz_b, len_s = seq.size()\\n    subsequent_mask = (1 - torch.triu(\\n        torch.ones((1, len_s, len_s), device=seq.device), diagonal=1)).bool()\\n    # \u53ef\u4ee5\u7528subsequent_mask = torch.triu(torch.ones((1, len_s, len_s))).transpose(2,1).bool()\u4ee3\u66ff\\n    return subsequent_mask\\n\\n```\\n\\n\\n\\n## \u9644\u5f55\\n\\n[^1]: Oleksii Kuchaiev and Boris Ginsburg. Factorization tricks for LSTM networks. \\n[^2]: Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton,and Jeff Dean. Outrageously large neural networks: The sparsely-gated mixture-of-experts layer. \\n[^3]: \u0141ukasz Kaiser and Samy Bengio. Can active memory replace attention? In Advances in Neural Information Processing Systems\\n[^4]: Nal Kalchbrenner, Lasse Espeholt, Karen Simonyan, Aaron van den Oord, Alex Graves, and Koray Kavukcuoglu. Neuralmachine translation in linear time\\n[^5]: Jonas Gehring, Michael Auli, David Grangier, Denis Yarats, and Yann N. Dauphin. Convolutional sequence to sequence learning"},{"id":"/[21]RefineMask-Towards-High-Quality-Instance-Segmentationwith-Fine-Grained_Features","metadata":{"permalink":"/blog/[21]RefineMask-Towards-High-Quality-Instance-Segmentationwith-Fine-Grained_Features","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[21]RefineMask-Towards-High-Quality-Instance-Segmentationwith-Fine-Grained_Features.md","source":"@site/blog/[21]RefineMask-Towards-High-Quality-Instance-Segmentationwith-Fine-Grained_Features.md","title":"RefineMask - Towards High-Quality Instance Segmentationwith Fine-Grained Features","description":"\u8bba\u6587\u540d\u79f0\uff1aRefineMask: Towards High-Quality Instance Segmentationwith Fine-Grained Features","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"refinement","permalink":"/blog/tags/refinement"}],"readingTime":11.675,"hasTruncateMarker":true,"authors":[{"name":"Zerorains","title":"life is but a span, I use python","url":"https://github.com/zeroRains","email":"me@zerorains.top","imageURL":"https://github.com/zeroRains.png","key":"zerorains"}],"frontMatter":{"title":"RefineMask - Towards High-Quality Instance Segmentationwith Fine-Grained Features","authors":["zerorains"],"tags":["segmentation","refinement"]},"prevItem":{"title":"Transformer - Attention is all you need","permalink":"/blog/[20]Transformer-Attention-is-all-you-need"},"nextItem":{"title":"GLADNet - Low-Light Enhancement Network with Global Awareness","permalink":"/blog/[22]GLADNet-Low-Light-Enhancement-Network-with-Global-Awareness"}},"content":">\u8bba\u6587\u540d\u79f0\uff1a[RefineMask: Towards High-Quality Instance Segmentationwith Fine-Grained Features](https://arxiv.org/abs/2104.08569)\\n>\\n>\u4f5c\u8005\uff1a[Gang Zhang](https://arxiv.org/search/cs?searchtype=author&query=Zhang%2C+G), [Xin Lu](https://arxiv.org/search/cs?searchtype=author&query=Lu%2C+X), [Jingru Tan](https://arxiv.org/search/cs?searchtype=author&query=Tan%2C+J), [Jianmin Li](https://arxiv.org/search/cs?searchtype=author&query=Li%2C+J), [Zhaoxiang Zhang](https://arxiv.org/search/cs?searchtype=author&query=Zhang%2C+Z), [Quanquan Li](https://arxiv.org/search/cs?searchtype=author&query=Li%2C+Q), [Xiaolin Hu](https://arxiv.org/search/cs?searchtype=author&query=Hu%2C+X)\\n>\\n>\u671f\u520a\uff1aCVPR2021\\n>\\n>\u4ee3\u7801\uff1a[https://github.com/zhanggang001/RefineMask](https://github.com/zhanggang001/RefineMask)\\n\\n## \u539f\u6587\u6458\u8981\\n\\n>The  two-stage  methods  for  instance  segmentation,  e.g.Mask  R-CNN,  have  achieved  excellent  performance  re-cently.  However, the segmented masks are still very coarsedue  to  the  downsampling  operations  in  both  the  featurepyramid and the instance-wise pooling process, especiallyfor large objects.  In this work, we propose a new methodcalled  RefineMask  for  high-quality  instance  segmentationof objects and scenes, which incorporates fine-grained fea-tures  during  the  instance-wise  segmenting  process  in  amulti-stage manner. Through fusing more detailed informa-tion stage by stage, RefineMask is able to refine high-qualitymasks  consistently.    RefineMask  succeeds  in  segmentinghard  cases  such  as  bent  parts  of  objects  that  are  over-smoothed by most previous methods and outputs accurateboundaries.  Without bells and whistles, RefineMask yieldssignificant gains of 2.6, 3.4, 3.8 AP over Mask R-CNN onCOCO, LVIS, and Cityscapes benchmarks respectively at asmall  amount  of  additional  computational  cost.   Further-more, our single-model result outperforms the winner of theLVIS Challenge 2020 by 1.3 points on the LVIS test-dev setand establishes a new state-of-the-art.\\n\\n## \u6458\u8981\\n\\n\u5373\u4f7f\u5982Mask R-CNN\u8fd9\u6837\u4e8c\u9636\u6bb5\u7684\u5b9e\u4f8b\u5206\u5272\u7f51\u8def\u5df2\u7ecf\u6709\u4e86\u4f18\u79c0\u7684\u8868\u73b0\uff0c\u4f46\u56e0\u4e3a\u5728\u7279\u5f81\u91d1\u5b57\u5854\u548c\u5b9e\u4f8b\u6c60\u5316\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e86\u4e0b\u91c7\u6837\u64cd\u4f5c\uff0c\u4f7f\u5f97\u5206\u5272\u63a9\u7801\u4ecd\u7136\u975e\u5e38\u7c97\u7cd9\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u5927\u578b\u7269\u4f53\u3002\\n\\n\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86RefineMask\u65b9\u6cd5\uff0c\u7528\u4e8e\u5bf9\u8c61\u548c\u573a\u666f\u7684\u9ad8\u8d28\u91cf\u5b9e\u4f8b\u5206\u5272\uff0c\u5b83\u5728\u5b9e\u5206\u5272\u7684\u8fc7\u7a0b\u4e2d\u4ee5\u591a\u9636\u6bb5\u7684\u65b9\u5f0f\u7ed3\u5408\u4e86\u7ec6\u7c92\u5ea6\u7279\u5f81\u3002\u901a\u8fc7\u9010\u6b65\u878d\u5408\u66f4\u7ec6\u8282\u7684\u4fe1\u606f\uff0cRefineMask\u80fd\u591f\u59cb\u7ec8\u5982\u4e00\u5730\u63d0\u70bc\u51fa\u9ad8\u8d28\u91cf\u7684mask\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4ecb\u7ecd\\n\\nMask R-CNN\u4e22\u5931\u4e86\u9ad8\u8d28\u91cf\u5b9e\u4f8b\u5206\u5272\u4efb\u52a1\u5fc5\u4e0d\u53ef\u5c11\u7684\u56fe\u50cf\u7ec6\u8282\u3002\u5bfc\u81f4\u8fd9\u4e2a\u95ee\u9898\u7684\u4e3b\u8981\u6709\u4e24\u4e2a\u539f\u56e0\\n\\n\u7b2c\u4e00\uff0c\u6c60\u5316\u8fc7\u7a0b\u4e2d\u7684\u7279\u5f81\u6765\u81ea\u4e8e\u7279\u5f81\u91d1\u5b57\u5854\u7684\u591a\u4e2a\u5c42\u6b21\uff0c\u9ad8\u7ea7\u7279\u5f81\u901a\u5e38\u4f1a\u4f7f\u5f97\u7a7a\u95f4\u5206\u8fa8\u7387\u66f4\u52a0\u7c97\u7cd9\uff0c\u5bf9\u4e8e\u9ad8\u7ea7\u7279\u5f81\uff0c\u5728mask\u7684\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u5f88\u96be\u4fdd\u7559\u7ec6\u8282\u4fe1\u606f\u3002\\n\\n\u7b2c\u4e8c\uff0c\u6c60\u5316\u64cd\u4f5c\u672c\u8eaby\u8fdb\u4e00\u6b65\u5c06\u7279\u5f81\u7684\u7a7a\u95f4\u5c3a\u5bf8\u51cf\u5c0f\u5230\u66f4\u5c0f\u7684\u5c3a\u5bf8\uff0c\u8fd9\u4e5f\u4f1a\u5bfc\u81f4\u4fe1\u606f\u4e22\u5931\u3002\\n\\n\u7531\u4e8e\u8bed\u4e49\u5206\u5272\u4e0d\u9700\u8981\u533a\u5206\u4e2a\u4f53\uff0c\u6240\u4ee5\u5176\u53ef\u4ee5\u5145\u5206\u5229\u7528\u9ad8\u5206\u8fa8\u7387\u7684\u7279\u5f81\u3002\u56e0\u6b64\u4f7f\u7528\u8bed\u4e49\u5206\u5272\u7684\u65b9\u6cd5\uff0c\u5229\u7528\u9ad8\u5206\u8fa8\u7387\u7279\u5f81\u6765\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u8bed\u4e49\uff0c\u5e76\u6210\u529f\u5206\u5272\u6e05\u6d17\u7684\u5bf9\u8c61\u8fb9\u7f18\u3002 \u4e8e\u4e8c\u9636\u6bb5\u7684\u5b9e\u4f8b\u5206\u5272\u65b9\u6cd5\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u5bf9\u8c61\u8fb9\u754c\u533a\u57df\u7684\u9884\u6d4b\u7cbe\u5ea6\u66f4\u9ad8\uff0c\u540c\u65f6\u8be5\u65b9\u6cd5\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u4efb\u4f55\u5b9e\u4f8b\u6c60\u5316\u64cd\u4f5c\u3002\\n\\n\u672c\u6587\u7684\u4e3b\u8981\u601d\u60f3\u662f\u901a\u8fc7\u4fdd\u6301\u5f53\u524d\u4e8c\u9636\u6bb5\u7684\u5f3a\u5927\u80fd\u529b\u6765\u533a\u5206\u5b9e\u4f8b\u5206\u5272\u8fc7\u7a0b\u4e2d\u7528\u7ec6\u7c92\u5ea6\u7279\u5f81\u8865\u5145\u4e22\u5931\u7684\u7ec6\u8282\u6765\u6267\u884c\u5b9e\u4f8b\u5206\u5272\u3002\\n\\n**RefineMask**\u5728\u7279\u5f81\u91d1\u5b57\u5854\u4e2d\u7684\u6700\u9ad8\u5206\u8fa8\u7387\u7279\u5f81\u56fe\u4e0a**\u6784\u5efa\u65b0\u7684\u8bed\u4e49\u5934**\uff0c\u4ee5\u751f\u6210\u7ec6\u7c92\u5ea6\u7684\u8bed\u4e49\u7279\u5f81\u8fd9\u4e9b\u7ec6\u7c92\u5ea6\u7279\u5f81\u7528\u4e8e\u8865\u5145\u5b9e\u4f8b\u5206\u5272\u8fc7\u7a0b\u4e2d\u7684\u7ec6\u8282\u5934\u4e22\u5931\u3002\u4e8eMask R-CNN\u4e0d\u540c\uff0cRefineMask\u5728mask head\u4e2d\u4f7f\u7528\u4e86**\u591a\u9636\u6bb5\u7684\u7ec6\u5316\u7b56\u7565**\u3002\u5728ROI-Align\u64cd\u4f5c\u4e4b\u540e\uff0c\u4ed6\u9010\u6e10\u653e\u5927\u9884\u6d4b\u5927\u5c0f\u5e76\u7ed3\u5408\u7ec6\u7c92\u5ea6\u7279\u5f81\uff0c\u4ee5\u51cf\u8f7b\u9ad8\u8d28\u91cf\u7684\u5b9e\u4f8b\u63a9\u7801\u9884\u6d4b\u7684\u635f\u5931\u7ec6\u8282\u3002\u540c\u65f6RefineMkas\u4f7f\u7528\u8fb9\u754c\u611f\u77e5\u7ec6\u5316\u7b56\u7565\u5173\u6ce8\u8fb9\u754c\u533a\u57df\uff0c\u4ee5\u9884\u6d4b\u66f4\u52a0\u51c6\u786e\u7684\u8fb9\u754c\u3002\u901a\u8fc7\u8fed\u4ee3\u878d\u5408\u66f4\u7ec6\u7c92\u5ea6\u7684\u7279\u5f81\u5e76\u660e\u786e\u5173\u6ce8\u8fb9\u754c\u533a\u57df\uff0cRefindMask\u80fd\u591f\u6301\u7eed\u6539\u8fdb\u66f4\u9ad8\u8d28\u91cf\u7684\u63a9\u7801\u3002\u5728\u5bf9\u8c61\u8fb9\u7f18\u7684\u96be\u70b9\u533a\u57df\uff0cRiefneMask\u7684\u8868\u73b0\u6bd4Mask R-CNN\u7684\u5206\u5272\u7cbe\u5ea6\u9ad8\u5f97\u591a\u3002\\n\\n\\n\\n## RefineMask\\n\\n![image-20210612174033296](./src/RefineMask_Towards_High-Quality_Instance_Segmentationwith_Fine-Grained_Features/20210612174037image-20210612174033296.png)\\n\\n\u57fa\u4e8eFPN\u7f51\u7edc\uff0c\u5f15\u5165\u4e00\u4e2a\u4e0e\u68c0\u6d4b\u5934\u5e73\u884c\u7684**mask head**\uff0c\u4ee5\u591a\u9636\u6bb5\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u4f8b\u5206\u5272\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e2a**\u8bed\u4e49\u5934**\uff0c\u751f\u6210\u7ec6\u7c92\u5ea6\u7279\u5f81\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u4e00\u4e2a**\u8bed\u4e49\u878d\u5408\u6a21\u5757(SFM)**\u6765\u878d\u5408\u4ece\u524d\u4e00\u4e2a\u9636\u6bb5\u83b7\u5f97\u7684\u5b9e\u4f8b\u7279\u5f81\u548c\u4ece\u8bed\u4e49\u5934\u7684\u8f93\u51fa\u4e2d\u6c47\u96c6\u7684\u8bed\u4e49\u7279\u5f81\uff0c\u540c\u65f6\u63a5\u6536\u5b9e\u4f8b\u63a9\u7801\u548c\u8bed\u4e49\u63a9\u7801\u4f5c\u4e3a\u6307\u5bfc\u3002\u8fd8\u4f7f\u7528\u4e86**\u8fb9\u754c\u611f\u77e5\u7ec6\u5316(BAR)**\u7b56\u7565\u6765\u5173\u6ce8\u8fb9\u754c\u533a\u57df\uff0c\u4ee5\u4fbf\u5728\u540e\u671f\u9884\u6d4b\u66f4\u51c6\u786e\u7684\u8fb9\u754c\u3002\\n\\n\\n\\n### \u8bed\u4e49\u5934(Semantic Head)\\n\\n**\u8bed\u4e49\u5934**\u662f\u4e00\u4e2a**FCN\u7f51**\u7edc(\u5168\u5377\u79ef\u795e\u7ecf\u7f51\u7edc)\uff0c\u9644\u7740\u5728P2\uff08**FPN\u7f51\u7edc\u7684\u6700\u9ad8\u5206\u8fa8\u7387\u7684\u7279\u5f81\u56fe**\uff09\u4e0a\u3002\u7531\u56db\u4e2a\u5377\u79ef\u5c42\u7ec4\u6210\uff0c\u7528\u4e8e\u63d0\u53d6\u6574\u4e2a\u56fe\u50cf\u7684\u8bed\u4e49\u7279\u5f81\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4e8c\u5143\u5206\u7c7b\u5668\uff0c\u7528\u4e8e\u9884\u6d4b\u6bcf\u4e2a\u50cf\u7d20\u5c5e\u4e8e\u524d\u666f\u7684\u6982\u7387\u3002\u5728**\u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931**(binary cross-entropy loss)\u7684\u76d1\u7763\u4e0b\uff0c\u9884\u6d4b\u6574\u4e2a\u56fe\u50cf\u7684\u9ad8\u5206\u8fa8\u7387\u8bed\u4e49\u63a9\u7801\u3002\u5c06**\u7ec6\u7c92\u5ea6\u7279\u5f81**\u8fdb\u4e00\u6b65\u7528\u4e8e\u8865\u5145**Mask head**\u4e22\u5931\u7684\u7ec6\u8282\u90e8\u5206\uff0c\u4ee5\u8fdb\u884c\u9ad8\u8d28\u91cf\u7684\u63a9\u7801\u9884\u6d4b\u3002\\n\\n### \u63a9\u7801\u5934(Mask Head)\\n\\n**\u63a9\u7801\u5934**\u662f\u4e00\u4e2a\u5168\u5377\u79ef\u5b9e\u5206\u5272\u5206\u652f\uff0c\u5728\u63a9\u7801\u5934\u4e2d\uff0c\u901a\u8fc714x14\u7684**RoIAlign**\u64cd\u4f5c\u63d0\u53d6\u7684\u7279\u5f81\u9996\u5148\u88ab\u9001\u5165\u4e24\u4e2a3x3\u5377\u79ef\u5c42\u4ee5\u751f\u6210\u5b9e\u4f8b\u7279\u5f81\u3002\u4e4b\u540e\uff0c\u4e00\u4e2a1x1\u7684\u5377\u79ef\u5c42\u88ab\u7528\u6765\u9884\u6d4b**\u5b9e\u4f8b\u63a9\u7801**(instance mask)\uff0c\u4f46\u662fmask\u7684\u7a7a\u95f4\u5927\u5c0f\u53ea\u670914x14\u3002\u8fd9\u4e2a\u7c97\u7cd9\u7684\u63a9\u7801\u7528\u4f5c\u540e\u671f\u7ec6\u5316\u9636\u6bb5\u7684\u521d\u59cb\u63a9\u7801\u3002\\n\\n### \u591a\u9636\u6bb5\u7ec6\u5316(Multi-stage refinement)\\n\\n\u7ecf\u8fc7\u4e0a\u8ff0\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7c97\u7565\u7684\u5b9e\u4f8b\u63a9\u7801\u3002\u63a5\u4e0b\u6765\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u591a\u9636\u6bb5\u7ec6\u5316\u8fc7\u7a0b\u4ee5\u8fed\u4ee3\u65b9\u5f0f\u7ec6\u5316\u63a9\u7801\uff0c\u6bcf\u4e2a\u9636\u6bb5\u7684\u8f93\u5165\u7531\u56db\u90e8\u5206\u7ec4\u6210\uff0c\u5373\u4ece\u5176\u524d\u4e00\u9636\u6bb5\u83b7\u5f97\u7684**\u5b9e\u4f8b\u7279\u5f81\u548c\u5b9e\u4f8b\u63a9\u7801**\uff0c\u4ece\u8bed\u4e49\u5934\u7684\u8f93\u51fa\u4e2d\u6c47\u96c6\u7684**\u8bed\u4e49\u7279\u5f81\u548c\u8bed\u4e49\u63a9\u7801**\u3002\u63d0\u51fa\u4e86**\u8bed\u4e49\u878d\u5408\u6a21\u5757(SFM)**\u6765n\u75be\u9a70\u800c\u8fc7\u8fd9\u4e9b\u8f93\u5165\uff0c\u7136\u540e\u5c06\u878d\u5408\u7684\u7279\u5f81\u653e\u5927\u5230\u66f4\u9ad8\u7684\u7a7a\u95f4\u5c3a\u5bf8\u3002**Mask head**\u8fed\u4ee3\u5730\u8fd0\u884c\u6b64\u7ec6\u5316\u7a0b\u5e8f\uff0c\u5e76\u8f93\u5165\u5206\u8fa8\u7387\u9ad8\u8fbe112x112\u7684\u9ad8\u8d28\u91cf\u5b9e\u4f8b\u63a9\u7801\u3002\\n\\n\u5728\u653e\u5927\u5230\u66f4\u9ad8\u7684\u7a7a\u95f4\u5c3a\u5bf8\u4e4b\u524d\uff0cSFM\u4e2d\u7684\u878d\u5408\u7279\u5f81\u75281x1\u5377\u79ef\u538b\u7f29\u4ee5\u5c06\u5176\u901a\u9053\u51cf\u534a\u3002\u56e0\u6b64\uff0c\u5c3d\u7ba1\u7279\u5f81\u7684\u7a7a\u95f4\u5c3a\u5bf8ua\u8d8a\u6765\u8d8a\u5927\uff0c\u4f46\u5f15\u5165\u7684\u989d\u5916\u8ba1\u7b97\u6210\u672c\u5374\u5f88\u4f4e\u3002\\n\\n### \u8bed\u4e49\u878d\u5408\u6a21\u5757(Semantic Fusion Module)\\n\\n\u4e3a\u4e86\u66f4\u597d\u7684\u878d\u5408\u7ec6\u7c92\u5ea6\u7279\u5f81\uff0c\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u878d\u5408\u6a21\u5757\uff0c\u79f0\u4e3a**\u8bed\u4e49\u878d\u5408\u6a21\u5757\uff08SFM\uff09**\uff0c\u4ee5\u786e\u4fdd\u63a9\u7801\u5934\u90e8\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u611f\u77e5\u5176\u5468\u56f4\u7684\u4e0a\u4e0b\u6587\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4ed6\u8fde\u63a5\u4e86\u6bcf\u4e2a\u9636\u6bb5\u7684**\u56db\u4e2a\u8f93\u5165\u90e8\u5206**\uff0c\u9075\u5faa**1x1\u5377\u79ef\u5c42**\u6765\u878d\u5408\u8fd9\u4e9b\u7279\u5f81\u5e76\u51cf\u5c11\u901a\u9053\u7ef4\u5ea6\uff0c\u4e4b\u540e\uff0c**\u4e09\u4e2a\u5e73\u884c\u7684\u5177\u6709\u4e0d\u540c\u7a7a\u6d1e(dilations)\u76843x3\u5377\u79ef**\u5c42\u7528\u4e8e\u878d\u5408\u5355\u4e2a\u795e\u7ecf\u5143\u5468\u56f4\u7684\u4fe1\u606f\uff0c\u540c\u65f6\u4fdd\u7559\u5c40\u90e8\u7ec6\u8282\u3002\u6700\u540e**\u5b9e\u4f8b\u63a9\u7801\u548c\u8bed\u4e49\u63a9\u7801\u518d\u6b21\u4e0e\u878d\u5408\u7279\u5f81\u8fde\u63a5\u8d77\u6765**\uff0c\u4f5c\u4e3a\u540e\u7eed\u9884\u6d4b\u7684\u6307\u5bfc\u3002\\n\\n![image-20210613142005975](./src/RefineMask_Towards_High-Quality_Instance_Segmentationwith_Fine-Grained_Features/20210613142007image-20210613142005975.png)\\n\\n### \u8fb9\u754c\u611f\u77e5\u7ec6\u5316(Boundary-Aware Refinement)\\n\\n#### **\u8fb9\u754c\u533a\u57df\u7684\u5b9a\u4e49**\uff1a\\n\\n\u4ee4$M^k$\u8868\u793a\u7b2ck\u9636\u6bb5\u4e8c\u5143\u5b9e\u4f8b\u5206\u5272\u7684\u63a9\u7801\uff0c\u63a9\u7801\u7a7a\u95f4\u5927\u5c0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a$14 \\\\cdot2^k\\\\times14\\\\cdot2^k$,\u5176\u4e2d$k = 1,2,3$\u3002$M^k$\u7684\u8fb9\u754c\u533a\u57df\u88ab\u5b9a\u4e49\u4e3a\u7531\u4e8emask\u8f6e\u5ed3\u7684\u8ddd\u79bb\u5c0f\u4e8e$\\\\hat d$\u7684\u50cf\u7d20\u7ec4\u6210\u3002\u5f15\u5165\u4e00\u4e2a\u4e8c\u503c\u63a9\u7801$B^k$\u6765\u8868\u793a$M^k$\u7684\u8fb9\u754c\u533a\u57df\uff0c$B^k$\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u8868\u793a\uff1a\\n$$\\nB^{k}(i, j)=\\\\left\\\\{\\\\begin{array}{ll}\\n1, & \\\\text { if } d_{i j} \\\\leq \\\\hat{d} \\\\\\\\\\n0, & \\\\text { otherwise }\\n\\\\end{array}\\\\right.\\n$$\\n\u5176\u4e2d(i,j)\u8868\u793a$M^k$\u7684\u50cf\u7d20\u70b9$p_{ij}$\u7684\u4f4d\u7f6e\uff0c$d_{ij}$\u8868\u793a$p_{ij}$\u5230mask\u7684\u8f6e\u5ed3\u4e0a\u6700\u8fd1\u7684\u50cf\u7d20\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u3002\\n\\n\u8fb9\u754c\u5982\u4e0b\u56fe\u6240\u793a\\n\\n![image-20210613143807751](./src/RefineMask_Towards_High-Quality_Instance_Segmentationwith_Fine-Grained_Features/20210613143808image-20210613143807751.png)\\n\\n\u4e3a\u4e86\u6709\u6548\u5730\u5b9e\u73b0\u8fd9\u4e2a\u6a21\u5757\uff0c\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5377\u79ef\u7b97\u5b50\u6765\u8fd1\u4f3c\u8fb9\u754c\u533a\u57df\u7684\u8ba1\u7b97\u3002\u7531\u4e8e\u5bf9\u8c61\u5177\u6709\u4e0d\u540c\u7684\u6bd4\u4f8b\uff0c\u9996\u5148\u5c06\u5b9e\u4f8b\u63a9\u7801\u8c03\u6574\u4e3a\u56fa\u5b9a\u5927\u5c0f\uff0c\u5982\u7b2c1\u9636\u6bb528x28\u548c\u7b2c\u4e8c\u9636\u6bb556x56\uff0c\u7136\u540e\u518d\u8ba1\u7b97\u8fb9\u754c\u63a9\u7801\u3002\\n\\n#### **\u8bad\u7ec3\u8fc7\u7a0b**\uff1a\\n\\n\u7b2c\u4e00\u9636\u6bb5\u5927\u5c0f\u4e3a28x28\u7684\u5b8c\u6574\u5b9e\u4f8b\u63a9\u7801,\u5728\u8f93\u51fa\u5927\u5c0f\u5206\u522b\u4e3a56x56\u548c112x112\u7684\u4e24\u4e2a\u540e\u7eed\u9636\u6bb5\u4e2d\uff0c\u4ec5\u4f7f\u7528\u76d1\u7763\u4fe1\u53f7\u8bad\u7ec3\u67d0\u4e9b\u8fb9\u754c\u533a\u57df\uff0c\u8fd9\u4e9b\u533a\u57df\u7531ground-truth mask\u548c\u5176\u524d\u4e00\u9636\u6bb5\u7684\u9884\u6d4b\u63a9\u7801\u51b3\u5b9a\u3002\\n$$\\nR^{k}=f_{\\\\text {up }}\\\\left(B_{G}^{k-1} \\\\vee B_{P}^{k-1}\\\\right)\\n$$\\n\u5176\u4e2d\uff1a$f_{up}$\u8868\u793a\u6bd4\u4f8b\u56e0\u5b50\u4e3a2\u7684\u4e0a\u91c7\u6837\u64cd\u4f5c\uff0c$B^{k-1}_G$\u8868\u793aground-truth\u5728k-1\u9636\u6bb5\u7684\u8fb9\u754c\u533a\u57df\uff0c$B^{k-1}_P$\u8868\u793a\u9884\u6d4b\u63a9\u7801\u5728k-1\u9636\u6bb5\u7684\u8fb9\u754c\u533a\u57df\uff0c$\\\\vee$\u8868\u793a\u4e24\u4e2a\u8fb9\u754c\u533a\u57df\u7684\u5e76\u96c6\u3002\u8f93\u51fa\u5927\u5c0f\u4e3a$S_k\\\\times S_k$\u7684\u7b2ck\u9636\u6bb5(k=2,3)\u7684\u635f\u5931\u51fd\u6570$L_k$\u53ef\u5b9a\u4e49\u4e3a\u5982\u4e0b\u516c\u5f0f\uff1a\\n$$\\n\\\\mathcal{L}^{k}=\\\\frac{1}{\\\\delta_{n}} \\\\sum_{n=0}^{N-1} \\\\sum_{i=0}^{S_{k}-1} \\\\sum_{j=0}^{S_{k}-1} R_{n i j}^{k} \\\\cdot l_{n i j}\\\\\\\\\\n\\\\delta_{n}=\\\\sum_{n=0}^{N-1} \\\\sum_{i=0}^{S_{k}-1} \\\\sum_{j=0}^{S_{k}-1} R_{n i j}\\n$$\\n\u5176\u4e2d\uff1aN\u8868\u793a\u5b9e\u4f8b\u7684\u6570\u91cf\uff0c$l_{nij}$\u8868\u793a\u7b2cn\u4e2a\u5b9e\u4f8b\u4f4d\u7f6e\u4e3a(i,j)\u5904\u7684\u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931\\n\\n#### **\u63a8\u7406\u8fc7\u7a0b**\uff1a\\n\\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u4f8b\uff0c\u7b2c\u4e00\u9636\u6bb5\u8f93\u51fa\u4e00\u4e2a\u5927\u5c0f\u4e3a28x28\u7684\u7c97\u7565\u5b8c\u6574\u63a9\u7801$M^1$\uff0c\u540c\u65f6\u751f\u6210\u5176\u8fb9\u754c\u63a9\u7801$B_p^1$\u751f\u6210\u66f4\u7cbe\u7ec6\u548c\u5b8c\u6574\u7684\u5b9e\u4f8b\u63a9\u7801$M^{\\\\prime K}$(\u7b2ck\u9636\u6bb5\u7684\u6700\u7ec8\u8f93\u51fa)\u7684\u89c4\u5219\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u8fdb\u884c\u8868\u793a\uff1a\\n$$\\n\\\\begin{array}{c}\\nM^{\\\\prime 1}=M^{1} \\\\\\\\\\nM^{\\\\prime k}=f_{\\\\text {up }}\\\\left(B_{P}^{k-1}\\\\right) \\\\otimes M^{k}+\\\\left(1-f_{\\\\text {up }}\\\\left(B_{P}^{k-1}\\\\right)\\\\right) \\\\otimes f_{\\\\text {up }}\\\\left(M^{\\\\prime k-1}\\\\right)\\n\\\\end{array}\\n$$\\n\u5176\u4e2d\uff1a$\\\\otimes$\u8868\u793a\u9010\u50cf\u7d20\u4e58\u6cd5\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u7b2c\u4e8c\u9636\u6bb5\u7684\u63a8\u7406\u8fc7\u7a0b\u3002\u901a\u8fc7\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u5230\u5f97\u5230\u6700\u597d\u7684mask\\n\\n![image-20210613145810117](./src/RefineMask_Towards_High-Quality_Instance_Segmentationwith_Fine-Grained_Features/20210613145811image-20210613145810117.png)\\n\\n$M^{\\\\prime1},M^{\\\\prime2}$\u662fBAR\u6a21\u5757\u7684\u8f93\u5165\uff0c$B_p^1$\u662f$M^{\\\\prime1}$\u7684\u8fb9\u754c\u533a\u57df\uff0c$M^{\\\\prime2}$\u662fi\u7b2c\u4e8c\u9636\u6bb5\u7684\u8f93\u5165\u63a9\u7801\u3002\u5e26\u6709$\\\\times$\u548c$+$\u7684\u4e24\u4e2a\u8fd0\u7b97\u7b26\u5206\u522b\u8868\u793a\u9010\u50cf\u7d20\u4e58\u6cd5\u548c\u9010\u50cf\u7d20\u52a0\u6cd5\u3002"},{"id":"/[22]GLADNet-Low-Light-Enhancement-Network-with-Global-Awareness","metadata":{"permalink":"/blog/[22]GLADNet-Low-Light-Enhancement-Network-with-Global-Awareness","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[22]GLADNet-Low-Light-Enhancement-Network-with-Global-Awareness.md","source":"@site/blog/[22]GLADNet-Low-Light-Enhancement-Network-with-Global-Awareness.md","title":"GLADNet - Low-Light Enhancement Network with Global Awareness","description":"\u8bba\u6587\u540d\u79f0: Low-Light Enhancement Network with Global Awareness","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"detection","permalink":"/blog/tags/detection"},{"label":"inductive-bias","permalink":"/blog/tags/inductive-bias"}],"readingTime":8.78,"hasTruncateMarker":true,"authors":[{"name":"PommesPeter","title":"I want to be strong. But it seems so hard.","url":"https://blog.pommespeter.com/","email":"me@pommespeter.com","imageURL":"https://github.com/PommesPeter.png","key":"pommespeter"}],"frontMatter":{"title":"GLADNet - Low-Light Enhancement Network with Global Awareness","authors":["pommespeter"],"tags":["detection","inductive-bias"]},"prevItem":{"title":"RefineMask - Towards High-Quality Instance Segmentationwith Fine-Grained Features","permalink":"/blog/[21]RefineMask-Towards-High-Quality-Instance-Segmentationwith-Fine-Grained_Features"},"nextItem":{"title":"Squeeze-and-Excitation Networks","permalink":"/blog/[23]Squeeze-and-Excitation-Networks"}},"content":"> \u8bba\u6587\u540d\u79f0: [Low-Light Enhancement Network with Global Awareness](https://ieeexplore.ieee.org/document/8373911)\\n>\\n> \u8bba\u6587\u4f5c\u8005: Wenjing Wang, Chen Wei, Wenhan Yang, Jiaying Liu\\n>\\n> Code: [https://github.com/weichen582/GLADNet](https://github.com/weichen582/GLADNet)\\n\\n\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4f4e\u7167\u5ea6\u589e\u5f3a\u7684\u8bba\u6587\u3002\\n\\n- \u5148\u5bf9\u56fe\u50cf\u7684\u5149\u7167\u8fdb\u884c\u4f30\u8ba1\uff0c\u6839\u636e\u4f30\u8ba1\u7684\u7ed3\u679c\u6765\u8c03\u6574\u539f\u56fe\u50cf\\n- \u8c03\u6574\u8fc7\u7a0b\u4e2d\u4f1a\u5bf9\u56fe\u50cf\u4e2d\u7684\u7ec6\u8282\u91cd\u6784\uff0c\u4ee5\u4fbf\u5f97\u5230\u66f4\u52a0\u81ea\u7136\u7684\u7ed3\u679c\u3002\\n\\n## Abstract (\u6458\u8981)\\n\\n> In this paper, we address the problem of low\\u0002light enhancement. Our key idea is to first calculate a global illumination estimation for the low-light input, then adjust the illumination under the guidance of the estimation and supplement the details using a concatenation with the original input. Considering that, we propose a GLobal illumination\\u0002Aware and Detail-preserving Network (GLADNet). The input image is rescaled to a certain size and then put into an encoder-decoder network to generate global priori knowledge of the illumination. Based on the global prior and the original input image, a convolutional network is employed for detail reconstruction. For training GLADNet, we use a synthetic dataset generated from RAW images. Extensive experiments demonstrate the superiority of our method over other com\\u0002pared methods on the real low-light images captured in various conditions.\\n\\n\u672c\u6587\u4e3b\u8981\u89e3\u51b3\u4e86\u4f4e\u7167\u5ea6\u589e\u5f3a\u7684\u95ee\u9898\uff0c**\u5173\u952e\u7684\u601d\u60f3\u662f\u8f93\u5165\u4e00\u5f20\u4f4e\u7167\u5ea6\u56fe\u50cf\u8fdb\u884c\u5168\u5c40\u5149\u7167\u4f30\u8ba1\uff0c\u7136\u540e\u5728\u4f30\u8ba1\u6240\u5f97\u7684\u6307\u5bfc\u4e0b\u5bf9\u4eae\u5ea6\u8fdb\u884c\u8c03\u6574\uff0c\u5e76\u4e8e\u539f\u59cb\u56fe\u50cf\u8fde\u63a5\u6765\u8865\u5145\u7ec6\u8282\u3002** \u63d0\u51fa\u4e86GladNet\uff0c\u8f93\u5165\u56fe\u50cfresize\u6210\u4e00\u5b9a\u7684\u5927\u5c0f\uff0c\u653e\u5165Encoder-Decoder\u7f51\u7edc\u4e2d\uff0c\u4ee5\u751f\u6210\u7684\u5149\u7167\u4f5c\u4e3a\u5148\u9a8c\u57fa\u7840\u3002**\u5c06\u5148\u9a8c\u7ed3\u679c\u4e0e\u539f\u56fe\u8f93\u5165\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u7ec6\u8282\u91cd\u6784\u3002**\\n\\n\x3c!--truncate--\x3e\\n\\n## Introduction\\n\\n\u7167\u660e\u4e0d\u8db3\u4f1a\u4e25\u91cd\u5f71\u54cd\u56fe\u50cf\u8d28\u91cf\uff0c\u751f\u6d3b\u573a\u666f\u4e2d\u4f1a\u7ecf\u5e38\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\u3002\u62cd\u6444\u73af\u5883\u5dee\uff0c\u6444\u5f71\u8bbe\u5907\u6027\u80fd\u6709\u9650\uff0c\u6444\u5f71\u5e08\u64cd\u4f5c\u4e0d\u5f53\u90fd\u6709\u53ef\u80fd\u662f\u56fe\u50cf\u8d28\u91cf\u5dee\u7684\u539f\u56e0\u3002\u4e3b\u8981\u662f\u56e0\u4e3a\u56fe\u50cf\u7684\u9971\u548c\u5ea6\u548c\u5bf9\u6bd4\u5ea6\u4e0d\u8db3\u3002\\n\\n\u4e00\u822c\u5e38\u7528\u7684\u4f4e\u7167\u5ea6\u589e\u5f3a\u65b9\u5f0f\u6709\u76f4\u65b9\u56fe\u5747\u8861\u5316(HE)\uff0c\u57fa\u4e8e\u89c6\u7f51\u819c\u6a21\u578b\u7684\u591a\u5c3a\u5ea6\u989c\u8272\u6062\u590d\uff08\u89c6\u7f51\u819c\u6a21\u578b\uff1a\u662f\u56fe\u50cf\u88ab\u8ba4\u4e3a\u662f\u53cd\u5c04\u548c\u7167\u660e\u4e24\u4e2a\u90e8\u5206\u7684\u7ec4\u5408\uff09\uff0c\u5c06\u4eba\u7c7b\u89c6\u89c9\u7684\u673a\u5236\u5f15\u5165\u5230\u56fe\u50cf\u5904\u7406\u5f53\u4e2d\u3002\\n\\n\u5728\u4f4e\u7ea7\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u4eba\u7269\u4e2d\uff0c\u6709\u4eba\u5c1d\u8bd5\u4f7f\u7528\u53e0\u52a0\u7a00\u758f\u53bb\u566a\u81ea\u52a8\u7f16\u7801\u5668\u5b66\u4e60\u7684\u53d8\u4f53\uff0c\u4ece\u5408\u6210\u9ed1\u6697\u548c\u6dfb\u52a0\u566a\u58f0\u7684\u8bad\u7ec3\u4f8b\u5b50\u4e2d\u540c\u65f6\u8fdb\u884c\u5fae\u5149\u589e\u5f3a\u548c\u566a\u58f0\u964d\u4f4e\u3002\uff08LLNet\uff09\\n\\n\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5168\u5c40\u5149\u7167\u611f\u77e5\u548c\u7ec6\u8282\u4fdd\u6301\u7f51\u7edc\uff0c\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\u3002\\n\\n- \u7b2c\u4e00\u6b65\u662f\u4e3a\u4e86\u83b7\u5f97\u5168\u5c40\u5149\u7167\u4f30\u8ba1\uff0c\u5c06\u56fe\u7247\u8fdb\u884c\u4e0b\u91c7\u6837\u5230\u56fa\u5b9a\u7684\u5927\u5c0f\uff0c\u901a\u8fc7Encoder-Decoder\u7f51\u7edc\u3002\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7684\u74f6\u9888\u5c42\u6709\u4e00\u4e2a\u8986\u76d6\u6574\u4e2a\u56fe\u50cf\u7684\u611f\u53d7\u91ce\u3002\\n- \u7b2c\u4e8c\u6b65\u7ec6\u8282\u91cd\u6784\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u6062\u590d\u548c\u8865\u5145\u56fe\u50cf\u7f29\u653e\u8fc7\u7a0b\u79cd\u4e22\u5931\u7684\u7ec6\u8282\u3002\\n- \u4e3a\u4e86\u8bad\u7ec3\u8fd9\u6837\u7684\u7f51\u7edc\uff0c\u6211\u4eec\u4ece\u5728\u5404\u79cd\u6761\u4ef6\u4e0b\u6355\u83b7\u7684\u539f\u59cb\u56fe\u7247\u5408\u6210\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5e76\u4f7f\u7528L1\u8303\u6570\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u3002GLADNet\u7684\u6548\u679c\u662f\u7528\u5176\u4ed6\u6700\u5148\u8fdb\u7684\u65b9\u6cd5\u5728\u771f\u5b9e\u56fe\u50cf\u4e0a\u8bc4\u4f30\u7684\\n\\n## Proposed method\\n\\n\u7f51\u7edc\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\u3002\\n\\n![image-20210630215301122](./src/GLADNet-Low-Light-Enhancement-Network-with-Global-Awareness/image-20210630215301122.png)\\n\\n- \u8f93\u5165\u88ab\u4e0b\u91c7\u6837\u5230\u56fa\u5b9a\u5927\u5c0f\u3002\u7136\u540e\uff0c\u901a\u8fc7\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7f51\u7edc\u4f20\u9012\u7279\u5f81\u56fe(\u4ea7\u751f\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u7167\u5ea6\u4f30\u8ba1)\u3002\u5728\u74f6\u9888\u5c42\uff0c\u4f30\u8ba1\u5168\u5c40\u7167\u5ea6\u3002\u7f29\u56de\u5230\u539f\u59cb\u5c3a\u5bf8\u4e4b\u540e\uff0c\u83b7\u5f97\u6574\u4e2a\u56fe\u50cf\u7684\u7167\u660e\u9884\u6d4b\u3002\\n\\n- \u5168\u5c40\u7167\u660e\u4f30\u8ba1\u6b65\u9aa4\u4e4b\u540e\u662f\u7ec6\u8282\u91cd\u5efa\u6b65\u9aa4\u3002\u4e09\u4e2a\u5377\u79ef\u5c42\u53c2\u8003\u5168\u5c40\u7ea7\u7167\u5ea6\u9884\u6d4b\u6765\u8c03\u6574\u8f93\u5165\u56fe\u50cf\u7684\u7167\u5ea6\uff0c\u5e76\u540c\u65f6\u586b\u5145\u5728\u4e0b\u91c7\u6837\u548c\u4e0a\u91c7\u6837\u8fc7\u7a0b\u4e2d\u4e22\u5931\u7684\u7ec6\u8282\u3002\\n\\n### \u5168\u5c40\u5149\u7167\u4f30\u8ba1\\n\\n\u8fd9\u4e00\u6b65\u9aa4\u4e3b\u8981\u5305\u542b\u4e09\u4e2a\u6b65\u9aa4\\n\\n- \u5c06\u8f93\u5165\u56fe\u50cf\u7f29\u653e\u5230\u7279\u5b9a\u5206\u8fa8\u7387\u3002\\n- \u901a\u8fc7Encoder-Decoder\u7f51\u7edc\u8fdb\u884c\u5168\u5c40\u5149\u7167\u9884\u6d4b\\n- \u7f29\u653e\u5230\u539f\u6765\u7684\u5206\u8fa8\u7387\\n\\n\u4f7f\u7528\u6700\u8fd1\u90bb\u63d2\u503c\u6cd5\u4e0b\u91c7\u6837\u5230\u7279\u5b9a\u7684\u5927\u5c0f$W_0\\\\times H_0$.\u901a\u8fc7\u6709ReLU\u6a21\u5757\u7684\u5377\u79ef\u5206\u5c42\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u7279\u5f81\u56fe\u8f93\u5165\u5230\u4e00\u7cfb\u5217\u7684\u7ea7\u8054\u4e0b\u91c7\u6837\u6a21\u5757\uff0c\u4e0b\u91c7\u6837\u6a21\u5757\u7684\u6570\u91cf\u6839\u636e\u8bbe\u5b9a\u7684$W_0\\\\times H_0$\u6765\u51b3\u5b9a\uff0c\u4f7f\u5f97ED\u7f51\u7edc\u7684Bottleneck\u7684\u611f\u53d7\u91ce\u80fd\u591f\u8986\u76d6\u6574\u4e2a\u56fe\u50cf\u3002\u7ecf\u8fc7\u4e00\u7cfb\u5217\u5bf9\u79f0\u7684\u4e0a\u91c7\u6837\u5757\uff0c\u5f97\u5230\u7528\u4e8e\u5149\u7167\u9884\u6d4b\u7684\u7279\u5f81\u56fe\u3002\u901a\u8fc7\u53e6\u4e00\u4e2a\u4e0a\u91c7\u6837\u5757\uff0c\u7279\u5f81\u6620\u5c04\u88ab\u91cd\u65b0\u7f29\u653e\u5230\u539f\u59cb\u8f93\u5165\u7684\u5927\u5c0f\u3002\\n\\n\u5728\u56fe\u50cf\u7ecf\u8fc7ED\u7f51\u7edc\u7684\u65f6\u5019\uff0c\u5bf9\u5e94\u4e0a\u91c7\u6837\u548c\u4e0b\u91c7\u6837\u5bf9\u5e94\u4e24\u5c42\u4e4b\u95f4\u4f1a\u505a\u4e00\u6b21\u8df3\u8dc3\u8fde\u63a5\uff0c\u8fd9\u6837\u80fd\u591f\u5c06\u4e0b\u91c7\u6837\u7684\u7279\u5f81\u4e0e\u4e0a\u91c7\u6837\u7684\u7279\u5f81\u8fdb\u884c\u6620\u5c04\u76f8\u52a0\uff0c\u8fd9\u4e2a\u662f\u4e3a\u4e86\u8ba9\u7f51\u7edc\u5b66\u4e60\u6b8b\u5dee\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u9884\u6d4b\u5b9e\u9645\u7684\u50cf\u7d20\u503c\u3002\\n\\n\u4e0b\u91c7\u6837\u6a21\u5757\u662f\u7531\u4e00\u7cfb\u5217\u6b65\u957f\u4e3a2\u7684\u5377\u79ef\u5c42\u548c\u4e00\u4e2aReLU\u6fc0\u6d3b\u51fd\u6570\u7ec4\u6210\u3002\u5728\u4e0a\u91c7\u6837\u5757\u4e2d\u4e0e\u4e0b\u91c7\u6837\u6a21\u5757\u7c7b\u4f3c\uff0c\u4f46\u4e0a\u91c7\u6837\u6a21\u5757\u662f\u7528resize\u5377\u79ef\u5c42\u548c\u6765\u4ee3\u66ff\u666e\u901a\u53cd\u5377\u79ef\u5c42\uff0cresize\u5377\u79ef\u5c42\u80fd\u591f\u907f\u514d\u68cb\u76d8\u56fe\u6848\u7684\u4f2a\u5f71\uff0c\u4e14\u5bf9\u8f93\u5165\u7684\u5927\u5c0f\u6ca1\u6709\u9650\u5236\u3002Resize\u5377\u79ef\u5c42\u662f\u7531\u4e00\u4e2a\u6700\u8fd1\u90bb\u63d2\u503c\u3001\u6b65\u957f\u4e3a2\u7684\u5377\u79ef\u5c42\u548c\u4e00\u4e2aReLU\u6fc0\u6d3b\u51fd\u6570\u7ec4\u6210\u3002\\n\\n### \u7ec6\u8282\u91cd\u6784\\n\\n- \u4ece\u5168\u5c40\u8fdb\u884c\u5149\u7167\u4f30\u8ba1(\u4f46\u662f\uff0c\u7531\u4e8e\u91cd\u65b0\u7f29\u653e\u8fc7\u7a0b\uff0c\u7ec6\u8282\u4f1a\u4e22\u5931)\\n\\n\u539f\u59cb\u8f93\u5165\u88ab\u8ba4\u4e3a\u6bd4\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7f51\u7edc\u7684\u8f93\u51fa\u5305\u542b\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e3a\u7ec6\u8282\u6062\u590d\u63d0\u4f9b\u4fe1\u606f\u3002\u4f7f\u7528\u62fc\u63a5\u4ee3\u66ff\u8df3\u8dc3\u8fde\u63a5\u6765\u7ec4\u5408\u6700\u540e\u4e00\u4e2a\u4e0a\u91c7\u6837\u5757\u548c\u8f93\u5165\u56fe\u50cf\u7684\u7279\u5f81\u6620\u5c04\uff0c\u4f7f\u5f97\u539f\u59cb\u4fe1\u606f\u548c\u7167\u5ea6\u4f30\u8ba1\u90fd\u53ef\u4ee5\u88ab\u5b8c\u5168\u4fdd\u7559\u5e76\u4f20\u8f93\u5230\u4e0b\u4e00\u6b65\u3002\u7ea7\u8054\u5c42\u540e\u9762\u662f\u4e09\u4e2a\u5e26\u6709ReLU\u7684\u5377\u79ef\u5c42\u3002\u5b83\u5c06\u8f93\u5165\u56fe\u50cf\u4fe1\u606f\u4e0e\u4f30\u8ba1\u7684\u5168\u5c40\u5149\u7167\u4fe1\u606f\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u6700\u7ec8\u751f\u6210\u5177\u6709\u66f4\u597d\u7ec6\u8282\u7684\u589e\u5f3a\u7ed3\u679c\u3002\\n\\n### \u635f\u5931\u51fd\u6570\\n\\n\u8bad\u7ec3\u8fc7\u7a0b\u662f\u901a\u8fc7\u6700\u5c0f\u5316\u6062\u590d\u56fe\u50cf\u548c\u76f8\u5e94\u7684\u5730\u9762\u771f\u5b9e\u56fe\u50cf\u4e4b\u95f4\u7684\u635f\u5931\u6765\u5b9e\u73b0\u7684\u3002\u635f\u5931\u51fd\u6570\u516c\u5f0f\u5982\u4e0b\uff1a\\n$$\\nLoss(X,Y)=\\\\frac{1}{N}\\\\sum^N_{i=1}||F(X_i,\\\\Theta)-Y_i||_1\\n$$\\n\u6211\u4eec\u4f7f\u7528\u7684\u662f$L_1$\u8303\u6570\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u4f7f\u7528$L_2$\u756a\u85af\u80fd\u591f\u66f4\u597d\u7684\u53bb\u9664\u566a\u58f0\u548c\u6296\u52a8\u5728\u589e\u5f3a\u7ed3\u679c\u4e0a\u7684\u5f71\u54cd\u3002\\n\\n\\n\\n\\n\\n\u6b64\u5916\uff0c\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u901a\u9053\u5728\u635f\u5931\u51fd\u6570\u4e2d\u6709\u81ea\u5df1\u7684\u6743\u91cd:(0.29891\u30010.58661\u30010.11448)\uff0c\u8fd9\u5bf9\u4e8e\u4eceRGB\u56fe\u50cf\u5230\u7070\u5ea6\u56fe\u50cf\u7684\u8f6c\u6362\u662f\u76f8\u540c\u7684\u6743\u91cd\u3002\u8fd9\u6709\u52a9\u4e8e\u4fdd\u6301\u8272\u5f69\u5e73\u8861\uff0c\u63d0\u9ad8\u7f51\u7edc\u7684\u9c81\u68d2\u6027\u3002\\n\\n\\n\\n## Experiments\\n\\n\u672c\u6587\u8bad\u7ec3\u7684\u65f6\u5019\u6240\u6709\u7684\u5377\u79ef\u5c42\u90fd\u662f\u91c7\u7528$3\\\\times3$\uff0c\u8bbe\u5b9a\u7684$W_0\\\\times H_0$\u5927\u5c0f\u4e3a$96\\\\times96$,ED\u7f51\u7edc\u4e2d\u4f7f\u7528\u7684\u5377\u79ef\u6838\u5927\u5c0f\u4e5f\u4e3a$3\\\\times3$,\u4f7f\u7528\u8fd9\u4e2a\u5927\u5c0f\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u80fd\u591f\u8ba9\u611f\u53d7\u91ce\u8986\u76d6\u6574\u4e2a\u56fe\u50cf(\u56e0\u4e3a\u9700\u8981\u5bf9\u6574\u4e2a\u56fe\u7247\u4e0a\u7684\u5149\u7167\u8fdb\u884c\u589e\u5f3a\uff0c\u5982\u679c\u611f\u53d7\u91ce\u4e0d\u80fd\u8986\u76d6\u6574\u4e2a\u56fe\u7247\u90a3\u4e48\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53ea\u6709\u5c40\u90e8\u8fdb\u884c\u4e86\u589e\u5f3a\u3002)\\n\\n\\n\\n\u4f7f\u7528GoogleCloud\u7684\u89c6\u89c9API\u6765\u8bc4\u4f30\u56fe\u50cf"},{"id":"/[23]Squeeze-and-Excitation-Networks","metadata":{"permalink":"/blog/[23]Squeeze-and-Excitation-Networks","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[23]Squeeze-and-Excitation-Networks.md","source":"@site/blog/[23]Squeeze-and-Excitation-Networks.md","title":"Squeeze-and-Excitation Networks","description":"Squeeze-and-Excitation Networks\uff08SENet\uff09\u662f\u7531\u81ea\u52a8\u9a7e\u9a76\u516c\u53f8Momenta\u57282017\u5e74\u516c\u5e03\u7684\u4e00\u79cd\u5168\u65b0\u7684\u56fe\u50cf\u8bc6\u522b\u7ed3\u6784\uff0c\u5b83\u901a\u8fc7\u5bf9\u7279\u5f81\u901a\u9053\u95f4\u7684\u76f8\u5173\u6027\u8fdb\u884c\u5efa\u6a21\uff0c\u628a\u91cd\u8981\u7684\u7279\u5f81\u8fdb\u884c\u5f3a\u5316\u6765\u63d0\u5347\u51c6\u786e\u7387\u3002\u8fd9\u4e2a\u7ed3\u6784\u662f2017 ILSVR\u7ade\u8d5b\u7684\u51a0\u519b\uff0ctop5\u7684\u9519\u8bef\u7387\u8fbe\u5230\u4e862.251%\uff0c\u6bd42016\u5e74\u7684\u7b2c\u4e00\u540d\u8fd8\u8981\u4f4e25%\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"}],"readingTime":8.35,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Squeeze-and-Excitation Networks","authors":["visualdust"],"tags":["attention-mechanism"]},"prevItem":{"title":"GLADNet - Low-Light Enhancement Network with Global Awareness","permalink":"/blog/[22]GLADNet-Low-Light-Enhancement-Network-with-Global-Awareness"},"nextItem":{"title":"BiSeNet - Bilateral Segmentation Network for Real-time Semantic Segmentation","permalink":"/blog/[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation"}},"content":"Squeeze-and-Excitation Networks\uff08SENet\uff09\u662f\u7531\u81ea\u52a8\u9a7e\u9a76\u516c\u53f8Momenta\u57282017\u5e74\u516c\u5e03\u7684\u4e00\u79cd\u5168\u65b0\u7684\u56fe\u50cf\u8bc6\u522b\u7ed3\u6784\uff0c\u5b83\u901a\u8fc7\u5bf9\u7279\u5f81\u901a\u9053\u95f4\u7684\u76f8\u5173\u6027\u8fdb\u884c\u5efa\u6a21\uff0c\u628a\u91cd\u8981\u7684\u7279\u5f81\u8fdb\u884c\u5f3a\u5316\u6765\u63d0\u5347\u51c6\u786e\u7387\u3002\u8fd9\u4e2a\u7ed3\u6784\u662f2017 ILSVR\u7ade\u8d5b\u7684\u51a0\u519b\uff0ctop5\u7684\u9519\u8bef\u7387\u8fbe\u5230\u4e862.251%\uff0c\u6bd42016\u5e74\u7684\u7b2c\u4e00\u540d\u8fd8\u8981\u4f4e25%\u3002\\n\\n> The central building block of convolutional neural networks (CNNs) is the convolution operator, which enables networks to construct informative features by fusing both spatial and channel-wise information within local receptive fields at each layer. A broad range of prior research has investigated the spatial component of this relationship, seeking to strengthen the representational power of a CNN by enhancing the quality of spatial encodings throughout its feature hierarchy. In this work, we focus instead on the channel relationship and propose a novel architectural unit, which we term the \\"Squeeze-and-Excitation\\" (SE) block, that adaptively recalibrates channel-wise feature responses by explicitly modelling interdependencies between channels. We show that these blocks can be stacked together to form SENet architectures that generalise extremely effectively across different datasets. We further demonstrate that SE blocks bring significant improvements in performance for existing state-of-the-art CNNs at slight additional computational cost. Squeeze-and-Excitation Networks formed the foundation of our ILSVRC 2017 classification submission which won first place and reduced the top-5 error to 2.251%, surpassing the winning entry of 2016 by a relative improvement of ~25%. Models and code are available at [this https URL](https://github.com/hujie-frank/SENet).\\n\\n![image-20210703161305168](./src/Squeeze-and-Excitation-Networks/image-20210703161305168.png)\\n\\nSENet\u7684\u4e3b\u8981\u521b\u65b0\u662f\u4e00\u4e2a\u6a21\u5757\u3002\u5982\u4e0a\u56fe\uff0cFtr\u662f\u4f20\u7edf\u5377\u79ef\u7ed3\u6784\uff0c\u5176\u8f93\u5165$X$($C\'\\\\times W\' \\\\times H\'$)\u548c\u8f93\u51fa$U$($C\\\\times W \\\\times H$)\u4e5f\u90fd\u662f\u4f20\u7edf\u7ed3\u6784\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u3002SeNet\u7684\u6a21\u5757\u662f$U$\u4e4b\u540e\u7684\u90e8\u5206\u3002SENet\u901a\u8fc7\u8fd9\u79cd\u8bbe\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5f15\u5165\u4e86\u6ce8\u610f\u529b\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## SE-Block\uff08SE\u6a21\u5757\uff09\\n\\n![image-20210703163740490](./src/Squeeze-and-Excitation-Networks/image-20210703163740490.png)\\n\\nSE\u6a21\u5757\u662f\u8fd9\u7bc7\u8bba\u6587\u7684\u4e3b\u8981\u521b\u65b0\u70b9\u3002\u8be5\u6a21\u5757\u7684\u8fd0\u4f5c\u65b9\u6cd5\u5e76\u4e0d\u590d\u6742\u3002\u5176\u6b65\u9aa4\u5982\u4e0b\uff1a\\n\\n1. \u63a5\u6536$U$\u4f5c\u4e3a\u8f93\u5165\uff0c\u5bf9$U$\u505a\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff08Global Average  Pooling\uff0c\u539f\u8bba\u6587\u4e2d\u79f0\u4e4b\u4e3a**Squeeze\u8fc7\u7a0b**\uff0c\u56fe\u4e2d\u6807\u8bb0\u4e3a$F_{sq}(\u30fb)$\uff09\uff0c\u5f97\u5230\u4e00\u4e2a$1\\\\times 1\\\\times C$\u7684\u7279\u5f81\u5411\u91cf\u3002\\n2. \u5c06\u5f97\u5230\u7684\u957f\u6761\u72b6\u7279\u5f81\u5411\u91cf\u8f93\u5165\u4e00\u4e2a\u4e24\u5c42\u7684\u5168\u8fde\u63a5\u5c42\uff08\u539f\u6587\u4e2d\u79f0\u4e3a**Excitation\u8fc7\u7a0b**\uff0c\u56fe\u4e2d\u6807\u8bb0\u4e3a$F_{ex}(\u30fb,W)$\uff09\uff0c\u5f97\u5230\u4e00\u4e2a\u5927\u5c0f\u4e0d\u53d8\u7684\u7279\u5f81\u5411\u91cf\uff0c\u5e76\u4f7f\u7528$sigmoid$\u9650\u5236\u5230$[0,1]$\u7684\u8303\u56f4\u5185\uff08\u539f\u8bba\u6587\u79f0\u4e4b\u4e3aself-gating mechanism\uff09\u3002\\n3. \u5bf9\u4e8e\u5f97\u5230\u7684\u7279\u5f81\u5411\u91cf\uff0c\u5c06\u5176\u4e0e\u6700\u521d\u8f93\u5165$U$\u7684\u5404\u4e2a$Channel$\u4e00\u4e00\u5bf9\u5e94\uff0c\u5e76\u5c06\u5176\u76f4\u63a5\u4f5c\u4e3ascale\u4e58\u8fdb$U$\u4e2d\uff08\u56fe\u4e2d\u6807\u8bb0\u4e3a$F_{scale}(\u30fb,\u30fb)$\uff09\u3002\\n\\n\u8fd9\u6837\u505a\u7684\u7406\u8bba\u4f9d\u636e\u662f\u4e3a\u4e86\u5bf9channel-wise\u8fdb\u884c\u91cd\u8981\u6027\u91c7\u6837\u3002\u6216\u8005\u6362\u4e2a\u8bf4\u6cd5\uff0c\u5c31\u662f\u628a\u91cd\u8981\u7684\u7279\u5f81\u589e\u5f3a\uff0c\u4e0d\u91cd\u8981\u7684\u7279\u5f81\u51cf\u5f31\uff0c\u4ece\u800c\u8ba9\u63d0\u53d6\u7684\u7279\u5f81\u6307\u5411\u6027\u66f4\u5f3a\u3002\\n\\n![image-20210703173424854](./src/Squeeze-and-Excitation-Networks/image-20210703173424854.png)\\n\\n\u4e0a\u56fe\u662f\u5bf9SEBlock\u5904\u7406\u8fc7\u7a0b\u7684\u63cf\u8ff0\u3002\\n\\n---\\n\\n## Squeeze\u8fc7\u7a0b\u7684\u8bbe\u8ba1\u7ec6\u8282\\n\\n![image-20210703161305168](./src/Squeeze-and-Excitation-Networks/image-20210703161305168.png)\\n\\n\u56fe\u4e2d\u7684$F_{sq}(\u30fb)$\u79f0\u4e3a**Squeeze\u8fc7\u7a0b**\uff0c\u5168\u5c40\u5e73\u5747\u6c60\u5316(Global average pooling\uff0cGAP)\u6709\u5f88\u591a\u7b97\u6cd5\uff0c\u4f5c\u8005\u7528\u4e86\u6700\u7b80\u5355\u7684\u6c42\u5e73\u5747\u7684\u65b9\u6cd5\uff1a\\n$$\\nz_c = F_{sq}(u_c) = \\\\frac{1}{W\\\\times H}\\\\sum_{i=1}^W\\\\sum_{j=1}^H{u_c(i,j)}\\n$$\\n\u8fd9\u4f7f\u7a7a\u95f4\u4e0a\u6240\u6709\u70b9\u7684\u4fe1\u606f\u90fd\u5e73\u5747\u6210\u4e86\u4e00\u4e2a\u503c\u3002\u8fd9\u4e48\u505a\u662f\u56e0\u4e3a\u6700\u7ec8\u7684scale\u662f\u5bf9\u6574\u4e2a\u901a\u9053\u4f5c\u7528\u7684\uff0c\u8fd9\u5c31\u5f97\u57fa\u4e8e\u901a\u9053\u7684\u6574\u4f53\u4fe1\u606f\u6765\u8ba1\u7b97scale\u3002\u53e6\u5916\u4f5c\u8005\u8981\u5229\u7528\u7684\u662f\u901a\u9053\u95f4\u7684\u76f8\u5173\u6027\uff0c\u800c\u4e0d\u662f\u7a7a\u95f4\u5206\u5e03\u4e2d\u7684\u76f8\u5173\u6027\uff0c\u7528GAP\u5c4f\u853d\u6389\u7a7a\u95f4\u4e0a\u7684\u5206\u5e03\u4fe1\u606f\u80fd\u8ba9scale\u7684\u8ba1\u7b97\u66f4\u52a0\u51c6\u786e\u3002\\n\\n## Excitation\u8fc7\u7a0b\u7684\u8bbe\u8ba1\u7ec6\u8282\\n\\nExcitation\u90e8\u5206\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u5229\u7528**\u901a\u9053\u76f8\u5173\u6027**\uff0c\u8be6\u89c1\u4e0b\u6587\u4e2d\u901a\u9053\u76f8\u5173\u6027\u90e8\u5206\u3002\\n\\n![image-20210703161305168](./src/Squeeze-and-Excitation-Networks/image-20210703161305168.png)\\n\\n\u56fe\u4e2d\u7684$F_{ex}(\u30fb,W)$\u79f0\u4e3a**Excitation\u8fc7\u7a0b**\uff0c\u5728SEBlock\u4e2d\u8fd9\u90e8\u5206\u662f\u75282\u4e2a\u5168\u8fde\u63a5\u6765\u5b9e\u73b0\u7684\u3002\u4f17\u6240\u5468\u77e5\uff0c\u5168\u8fde\u63a5\u7684\u8ba1\u7b97\u91cf\u662f\u975e\u5e38\u6050\u6016\u7684\u3002\u5c42\u95f4\u8fde\u63a5\u6570\u91cf\u8f83\u5927\u65f6\u3002\u6240\u4ee5\uff0c\u5728SENet\u4e2d\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u628a$C$\u4e2a\u901a\u9053\u538b\u7f29\u6210\u4e86$C/r$\u4e2a\u901a\u9053\u6765\u964d\u4f4e\u8ba1\u7b97\u91cf\uff08\u540e\u9762\u8ddf\u4e86$relu$\uff09\uff0c\u7b2c\u4e8c\u4e2a\u5168\u8fde\u63a5\u518d\u6062\u590d\u56de$C$\u4e2a\u901a\u9053\uff08\u540e\u9762\u8ddf\u4e86$sigmoid$\uff09\u3002\u539f\u8bba\u6587\u4e2d\u5c1d\u8bd5\u4e86$r$\u5728\u5404\u79cd\u53d6\u503c\u4e0b\u7684\u6027\u80fd \uff0c\u6700\u540e\u5f97\u51fa\u7ed3\u8bba$r=16$\u65f6\u6574\u4f53\u6027\u80fd\u548c\u8ba1\u7b97\u91cf\u8f83\u4e3a\u5e73\u8861\u3002\\n\\n## \u901a\u9053\u76f8\u5173\u6027\\n\\n\u4e0a\u8ff0\u7684Excitation\u8fc7\u7a0b\u662fSENet\u80fd\u591f\u5229\u7528\u901a\u9053\u76f8\u5173\u6027\u7684\u5173\u952e\u8bbe\u8ba1\u3002\u8fd9\u79cd\u8bbe\u8ba1\u8bad\u7ec3\u4e86\u4e00\u4e2a\u5168\u8fde\u63a5\u7f51\u7edc\uff0c\u8be5\u5168\u8fde\u63a5\u7f51\u7edc\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e0a\u5f97\u51fa\u4e00\u4e2a\u5408\u9002\u7684$scale$\uff0c\u4f5c\u7528\u4e8e\u524d\u5e8f\u7f51\u7edc\u7684\u8f93\u51fa\u3002\u8fd9\u79cd\u8bbe\u8ba1\u662f\u5fc5\u8981\u7684\uff1a\\n\\n![image-20210703225313459](./src/Squeeze-and-Excitation-Networks/image-20210703225313459.png)\\n\\n\u4f8b\u5982\uff0c\u5728\u4e0a\u56fe\u5b58\u5728\u8fc7\u7a0b1\u548c\u8fc7\u7a0b2\uff0c\u8fc7\u7a0b1\u4e0d\u7ecf\u8fc7\u5168\u8fde\u63a5\u76f4\u63a5\u5c06$scale$\u4f5c\u7528\u4e8e\u524d\u5e8f\u7f51\u7edc\u7684\u8f93\u51fa\u3002\u6ca1\u6709\u4e86\u5168\u8fde\u63a5\u5c42\uff0c\u67d0\u4e2a\u901a\u9053\u7684\u8c03\u6574\u503c\u5b8c\u5168\u57fa\u4e8e\u5355\u4e2a\u901a\u9053\u5168\u5c40\u5e73\u5747\u6c60\u5316(Global average pooling\uff0cGAP)\u7684\u7ed3\u679c\uff0c\u4e8b\u5b9e\u4e0a\u53ea\u6709GAP\u7684\u5206\u652f\u662f\u5b8c\u5168\u6ca1\u6709\u53cd\u5411\u8ba1\u7b97\u3001\u6ca1\u6709\u8bad\u7ec3\u7684\u8fc7\u7a0b\u7684\uff0c\u5c31\u65e0\u6cd5\u57fa\u4e8e\u5168\u90e8\u6570\u636e\u96c6\u6765\u8bad\u7ec3\u5f97\u51fa\u901a\u9053\u589e\u5f3a\u3001\u51cf\u5f31\u7684\u89c4\u5f8b\u3002\\n\\n\u800c\u8fc7\u7a0b2\u662fSENet\u7684\u505a\u6cd5\u3002\u4e3a\u4ec0\u4e48\u8981\u52a0\u5168\u8fde\u63a5\u5c42\u5462\uff1f\u8fd9\u91cc\u7684\u5168\u8fde\u63a5\u5c42\u65e8\u5728\u66f4\u597d\u5730\u6355\u83b7\u901a\u9053\u95f4\u7684\u76f8\u5173\u5173\u7cfb\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u51fd\u6570\u5fc5\u987b\u6ee1\u8db3\u4e24\u4e2a\u6807\u51c6\uff1a\\n\\n1. \u5b83\u5fc5\u987b\u80fd\u591f\u5b66\u4e60\u901a\u9053\u95f4\u7684\u975e\u7ebf\u6027\u5173\u7cfb\u3002\u901a\u9053\u4e4b\u95f4\u4f1a\u5b58\u5728\u5173\u7cfb\u3002\\n2. \u5b83\u5fc5\u987b\u80fd\u591f\u5b66\u4e60\u4e00\u79cd\u975e\u4e92\u65a5\u7684\u5173\u7cfb\u3002\u56e0\u4e3a\u6709\u7528\u7684\u4e5f\u8bb8\u662f\u591a\u4e2a\u901a\u9053\u3002\\n\\n\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e9b\u6807\u51c6\uff0cSENet\u9009\u7528\u5e26\u6709$Sigmoid$\u6fc0\u6d3b\u7684\u7b80\u5355\u95e8\u63a7\u673a\u5236\uff0c\u5229\u7528\u901a\u9053\u95f4\u7684\u76f8\u5173\u6027\u8bad\u7ec3\u51fa\u771f\u6b63\u7684$scale$\u3002\u4e00\u6b21mini-batch\u4e2a\u6837\u672c\u7684$squeeze$\u8f93\u51fa\u5e76\u4e0d\u4ee3\u8868\u901a\u9053\u771f\u5b9e\u8981\u8c03\u6574\u7684$scale$\u503c\uff0c\u771f\u5b9e\u7684scale\u8981\u57fa\u4e8e\u5168\u90e8\u6570\u636e\u96c6\u6765\u8bad\u7ec3\u5f97\u51fa\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u5355\u4e2abatch\u3002\\n\\n\u8fd8\u6709\u4e00\u4e2a\u5173\u952e\u95ee\u9898\u662f\uff1a**\u5b9e\u9645\u4e0a\uff0c\u5355\u7eaf\u901a\u8fc7\u5377\u79ef\u8bad\u7ec3\u51fa\u7684\u6743\u503c\u4e5f\u6709\u7c7b\u4f3c$scale$\u7684\u6210\u5206\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u5165\u8fd9\u4e2a\u901a\u9053\u76f8\u5173\u6027\u7684\u8bbe\u8ba1\u5462**\uff1fSENet\u8fd9\u6837\u8bbe\u8ba1\u662f\u4e3a\u4e86**\u6392\u9664\u7a7a\u95f4\u4e0a\u7684\u5e72\u6270**\u3002\u5728\u7ecf\u8fc7GAP\u540e\uff0c\u67d0\u4e00\u4e2achannel\u4e0a\u5177\u6709\u7684\u7a7a\u95f4\u4fe1\u606f\u88ab\u538b\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u4ece\u800c\u5931\u53bb\u4e86\u7a7a\u95f4\u76f8\u5173\u6027\uff0c\u4e5f\u5c31\u6392\u9664\u4e86\u7a7a\u95f4\u4e0a\u7684\u5e72\u6270\u3002\\n\\n## Summary\\n\\nSENet\u7684\u8bbe\u8ba1\u517c\u987e\u4e86\u7a7a\u95f4\u76f8\u5173\u6027\uff08\u901a\u8fc71/8\u4e0b\u91c7\u6837\u7684\u5377\u79ef\uff09\u548c\u901a\u9053\u76f8\u5173\u6027\uff08\u901a\u8fc7Excitation\u7684\u8bbe\u8ba1\uff09\u3002\u8fd9\u79cd\u8bbe\u8ba1\u628a\u91cd\u8981\u901a\u9053\u7684\u7279\u5f81\u5f3a\u5316\uff0c\u975e\u91cd\u8981\u901a\u9053\u7684\u7279\u5f81\u5f31\u5316\uff0c\u5f97\u5230\u4e86\u5f88\u597d\u7684\u6548\u679c\uff0c\u8fd9\u662f\u4e00\u79cd\u5168\u65b0\u7684\u601d\u8def\uff0c\u5728\u8fd9\u4e2a\u65b9\u5411\u4e0a\u5c06\u6765\u53ef\u80fd\u4f1a\u6709\u66f4\u591a\u7684\u6210\u679c\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5728\u5f53\u65f6\u4ea7\u751f\u4e86\u975e\u5e38\u5927\u7684\u8fdb\u6b65\uff0c\u8bc1\u660e\u4e86\u901a\u9053\u76f8\u5173\u6027\u7684\u91cd\u8981\u6027\u3002\\n\\n\u8fd9\u79cd\u8bbe\u8ba1\u4e5f\u80fd\u5f88\u8f7b\u6613\u5730\u8fd0\u7528\u5230\u5176\u4ed6\u7f51\u7edc\u4e2d\uff1a\\n\\n![image-20210703230727261](./src/Squeeze-and-Excitation-Networks/image-20210703230727261.png)\\n\\n\u4f8b\u5982\uff0c\u5728\u4e0a\u56fe\u4e2d\uff0c\u5de6\u4fa7\u662fSE-Inception\u7684\u7ed3\u6784\uff0c\u5373Inception\u6a21\u5757\u548cSENet\u7ec4\u548c\u5728\u4e00\u8d77\uff1b\u53f3\u4fa7\u662fSE-ResNet\uff0cResNet\u548cSENet\u7684\u7ec4\u5408\uff0c\u8fd9\u79cd\u7ed3\u6784scale\u653e\u5230\u4e86\u6b8b\u5dee\u7684\u76f4\u8fde\u76f8\u52a0\u4e4b\u524d\u3002"},{"id":"/[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation","metadata":{"permalink":"/blog/[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation.md","source":"@site/blog/[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation.md","title":"BiSeNet - Bilateral Segmentation Network for Real-time Semantic Segmentation","description":"BiSeNet\u7684\u76ee\u6807\u662f\u66f4\u5feb\u901f\u7684\u5b9e\u65f6\u8bed\u4e49\u5206\u5272\u3002\u5728\u8bed\u4e49\u5206\u5272\u4efb\u52a1\u4e2d\uff0c\u7a7a\u95f4\u5206\u8fa8\u7387\u548c\u611f\u53d7\u91ce\u5f88\u96be\u4e24\u5168\uff0c\u5c24\u5176\u662f\u5728\u5b9e\u65f6\u8bed\u4e49\u5206\u5272\u7684\u60c5\u51b5\u4e0b\uff0c\u73b0\u6709\u65b9\u6cd5\u901a\u5e38\u662f\u5229\u7528\u5c0f\u7684\u8f93\u5165\u56fe\u50cf\u6216\u8005\u8f7b\u91cf\u4e3b\u5e72\u6a21\u578b\u5b9e\u73b0\u52a0\u901f\u3002\u4f46\u662f\u5c0f\u56fe\u50cf\u76f8\u8f83\u4e8e\u539f\u56fe\u50cf\u7f3a\u5931\u4e86\u5f88\u591a\u7a7a\u95f4\u4fe1\u606f\uff0c\u800c\u8f7b\u91cf\u7ea7\u6a21\u578b\u5219\u7531\u4e8e\u88c1\u526a\u901a\u9053\u800c\u635f\u5bb3\u4e86\u7a7a\u95f4\u4fe1\u606f\u3002BiSegNet\u6574\u5408\u4e86Spatial Path (SP) \u548c Context Path (CP)\u5206\u522b\u7528\u6765\u89e3\u51b3\u7a7a\u95f4\u4fe1\u606f\u7f3a\u5931\u548c\u611f\u53d7\u91ce\u7f29\u5c0f\u7684\u95ee\u9898\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"light-weight","permalink":"/blog/tags/light-weight"}],"readingTime":9.905,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"BiSeNet - Bilateral Segmentation Network for Real-time Semantic Segmentation","authors":["visualdust"],"tags":["segmentation","light-weight"]},"prevItem":{"title":"Squeeze-and-Excitation Networks","permalink":"/blog/[23]Squeeze-and-Excitation-Networks"},"nextItem":{"title":"Rethinking BiSeNet For Real-time Semantic Segmentation","permalink":"/blog/[25]Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation"}},"content":"BiSeNet\u7684\u76ee\u6807\u662f\u66f4\u5feb\u901f\u7684\u5b9e\u65f6\u8bed\u4e49\u5206\u5272\u3002\u5728\u8bed\u4e49\u5206\u5272\u4efb\u52a1\u4e2d\uff0c\u7a7a\u95f4\u5206\u8fa8\u7387\u548c\u611f\u53d7\u91ce\u5f88\u96be\u4e24\u5168\uff0c\u5c24\u5176\u662f\u5728\u5b9e\u65f6\u8bed\u4e49\u5206\u5272\u7684\u60c5\u51b5\u4e0b\uff0c\u73b0\u6709\u65b9\u6cd5\u901a\u5e38\u662f\u5229\u7528\u5c0f\u7684\u8f93\u5165\u56fe\u50cf\u6216\u8005\u8f7b\u91cf\u4e3b\u5e72\u6a21\u578b\u5b9e\u73b0\u52a0\u901f\u3002\u4f46\u662f\u5c0f\u56fe\u50cf\u76f8\u8f83\u4e8e\u539f\u56fe\u50cf\u7f3a\u5931\u4e86\u5f88\u591a\u7a7a\u95f4\u4fe1\u606f\uff0c\u800c\u8f7b\u91cf\u7ea7\u6a21\u578b\u5219\u7531\u4e8e\u88c1\u526a\u901a\u9053\u800c\u635f\u5bb3\u4e86\u7a7a\u95f4\u4fe1\u606f\u3002BiSegNet\u6574\u5408\u4e86Spatial Path (SP) \u548c Context Path (CP)\u5206\u522b\u7528\u6765\u89e3\u51b3\u7a7a\u95f4\u4fe1\u606f\u7f3a\u5931\u548c\u611f\u53d7\u91ce\u7f29\u5c0f\u7684\u95ee\u9898\u3002\\n\\n> Semantic segmentation requires both rich spatial information and sizeable receptive field. However, modern approaches usually compromise spatial resolution to achieve real-time inference speed, which leads to poor performance. In this paper, we address this dilemma with a novel Bilateral Segmentation Network (BiSeNet). We first design a Spatial Path with a small stride to preserve the spatial information and generate high-resolution features. Meanwhile, a Context Path with a fast downsampling strategy is employed to obtain sufficient receptive field. On top of the two paths, we introduce a new Feature Fusion Module to combine features efficiently. The proposed architecture makes a right balance between the speed and segmentation performance on Cityscapes, CamVid, and COCO-Stuff datasets. Specifically, for a 2048x1024 input, we achieve 68.4% Mean IOU on the Cityscapes test dataset with speed of 105 FPS on one NVIDIA Titan XP card, which is significantly faster than the existing methods with comparable performance.\\n\\n\u8bba\u6587\u539f\u6587\uff1a[BiSeNet: Bilateral Segmentation Network for Real-time Semantic Segmentation](https://arxiv.org/abs/1808.00897)\u3002\u9605\u8bfb\u540e\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u7bc7\u8bba\u6587\u6709\u5f88\u591a\u601d\u8def\u53d7\u5230[SENet\uff08Squeeze-and-Excitation Networks\uff09](./[23]Squeeze-and-Excitation-Networks)\u7684\u542f\u53d1\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## \u8bbe\u8ba1\u76ee\u7684\u548c\u601d\u8def\\n\\n\u5728\u4ee5\u5f80\u7684\u5de5\u4f5c\u4e2d\uff0c\u4e3a\u4e86\u5bf9\u7f51\u7edc\u8fdb\u884c\u52a0\u901f\u4ee5\u8fbe\u5230\u5b9e\u65f6\u7684\u76ee\u7684\uff0c\u7814\u7a76\u8005\u4eec\u5f80\u5f80\u4f1a\u9009\u62e9\u6298\u4e2d\u7cbe\u5ea6\u4ee5\u6c42\u901f\u5ea6\uff1a\\n\\n1. \u901a\u8fc7\u526a\u88c1\u6216 resize \u6765\u9650\u5b9a\u8f93\u5165\u5927\u5c0f\uff0c\u4ee5\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\u5c3d\u7ba1\u8fd9\u79cd\u65b9\u6cd5\u7b80\u5355\u800c\u6709\u6548\uff0c\u7a7a\u95f4\u7ec6\u8282\u7684\u635f\u5931\u8fd8\u662f\u8ba9\u9884\u6d4b\u6253\u4e86\u6298\u6263\uff0c\u5c24\u5176\u662f\u8fb9\u754c\u90e8\u5206\uff0c\u5bfc\u81f4\u5ea6\u91cf\u548c\u53ef\u89c6\u5316\u7684\u7cbe\u5ea6\u4e0b\u964d\uff1b\\n2. \u901a\u8fc7\u51cf\u5c11\u7f51\u7edc\u901a\u9053\u6570\u91cf\u52a0\u5feb\u5904\u7406\u901f\u5ea6\uff0c\u5c24\u5176\u662f\u5728\u9aa8\u5e72\u6a21\u578b\u7684\u65e9\u671f\u9636\u6bb5\uff0c\u4f46\u662f\u8fd9\u4f1a\u5f31\u5316\u7a7a\u95f4\u4fe1\u606f\u3002\\n3. \u4e3a\u8ffd\u6c42\u6781\u5176\u7d27\u51d1\u7684\u6846\u67b6\u800c\u4e22\u5f03\u6a21\u578b\u7684\u6700\u540e\u9636\u6bb5\uff08\u6bd4\u5982ENet\uff09\u3002\u8be5\u65b9\u6cd5\u7684\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff1a\u7531\u4e8e ENet \u629b\u5f03\u4e86\u6700\u540e\u9636\u6bb5\u7684\u4e0b\u91c7\u6837\uff0c\u6a21\u578b\u7684\u611f\u53d7\u91ce\u4e0d\u8db3\u4ee5\u6db5\u76d6\u5927\u7269\u4f53\uff0c\u5bfc\u81f4\u5224\u522b\u80fd\u529b\u8f83\u5dee\u3002\\n\\n![image-20210704101433666](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704101433666.png)\\n\\n\u4e0a\u56fe\u4e2d\u5de6\u4fa7\u662f\u526a\u88c1\u548cresize\u65b9\u6cd5\u7684\u793a\u610f\uff0c\u53f3\u4fa7\u662f\u8dd1\u53bb\u90e8\u5206\u7ed3\u6784\u6216\u51cf\u5c11\u901a\u9053\u7684\u793a\u610f\u3002\u4e3a\u89e3\u51b3\u4e0a\u8ff0\u7a7a\u95f4\u4fe1\u606f\u7f3a\u5931\u95ee\u9898\uff0c\u7814\u7a76\u8005\u666e\u904d\u91c7\u7528 U \u5f62\u7ed3\u6784\u3002\u901a\u8fc7\u878d\u5408 backbone \u7f51\u7edc\u4e0d\u540c\u5c42\u7ea7\u7684\u7279\u5f81\uff0cU \u5f62\u7ed3\u6784\u9010\u6e10\u589e\u52a0\u4e86\u7a7a\u95f4\u5206\u8fa8\u7387\uff0c\u5e76\u586b\u8865\u4e86\u4e00\u4e9b\u9057\u5931\u7684\u7ec6\u8282\u3002\\n\\n![image-20210704102757859](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704102757859.png)\\n\\n\u4e0a\u56fe\u662f\u4e00\u79cd\u5178\u578b\u7684U\u578b\u7ed3\u6784\u3002\u4f46\u662f\uff0c\u8fd9\u4e00\u6280\u672f\u6709\u4e24\u4e2a\u5f31\u70b9\uff1a\\n\\n1. \u7531\u4e8e\u9ad8\u5206\u8fa8\u7387\u7279\u5f81\u56fe\u4e0a\u989d\u5916\u8ba1\u7b97\u91cf\u7684\u5f15\u5165\uff0c\u5b8c\u6574\u7684 U \u5f62\u7ed3\u6784\u62d6\u6162\u4e86\u6a21\u578b\u7684\u901f\u5ea6\u3002\\n2. \u7edd\u5927\u591a\u6570\u7531\u4e8e\u88c1\u526a\u8f93\u5165\u6216\u8005\u51cf\u5c11\u7f51\u7edc\u901a\u9053\u800c\u4e22\u5931\u7684\u7a7a\u95f4\u4fe1\u606f\u65e0\u6cd5\u901a\u8fc7\u5f15\u5165\u6d45\u5c42\u800c\u8f7b\u6613\u590d\u539f\u3002\u6362\u8a00\u4e4b\uff0cU \u5f62\u7ed3\u6784\u9876\u591a\u662f\u4e00\u4e2a\u5907\u9009\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848\u3002\\n\\n\u57fa\u4e8e\u4e0a\u8ff0\u89c2\u5bdf\uff0c\u672c\u6587\u63d0\u51fa\u4e86\u53cc\u5411\u5206\u5272\u7f51\u7edcBiSeNet\uff08Bilateral Segmentation Network\uff09\uff0c\u5176\u4e3b\u8981\u7684\u6539\u8fdb\u6709\uff1a\\n\\n- \u540c\u65f6\u4f7f\u7528Spatial Path (SP) \u548c Context Path (CP)\uff0c\u517c\u987e\u7a7a\u95f4\u5c5e\u6027\u548c\u611f\u53d7\u91ce\\n- \u63d0\u51fa\u7279\u5f81\u878d\u5408\u6a21\u5757\uff08Feature Fusion Module/FFM\uff09\u7528\u4e8e\u66f4\u597d\u5730\u878d\u5408SP\u548cCP\u7684\u7279\u5f81\\n- \u63d0\u51fa\u6ce8\u610f\u529b\u4f18\u5316\u6a21\u5757\uff08Attention Refinement Module/ARM\uff09\\n\\n\u4e0b\u56fe\u4e3aBiSeNet\u7684\u7ed3\u6784\u793a\u610f\u56fe\uff1a\\n\\n![image-20210704102830425](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704102830425.png)\\n\\n\u5b83\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1aSpatial Path (SP) \u548c Context Path (CP)\u3002\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u5206\u522b\u7528\u6765\u89e3\u51b3\u7a7a\u95f4\u4fe1\u606f\u7f3a\u5931\u548c\u611f\u53d7\u91ce\u7f29\u5c0f\u7684\u95ee\u9898\u3002\u5bf9\u4e8e Spatial Path\uff0c\u8bba\u6587\u4e2d\u53ea\u53e0\u52a0\u4e09\u4e2a\u5377\u79ef\u5c42\u4ee5\u83b7\u5f97 1/8 \u7279\u5f81\u56fe\uff0c\u5176\u4fdd\u7559\u7740\u4e30\u5bcc\u7684\u7a7a\u95f4\u7ec6\u8282\u3002\u5bf9\u4e8e Context Path\uff0c\u672c\u6587\u5728[Xception](//todo)\u5c3e\u90e8\u9644\u52a0\u4e00\u4e2a\u5168\u5c40\u5e73\u5747\u6c60\u5316\u5c42\uff0c\u5176\u4e2d\u611f\u53d7\u91ce\u662f backbone \u7f51\u7edc\u7684\u6700\u5927\u503c\u3002\\n\\n![image-20210704103510162](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704103510162.png)\\n\\n\u4e0a\u56fe\u662f\u4ee5\u4e0a\u4e09\u79cd\u601d\u8def\u653e\u5728\u4e00\u8d77\u7684\u5bf9\u6bd4\u56fe\u3002\u5728\u8ffd\u6c42\u66f4\u5feb\u3001\u66f4\u597d\u6a21\u578b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bba\u6587\u4e5f\u7814\u7a76\u4e86\u4e24\u4e2a\u7ec4\u4ef6\u7684\u878d\u5408\uff0c\u4ee5\u53ca\u6700\u540e\u9884\u6d4b\u7684\u4f18\u5316\uff0c\u5e76\u5206\u522b\u63d0\u51fa\u7279\u5f81\u878d\u5408\u6a21\u5757FFM\uff08Feature Fusion Module\uff09\u548c\u6ce8\u610f\u529b\u4f18\u5316\u6a21\u5757ARM\uff08Attention Refinement Module\uff09\uff0c\u8fd9\u4e24\u4e2a\u6a21\u5757\u8fdb\u4e00\u6b65\u4ece\u6574\u4f53\u4e0a\u63d0\u5347\u4e86\u8bed\u4e49\u5206\u5272\u7684\u7cbe\u5ea6\u3002\\n\\n---\\n\\n## \u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\\n\\n![image-20210704141854108](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704141854108.png)\\n\\n\u4e0a\u56fe\u662fBiSeNet\u7684\u7f51\u7edc\u7ed3\u6784\u3002\u53ef\u4ee5\u770b\u5230\u5176\u91cd\u8981\u7ec4\u6210\u90e8\u5206Spatial Path\u3001Context Path\u4ee5\u53ca\u4e24\u4e2a\u4f18\u5316\u6a21\u5757Attention Refinement\uff08\u539f\u56fe\u4e2d\u6253\u9519\u4e86\u5355\u8bcd\uff09\u3001Feature Fusion Module\u3002\\n\\n### Spatial Path\\n\\n\u5728\u8bed\u4e49\u5206\u5272\u4efb\u52a1\u4e2d\uff0c\u7a7a\u95f4\u5206\u8fa8\u7387\u548c\u611f\u53d7\u91ce\u5f88\u96be\u4e24\u5168\uff0c\u5c24\u5176\u662f\u5728\u5b9e\u65f6\u8bed\u4e49\u5206\u5272\u7684\u60c5\u51b5\u4e0b\uff0c\u73b0\u6709\u65b9\u6cd5\u901a\u5e38\u662f\u5229\u7528\u5c0f\u7684\u8f93\u5165\u56fe\u50cf\u6216\u8005\u8f7b\u91cf\u4e3b\u5e72\u6a21\u578b\u5b9e\u73b0\u52a0\u901f\u3002\u4f46\u662f\u5c0f\u56fe\u50cf\u76f8\u8f83\u4e8e\u539f\u56fe\u50cf\u7f3a\u5931\u4e86\u5f88\u591a\u7a7a\u95f4\u4fe1\u606f\uff0c\u800c\u8f7b\u91cf\u7ea7\u6a21\u578b\u5219\u7531\u4e8e\u88c1\u526a\u901a\u9053\u800c\u635f\u5bb3\u4e86\u7a7a\u95f4\u4fe1\u606f\u3002\\n\\n![image-20210704144527369](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704144527369.png)\\n\\n\u5728\u539f\u8bba\u6587\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u6301\u5145\u8db3\u7684\u7a7a\u95f4\u4fe1\u606f\uff0cSpatial Path\u5305\u542b\u4e09\u4e2a\u5c42\uff0c\u6bcf\u4e2a\u5c42\u7531\u4e00\u4e2a\u6b65\u957f\u4e3a2\u7684\u5377\u79ef\u548c\u4e00\u4e2aBN\u5c42\u4ee5\u53ca\u4e00\u4e2a\u975e\u7ebf\u6027\u7684ReLU\u6fc0\u6d3b\u5c42\u6784\u6210\u3002\u8fd9\u6837\u505a\u4f7f\u5f97Spatial Path\u4ec5\u5bf9\u539f\u56fe\u8fdb\u884c1/8\u4e0b\u91c7\u6837\uff0c\u4fdd\u7559\u4e86\u4e30\u5bcc\u7684\u7a7a\u95f4\u4fe1\u606f\u3002\\n\\n### Context Path\\n\\n\u5728\u8bed\u4e49\u5206\u5272\u4efb\u52a1\u4e2d\uff0c\u611f\u53d7\u91ce\u5bf9\u4e8e\u6027\u80fd\u8868\u73b0\u81f3\u5173\u91cd\u8981\u3002\u4e3a\u589e\u5927\u611f\u53d7\u91ce\uff0c\u4e00\u4e9b\u65b9\u6cd5\u5229\u7528\u91d1\u5b57\u5854\u6c60\u5316\u6a21\u5757\uff0c\u91d1\u5b57\u5854\u578b\u7a7a\u6d1e\u6c60\u5316\uff08ASPP\uff09\u6216\u4f7f\u7528\\"large kernel\\"\uff0c\u4f46\u662f\u8fd9\u4e9b\u64cd\u4f5c\u6bd4\u8f83\u8017\u8d39\u8ba1\u7b97\u548c\u5185\u5b58\uff0c\u5bfc\u81f4\u901f\u5ea6\u6162\uff0c\u8fd9\u4e9b\u7f3a\u70b9\u5728\u5b9e\u65f6\u7684\u4efb\u52a1\u4e0a\u5c24\u4e3a\u7a81\u51fa\u3002\u51fa\u4e8e\u8f83\u5927\u611f\u53d7\u91ce\u548c\u8f83\u9ad8\u8ba1\u7b97\u6548\u7387\u517c\u5f97\u7684\u8003\u91cf\uff0c\u672c\u6587\u63d0\u51fa Context Path\uff0c\u5b83\u5145\u5206\u5229\u7528\u8f7b\u91cf\u7ea7\u6a21\u578b\u4e0e\u5168\u5c40\u5e73\u5747\u6c60\u5316\u4ee5\u63d0\u4f9b\u5927\u611f\u53d7\u91ce\u3002\\n\\n![image-20210704145307009](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704145307009.png)\\n\\n\u5728\u672c\u5de5\u4f5c\u4e2d\uff0c\u8f7b\u91cf\u7ea7\u6a21\u578b\uff0c\u6bd4\u5982 Xception\uff0c\u53ef\u4ee5\u5feb\u901f\u4e0b\u91c7\u6837\u7279\u5f81\u56fe\u4ee5\u83b7\u5f97\u5927\u611f\u53d7\u91ce\uff0c\u7f16\u7801\u9ad8\u5c42\u8bed\u4e49\u8bed\u5883\u4fe1\u606f\u3002\u63a5\u7740\uff0c\u672c\u6587\u5728\u8f7b\u91cf\u7ea7\u6a21\u578b\u672b\u7aef\u6dfb\u52a0\u4e00\u4e2a\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff0c\u901a\u8fc7\u5168\u5c40\u8bed\u5883\u4fe1\u606f\u63d0\u4f9b\u4e00\u4e2a\u6700\u5927\u611f\u53d7\u91ce\u3002\u5728\u8f7b\u91cf\u7ea7\u6a21\u578b\u4e2d\uff0c\u672c\u6587\u501f\u52a9 U \u5f62\u7ed3\u6784\u878d\u5408\u6700\u540e\u4e24\u4e2a\u9636\u6bb5\u7684\u7279\u5f81\uff0c\u4f46\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684 U \u5f62\u7ed3\u6784\u3002\u56fe 2(c) \u5168\u9762\u5c55\u793a\u4e86 Context Path\u3002\\n\\n#### Attention Refinement Module (ARM)\\n\\n\u5728 Context Path \u4e2d\uff0c\u672c\u6587\u63d0\u51fa\u4e00\u4e2a\u72ec\u7279\u7684\u6ce8\u610f\u529b\u4f18\u5316\u6a21\u5757\uff0c\u4ee5\u4f18\u5316\u6bcf\u4e00\u9636\u6bb5\u7684\u7279\u5f81\uff1a\\n\\n![image-20210704145528506](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704145528506.png)\\n\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0cARM \u501f\u52a9\u5168\u5c40\u5e73\u5747\u6c60\u5316\u6355\u83b7\u5168\u5c40\u8bed\u5883\u5e76\u8ba1\u7b97\u6ce8\u610f\u529b\u5411\u91cf\u4ee5\u6307\u5bfc\u7279\u5f81\u5b66\u4e60\u3002\u8fd9\u4e00\u8bbe\u8ba1\u53ef\u4ee5\u4f18\u5316 Context Path \u4e2d\u6bcf\u4e00\u9636\u6bb5\u7684\u8f93\u51fa\u7279\u5f81\uff0c\u65e0\u9700\u4efb\u4f55\u4e0a\u91c7\u6837\u64cd\u4f5c\u5373\u53ef\u8f7b\u6613\u6574\u5408\u5168\u5c40\u8bed\u5883\u4fe1\u606f\uff0c\u56e0\u6b64\uff0c\u5176\u8ba1\u7b97\u6210\u672c\u51e0\u4e4e\u53ef\u5ffd\u7565\u3002\\n\\n### Feature Fusion Module (FFM)\\n\\n\u5728\u7279\u5f81\u8868\u793a\u7684\u5c42\u9762\u4e0a\uff0c\u4e24\u8def\u7f51\u7edc\u7684\u7279\u5f81\u5e76\u4e0d\u76f8\u540c\u3002\u56e0\u6b64\u4e0d\u80fd\u7b80\u5355\u5730\u52a0\u6743\u8fd9\u4e9b\u7279\u5f81\u3002\u7531 Spatial Path\u6355\u83b7\u7684\u7a7a\u95f4\u4fe1\u606f\u7f16\u7801\u4e86\u7edd\u5927\u591a\u6570\u7684\u4e30\u5bcc\u7ec6\u8282\u4fe1\u606f\u3002\u800c Context Path \u7684\u8f93\u51fa\u7279\u5f81\u4e3b\u8981\u7f16\u7801\u8bed\u5883\u4fe1\u606f\u3002\u6362\u8a00\u4e4b\uff0cSpatial Path \u7684\u8f93\u51fa\u7279\u5f81\u662f\u4f4e\u5c42\u7ea7\u7684\uff0cContext Path \u7684\u8f93\u51fa\u7279\u5f81\u662f\u9ad8\u5c42\u7ea7\u7684\u3002\u56e0\u6b64\uff0c\u672c\u6587\u63d0\u51fa\u4e00\u4e2a\u72ec\u7279\u7684\u7279\u5f81\u878d\u5408\u6a21\u5757\u4ee5\u878d\u5408\u8fd9\u4e9b\u7279\u5f81\u3002\\n\\n![image-20210704150819590](./src/BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation/image-20210704150819590.png)\\n\\n\u5728\u7279\u5f81\u7684\u4e0d\u540c\u5c42\u7ea7\u7ed9\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u672c\u6587\u9996\u5148\u8fde\u63a5 Spatial Path \u548c Context Path \u7684\u8f93\u51fa\u7279\u5f81\uff1b\u63a5\u7740\uff0c\u901a\u8fc7\u6279\u5f52\u4e00\u5316\u5e73\u8861\u7279\u5f81\u7684\u5c3a\u5ea6\u3002\u4e0b\u4e00\u6b65\uff0c\u50cf[SENet](./[23]Squeeze-and-Excitation-Networks)\u4e00\u6837\uff0c\u628a\u76f8\u8fde\u63a5\u7684\u7279\u5f81\u6c60\u5316\u4e3a\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\uff0c\u5e76\u8ba1\u7b97\u4e00\u4e2a\u6743\u91cd\u5411\u91cf\u3002\u8fd9\u4e00\u6743\u91cd\u5411\u91cf\u53ef\u4ee5\u91cd\u65b0\u52a0\u6743\u7279\u5f81\uff0c\u8d77\u5230\u7279\u5f81\u9009\u62e9\u548c\u7ed3\u5408\u7684\u4f5c\u7528\u3002\u4e0a\u56fe\u5c55\u793a\u4e86\u8fd9\u4e00\u8bbe\u8ba1\u7684\u7ec6\u8282\u3002\\n\\n## \u5b9e\u9a8c\\n\\n\u5b9e\u9a8c\u90e8\u5206\u8bf7\u81ea\u884c\u9605\u8bfb\u539f\u8bba\u6587\u3002"},{"id":"/[25]Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation","metadata":{"permalink":"/blog/[25]Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[25]Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation.md","source":"@site/blog/[25]Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation.md","title":"Rethinking BiSeNet For Real-time Semantic Segmentation","description":"Mingyuan Fan, Shenqi Lai, Junshi Huang, Xiaoming Wei, Zhenhua Chai, Junfeng Luo, Xiaolin Wei","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"light-weight","permalink":"/blog/tags/light-weight"},{"label":"inductive-bias","permalink":"/blog/tags/inductive-bias"}],"readingTime":16.505,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Rethinking BiSeNet For Real-time Semantic Segmentation","authors":["visualdust"],"tags":["segmentation","light-weight","inductive-bias"]},"prevItem":{"title":"BiSeNet - Bilateral Segmentation Network for Real-time Semantic Segmentation","permalink":"/blog/[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation"},"nextItem":{"title":"CBAM - Convolutional Block Attention Module","permalink":"/blog/[26]CBAM-Convolutional-Block-Attention-Module"}},"content":"[Mingyuan Fan](https://arxiv.org/search/cs?searchtype=author&query=Fan%2C+M), [Shenqi Lai](https://arxiv.org/search/cs?searchtype=author&query=Lai%2C+S), [Junshi Huang](https://arxiv.org/search/cs?searchtype=author&query=Huang%2C+J), [Xiaoming Wei](https://arxiv.org/search/cs?searchtype=author&query=Wei%2C+X), [Zhenhua Chai](https://arxiv.org/search/cs?searchtype=author&query=Chai%2C+Z), [Junfeng Luo](https://arxiv.org/search/cs?searchtype=author&query=Luo%2C+J), [Xiaolin Wei](https://arxiv.org/search/cs?searchtype=author&query=Wei%2C+X)\\n\\n![image-20210719132305088](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210719132305088.png)\\n\\n> BiSeNet has been proved to be a popular two-stream network for real-time segmentation. However, its principle of adding an extra path to encode spatial information is time-consuming, and the backbones borrowed from pretrained tasks, e.g., image classification, may be inefficient for image segmentation due to the deficiency of task-specific design. To handle these problems, we propose a novel and efficient structure named Short-Term Dense Concatenate network (STDC network) by removing structure redundancy. Specifically, we gradually reduce the dimension of feature maps and use the aggregation of them for image representation, which forms the basic module of STDC network. In the decoder, we propose a Detail Aggregation module by integrating the learning of spatial information into low-level layers in single-stream manner. Finally, the low-level features and deep features are fused to predict the final segmentation results. Extensive experiments on Cityscapes and CamVid dataset demonstrate the effectiveness of our method by achieving promising trade-off between segmentation accuracy and inference speed. On Cityscapes, we achieve 71.9% mIoU on the test set with a speed of 250.4 FPS on NVIDIA GTX 1080Ti, which is 45.2% faster than the latest methods, and achieve 76.8% mIoU with 97.0 FPS while inferring on higher resolution images.\\n\\n\u5728\u9605\u8bfb\u672c\u6587\u524d\uff0c\u8bf7\u5148\u9605\u8bfb[BiSeNet: Bilateral Segmentation Network for Real-time Semantic Segmentation](./[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation)\u3002\\n\\n\u8be5\u8bba\u6587\u63d0\u51fa[BiSeNet](./[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation)\u88ab\u8bc1\u660e\u662f\u4e0d\u9519\u7684\u53cc\u8def\u5b9e\u65f6\u5206\u5272\u7f51\u7edc\u3002\u4e0d\u8fc7\uff0c\u5728BiSeNet\u4e2d\uff1a\\n\\n- \u5355\u72ec\u4e3a\u7a7a\u95f4\u4fe1\u606f\u5f00\u8f9f\u4e00\u6761\u7f51\u7edc\u8def\u5f84\u5728\u8ba1\u7b97\u4e0a\u975e\u5e38\u7684\u8017\u65f6\\n- \u7528\u4e8espatial path\u7684\u9884\u8bad\u7ec3\u8f7b\u91cf\u7ea7\u9aa8\u5e72\u7f51\u7edc\u4ece\u5176\u4ed6\u4efb\u52a1\u4e2d\uff08\u4f8b\u5982\u5206\u7c7b\u548c\u76ee\u6807\u68c0\u6d4b\uff09\u76f4\u63a5\u62ff\u6765\uff0c\u7528\u5728\u5206\u5272\u4e0a\u6548\u7387\u4e0d\u5f88\u9ad8\u3002\\n\\n\u56e0\u6b64\uff0c\u4f5c\u8005\u63d0\u51faShort-Term Dense Concatenate network\uff08**STDC** network\uff09\u6765\u4ee3\u66ffBiSeNet\u4e2d\u7684context path\u3002\u5176\u6838\u5fc3\u5185\u5bb9\u662f\u79fb\u9664\u5197\u4f59\u7684\u7ed3\u6784\uff0c\u8fdb\u4e00\u6b65\u52a0\u901f\u5206\u5272\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u672c\u6587\u5c06\u7279\u5f81\u56fe\u7684\u7ef4\u6570\u9010\u6e10\u964d\u4f4e\uff0c\u5e76\u5c06\u7279\u5f81\u56fe\u805a\u5408\u8d77\u6765\u8fdb\u884c\u56fe\u50cf\u8868\u5f81\uff0c\u5f62\u6210\u4e86STDC\u7f51\u7edc\u7684\u57fa\u672c\u6a21\u5757\u3002\u540c\u65f6\uff0c\u5728decoder\u4e2d\u63d0\u51faDetail Aggregation module\u5c06\u7a7a\u95f4\u4fe1\u606f\u7684\u5b66\u4e60\u4ee5single-stream\u65b9\u5f0f\u96c6\u6210\u5230low-level layers\u4e2d\uff0c\u7528\u4e8e\u4ee3\u66ffBiSeNet\u4e2d\u7684spatial path\u3002\u6700\u540e\uff0c\u5c06low-level features\u548cdeep features\u878d\u5408\u4ee5\u9884\u6d4b\u6700\u7ec8\u7684\u5206\u5272\u7ed3\u679c\u3002\\n\\n![image-20210719100139212](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210719100139212.png)\\n\\n\u6ce8\uff1a\u4e0a\u56fe\u4e2d\u7ea2\u8272\u865a\u7ebf\u6846\u4e2d\u7684\u90e8\u5206\u662f\u65b0\u63d0\u51fa\u7684STDC network\uff1bARM\u8868\u793a\u6ce8\u610f\u529b\u4f18\u5316\u6a21\u5757\uff08Attention Refinement Module\uff09\uff0cFFM\u8868\u793a\u7279\u5f81\u878d\u5408\u6a21\u5757\uff08Feature Fusion Module\uff09\u3002\u8fd9\u4e24\u4e2a\u6a21\u5757\u662f\u5728[BiSeNet: Bilateral Segmentation Network for Real-time Semantic Segmentation](./[24]BiSeNet-Bilateral-Segmentation-Network-for-Real-time-Semantic-Segmentation)\u5c31\u5df2\u7ecf\u5b58\u5728\u7684\u8bbe\u8ba1\u3002\\n\\n\u6709\u5174\u8da3\u8bf7\u9605\u8bfb\u539f\u8bba\u6587[Rethinking BiSeNet For Real-time Semantic Segmentation](https://arxiv.org/abs/2104.13188)\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## Related Works\\n\\n### Efficient Network Designs\\n\\n\u6a21\u578b\u8bbe\u8ba1\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u4e2d\u8d77\u7740\u91cd\u8981\u4f5c\u7528\u3002 SqueezeNet\u4f7f\u7528Fire Module\u548c\u67d0\u4e9b\u7b56\u7565\u6765\u51cf\u5c11\u6a21\u578b\u53c2\u6570\uff1bMobileNet V1\u5229\u7528\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u6765\u51cf\u5c11\u63a8\u7406\u9636\u6bb5\u7684 FLOP\u3002 ResNet\u91c7\u7528\u6b8b\u5dee\u6784\u5efa\u5c42\u6765\u5b9e\u73b0\u51fa\u8272\u7684\u6027\u80fd\uff1b MobileNet V2 \u548c ShuffleNet \u4f7f\u7528Group Convolution \u6765\u964d\u4f4e\u8ba1\u7b97\u6210\u672c\uff0c\u540c\u65f6\u4fdd\u6301\u53ef\u6bd4\u7684\u51c6\u786e\u6027\u3002\u4e0d\u8fc7\u4e0a\u8ff0\u7f51\u7edc\u662f\u9488\u5bf9\u56fe\u50cf\u5206\u7c7b\u4efb\u52a1\u8bbe\u8ba1\u7684\u3002\u5bf9\u4e8e\u5b9e\u65f6\u5206\u5272\u4efb\u52a1\uff0c**\u9700\u8981\u65b0\u7684\u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u6216\u4f18\u5316**\u3002\\n\\n### Generic Semantic Segmentation\\n\\n\u4f20\u7edf\u7684\u5206\u5272\u7b97\u6cd5\uff0c\u4f8b\u5982\u9608\u503c\u9009\u62e9\u3001\u8d85\u5206\u8fa8\uff0c\u5229\u7528\u624b\u5de5\u5236\u4f5c\u7684\u7279\u5f81\u6765\u5206\u914d\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u7ea7\u6807\u7b7e\u3002 \u968f\u7740\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u53d1\u5c55\uff0c\u57fa\u4e8e\u5168\u5377\u79ef\u7f51\u7edc\u7684\u65b9\u6cd5\u5728\u5404\u79cd\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u53d6\u5f97\u4e86\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u6027\u80fd\u3002 Deeplabv3\u91c7\u7528\u4e86\u4e00\u4e2a\u591a\u5c3a\u5ea6\u7a7a\u95f4\u7684\u7684\u7a7a\u95f4\u91d1\u5b57\u5854\u6c60\u5316\u6a21\u5757\u6765\u6355\u83b7\u591a\u5c3a\u5ea6\u4e0a\u4e0b\u6587\u3002 SegNet\u5229\u7528\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ed3\u6784\u6765\u6062\u590d\u9ad8\u5206\u8fa8\u7387\u7279\u5f81\u56fe\u3002PSPNet\u8bbe\u8ba1\u4e86\u91d1\u5b57\u5854\u6c60\u5316\u6765\u6355\u83b7\u81a8\u80c0\u4e3b\u5e72\u4e0a\u7684\u5c40\u90e8\u548c\u5168\u5c40\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002 \u4f7f\u7528\u7a7a\u6d1e\u5377\u79ef\u7684\u4e3b\u5e72\u7f51\u7edc\u548c\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7ed3\u6784\u90fd\u53ef\u4ee5\u540c\u65f6\u5b66\u4e60\u4f4e\u7ea7\u7ec6\u8282\u548c\u9ad8\u7ea7\u8bed\u4e49\u3002 \u7136\u800c\uff0c\u7531\u4e8e\u9ad8\u5206\u8fa8\u7387\u7279\u5f81\u548c\u590d\u6742\u7684\u7f51\u7edc\u8fde\u63a5\uff0c\u5927\u591a\u6570\u65b9\u6cd5\u9700\u8981\u5927\u91cf\u7684\u8ba1\u7b97\u6210\u672c\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u9ad8\u6548\u4e14\u6709\u6548\u7684\u67b6\u6784\uff0c\u53ef\u4ee5\u5728\u901f\u5ea6\u548c\u51c6\u786e\u6027\u4e4b\u95f4\u53d6\u5f97\u826f\u597d\u7684\u5e73\u8861\u3002\\n\\n### Real-time Semantic Segmentation\\n\\n\u6700\u8fd1\uff0c\u5b9e\u65f6\u8bed\u4e49\u5206\u5272\u7684\u5b9e\u9645\u5e94\u7528\u6b63\u5728\u5feb\u901f\u589e\u957f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6709\u4e24\u79cd\u4e3b\u6d41\u53ef\u4ee5\u8bbe\u8ba1\u6709\u6548\u7684\u5206\u5272\u65b9\u6cd5\uff1a\\n\\n1. \u8f7b\u91cf\u7ea7\u4e3b\u5e72\u3002 DFANet \u91c7\u7528\u8f7b\u91cf\u7ea7\u4e3b\u5e72\u6765\u964d\u4f4e\u8ba1\u7b97\u6210\u672c\uff0c\u5e76\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u8de8\u7ea7\u7279\u5f81\u805a\u5408\u6a21\u5757\u6765\u63d0\u9ad8\u6027\u80fd\u3002 DFNet [21] \u5229\u7528\u201c\u504f\u5e8f\u526a\u679d\u201d\u7b97\u6cd5\u83b7\u5f97\u8f7b\u91cf\u7ea7\u4e3b\u5e72\u548c\u9ad8\u6548\u89e3\u7801\u5668\u3002\\n2. \u591a\u5206\u652f\u67b6\u6784\u3002 ICNet [31] \u8bbe\u8ba1\u4e86\u591a\u5c3a\u5ea6\u56fe\u50cf\u7ea7\u8054\u4ee5\u5b9e\u73b0\u826f\u597d\u7684\u901f\u5ea6-\u7cbe\u5ea6\u6743\u8861\u3002 BiSeNetV1 [28] \u548c BiSeNetV2 [27] \u5206\u522b\u4e3a\u4f4e\u7ea7\u7ec6\u8282\u548c\u9ad8\u7ea7\u4e0a\u4e0b\u6587\u4fe1\u606f\u63d0\u51fa\u4e86\u53cc\u6d41\u8def\u5f84\u3002\\n\\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u9ad8\u6548\u7684\u8f7b\u91cf\u7ea7\u4e3b\u5e72\u6765\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u611f\u53d7\u91ce\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5355\u8def\u5f84\u89e3\u7801\u5668\uff0c\u5b83\u4f7f\u7528\u8be6\u7ec6\u4fe1\u606f\u6307\u5bfc\u6765\u5b66\u4e60\u4f4e\u7ea7\u7ec6\u8282\u3002\\n\\n## Short-Term Dense Concatenate network\uff08STDC network\uff09\\n\\nBiSeNet V1 \u5229\u7528\u8f7b\u91cf\u7ea7\u4e3b\u5e72\uff0c\u4f8b\u5982 ResNet18 \u548cspatial path\u4f5c\u4e3a\u7f16\u7801\u7f51\u7edc\uff0c\u5f62\u6210\u53cc\u6d41\u5206\u5272\u67b6\u6784\u3002\\n\\n![image-20210726213138378](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210726213138378.png)\\n\\n\u4f5c\u8005\u63d0\u5230\uff0c\u989d\u5916\u4f7f\u7528\u4e00\u4e2a\u7f51\u7edc\u5206\u652f\u5bf9low level\u7684feature\u8fdb\u884c\u7f16\u7801\u5728\u8bbe\u8ba1\u4e0a\u6709\u5197\u4f59\uff0c\u4f7f\u6574\u4e2a\u7f16\u7801\u7f51\u7edc\u6548\u7387\u4f4e\u4e0b\u3002\u6240\u4ee5\uff0c\u4f5c\u8005\u53d6\u6d88\u4e86Spatial path\uff0c\u4f7f\u7528\u4e00\u4e2aDetail Guidance\u6307\u5bfc\u4e3b\u5e72\u7f51\u7edc\u8fdb\u884c\u5b66\u4e60\u3002\u800c\u8fd9\u4e2a\u88ab\u6307\u5bfc\u7684\u4e3b\u5e72\u7f51\u7edc\u5c31\u662fSTDC Network\u3002\\n\\n![image-20210720115455260](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210720115455260.png)\\n\\n\u4e0a\u56fe\u4e2d(a)\u4e3a\u8fd9\u7bc7\u8bba\u6587\u4e2dEncoder\u7684\u8bbe\u8ba1\uff0c(b)\u662fBiSeNet\u4e2dcontext path\u7684\u8bbe\u8ba1\u3002(a)\u4e2d\u7ea2\u8272\u6807\u6ce8\u90e8\u5206\u662fSTDC  Network\u7684\u8bbe\u8ba1\uff0c\u5176\u529f\u80fd\u662f\u4ee3\u66ff(b)\u79f0\u4e3a\u4e3b\u5e72\u7f51\u7edc\u3002\\n\\n\u4e0b\u56fe\u662fSTDC Network\u7684\u57fa\u672c\u6784\u6210\uff1a\\n\\n![image-20210720120046524](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210720120046524.png)\\n\\n\u4e0a\u56fe\u4e2d\uff0c(a)\u4e3aSTDC\u7f51\u7edc\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u7531\u5f88\u591a\u4e2aStage\u7ec4\u6210\uff0c\u6bcf\u4e2aStage\u53c8\u5305\u542b\u82e5\u5e72STDC Module\uff1b(b)\u4e3aSTDC Module\uff1b(c)\u4e3astride = 2\u7684STDC Module\u3002\u5176\u4e2d\uff0c$M$\u8868\u793a\u8f93\u5165\u7684\u7ef4\u5ea6\uff0c$N$\u200b\u200b\u200b\u8868\u793a\u8f93\u51fa\u7684\u7ef4\u5ea6\u3002ConvX\u8868\u793aConv-BN-ReLU\u7684\u8fde\u7eed\u7ed3\u6784\uff0c\u6bcf\u4e2a\u7f51\u7edc\u7684\u5757\u662f\u7531\u4e0d\u540ckernal size\u7684ConvX\u3002\\n\\n\u5bf9\u4e8eSTDC\u7f51\u7edc\uff0cStage1~Stage5\u8fdb\u884c\u4e0b\u91c7\u6837\u548c\u7f16\u7801\uff1bStage6\u7528\u4e8e\u5206\u7c7b\u3002\\n\\n\u5bf9\u4e8e\u6bcf\u4e2aStage\uff0cStage1\u548cStage2\u4f7f\u7528\u5355\u7eaf\u7684\u5377\u79ef\u8fdb\u884c\u7f16\u7801\uff0c\u800cStage3~Stage5\u4f7f\u7528STDC Module\u8fdb\u884c\u7f16\u7801\u3002\\n\\n\u5bf9\u4e8e\u6bcf\u4e2aSTDC\u6a21\u5757\uff08STDC Module\uff09\uff0c\u5176\u8f93\u5165\u901a\u9053\u6570\u4e3a$M$\uff0c\u5176\u8f93\u51fa\u901a\u9053\u6570\u4e3a$N$\uff0c\u5176\u7531\u82e5\u5e72\u4e2aBlock\u7ec4\u6210\uff0c\u7b2c$i$\u200b\u4e2aBlock\u7684\u8f93\u51fa\u53ef\u4ee5\u8868\u793a\u6210\uff1a\\n$$\\nx_i = ConvX_i(x_{i-1},k_i)\\n$$\\n\u5176\u4e2d$X_{i-1}$\u8868\u793a$x_i$\u8868\u793a\u7b2c$i$\u4e2a\u5757\u7684\u8f93\u51fa\uff0c$x_{i-1}$\u8868\u793a\u7b2c$i$\u4e2a\u5757\u7684\u8f93\u5165\uff08\u4e5f\u5c31\u662f\u7b2c$i-1$\u4e2a\u5757\u7684\u8f93\u51fa\uff09\uff0c$k_i$\u200b\u8868\u793a\u5377\u79ef\u5c42\u7684kernal size\u3002\\n\\nSTDC\u6a21\u5757\u4e2d\uff0c\u7b2c\u4e00\u4e2ablock\u7684kernel size\u4e3a1\uff0c\u5176\u4f59\u7b80\u5355\u8bbe\u7f6e\u4e3a3\u3002\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5728\u7f51\u7edc\u7684\u6bcf\u4e2a\u9636\u6bb5\uff0c\u7279\u5f81\u56fe\u7684channel\u6570\u91cf\u4ee5$\\\\frac{N}{2}$\u3001$\\\\frac{N}{4}$\u3001$\\\\frac{N}{8}$\u9010\u6e10\u4e0b\u964d\u3002\u4f5c\u8005\u8ba4\u4e3a\u5728\u56fe\u50cf\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u968f\u7740\u7f51\u7edc\u5c42\u6570\u7684\u589e\u52a0\u9010\u6e10\u589e\u52a0\u7279\u5f81\u56fe\u7684\u901a\u9053\u6570\u662f\u4e00\u79cd\u5e38\u89c1\u505a\u6cd5\u3002\u4f46\u662f\u5728\u8bed\u4e49\u5206\u5272\u4efb\u52a1\u4e2d\uff0c\u5728\u8f83\u6d45\u7684\u7f51\u7edc\u5c42\uff0c\u5f80\u5f80\u9700\u8981\u8db3\u591f\u591a\u7684\u901a\u9053\u6570\u4fdd\u8bc1\u611f\u77e5\u7684\u7ec6\u7c92\u5ea6\uff1b\u800c\u5728\u611f\u53d7\u91ce\u8f83\u5927\u7684\u6df1\u5c42\u7f51\u7edc\u4e2d\uff0c\u5e94\u8be5\u66f4\u52a0\u6ce8\u91cd\u9ad8\u5c42\u7ea7\u4fe1\u606f\u7684\u5f52\u7eb3\uff0c\u4e00\u76f4\u589e\u52a0\u901a\u9053\u7684\u6570\u91cf\u4f1a\u5bfc\u81f4\u4fe1\u606f\u7684\u5197\u4f59\u3002\u6211\u4eec\u4e13\u6ce8\u4e8e\u53ef\u6269\u5c55\u7684\u611f\u53d7\u91ce\u548c\u591a\u5c3a\u5ea6\u4fe1\u606f\u3002\\n\\n\u4e3a\u4e86\u5c06\u4f4e\u5c42\u7ea7\u7684\u7ec6\u7c92\u5ea6\u7279\u5f81\u8f6c\u9012\u81f3\u7f51\u7edc\u672b\u7aefSTDC\u4e2d\u4ec5\u6709Block2\u4e2d\u8fdb\u884c\u4e86\u4e0b\u91c7\u6837\uff08stride=2\uff09\uff1b\u5e76\u4e14STDC\u4e2d\u5b58\u5728\u591a\u6761skip-path\u3002\u5728\u56fe\u4e2d\u6700\u540e\u7684Fusion\u4e2d\uff0c\u5404\u4e2a\u9636\u6bb5\u7684\u7279\u5f81\u4f1a\u901a\u8fc7concatenation\u8fdb\u884c\u7279\u5f81\u62fc\u63a5\uff1a\\n$$\\nX_{output} = F(x_1,x_2,.....,x_n)\\n$$\\n\u5176\u4e2d$F$\u662f\u4efb\u4f55\u53ef\u4ee5\u8fdb\u884c\u7279\u5f81\u878d\u5408\u7684\u65b9\u6cd5\u3002\u5728\u62fc\u63a5\u4e4b\u524d\uff0c\u4f1a\u901a\u8fc7$3\\\\times 3$\u5e73\u5747\u6c60\u5316\u4e0b\u91c7\u6837\u5230\u76f8\u540c\u7684\u7a7a\u95f4\u5927\u5c0f\u3002\\n\\n| STDC module | Block1      | Block2      | Block3      | Block4        | Fusion                                             |\\n| ----------- | ----------- | ----------- | ----------- | ------------- | -------------------------------------------------- |\\n| RF(S = 1)   | $1\\\\times 1$ | $3\\\\times 3$ | $5\\\\times 5$ | $7\\\\times 7$   | $1\\\\times 1$\u3001$3\\\\times 3$\u3001$5\\\\times 5$\u3001$7\\\\times 7$ |\\n| RF(S = 2)   | $1\\\\times 1$ | $3\\\\times 3$ | $7\\\\times 7$ | $11\\\\times 11$ | $3\\\\times 3$\u3001$7\\\\times 7$\u3001$11\\\\times 11$            |\\n\\n\u4e0a\u8868\u4e3aSTDC\u4e2d\u5404\u4e2a\u9636\u6bb5\u7684\u611f\u53d7\u91ce\u5927\u5c0f\u3002$X_{output}$\u662f\u591a\u5c3a\u5ea6\u878d\u5408\u7684\u7279\u5f81\u3002\\n\\n\u8fd9\u79cdSTDC\u7684\u8bbe\u8ba1\u6709\u5982\u4e0b\u7684\u4f18\u70b9\uff1a\\n\\n1. \u968f\u7740\u7f51\u7edc\u5c42\u6570\u52a0\u6df1\uff0c\u5377\u79ef\u6838\u7684shape\u5448\u51e0\u4f55\u7ea7\u6570\u4e0b\u964d\uff0c\u8ba1\u7b97\u590d\u6742\u5ea6\u663e\u8457\u6027\u964d\u4f4e\u3002\\n2. \u6700\u7ec8\u7684\u8f93\u51fa\u4e2d\u878d\u5408\u4e86\u6765\u81ea\u4e0d\u540c\u9636\u6bb5Block\u7684\u7279\u5f81\uff0c\u96c6\u6210\u4e86\u6765\u81ea\u53ef\u53d8\u5927\u5c0f\u7684\u7279\u5f81\u56fe\u3002\\n\\n\u5982\u679c\u7ed9\u5b9a\u4e86\u8f93\u5165\u5927\u5c0f$M$\u548c\u8f93\u51fa\u5927\u5c0f$N$\uff0c\u53ef\u4ee5\u7b97\u51faSTDC\u7684\u53c2\u6570\u91cf\u662f\uff1a\\n$$\\nS_{param} = M\\\\times 1\\\\times 1 \\\\times \\\\frac{N}{2^1} + \\\\sum_{i=2}^{n-1}\\\\frac{N}{2^{i-1}}\\\\times 3 \\\\times 3 \\\\times \\\\frac{N}{2^i}+\\\\frac{N}{2^{n-1}}\\\\\\\\\\n=\\\\frac{NM}{2}+\\\\frac{9N^2}{2^3}\\\\times \\\\sum_{i=0}^{n-3}\\\\frac{1}{2^{2i}}+\\\\frac{9N^2}{2^{2n-2}}\\\\\\\\\\n=\\\\frac{NM}{2}+\\\\frac{3N^2}{2}\\\\times (1+\\\\frac{1}{2^{2n-3}})\\n$$\\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684$M$\u548c$N$\u200b\uff0cSTDC\u7684\u53c2\u6570\u91cf\u51e0\u4e4e\u4e0d\u53d7\u5176\u4ed6\u56e0\u7d20\u7684\u5f71\u54cd\u3002\\n\\n![image-20210726214508297](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210726214508297.png)\\n\\n\u4e0a\u8868\u662fSTDC\u6bcf\u4e2aStage\u8bbe\u8ba1\u7684\u7ec6\u8282\u3002\\n\\n## Detail Ground-truth Generation\\n\\n\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u8ba4\u4e3aBiSeNet\u4e2d\u7684Spatial path\u4ea7\u751f\u4e86\u5927\u91cf\u7684\u5197\u4f59\u8ba1\u7b97\uff0c\u56e0\u6b64\u4f5c\u8005\u8bbe\u8ba1Detail Ground-truth Generation\uff0c\u5c06\u5176\u4f5c\u4e3a\u7f51\u7edc\u5b66\u4e60\u7684\u6307\u5bfc\uff08Detail Guidance\uff09\uff0c\u66ff\u4ee3Spatial path\u7684\u4f5c\u7528\u3002\u8fd9\u6837\u4ee5\u6765\uff0cSpatial path\u88ab\u79fb\u9664\uff0c\u8282\u7ea6\u4e86\u5927\u91cf\u7684\u8ba1\u7b97\u91cf\u3002\\n\\n\u4f5c\u8005\u5c06\u53c2\u4e0e\u8bad\u7ec3\u7684\u6574\u4e2a\u7f51\u7edc\u7ed3\u6784\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\\n\\n- \u5206\u5272\u7f51\u7edc\uff08Network Architecture\uff0c\u56fe\u4e2d\u84dd\u8272\u80cc\u666f\u7684(a)\u90e8\u5206\uff09\\n- Loss\u8ba1\u7b97\u90e8\u5206\uff08Train Loss\uff0c\u56fe\u4e2d\u7eff\u8272\u80cc\u666f(b)\u7684\u90e8\u5206\uff09\\n- \u7ec6\u8282\u7279\u5f81\u62fe\u53d6\u90e8\u5206\uff08Detail Ground-truth Generation\uff0c\u56fe\u4e2d\u7eff\u8272\u80cc\u666f(c)\u90e8\u5206\uff09\\n\\n![image-20210719100139212](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210719100139212.png)\\n\\n\u5728\u6574\u4e2a\u7f51\u7edc\u7ed3\u6784\u56fe\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u90e8\u5206\u7f51\u7edc\u7ed3\u6784\uff08\u7eff\u8272\u80cc\u666f\uff09\u662fTrain-only\u7684\u3002\u4e5f\u5c31\u662f\u8fd9\u4e9b\u7ed3\u6784\u53ea\u5728\u8bad\u7ec3\u4e2d\u51fa\u73b0\uff0c\u800c\u5728\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u3002\u5176\u4e2dDetail Ground-truth Generation\u5c31\u662fTrain-only\u7684\u3002\\n\\n![image-20210720172550752](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210720172550752.png)\\n\\n\u4e0a\u56fe\u662f\u5bf9\u7f51\u7edc\u4f20\u64ad\u8fc7\u7a0b\u7684\u76f4\u89c2\u7406\u89e3\uff0c\u53ef\u4ee5\u770b\u51fa\uff0cDetail Ground-truth Generation\u662f\u4e3aencoder\uff08STDC\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff09\u670d\u52a1\u7684\u3002\u5176\u4e2d\uff0c\u8f93\u51651\u8868\u793a\u539f\u56fe\uff0c\u8f93\u51652\u8868\u793a\u5206\u5272\u7684Ground-truth\u3002\\n\\nDetail Ground-truth Generation\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u7528\u5df2\u77e5\u7684\u56fe\u50cf\u7ec6\u8282\uff08ground truth\uff09\u6765\u5f15\u5bfcSTDC\u7f51\u7edc\u5b66\u4e60\u8fc7\u7a0b\uff0c\u4ee5\u4f7f\u5176\u5177\u6709\u4e0e\u6dfb\u52a0spatial path\u4e00\u6837\u7684\u826f\u597d\u6548\u679c\u3002\u5176\u5177\u4f53\u6b65\u9aa4\u662f\uff1a\\n\\n1. \u8bfb\u53d6\u6570\u636e\u96c6\u7684Ground-truth\uff0c\u5728Ground-truth\u4e0a\u4f7f\u7528\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u8fdb\u884c\u5377\u79ef\uff0c\u4ea7\u751fDetail Map\u3002\\n2. \u5728STDC\u7f51\u7edc\u7684Stage3\u63d2\u5165\u4e00\u4e2a\u79f0\u4e3aDetail Head\u7684\u6a21\u5757\uff0cDetail Map\u901a\u8fc7\u8be5\u6a21\u5757\u6c47\u5165STDC\u7f51\u7edc\u3002\\n\\n\u5176\u4e2d\u5728\u4e8c\u6b65\u7684Detail Head\u6a21\u5757\u8bbe\u8ba1\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![image-20210720194310086](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210720194310086.png)\\n\\nDetail Head\u662f\u4e00\u4e2aConv-BN-ReLU\u5f62\u7684\u7ed3\u6784\uff0c\u540e\u9762\u63a5\u7eed\u4e00\u4e2a$1\\\\times 1$\u5377\u79ef\u3002\u5728\u5b9e\u9a8c\u4e2d\uff0c\u4f5c\u8005\u8bc1\u660e\u4e86Detail Head\u7684\u8bbe\u8ba1\u80fd\u591f\u6709\u6548\u589e\u5f3a\u7279\u5f81\u3002\\n\\n\u7b2c\u4e00\u6b65\u7528\u4e8e\u4ea7\u751fDetail Map\u7684\u7b97\u5b50\u662f\u4e00\u4e2a\u79f0\u4e3a**\u62c9\u666e\u62c9\u65af\uff08Laplacian\uff09\u7b97\u5b50**\u7684\u7279\u5f81\u63d0\u53d6\u5668\uff1a\\n$$\\n\\\\begin{matrix}\\n-1 & -1 & -1 \\\\\\\\\\n-1 & 8 & -1 \\\\\\\\\\n-1 & -1 & -1\\n\\\\end{matrix} \\\\tag{1}\\n$$\\n\u62c9\u666e\u62c9\u65af\uff08Laplace\uff09\u7b97\u5b50\u4f5c\u4e3a\u8fb9\u7f18\u68c0\u6d4b\u4e4b\u4e00\uff0c\u548cSobel\u7b97\u5b50\u4e00\u6837\u4e5f\u662f\u5de5\u7a0b\u6570\u5b66\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u79ef\u5206\u53d8\u6362\u3002\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u7528\u5728\u56fe\u50cf\u4e0a\u5c31\u5c5e\u4e8e\u7a7a\u95f4\u9510\u5316\u6ee4\u6ce2\u64cd\u4f5c\u3002\\n\\n\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u901a\u8fc7\u4e09\u4e2a\u4e0d\u540c\u6b65\u5e45\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u5377\u79ef\u5f97\u5230\u591a\u5c3a\u5ea6\u7684detail\uff0c\u5728\u518d\u5c06\u5b83\u4eec\u4e0a\u91c7\u6837\u5230\u539f\u6765\u7684\u5927\u5c0f\uff0c\u518d\u901a\u8fc7$1\\\\times 1$\u5377\u79ef\u5c06\u5b83\u4eec\u878d\u5408\uff08\u8fd9\u91cc\u539f\u6587\u662fdynamic re-wegihting\uff09\u5f62\u6210\u6700\u7ec8\u7684Detail GT\uff1a\\n\\n![image-20210720172757986](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210720172757986.png)\\n\\n\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u548c\u5176\u4ed6\u7684\u4e00\u4e9b\u8fb9\u7f18\u68c0\u6d4b\u7b97\u5b50\u5177\u6709\u533a\u522b\u3002Prewitt\u548cSobel\u4e24\u4e2a\u51fa\u540d\u7684\u7b97\u5b50\u90fd\u662f\u901a\u8fc7\u6c42\u4e00\u9636\u5bfc\u6570\u6765\u8ba1\u7b97\u68af\u5ea6\u7684\uff0c\u901a\u5e38\u7528\u4e8e\u8fb9\u7f18\u7ebf\u7684\u68c0\u6d4b\u3002\u5bf9\u4e8e\u7ec6\u8282\u7279\u5f81\uff0c\u9664\u4e86\u68c0\u6d4b\u7ebf\uff0c\u6709\u65f6\u5019\u4e5f\u9700\u8981\u68c0\u6d4b\u7279\u6b8a\u70b9\uff0c\u8457\u540d\u7684\u5c31\u662f\u62c9\u666e\u62c9\u65af\uff08Laplacian\uff09\u7b97\u5b50\u3002\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u5728\u8fb9\u7f18\u68c0\u6d4b\u7684\u5e94\u7528\u4e2d\u5e76\u4e0d\u5c40\u9650\u4e8e\u6c34\u5e73\u65b9\u5411\u6216\u5782\u76f4\u65b9\u5411\uff0c\u8fd9\u662fLaplacian\u4e0esoble\u7684\u533a\u522b\u3002\\n\\n![img](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/v2-dbe4e9f6c8049721f462c70af98fcc63_b.jpg)\\n\\n\u4e0a\u56fe\u4e3a\u56fe\u50cf\u8fb9\u7f18\u7684\u4fe1\u53f7\u7ecf\u8fc7\u4e00\u9636\u548c\u4e8c\u9636\u6c42\u5bfc\u540e\u4fe1\u53f7\u53d8\u5316\u7684\u76f4\u89c2\u8868\u793a\u3002\u5bf9\u56fe\u50cf\u6c42\u4e24\u6b21\u5bfc\u6570\uff0c\u516c\u5f0f\u5982\u4e0b\uff1a\\n$$\\n\\\\begin{aligned}\\n&\\\\nabla^2f(x,y) = \\\\frac{\\\\partial^2 f}{\\\\partial x^2}+\\\\frac{\\\\partial^2 f}{\\\\partial y^2}\\\\\\\\\\n&=\\\\{f(x+1,y)+f(x-1,y)-2f(x,y)\\\\} + \\\\{f(x,y+1)+f(x,y-1)-2f(x,y)\\\\}\\\\\\\\\\n&=f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x,y-1)-4f(x,y)\\n\\\\end{aligned}\\n$$\\n\u4e0b\u56fe\u662f\u4f5c\u8005\u5bf9\u7f51\u7edc\u5404\u4e2a\u9636\u6bb5\u7684\u7279\u5f81\u7684\u53ef\u89c6\u5316\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u901a\u8fc7\u8fd9\u79cd\u8bbe\u8ba1\uff0c\u88ab\u79fb\u9664Spatial path\u540e\uff0c\u524d\u7f6e\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u4f9d\u7136\u80fd\u8f83\u597d\u5730\u5173\u6ce8\u7a7a\u95f4\u7ec6\u8282\u3002 \\n\\n![image-20210720173553120](./src/Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation/image-20210720173553120.png)\\n\\n## Detail Loss\\n\\n\u7531\u4e8e\u5728\u4e00\u5e45\u56fe\u7247\u4e2d\uff0c\u4ee3\u8868\u7ec6\u8282\u7684\u50cf\u7d20\u6570\u91cf\u6bd4\u8f83\u5c11\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u753b\u9762\u4e2d\u7684\u5b9e\u4f53\uff0c\u8fb9\u7f18\u7684\u50cf\u7d20\u603b\u6bd4\u5185\u90e8\u7684\u50cf\u7d20\u5c11\u3002\u6240\u4ee5\uff0cdetail-prediction\u662f\u4e00\u4e2a\u7c7b\u522b\u4e0d\u5747\u8861\u7684\u95ee\u9898\uff0c\u5177\u6709\u6743\u91cd\u7684\u4ea4\u53c9\u71b5\uff08cross-entropy\uff09\u603b\u662f\u4f1a\u5bfc\u81f4\u7c97\u7565\u7684\u5b66\u4e60\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u53c2\u8003Learning to predict crisp boundaries\uff08ECCV\u7684\u4e00\u7bc7\u6587\u7ae0\uff09\uff0c\u8fd9\u91cc\u4f5c\u8005\u4f7f\u7528\u4e86\u4e8c\u5143\u4ea4\u53c9\u71b5\uff08binary cross-entropy\uff09+ \u9ab0\u5b50\u635f\u5931\uff08dice loss\uff09\u6765\u5bf9\u5b66\u4e60\u8fdb\u884c\u4f18\u5316\u3002\\n\\n\u9ab0\u5b50\u635f\u5931\u80fd\u591f\u8861\u91cfprediction\u548cground-truth\u4e4b\u95f4\u7684\u4ea4\u53e0\u6c34\u5e73\uff0c\u5e76\u4e14\u5b83\u5bf9\u524d\u666f/\u80cc\u666f\u7684\u50cf\u7d20\u4e0d\u654f\u611f\u2014\u2014\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u7f13\u89e3\u7c7b\u4e0d\u5e73\u8861\u95ee\u9898\u3002 \u56e0\u6b64\u5bf9\u4e8e\u9ad8\u5ea6\u4e3a $H$ \u5bbd\u5ea6\u4e3a $W$ \u7684\u9884\u6d4b\u7ec6\u8282\u56fe\uff08predicted detail map\uff09\uff0c\u7ec6\u8282\u635f\u5931$L_{detail}$ \u7684\u516c\u5f0f\u5982\u4e0b\uff1a\\n$$\\nL_{detail}(p_d,g_d) = L_{dice}(p_d,g_d)+L_{bce}(p_d,g_d)\\n$$\\n\u4e0a\u5f0f\u4e2d$p_d\\\\in\\\\R^{H\\\\times W}$\u4ee3\u8868\u9884\u6d4b\u7684\u7ec6\u8282\u56fe\uff08predicted detail map\uff09\uff0c$g_d\\\\in\\\\R^{H\\\\times W}$\u8868\u793a\u76f8\u5e94\u7684Ground-truth\u3002$L_{bce}$\u8868\u793a\u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931\u516c\u5f0f\uff0c$L_{dice}$\u8868\u793a\u9ab0\u5b50\u635f\u5931\u7684\u516c\u5f0f\u3002\u5176\u4e2d\u9ab0\u5b50\u635f\u5931\u7684\u516c\u5f0f\u5982\u4e0b\uff1a\\n$$\\nL_{dice}(p_d,g_d) = 1-\\\\frac{2\\\\sum_i^{H\\\\times W}p_d^ig_d^i + \\\\epsilon}{\\\\sum_i^{H\\\\times W}(p_d^i)^2+\\\\sum_i^{H\\\\times W}(g_d^i)^2 + \\\\epsilon}\\n$$\\n\u4e0a\u5f0f\u4e2d $i$ \u8868\u793a\u7b2c$i$\u4e2a\u50cf\u7d20\uff0c$\\\\epsilon$\u8868\u793a\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\u9879\uff08\u4e3a\u4e86\u907f\u514d\u9664\u6570\u662f0\uff09.\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d$\\\\epsilon = 1$\u3002"},{"id":"/[26]CBAM-Convolutional-Block-Attention-Module","metadata":{"permalink":"/blog/[26]CBAM-Convolutional-Block-Attention-Module","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[26]CBAM-Convolutional-Block-Attention-Module.md","source":"@site/blog/[26]CBAM-Convolutional-Block-Attention-Module.md","title":"CBAM - Convolutional Block Attention Module","description":"image-20210723203210974","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"}],"readingTime":6.185,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"CBAM - Convolutional Block Attention Module","authors":["visualdust"],"tags":["attention-mechanism"]},"prevItem":{"title":"Rethinking BiSeNet For Real-time Semantic Segmentation","permalink":"/blog/[25]Rethinking-BiSeNet-For-Real-time-Semantic-Segmentation"},"nextItem":{"title":"Non-local Neural Networks","permalink":"/blog/[27]Non-local-Neural-Networks"}},"content":"![image-20210723203210974](./src/CBAM-Convolutional-Block-Attention-Module/image-20210723203210974.png)\\n\\n[Sanghyun Woo](https://arxiv.org/search/cs?searchtype=author&query=Woo%2C+S), [Jongchan Park](https://arxiv.org/search/cs?searchtype=author&query=Park%2C+J), [Joon-Young Lee](https://arxiv.org/search/cs?searchtype=author&query=Lee%2C+J), [In So Kweon](https://arxiv.org/search/cs?searchtype=author&query=Kweon%2C+I+S)\\n\\n> We propose Convolutional Block Attention Module (CBAM), a simple yet effective attention module for feed-forward convolutional neural networks. Given an intermediate feature map, our module sequentially infers attention maps along two separate dimensions, channel and spatial, then the attention maps are multiplied to the input feature map for adaptive feature refinement. Because CBAM is a lightweight and general module, it can be integrated into any CNN architectures seamlessly with negligible overheads and is end-to-end trainable along with base CNNs. We validate our CBAM through extensive experiments on ImageNet-1K, MS~COCO detection, and VOC~2007 detection datasets. Our experiments show consistent improvements in classification and detection performances with various models, demonstrating the wide applicability of CBAM. The code and models will be publicly available.\\n\\nCBAM\u662f\u4e00\u7bc7\u7ed3\u5408\u4e86\u901a\u9053\u6ce8\u610f\u529b\u548c\u7a7a\u95f4\u6ce8\u610f\u529b\u7684\u8bba\u6587\u3002\u5b83\u901a\u8fc7\u5728\u540c\u4e2a\u6a21\u5757\u4e2d\u53e0\u52a0\u901a\u9053\u6ce8\u610f\u529b\u548c\u7a7a\u95f4\u6ce8\u610f\u529b\u8fbe\u5230\u4e86\u826f\u597d\u7684\u6548\u679c\u3002\u4e3a\u4e86\u63d0\u5347 CNN \u6a21\u578b\u7684\u8868\u73b0\uff0c\u9664\u4e86\u5bf9\u7f51\u7edc\u7684\u6df1\u5ea6\u3001\u5bbd\u5ea6\u4e0b\u624b\uff0c\u8fd8\u6709\u4e00\u4e2a\u65b9\u5411\u662f\u6ce8\u610f\u529b\u3002\u6ce8\u610f\u529b\u4e0d\u4ec5\u8981\u544a\u8bc9\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u54ea\u91cc\uff0c\u63d0\u9ad8\u5173\u6ce8\u70b9\u7684\u8868\u8fbe\u3002 \u6211\u4eec\u7684\u76ee\u6807\u662f\u901a\u8fc7\u4f7f\u7528\u6ce8\u610f\u673a\u5236\u6765\u589e\u52a0\u8868\u73b0\u529b\uff0c\u5173\u6ce8\u91cd\u8981\u7279\u5f81\u5e76\u6291\u5236\u4e0d\u5fc5\u8981\u7684\u7279\u5f81\u3002\\n\\n\u4e3a\u4e86\u5f3a\u8c03\u7a7a\u95f4\u548c\u901a\u9053\u8fd9\u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u6709\u610f\u4e49\u7279\u5f81\uff0c\u4f5c\u8005\u4f9d\u6b21\u5e94\u7528\u901a\u9053\u548c\u7a7a\u95f4\u6ce8\u610f\u6a21\u5757\uff0c\u6765\u5206\u522b\u4f18\u5316\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u901a\u9053\u548c\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u5b66\u4e60\u80fd\u529b\u3002\u4f5c\u8005\u5c06\u6ce8\u610f\u529b\u8fc7\u7a0b\u5206\u4e3a\u901a\u9053\u548c\u7a7a\u95f4\u4e24\u4e2a\u72ec\u7acb\u7684\u90e8\u5206\uff0c\u8fd9\u6837\u505a\u4e0d\u4ec5\u53ef\u4ee5\u8282\u7ea6\u53c2\u6570\u548c\u8ba1\u7b97\u529b\uff0c\u800c\u4e14\u4fdd\u8bc1\u4e86\u5176\u53ef\u4ee5\u4f5c\u4e3a\u5373\u63d2\u5373\u7528\u7684\u6a21\u5757\u96c6\u6210\u5230\u73b0\u6709\u7684\u7f51\u7edc\u67b6\u6784\u4e2d\u53bb\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## Channel Attention Module\uff08\u901a\u9053\u6ce8\u610f\u529b\uff09\\n\\n\u5173\u4e8e\u901a\u9053\u6ce8\u610f\u529b\u7684\u76f8\u5173\u8bbe\u8ba1\u7ec6\u8282\u8bf7\u53c2\u8003[Squeeze-and-Excitation Networks (SENet)](./[23]Squeeze-and-Excitation-Networks)\u3002\u5728\u8fd9\u91cc\u4e0d\u8fdb\u884c\u975e\u5e38\u8be6\u7ec6\u7684\u8bbe\u8ba1\u3002\u7279\u5f81\u7684\u6bcf\u4e00\u4e2a\u901a\u9053\u90fd\u4ee3\u8868\u7740\u4e00\u4e2a\u4e13\u95e8\u7684\u68c0\u6d4b\u5668\uff0c\u56e0\u6b64\uff0c\u901a\u9053\u6ce8\u610f\u529b\u662f\u5173\u6ce8\u4ec0\u4e48\u6837\u7684\u7279\u5f81\u662f\u6709\u610f\u4e49\u7684\u3002\u4e3a\u4e86\u6c47\u603b\u7a7a\u95f4\u7279\u5f81\uff0c\u4f5c\u8005\u91c7\u7528\u4e86\u5168\u5c40\u5e73\u5747\u6c60\u5316\u548c\u6700\u5927\u6c60\u5316\u4e24\u79cd\u65b9\u5f0f\u6765\u5206\u522b\u5229\u7528\u4e0d\u540c\u7684\u4fe1\u606f\u3002\\n\\n![image-20210723194442312](./src/CBAM-Convolutional-Block-Attention-Module/image-20210723194442312.png)\\n\\n\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u4f7f\u7528Global Average Pool\u548cMax Pool\u5171\u7528\u6784\u9020Channel wise\u7684\u6ce8\u610f\u529b\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u8f93\u5165\u662f\u4e00\u4e2a $H\\\\times W\\\\times C$\u7684\u7279\u5f81 $F$\uff0c\u6211\u4eec\u5148\u5206\u522b\u8fdb\u884c\u4e00\u4e2a\u7a7a\u95f4\u7684\u5168\u5c40\u5e73\u5747\u6c60\u5316\u548c\u6700\u5927\u6c60\u5316\u5f97\u5230\u4e24\u4e2a$1\\\\times 1\\\\times C$\u7684\u901a\u9053\u63cf\u8ff0\u3002\u63a5\u7740\uff0c\u518d\u5c06\u5b83\u4eec\u5206\u522b\u9001\u5165\u4e00\u4e2a\u4e24\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u7b2c\u4e00\u5c42\u795e\u7ecf\u5143\u4e2a\u6570\u4e3a$C/r$\uff0c\u6fc0\u6d3b\u51fd\u6570\u4e3a $ReLU$\uff0c\u7b2c\u4e8c\u5c42\u795e\u7ecf\u5143\u4e2a\u6570\u4e3a\u3002\u6ce8\u610f\uff0c\u5b83\u4eec\u4f7f\u7528\u5171\u4eab\u7684\u53c2\u6570\u5efa\u7acb\u901a\u9053\u76f8\u5173\u6027\u3002\u5c06\u5f97\u5230\u7684\u901a\u9053\u63cf\u8ff0\u4e58\u4ee5\u8f93\u5165\u7279\u5f81$F$\u5373\u53ef\u5f97\u5230\u52a0\u5165\u4e86\u901a\u9053\u76f8\u5173\u6027\u7684\u7279\u5f81\u3002\\n\\n\u76f8\u8f83\u4e8e\u539f\u672c\u7684[SENet](./[23]Squeeze-and-Excitation-Networks)\uff0c\u672c\u6587\u540c\u65f6\u4f7f\u7528Global Average Pooling\u548cMax Pooling\u3002\u5728\u540e\u7eed\u7684\u5b9e\u9a8c\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u901a\u9053\u6ce8\u610f\u529b\u6a21\u5757\u4e2d\uff0c\u540c\u65f6\u5f15\u5165\u6700\u5927\u6c60\u5316\u548c\u5e73\u5747\u6c60\u5316\u53ef\u4ee5\u5f97\u5230\u6700\u597d\u7684\u6548\u679c\u3002\\n\\n## Spatial Attention Module\uff08\u7a7a\u95f4\u6ce8\u610f\u529b\uff09\\n\\n![image-20210723194510586](./src/CBAM-Convolutional-Block-Attention-Module/image-20210723194510586.png)\\n\\n\u4e0e\u901a\u9053\u6ce8\u610f\u529b\u76f8\u4f3c\uff0c\u7ed9\u5b9a\u4e00\u4e2a $H\\\\times W\\\\times C$ \u7684\u7279\u5f81 $F$\uff0c\u5148\u5206\u522b\u8fdb\u884c\u4e00\u4e2a\u901a\u9053\u7ef4\u5ea6\u7684\u5e73\u5747\u6c60\u5316\u548c\u6700\u5927\u6c60\u5316\u5f97\u5230\u4e24\u4e2a $H\\\\times W\\\\times 1$ \u7684\u901a\u9053\u63cf\u8ff0\uff0c\u5e76\u5c06\u8fd9\u4e24\u4e2a\u63cf\u8ff0\u6309\u7167\u901a\u9053\u62fc\u63a5\u5728\u4e00\u8d77\u3002\u7ecf\u8fc7\u4e00\u4e2a $7\\\\times 7$ \u7684\u5377\u79ef\u5c42\uff0c\u6fc0\u6d3b\u51fd\u6570\u4e3a $Sigmoid$\uff0c\u5f97\u5230\u6743\u91cd\u7cfb\u6570 $M_s$\u3002\u5c06\u6743\u91cd\u7cfb\u6570\u548c\u7279\u5f81 $F$ \u76f8\u4e58\u5373\u53ef\u5f97\u5230\u52a0\u5165\u4e86\u7a7a\u95f4\u6ce8\u610f\u529b\u7684\u7279\u5f81\u56fe\u3002\\n\\n\u5728\u7a7a\u95f4\u6ce8\u610f\u529b\u6a21\u5757\u4e2d\uff0c\u540c\u65f6\u5f15\u5165\u6700\u5927\u6c60\u5316\u548c\u5e73\u5747\u6c60\u5316\u6bd4\u5229\u7528\u4e00\u4e2a $1\\\\times 1$ \u7684\u5377\u79ef\u8981\u597d\uff0c\u540c\u65f6\uff0c\u5377\u79ef\u5c42\u91c7\u7528 $7\\\\times 7$ \u7684\u5377\u79ef\u6838\u8981\u4f18\u4e8e $3\\\\times 3$ \u7684\u5377\u79ef\u6838\u3002\\n\\n## Convolutional Block Attention Module\\n\\n\u901a\u9053\u6ce8\u610f\u529b\u548c\u7a7a\u95f4\u6ce8\u610f\u529b\u8fd9\u4e24\u4e2a\u6a21\u5757\u53ef\u4ee5\u4ee5\u5e76\u884c\u6216\u8005\u987a\u5e8f\u7684\u65b9\u5f0f\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4f46\u662f\u4f5c\u8005\u53d1\u73b0\u987a\u5e8f\u7ec4\u5408\u5e76\u4e14\u5c06\u901a\u9053\u6ce8\u610f\u529b\u653e\u5728\u524d\u9762\u53ef\u4ee5\u53d6\u5f97\u66f4\u597d\u7684\u6548\u679c\u3002\\n\\n![image-20210723194528528](./src/CBAM-Convolutional-Block-Attention-Module/image-20210723194528528.png)\\n\\n\u4e00\u4e2a\u5b8c\u6574\u7684 CBAM \u6a21\u5757\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5176 TensorFlow \u7684\u4e00\u4e2a\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```python\\ndef CBAM(input, reduction):\\n    \\"\\"\\"\\n    @Convolutional Block Attention Module\\n    \\"\\"\\"\\n\\n    _, width, height, channel = input.get_shape()  # (B, W, H, C)\\n\\n    # channel attention\\n    x_mean = tf.reduce_mean(input, axis=(1, 2), keepdims=True)   # (B, 1, 1, C)\\n    x_mean = tf.layers.conv2d(x_mean, channel // reduction, 1, activation=tf.nn.relu, name=\'CA1\')  # (B, 1, 1, C // r)\\n    x_mean = tf.layers.conv2d(x_mean, channel, 1, name=\'CA2\')   # (B, 1, 1, C)\\n\\n    x_max = tf.reduce_max(input, axis=(1, 2), keepdims=True)  # (B, 1, 1, C)\\n    x_max = tf.layers.conv2d(x_max, channel // reduction, 1, activation=tf.nn.relu, name=\'CA1\', reuse=True)\\n    # (B, 1, 1, C // r)\\n    x_max = tf.layers.conv2d(x_max, channel, 1, name=\'CA2\', reuse=True)  # (B, 1, 1, C)\\n\\n    x = tf.add(x_mean, x_max)   # (B, 1, 1, C)\\n    x = tf.nn.sigmoid(x)        # (B, 1, 1, C)\\n    x = tf.multiply(input, x)   # (B, W, H, C)\\n\\n    # spatial attention\\n    y_mean = tf.reduce_mean(x, axis=3, keepdims=True)  # (B, W, H, 1)\\n    y_max = tf.reduce_max(x, axis=3, keepdims=True)  # (B, W, H, 1)\\n    y = tf.concat([y_mean, y_max], axis=-1)     # (B, W, H, 2)\\n    y = tf.layers.conv2d(y, 1, 7, padding=\'same\', activation=tf.nn.sigmoid)    # (B, W, H, 1)\\n    y = tf.multiply(x, y)  # (B, W, H, C)\\n\\n    return y\\n```\\n\\n## Example\\n\\n\u4f7f\u7528\u8be5\u6a21\u5757\u7684\u4f8b\u5b50\uff0c\u5982\u5c06\u5176\u96c6\u6210\u4e8eResNet\u4e2d\uff1a\\n\\n![image-20210723203033736](./src/CBAM-Convolutional-Block-Attention-Module/image-20210723203033736.png)"},{"id":"/[27]Non-local-Neural-Networks","metadata":{"permalink":"/blog/[27]Non-local-Neural-Networks","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[27]Non-local-Neural-Networks.md","source":"@site/blog/[27]Non-local-Neural-Networks.md","title":"Non-local Neural Networks","description":"The non-local block is a popular module for strengthening the context modeling ability of a regular convolutional neural network.","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"non-convolution","permalink":"/blog/tags/non-convolution"}],"readingTime":18.15,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Non-local Neural Networks","authors":["visualdust"],"tags":["attention-mechanism","non-convolution"]},"prevItem":{"title":"CBAM - Convolutional Block Attention Module","permalink":"/blog/[26]CBAM-Convolutional-Block-Attention-Module"},"nextItem":{"title":"Non-local Networks Meet Squeeze-Excitation Networks and Beyond","permalink":"/blog/[28]GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond"}},"content":"> The non-local block is a popular module for strengthening the context modeling ability of a regular convolutional neural network.\\n\\nNon-local\u65e8\u5728\u4f7f\u7528\u5355\u4e2aLayer\u5b9e\u73b0\u957f\u8ddd\u79bb\u7684\u50cf\u7d20\u5173\u7cfb\u6784\u5efa\uff0c\u5c5e\u4e8e\u81ea\u6ce8\u610f\u529b\uff08self-attention\uff09\u7684\u4e00\u79cd\u3002\u5e38\u89c1\u7684CNN\u6216\u662fRNN\u7ed3\u6784\u57fa\u4e8e\u5c40\u90e8\u533a\u57df\u8fdb\u884c\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6bcf\u6b21\u5377\u79ef\u8bd5\u56fe\u5efa\u7acb\u4e00\u5b9a\u533a\u57df\u5185\u50cf\u7d20\u7684\u5173\u7cfb\u3002\u4f46\u8fd9\u79cd\u5173\u7cfb\u7684\u8303\u56f4\u5f80\u5f80\u8f83\u5c0f\uff08\u7531\u4e8e\u5377\u79ef\u6838\u4e0d\u5927\uff09\u3002\\n\\n\u4e3a\u4e86\u5efa\u7acb\u50cf\u7d20\u4e4b\u95f4\u7684\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u56fe\u50cf\u4e2d\u975e\u76f8\u90bb\u50cf\u7d20\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u672c\u6587\u53e6\u8f9f\u8e4a\u5f84\uff0c\u63d0\u51fa\u5229\u7528non-local operations\u6784\u5efanon-local\u795e\u7ecf\u7f51\u7edc\u3002\u8fd9\u7bc7\u8bba\u6587\u901a\u8fc7\u975e\u5c40\u90e8\u64cd\u4f5c\u89e3\u51b3\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6838\u5fc3\u95ee\u9898\uff1a\u6355\u6349\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\u3002\\n\\n> Both convolutional and recurrent operations are building blocks that process one local neighborhood at a time. In this paper, we present non-local operations as a generic family of building blocks for capturing long-range dependencies. Inspired by the classical non-local means method in computer vision, our non-local operation computes the response at a position as a weighted sum of the features at all positions. This building block can be plugged into many computer vision architectures. On the task of video classification, even without any bells and whistles, our non-local models can compete or outperform current competition winners on both Kinetics and Charades datasets. In static image recognition, our non-local models improve object detection/segmentation and pose estimation on the COCO suite of tasks. Code is available at [this https URL](https://github.com/facebookresearch/video-nonlocal-net) .\\n\\n\u672c\u6587\u53e6\u8f9f\u8e4a\u5f84\uff0c\u63d0\u51fa\u5229\u7528non-local operations\u6784\u5efanon-local\u795e\u7ecf\u7f51\u7edc\uff0c\u89e3\u51b3\u4e86\u957f\u8ddd\u79bb\u50cf\u7d20\u4f9d\u8d56\u5173\u7cfb\u7684\u95ee\u9898\u3002\u5f88\u503c\u5f97\u9605\u8bfb[\u8bba\u6587\u539f\u6587](https://arxiv.org/abs/1711.07971)\u3002\u53d7\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7ecf\u5178\u7684\u975e\u5c40\u90e8\u5747\u503c\u65b9\u6cd5\u542f\u53d1\uff0c\u4f5c\u8005\u7684\u975e\u5c40\u90e8\u64cd\u4f5c\u662f\u5c06\u6240\u6709\u4f4d\u7f6e\u5bf9\u4e00\u4e2a\u4f4d\u7f6e\u7684\u7279\u5f81\u52a0\u6743\u548c\u4f5c\u4e3a\u8be5\u4f4d\u7f6e\u7684\u54cd\u5e94\u503c\u3002\u8fd9\u79cd\u975e\u5c40\u90e8\u64cd\u4f5c\u53ef\u4ee5\u5e94\u7528\u4e8e\u591a\u79cd\u8ba1\u7b97\u673a\u89c6\u89c9\u6846\u67b6\u4e2d\uff0c\u5728\u89c6\u9891\u5206\u7c7b\u3001\u76ee\u6807\u5206\u7c7b\u3001\u8bc6\u522b\u3001\u5206\u5272\u7b49\u7b49\u4efb\u52a1\u4e0a\uff0c\u90fd\u6709\u5f88\u597d\u7684\u8868\u73b0\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## Non-local means\uff08\u975e\u5c40\u90e8\u5747\u503c\uff09\\n\\n\u975e\u5c40\u90e8\u5747\u503c\uff08Non-local means\uff09\u8d77\u521d\u662f\u4e00\u79cd\u662f\u4e00\u79cd[\u5f71\u50cf\u964d\u566a](https://zh.wikipedia.org/wiki/\u5f71\u50cf\u964d\u566a)\u7684\u7b97\u6cd5\uff0c**\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5f53\u524d\u50cf\u7d20\u7684\u4f30\u8ba1\u503c\u7531\u56fe\u50cf\u4e2d\u4e0e\u5b83\u5177\u6709\u76f8\u4f3c\u90bb\u57df\u7ed3\u6784\u7684\u50cf\u7d20\u52a0\u6743\u5e73\u5747\u5f97\u5230**\u3002\\n\\n![noisy, non-local means](./src/Non-local-Neural-Networks/sphx_glr_plot_nonlocal_means_001.png)\\n\\n\u7531\u4e8e**\u4e00\u5f20\u56fe\u7247\u4e2d\u6700\u76f8\u4f3c\u7684\u70b9\u4e0d\u4e00\u5b9a\u662f\u8ddd\u79bb\u8fd1\u7684\u70b9**\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u6545\u641c\u5bfb\u6574\u5f20\u56fe\u7247\u4e0a\u76f8\u4f3c\u7684\u70b9\uff0c\u5229\u7528\u5468\u671f\u6027\u91cd\u590d\u51fa\u73b0\u7684\u90e8\u5206\u5982\u6750\u8d28\u7eb9\u7406\u6216\u662f\u4f38\u957f\u7684\u8fb9\u7f18\u7b49\u8fdb\u884c\u964d\u566a\u53ef\u4ee5\u5f97\u5230\u66f4\u597d\u7684\u7ed3\u679c\u3002\u76f8\u8f83\u4e8e\u5c40\u90e8\uff08local\uff09\u7684\u7b97\u6cd5\uff08\u5982[\u9ad8\u65af\u6a21\u7cca](https://zh.wikipedia.org/wiki/\u9ad8\u65af\u6a21\u7cca)\u3001[\u975e\u7b49\u5411\u6027\u6269\u6563](https://zh.wikipedia.org/wiki/\u975e\u7b49\u5411\u6027\u64f4\u6563)\uff09\u53ea\u8003\u8651\u4e86\u6bcf\u4e2a\u70b9\u9644\u8fd1\u7684\u70b9\uff0c\u975e\u5c40\u90e8\u5e73\u5747\u8003\u8651\u4e86\u56fe\u4e0a\u6240\u6709\u7684\u70b9\uff0c\u6545\u79f0\u4e3a\u975e\u5c40\u90e8\u7684\u7b97\u6cd5\u3002\u975e\u5c40\u90e8\u5e73\u5747\u7b97\u6cd5\u5219\u5bf9\u5404\u4e2a\u76ee\u6807\u50cf\u7d20\u5468\u56f4\u5b9a\u4e49\u4e00\u4e2a\u533a\u5757\uff0c\u5e76\u4e14**\u5bf9\u6574\u4e2a\u5f71\u50cf\u7684\u6240\u6709\u50cf\u7d20\u4f9d\u7167\u8be5\u50cf\u7d20\u5468\u56f4\u533a\u5757\u7684\u533a\u5757\u4e0e\u76ee\u6807\u50cf\u7d20\u533a\u5757\u7684\u76f8\u4f3c\u5ea6\u8d4b\u4e88\u6743\u91cd\u3001\u8fdb\u884c\u5e73\u5747**\u3002\\n\\n\u7406\u8bba\u4e0a\uff0c\u8be5\u7b97\u6cd5\u9700\u8981\u5728\u6574\u4e2a\u56fe\u50cf\u8303\u56f4\u5185\u5224\u65ad\u50cf\u7d20\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u5904\u7406\u4e00\u4e2a\u50cf\u7d20\u70b9\u65f6\uff0c\u90fd\u8981\u8ba1\u7b97\u5b83\u4e0e\u56fe\u50cf\u4e2d\u6240\u6709\u50cf\u7d20\u70b9\u95f4\u7684\u76f8\u4f3c\u5ea6\u3002\\n\\n![img](./src/Non-local-Neural-Networks/20150905213634707.png)\\n\\n### \u8fde\u7eed\u7684\u975e\u5c40\u90e8\u5747\u503c\\n\\n\u975e\u5c40\u90e8\u5e73\u5747\u7684\u5b9a\u4e49\u4e3a\uff1a\\n$$\\nNL_{u}(x) = \\\\frac{1}{C(x)}\\\\int_{\\\\Omega}f[d(B_x,B_y)]u(y)dy\\n$$\\n\u5176\u4e2d$u$\u4e3a\u8981\u5904\u7406\u7684\u56fe\u7247\uff0c$\\\\Omega$\u4e3a\u6574\u5f20\u56fe\u7247\u7684\u533a\u57df\uff0c$B_x$\u4e3a\u4ee5$x$\u4e3a\u4e2d\u5fc3\u7684\u4e00\u5757\u533a\u57df\uff0c$d(x,y)$\u4e3a$x$\u4e0e$y$\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff08$d(x,y)= {|x-y|}_2^2$\uff09\uff0c$f$\u662f\u4e00\u4e2a\u9012\u51cf\u51fd\u6570\uff0c$C(x)$\u4e3a\u6807\u51c6\u5316\u56e0\u5b50\uff08$C(x) = \\\\int_{\\\\Omega}{f[d(B_x,B_y)]}dy$\uff09\\n\\n\u6b64\u5f0f\u53ef\u4ee5\u89e3\u91ca\u4e3a\u56fe\u4e0a\u4e00\u70b9$x$\u7ecf\u8fc7\u964d\u566a\u540e\u7684\u503c\u4e3a\u6574\u5f20\u56fe\u7247\u4e0a\u6240\u6709\u70b9\u7684\u52a0\u6743\u5e73\u5747\uff0c\u5176\u4e2d\u6bcf\u4e2a\u70b9\u7684\u6743\u91cd\u4e3a\u8be5\u70b9\u7684\u9644\u8fd1\u533a\u5757\u4e0e$x$\u9644\u8fd1\u533a\u5757\u7684\u76f8\u4f3c\u5ea6\uff08\u5c06\u4e24\u4e2a\u533a\u5757\u5404\u81ea\u7684\u70b9\u4ee5\u76f8\u540c\u7684\u6392\u5217\u89c6\u4e3a\u4e00\u5411\u91cf\uff0c\u8ba1\u7b97\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff09\uff0c\u518d\u7ecf\u8fc7\u4e00\u6307\u6570\u8870\u51cf\u7684\u7684\u51fd\u6570\uff08\u6743\u91cd\u5c06\u843d\u5728(0,1]\u533a\u95f4\uff09\u3002\\n\\n### \u79bb\u6563\u7684\u975e\u5c40\u90e8\u5747\u503c\\n\\n\u4e0a\u8ff0\u7684\u5f0f\u5b50\u6240\u5b9a\u4e49\u7684\u7b97\u6cd5\u4e3a\u8fde\u7eed\u7684\uff0c\u65e0\u6cd5\u5728\u5b9e\u9645\u7684\u6570\u4f4d\u5f71\u50cf\u4e2d\u4f7f\u7528\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u79bb\u6563\u5316\u7248\u672c\u7684non-localoperations\u901a\u7528\u8868\u793a\u4e3a\uff1a\\n$$\\nNL_u[i] = \\\\frac{1}{C(i)}\\\\sum_{j\\\\in\\\\Omega}{w(i,j)g(j)}\\n$$\\n\u5176\u4e2d$u$\u4ee3\u8868\u8981\u5904\u7406\u7684\u56fe\u7247\uff0c$g(x)$\u8868\u793a$x$\u7684\u67d0\u79cd\u7ebf\u6027\u53d8\u6362\uff0c$w(i,j)$\u7528\u4e8e\u8861\u91cf\u4e3a\u4ee5$i,j$\u4e3a\u4e2d\u5fc3\u7684\u70b9\u7684\u533a\u5757\u76f8\u4f3c\u5ea6\uff08\u6216\u8005\u8861\u91cfi\u548cj\u4e4b\u95f4\u7684\u5173\u7cfb\uff09\uff0c\u4f5c\u4e3a\u8ba1\u7b97\u70b9$i$\u5c06\u65e9\u539a\u7684\u503c\u65f6\u70b9$j$\u5bf9\u5e94\u7684\u6743\u91cd\uff08\u5e38\u89c1\u7684\u65b9\u6cd5\u4e3a\u8ba1\u7b97\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff09\uff0c$C(i)$\u4e3a\u6807\u51c6\u5316\u56e0\u5b50\uff08$C(i) = \\\\sum_{i\\\\in\\\\Omega}{w(i,j)}$\uff09\u3002\\n\\n\u5728\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u6211\u5199\u4e0b\u4e00\u4e2a\u5b57\u9762\u610f\u601d\u7684\u516c\u5f0f\uff1as\\n$$\\nNonLocal_{u}(i,j) = \u6807\u51c6\u5316(\\\\sum_{\u6240\u6709j\\\\in\u539f\u56fe} \u70b9j\\\\times \u70b9i\u548c\u70b9j\u7684\u76f8\u4f3c\u5ea6)\\n$$\\n\u4f46\u7531\u4e8e\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u8981\u641c\u5bfb\u6574\u5f20\u56fe\u7247\u4e0a\u5176\u4ed6\u7684\u70b9\u6765\u6bd4\u8f83\u76f8\u4f3c\u5ea6\uff0c\u6545\u8fd0\u7b97\u590d\u6742\u5ea6\u5f80\u5f80\u4f1a\u6bd4\u5c40\u90e8\u7684\u7b97\u6cd5\u9ad8\uff0c\u5f88\u660e\u663e\u8fd9\u4f1a\u5bfc\u81f4\u5f88\u5927\u7684\u8ba1\u7b97\u5f00\u9500\uff0c\u6240\u4ee5\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u4f1a\u8bbe\u5b9a\u4e24\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u7a97\u53e3\uff1a\u641c\u7d22\u7a97\u53e3\uff08$D\\\\times D, D=2*Ds+1$\uff09\u4ee5\u53ca\u90bb\u57df\u7a97\u53e3\uff08$d\\\\times d, d=2*ds+1$\uff09\uff0c\u90bb\u57df\u7a97\u53e3\u5728\u641c\u7d22\u7a97\u53e3\u4e2d\u6ed1\u52a8\uff0c\u6839\u636e\u90bb\u57df\u95f4\u7684\u76f8\u4f3c\u6027\u786e\u5b9a\u50cf\u7d20\u7684\u6743\u503c\u3002\\n\\n\u5982\u6b64\u53ef\u4ee5\u4f7f\u7ecf\u8fc7\u5904\u7406\u7684\u5f71\u50cf\u66f4\u4e3a\u6e05\u6670\uff0c\u5e76\u4e14\u635f\u5931\u8f83\u5c11\u7684\u7ec6\u8282\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f8\u8f83\u4e8elocal\u7684\u7b97\u6cd5\uff0cnon-local\u7684\u65b9\u6cd5\u6ce8\u91cd\u4e2a\u4f53\u548c\u5168\u5c40\u7684\u5173\u7cfb\u3002\\n\\n## \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528Non-Local\\n\\nNon-Local operations\u3001\u5377\u79ef\u4ee5\u53ca\u5168\u8fde\u63a5\u7684\u76ee\u7684\u90fd\u662f\u5efa\u7acb\u67d0\u79cd\u5173\u7cfb\uff08\u5b66\u672f\u5730\u8bb2\u53ef\u4ee5\u53eb\u505a\u201c\u5b66\u4e60\u4e00\u79cd\u5206\u5e03\u201d\uff09\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8bf4\u660e\u5b83\u4eec\u7684\u76f8\u4f3c\u6027\u548c\u533a\u522b\uff0c\u4ee5\u6b64\u8bf4\u660e\u4e3a\u4ec0\u4e48\u4f7f\u7528Non-Local\u3002\\n\\n### \u5377\u79ef\u548cNon-Local\\n\\n\u4ee5\u56fe\u50cf\u6570\u636e\u4e3a\u4f8b\uff0c\u8981\u60f3\u6355\u6349\u957f\u8ddd\u79bb\u4f9d\u8d56\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5806\u79ef\u5377\u79ef\u5c42\uff0c\u968f\u7740\u5c42\u6570\u7684\u52a0\u6df1\uff0c\u611f\u53d7\u91ce\u8d8a\u6765\u8d8a\u5927\uff0c\u5c31\u80fd\u628a\u539f\u5148\u975e\u76f8\u90bb\u7684\u50cf\u7d20\u70b9\u7eb3\u5165\u5230\u4e00\u4e2a\u6574\u4f53\u8003\u8651\uff0c\u83b7\u53d6\u7684\u4fe1\u606f\u5206\u5e03\u5e7f\u5ea6\u4e5f\u8d8a\u6765\u8d8a\u9ad8\u3002\u8fd9\u79cd\u9760\u5806\u53e0\u5377\u79ef\u5c42\u5f97\u5230\u7684\u611f\u53d7\u91ce\u63d0\u5347\uff0c\u9700\u8981\u4e0d\u65ad\u91cd\u590d\u5377\u79ef\u8fc7\u7a0b\uff0c\u800c\u8fd9\u79cd\u91cd\u590d\u4f1a\u5e26\u6765\u51e0\u4e2a\u5f0a\u7aef\uff1a\\n\\n1. \u8ba1\u7b97\u6548\u7387\u5f88\u4f4e\uff0c\u5c42\u7684\u52a0\u6df1\u610f\u5473\u7740\u66f4\u591a\u7684\u53c2\u6570\uff0c\u66f4\u590d\u6742\u7684\u5173\u7cfb\u3002\\n2. \u4f18\u5316\u56f0\u96be\uff0c\u9700\u8981\u8c28\u614e\u8bbe\u8ba1\u4f18\u5316\u8fc7\u7a0b\u3002\\n3. \u5efa\u6a21\u56f0\u96be\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u90a3\u4e9b\u591a\u7ea7\u4f9d\u8d56\u9879\uff0c\u9700\u8981\u5728\u4e0d\u540c\u8ddd\u79bb\u4f4d\u7f6e\u4f20\u9012\u4fe1\u606f\u3002\\n4. \u4e0d\u591f\u901a\u7528\uff0c\u5377\u79ef\u64cd\u4f5c\u53ea\u80fd\u6355\u83b7\u5355\u5f20\u56fe\u50cf\u4e0a\u7684\u5173\u7cfb\uff0c\u800c\u5bf9\u89c6\u9891\u7b49\u5e8f\u5217\u4e0a\u7684\u5173\u7cfb\u65e0\u8ba1\u53ef\u65bd\u3002\\n\\n\u6709\u4e00\u53e5\u8bdd\u975e\u5e38\u597d\u5730\u603b\u7ed3\u4e86\u5377\u79ef\u5c42\u5982\u4f55\u5efa\u7acb\u50cf\u7d20\u95f4\u5173\u7cfb\uff1a\\n\\n> convolution layer builds pixel relationship in a local neighborhood\\n\\n\u6240\u4ee5\u5efa\u7acb\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\u9700\u8981\u66f4\u597d\u7684\u3001\u53ea\u9700\u8981\u4e00\u5c42\u7684\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662fNon-Local\uff1a\\n$$\\nNL_u[i] = \\\\frac{1}{C(i)}\\\\sum_{j\\\\in\\\\Omega}{w(i,j)g(j)}\\n$$\\n\u5728\u4e0a\u5f0f\u4e2d\uff0c\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e j \u90fd\u88ab\u8003\u8651\u5230\u3002\u4e0e\u4e4b\u76f8\u5bf9\u5e94\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u5377\u79ef\u7684\u8fc7\u7a0b\uff0c\u4e00\u4e2a3x3\u7684\u5377\u79ef\u6838\uff0c\u80fd\u8986\u76d6\u5230\u7684\u4f4d\u7f6e\u53ea\u662f\u4f4d\u7f6e j \u7684\u76f8\u90bb\u70b9\uff0c\u53ea\u80fd\u5728\u76f8\u90bb\u5c40\u90e8\u8fdb\u884c\u64cd\u4f5c\u3002\u6240\u4ee5\u4f7f\u7528Non-Local\u66f4\u5408\u9002\u3002\\n\\n### \u5168\u8fde\u63a5\u548cNon-Local\\n\\n\u5bf9\u6bd4Non-Local\u548c\u5168\u8fde\u63a5\uff0c\u5728non-local operation\u7684\u516c\u5f0f\u4e2d\uff1a\\n$$\\nNL_u[i] = \\\\frac{1}{C(i)}\\\\sum_{j\\\\in\\\\Omega}{w(i,j)g(j)}\\n$$\\n$NL_u$\u4e2d\u7684\u503c\u662f\u901a\u8fc7\u8ba1\u7b97\u4e0d\u540c\u533a\u57df\u4e4b\u95f4\u7684\u5173\u7cfb\u5f97\u5230\u7684\uff0c\u800c\u5728\u5168\u8fde\u63a5\u5c42\u4e2d\uff0c\u662f\u901a\u8fc7\u8d4b\u7ed9\u6bcf\u4e2a\u795e\u7ecf\u5143\u4e00\u4e2a\u5b66\u5230\u7684\u6743\u91cd\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u5728\u5168\u8fde\u63a5\u5c42\u4e2d\uff0c\u4e24\u4e2a\u70b9\u6216\u4e24\u4e2a\u533a\u57df\u4e4b\u95f4\u7684\u5173\u7cfb\u88ab\u4e00\u4e2a\u7ebf\u6027\u7684\u5e38\u6570\u786e\u5b9a\u800c\u5728non-local\u4e2d\uff0c\u8fd9\u79cd\u5173\u7cfb\u88ab\u4e00\u4e2a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u884c\u4e3a\u7684\u51fd\u6570$w$\u786e\u5b9a\u3002\\n\\n\u518d\u8005\uff0cnon-local\u516c\u5f0f\u652f\u6301\u53ef\u53d8\u5927\u5c0f\u7684\u8f93\u5165\uff0c\u5e76\u5728\u8f93\u51fa\u4e2d\u4fdd\u6301\u76f8\u5e94\u7684\u5927\u5c0f\uff0c\u5728\u5168\u8fde\u63a5\u5c42\u4e2d\uff0c\u8981\u6c42\u56fa\u5b9a\u5927\u5c0f\u7684\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u5e76\u4e14\u7531\u4e8e\u88ab\u62c9\u4f38\u6210\u4e00\u5217\uff0c\u4e22\u5931\u4e86\u539f\u6709\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5728\u4f20\u7edf\u7684CNN\u7ed3\u6784\u4e2d\uff0c\u5377\u79ef\u5904\u4e8e\u7f51\u7edc\u7684\u524d\u534a\u90e8\u5206\u7528\u4e8e\u63d0\u53d6\u7279\u5f81\uff0c\u800c\u5168\u8fde\u63a5\u5c42\u901a\u5e38\u88ab\u7528\u5728\u6700\u540e\u7528\u4e8e\u5206\u7c7b\u3002\u5f53\u7136\uff0cnon-local operation\u53ef\u4ee5\u88ab\u7075\u6d3b\u5730\u6dfb\u52a0\u5230\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e2d\u5377\u79ef\u5c42\u4e2d\u7684\u4f4d\u7f6e\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u542f\u53d1\uff1a\u80fd\u591f\u6784\u5efa\u4e00\u4e2a\u66f4\u4e30\u5bcc\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5c06\u975e\u672c\u5730\u4fe1\u606f\u548c\u672c\u5730\u4fe1\u606f\u7ed3\u5408\u8d77\u6765\u3002\\n\\n## Non-Local operations\uff08\u975e\u5c40\u90e8\u64cd\u4f5c\uff09\\n\\n\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u5c06**\u975e\u5c40\u90e8\u64cd\u4f5c**\uff08non-local operations\uff09\u4f5c\u4e3a\u4e00\u79cd\u7b80\u6d01\u9ad8\u6548\u4e14\u901a\u7528\u7684\u7ec4\u4ef6\uff0c\u7528\u4e8e\u6355\u83b7\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u4e2d\u7684\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\u3002\\n\\n>  For each query position, the non-local network first computes the pairwise relations between the query position and all positions to form an attention map, and then aggregates the features of all positions by weighted sum with the weights defined by the attention map.\\n\\n\u4e0a\u6587\u76f4\u63a5\u5f15\u7528\u81eaGCNet\u7684\u8bba\u6587\u3002\u8fd9\u6bb5\u8bdd\u5f88\u597d\u5730\u603b\u7ed3\u4e86Non-Local Neural Network\u8fdb\u884c\u201c\u975e\u5c40\u90e8\u64cd\u4f5c\u201d\u7684\u6d41\u7a0b\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\uff08\u5728\u4e00\u5f20\u6ce8\u610f\u529b\u56fe\u4e2d\uff09\u8ba1\u7b97\u8be5\u4f4d\u7f6e\u548c\u5176\u4ed6\u4efb\u4f55\u4f4d\u7f6e\u7684\u76f8\u5173\u6027\uff0c\u5f62\u6210\u4e00\u4e2a\u6743\u503c\uff0c\u5e76\u7528\u52a0\u6743\u7684\u65b9\u6cd5\u8ba1\u7b97\u5f53\u524d\u533a\u57df\u7684\u9884\u6d4b\u503c\u3002\u4e5f\u5c31\u662f\uff0cnon-local operations\u5728\u8ba1\u7b97\u67d0\u4e2a\u4f4d\u7f6e$i$\u5904\u7684\u76f8\u5173\u6027\u65f6\uff0c\u6709\uff1a\\n$$\\nNL_u[i] = \\\\frac{1}{C(i)}\\\\sum_{j\\\\in\\\\Omega}{w(i,j)g(j)}\\n$$\\n![image-20210711155849037](./src/Non-local-Neural-Networks/image-20210711155849037.png)\\n\\n\u8003\u8651\u6240\u6709\u4f4d\u7f6efeatures\u7684\u52a0\u6743\u2014\u2014\u6240\u6709\u4f4d\u7f6e\u53ef\u4ee5\u662f\u7a7a\u95f4\u7684\uff0c\u65f6\u95f4\u7684\uff0c\u65f6\u7a7a\u7684\uff0c\u8fd9\u610f\u5473\u7740non-localoperations\u9002\u7528\u4e8e\u56fe\u50cf\u3001\u5e8f\u5217\u548c\u89c6\u9891\u95ee\u9898\u3002\\n\\nNon-Local operations\u7684\u4f18\u70b9\u662f\uff1a\\n\\n1. \u4e0e\u9012\u5f52\u64cd\u4f5c\u548c\u5377\u79ef\u64cd\u4f5c\u7684\u6e10\u8fdb\u884c\u4e3a\u4e0d\u540c\uff0cnon-localoperations\u901a\u8fc7\u8ba1\u7b97\u4efb\u610f\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u7684\u4ea4\u4e92\u76f4\u63a5\u6355\u6349\u8fdc\u7a0b\u4f9d\u8d56\uff0c\u800c\u4e0d\u7528\u5c40\u9650\u4e8e\u76f8\u90bb\u70b9\uff0c\u6452\u5f03\u4e86\u8ddd\u79bb\u7684\u6982\u5ff5\u3002\\n2. \u4f5c\u8005\u901a\u8fc7\u5b9e\u9a8c\u8868\u660e\uff0c\u5728\u5c42\u6570\u5f88\u5c11\u7684\u60c5\u51b5\u4e0b\uff0cnon-localoperations\u90fd\u80fd\u53d6\u5f97\u975e\u5e38\u597d\u7684\u6027\u80fd\u8868\u73b0\u3002\\n3. non-local\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u548c\u5176\u5b83\u7f51\u7edc\u7ed3\u6784\u7ed3\u5408\u3002\\n\\n\u6211\u4eec\u5728\u4e0a\u9762\u201c\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528Non-Local\u201d\u4e00\u8282\u4e2d\u8bf4\u660e\u4e86\u5377\u79ef\u5728\u5904\u7406\u957f\u8ddd\u79bb\u5173\u7cfb\u4e0a\u7684\u5f0a\u7aef\uff0c\u5e76\u8bf4\u660e\u4e86Non-Local\u4e3a\u4f55\u6709\u6548\u3002\u63a5\u4e0b\u6765\u7ed9\u51fa\u8be5\u8bba\u6587\u4e2dNon-Local operation\u7684\u5177\u4f53\u5b9e\u73b0\u5f62\u5f0f\u3002\\n\\n### \u8861\u91cf\u5173\u7cfb\u7684\u65b9\u6cd5\\n\\n\u63a5\u4e0b\u6765\u5bf9\u8bba\u6587\u4e2d\u7684$w(i,j)$\u548c$g(j)$\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u8fdb\u884c\u63cf\u8ff0\uff08\u539f\u8bba\u6587\u4e2d\u7684\u5b9e\u9a8c\u8bc1\u660e\u4e86\u9009\u62e9\u4f55\u79cd$w(i,j)$\u548c$g(j)$\u5bf9\u4e8e\u7f51\u7edc\u672c\u8eab\u7684\u8868\u73b0\u6765\u8bf4\u4e0d\u5f88\u654f\u611f\uff09\u3002\\n$$\\nNL_u[i] = \\\\frac{1}{C(i)}\\\\sum_{j\\\\in\\\\Omega}{w(i,j)g(j)}\\n$$\\n\\n\u4e3a\u4e86\u7b80\u6d01\u63cf\u8ff0\uff0c\u53ef\u4ee5\u5c06$g(j)$\u89c6\u4e3a\u4e00\u4e2a\u7ebf\u6027\u8f6c\u5316$g(j) = W_g \\\\cdot u(j)$\uff0c\u5176\u4e2d$W_g$\u662f\u8981\u5b66\u4e60\u7684\u6743\u91cd\u77e9\u9635\uff08\u4f8b\u5982\uff0c\u5728\u56fe\u50cf\u7a7a\u95f4\u53ef\u4ee5\u91c7\u7528$1\\\\times 1$\u5377\u79ef\u5b9e\u73b0\uff0c\u5728\u89c6\u9891\u7a7a\u95f4\u53ef\u4ee5\u91c7\u7528$1\\\\times 1\\\\times 1$\u5377\u79ef\u5b9e\u73b0\u7b49\u7b49\uff09\u3002\\n\\n#### \u4f7f\u7528Gaussian\u8861\u91cf\u76f8\u4f3c\u5ea6\\n\\n\u5bf9\u4e8e$w(i,j)$\uff0c\u5176\u4e3b\u8981\u529f\u80fd\u662f\u8ba1\u7b97\u8861\u91cf\u4e24\u4e2a\u56fe\u50cf\u533a\u57df\u7684\u76f8\u4f3c\u5ea6\u3002\u4eba\u4eec\u5f88\u81ea\u7136\u4f1a\u60f3\u5230\u4f7f\u7528\u9ad8\u65af\u51fd\u6570\u3002\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\u6709\uff1a\\n$$\\nw(x_i,x_j) = e^{x_i^Tx_j}\\n$$\\n\\n#### \u4f7f\u7528Embedded Gaussian\u8861\u91cf\u76f8\u4f3c\u5ea6\\n\\n\u4e3a\u4e86\u83b7\u5f97\u4e00\u79cd\u66f4\u52a0\u666e\u9002\u7684\u8861\u91cf\u65b9\u6cd5\uff0c\u5bf9\u4e0a\u8ff0\u9ad8\u65af\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff1a\\n$$\\nw(x_i,x_j) = e^{\\\\theta(x_i)^T\\\\phi(x_j)}\\n$$\\n\u5176\u4e2d$\\\\theta(x_i) = W_{\\\\theta}x_i$\u548c$\\\\phi(x_i) = W_{\\\\phi}x_i$\u662f\u7ebf\u6027\u53d8\u6362\uff0c\u53ef\u4ee5\u5c06$x_i$\u6620\u5c04\u5230\u5176\u4ed6\u8ba1\u7b97\u7a7a\u95f4\uff0c\u4ece\u800c\u66f4\u52a0\u5177\u6709\u666e\u9002\u6027\u3002\\n\\n#### \u4f7f\u7528\u70b9\u79ef\uff08dot product\uff09\u8861\u91cf\u76f8\u4f3c\u5ea6\\n\\n\u5c06$w(x_i,x_j)$\u7b80\u5355\u5730\u8868\u793a\u4e3a\u70b9\u79ef\uff1a\\n$$\\nw(x_i,x_j) = {\\\\theta(x_i)^T\\\\phi(x_j)}\\n$$\\n\u5728\u8fd9\u91cc\u8fd8\u662f\u4f7f\u7528\u4e86\\"Embedded sversion\\"\uff0c\u4e5f\u5c31\u662f\u5728$x$\u7684\u5916\u9762\u5957\u4e86\u4e00\u4e2a\u7ebf\u6027\u53d8\u6362\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f52\u4e00\u5316\u56e0\u5b50$C(i)$\u88ab\u7b80\u5355\u5730\u63cf\u8ff0\u4e3a$N$\uff08$N$\u662f\u53c2\u4e0e\u8ba1\u7b97\u7684\u70b9\u7684\u4e2a\u6570\uff09\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u7b80\u5316\u68af\u5ea6\u7684\u8ba1\u7b97\u3002\\n\\n![image-20210712203856857](./src/Non-local-Neural-Networks/image-20210712203856857.png)\\n\\n\u5982\u4e0a\u56fe\uff0c\u5728\u8fd9\u7bc7\u8bba\u6587\u7684\u5b9e\u9a8c\u4e2d\uff0c\u70b9\u79ef\u5728top-1\u51c6\u786e\u7387\u4e2d\u53d6\u5f97\u4e86\u76f8\u5f53\u4e0d\u9519\u7684\u6210\u7ee9\u3002\\n\\n#### \u5f52\u4e00\u5316\\n\\n\u89c2\u5bdf\u539f\u516c\u5f0f\uff1a\\n$$\\nNL_u[i] = \\\\frac{1}{C(i)}\\\\sum_{j\\\\in\\\\Omega}{w(i,j)g(j)}\\n$$\\n\u5176\u4e2d\u7684$C(x)=\\\\sum_{\\\\forall{j}}{w(x_i,x_j)}$\u662f\u5f52\u4e00\u5316\u56e0\u5b50\u3002\u5c06\u5176\u5e26\u5165\u540e\uff0c\u4f1a\u53d1\u73b0\uff1a$\\\\frac{1}{C(i)}w(x_i,x_j)$\u5b9e\u9645\u4e0a\u5c31\u662f$softmax$\u7684\u57fa\u672c\u5f62\u5f0f\u3002\u6240\u4ee5\u4e0a\u8ff0\u516c\u5f0f\u53ef\u4ee5\u5199\u4f5c\uff1a\\n$$\\nNL_u[i] = softmax(\\\\sum_{j\\\\in\\\\Omega}w(i,j))g(j)\\n$$\\n\u5982\u679c\u6211\u4eec\u9009\u7528\u70b9\u79ef\u4f5c\u4e3a$w(i,j)$\u8fdb\u884c\u76f8\u4f3c\u5ea6\u7684\u8861\u91cf\uff0c\u518d\u4ee4$Y = NL_u[i]$\uff0c\u5e26\u5165\u540e\u4f1a\u5f97\u5230\uff1a\\n$$\\nY = softmax(x^TW_{\\\\theta}^TW_{\\\\phi}x)g(x)\\n$$\\n**\u8fd9\u4e2a\u5c31\u662f\u76ee\u524d\u5e38\u7528\u7684\u4f4d\u7f6e\u6ce8\u610f\u529b\u673a\u5236\u7684\u8868\u8fbe\u5f0f\u3002\u4ee5\u4e0a\u5173\u4e8eNon-Local\u7684\u63cf\u8ff0\uff0c\u5728\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u4e2d\u53ef\u4ee5\u5f52\u4e3a\u81ea\u6ce8\u610f\u529b\u673a\u5236\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff08self-attention\uff09**\uff0c\u5373\u901a\u8fc7\u5173\u6ce8\u7279\u5f81\u56fe\u4e2d\u6240\u6709\u4f4d\u7f6e\u5e76\u5728\u5d4c\u5165\u7a7a\u95f4\u4e2d\u53d6\u5176\u52a0\u6743\u5e73\u5747\u503c\u6765\u8868\u793a\u56fe\u7247\u4e2d\u67d0\u4f4d\u7f6e\u5904\u7684\u54cd\u5e94\u3002\u5d4c\u5165\u7a7a\u95f4\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u66f4\u62bd\u8c61\u7684\u56fe\u7247\u7a7a\u95f4\u8868\u8fbe\uff0c\u76ee\u7684\u662f\u6c47\u805a\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002\\n\\n`\u4f7f\u7528\u70b9\u79ef\u65b9\u6cd5\u548c\u4f7f\u7528Embedded Gaussian\u65b9\u6cd5\u533a\u522b\u5728\u4e8e\u662f\u5426\u4f7f\u7528softmax\u51fd\u6570\u8fdb\u884c\u6fc0\u6d3b\u3002`\\n\\n\\n### Non-Local Block\\n\\n\u8bba\u6587\u4e2d\u5b9e\u73b0Non-Local\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u4e00\u4e2a\u79f0\u4e3aNon-Local block\u7684\u7ed3\u6784\u5b9e\u73b0\u7684\u3002\\n\\n![image-20210712150626557](./src/Non-local-Neural-Networks/image-20210712150626557.png)\\n\\n\u4e0a\u56fe\u4e2d$\\\\theta(x_i) = W_{\\\\theta}x_i$\u548c$\\\\phi(x_i) = W_{\\\\phi}x_i$\uff0c$w(x_i,x_j) = {\\\\theta(x_i)^T\\\\phi(x_j)}$\u3002\u5c06\u4e0a\u65b9\u63d0\u5230\u7684\u5f52\u4e00\u5316\u5904\u7406\u4e4b\u540e\u7684\u516c\u5f0f\u6284\u4e0b\u6765\u5c31\u6709\uff1a\\n$$\\nZ = softmax(x^TW_{\\\\theta}^TW_{\\\\phi}x)g(x)\\n$$\\n\u548c\u4e0a\u65b9\u8ba1\u7b97\u56fe\u4e2d\u8868\u793a\u7684\u8fc7\u7a0b\u5b8c\u5168\u4e00\u6837\u3002\\n\\n![image-20210712175504851](./src/Non-local-Neural-Networks/image-20210712175504851.png)\\n\\n\u4e0a\u56fe\u662f\u4e00\u79cd\u533a\u57df\u76f8\u5173\u6027$w(i,j)$\u7684\u76f4\u89c2\u8868\u793a\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5f85\u8ba1\u7b97\u7684\u50cf\u7d20\u4f4d\u7f6e\u662f$p$\uff0c\u6545\u5148\u6784\u9020\u4e00\u4e2a\u4ee5$p$\u4e3a\u4e2d\u5fc3\u7684block\uff0c\u7136\u540e\u8ba1\u7b97\u5176\u4ed6\u4f4d\u7f6eblock\u548c\u5f53\u524dblock\u7684\u76f8\u5173\u6027\uff0c\u53ef\u4ee5\u770b\u51fa$q1$\u548c$q2$\u533a\u57df\u548c$q$\u975e\u5e38\u76f8\u4f3c\uff0c\u6545\u8ba1\u7b97\u65f6\u5019\u7ed9\u4e88\u4e00\u4e2a\u5927\u6743\u91cd\uff0c\u800c$q3$\u7ed9\u4e88\u4e00\u4e2a\u5c0f\u7684\u6743\u91cd\u3002\u8fd9\u6837\u7684\u505a\u6cd5\u53ef\u4ee5\u7a81\u51fa\u5171\u6027\uff08\u5173\u5fc3\u7684\u533a\u57df\uff09\uff0c\u6d88\u9664\u5dee\u5f02\uff08\u901a\u5e38\u662f\u566a\u58f0\uff09\u3002\\n\\n\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7528\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u8fdb\u884c\u8861\u91cf\uff08\u5c0f\u58f0BB\uff09\u3002\\n\\n## Summary\\n\\n\u8fd9\u7bc7\u8bba\u6587\u7684\u4e3b\u8981\u601d\u60f3\u5176\u5b9e\u662f\uff08\u7a7a\u95f4\u4f4d\u7f6e\uff09\u81ea\u6ce8\u610f\u529b\u673a\u5236\u7684\u6cdb\u5316\u8868\u8fbe\u3002\u4e0d\u8fc7\u8fd9\u7bc7\u8bba\u6587\u53ea\u5f3a\u8c03\u4e86\u7a7a\u95f4\u6ce8\u610f\u529b\uff0c\u5e76\u6ca1\u6709\u660e\u663e\u4f7f\u7528\u50cf[SENet](./[23]Squeeze-and-Excitation-Networks)\u90a3\u6837\u7684\u901a\u9053\u6ce8\u610f\u529b\u3002\\n\\n\u539f\u8bba\u6587\u4e2d\u4e5f\u6ca1\u6709\u8fdb\u884c\u5bf9Non-Local\u751f\u6210\u7684attention map\u8fdb\u884c\u53ef\u89c6\u5316\u7684\u5b9e\u9a8c\u3002\u4e0d\u8fc7\u53e6\u4e00\u7bc7\u8bba\u6587\uff08GCNet\uff09\u4e2d\u8fdb\u884c\u4e86\u8fd9\u6837\u7684\u5b9e\u9a8c\uff1as\\n\\n![](./src/Non-local-Neural-Networks/image-20210712213203846.png)\\n\\nGCNet\u7684\u4f5c\u8005\u4eceCOCO\u6570\u636e\u96c6\u4e2d\u968f\u673a\u9009\u62e96\u5e45\u56fe\uff0c\u5206\u522b\u53ef\u89c6\u53163\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u548c\u5b83\u4eec\u7684attention maps\u3002\u4f5c\u8005\u53d1\u73b0\u5bf9\u4e8e\u4e0d\u540c\u4f4d\u7f6e\u6765\u8bf4\uff0c\u5b83\u4eec\u7684attention maps\u51e0\u4e4e\u662f\u76f8\u540c\u7684\u3002\u8fd9\u8bf4\u660e\uff0c**\u867d\u7136non-local block\u60f3\u8981\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7279\u5b9a\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\uff0c\u4f46\u662f\u7ecf\u8fc7\u8bad\u7ec3\u4e4b\u540e\uff0c\u5b9e\u9645\u4e0a\u5f62\u6210\u7684attention map\u53d7\u4f4d\u7f6e\u7684\u5f71\u54cd\u975e\u5e38\u4f4e\u3002**\u8fd9\u4e5f\u662f\u8fd9\u7bc7\u8bba\u6587\u7684\u4e00\u4e2a\u7f3a\u9677\u3002"},{"id":"/[28]GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond","metadata":{"permalink":"/blog/[28]GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[28]GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond.md","source":"@site/blog/[28]GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond.md","title":"Non-local Networks Meet Squeeze-Excitation Networks and Beyond","description":"Yue Cao, Jiarui Xu, Stephen Lin, Fangyun Wei, Han Hu","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"}],"readingTime":9.21,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Non-local Networks Meet Squeeze-Excitation Networks and Beyond","authors":["visualdust"],"tags":["attention-mechanism"]},"prevItem":{"title":"Non-local Neural Networks","permalink":"/blog/[27]Non-local-Neural-Networks"},"nextItem":{"title":"Disentangled Non-Local Neural Networks","permalink":"/blog/[29]Disentangled-Non-Local-Neural-Networks"}},"content":"[Yue Cao](https://arxiv.org/search/cs?searchtype=author&query=Cao%2C+Y), [Jiarui Xu](https://arxiv.org/search/cs?searchtype=author&query=Xu%2C+J), [Stephen Lin](https://arxiv.org/search/cs?searchtype=author&query=Lin%2C+S), [Fangyun Wei](https://arxiv.org/search/cs?searchtype=author&query=Wei%2C+F), [Han Hu](https://arxiv.org/search/cs?searchtype=author&query=Hu%2C+H)\\n\\nGCNet\uff08\u539f\u8bba\u6587\uff1a[GCNet: Non-local Networks Meet Squeeze-Excitation Networks and Beyond](https://arxiv.org/abs/1904.11492)\u6216[Global Context Networks](https://arxiv.org/abs/2012.13375)\uff09\u8fd9\u7bc7\u8bba\u6587\u7684\u7814\u7a76\u601d\u8def\u7c7b\u4f3c\u4e8eDPN\uff0c\u6df1\u5165\u63a2\u8ba8\u4e86Non-local\u548cSENet\u7684\u4f18\u7f3a\u70b9\uff0c\u7136\u540e\u7ed3\u5408Non-local\u548cSENet\u7684\u4f18\u70b9\u63d0\u51fa\u4e86GCNet\u3002\\n\\n> The Non-Local Network (NLNet) presents a pioneering approach for capturing long-range dependencies, via aggregating query-specific global context to each query position. However, through a rigorous empirical analysis, we have found that the global contexts modeled by non-local network are almost the same for different query positions within an image. In this paper, we take advantage of this finding to create a simplified network based on a query-independent formulation, which maintains the accuracy of NLNet but with significantly less computation. We further observe that this simplified design shares similar structure with Squeeze-Excitation Network (SENet). Hence we unify them into a three-step general framework for global context modeling. Within the general framework, we design a better instantiation, called the global context (GC) block, which is lightweight and can effectively model the global context. The lightweight property allows us to apply it for multiple layers in a backbone network to construct a global context network (GCNet), which generally outperforms both simplified NLNet and SENet on major benchmarks for various recognition tasks. The code and configurations are released at [this https URL](https://github.com/xvjiarui/GCNet).\\n\\n![image-20210713150550619](./src/GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond/image-20210713150550619.png)\\n\\nGCNet\u63d0\u51fa\u4e00\u79cd\u6a21\u5757\u6846\u67b6\u79f0\u4e3aGlobal context modeling framework\uff08\u4e0a\u56fe\u4e2d(a)\uff09\uff0c\u5e76\u5c06\u5176\u5206\u4e3a\u4e09\u6b65\uff1aContext modeling\u3001Transform\u3001Fusion\u3002\\n\\n\u8fd9\u7bc7\u8bba\u6587\u9009\u7528[Non-Local Neural Networks](./[27]Non-local-Neural-Networks)\uff08\u4e0a\u56fe\u4e2d(b)\u662f\u5176\u7b80\u5316\u7248\uff09\u7684Context modeling \u548c [Squeeze and Excitation Networks ](./[23]Squeeze-and-Excitation-Networks)\uff08\u4e0a\u56fe\u4e2d(c)\u662f\u5176\u4e00\u79cd\u5f62\u5f0f\uff09\u7684 Transform\u8fc7\u7a0b\u7ec4\u6210\u65b0\u7684\u6a21\u5757Global Context (GC) block\uff0c\u540c\u65f6\u8bad\u7ec3spacial\u548cchannel-wise\u4e0a\u7684\u6ce8\u610f\u529b\u3002\u8fd9\u662f\u4e00\u7bc7\u5f88\u597d\u7684\u8bba\u6587\uff0c\u6709\u5174\u8da3\u8bf7\u9605\u8bfb[\u539f\u6587](https://arxiv.org/abs/1904.11492)\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## Non-Local\u5728\u5b9e\u8df5\u4e2d\u7684\u7f3a\u9677\\n\\n\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\uff0cNLNet\uff08[Non-Local Neural Networks](./[27]Non-local-Neural-Networks)\uff09\u5728\u957f\u8ddd\u79bb\u6ce8\u610f\u529b\u65b9\u9762\u4f5c\u51fa\u4e86\u5f00\u521b\u6027\u7684\u5de5\u4f5c\u3002\u5728\u8fd9\u91cc\u4f5c\u8005\u63d0\u51fa\uff0c\u4e3a\u4e86\u5efa\u7acb\u957f\u8ddd\u79bb\u7684\u6ce8\u610f\u529b\uff0c\u6709\u4e24\u79cd\u529e\u6cd5\uff1a\\n\\n1. \u91c7\u7528**\u81ea\u6ce8\u610f\u529b\u673a\u5236**\u6765\u5efa\u6a21query\u5bf9\u7684\u5173\u7cfb\uff08\u4e5f\u5c31\u662fNon-Local\u7684\u505a\u6cd5\uff09\u3002\\n2. \u7b2c\u4e8c\u79cd\u662f\u5bf9query-independent\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u65e0query\u4f9d\u8d56\uff09\u7684**\u5168\u5c40\u4e0a\u4e0b\u6587**\u5efa\u6a21\u3002\\n\\nNLNet\u5c31\u662f\u5178\u578b\u7684\u91c7\u7528\u81ea\u6ce8\u610f\u529b\u673a\u5236\u6765\u5efa\u6a21\u50cf\u7d20\u5bf9\u5173\u7cfb\u3002\u4f46\u662f\uff0c\u4f5c\u8005\u4eceCOCO\u6570\u636e\u96c6\u4e2d\u968f\u673a\u9009\u62e96\u5e45\u56fe\uff0c\u5206\u522b\u53ef\u89c6\u53163\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u548c\u5b83\u4eec\u7684attention maps\u8fdb\u884c\u5b9e\u9a8c\uff1a\\n\\n![](./src/GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond/image-20210712213203846.png)\\n\\n\u7ed3\u679c\u53d1\u73b0\u5bf9\u4e8e\u4e0d\u540c\u4f4d\u7f6e\u6765\u8bf4\uff0c\u5b83\u4eec\u7684attention maps\u51e0\u4e4e\u662f\u76f8\u540c\u7684\u3002\u8fd9\u8bf4\u660e\uff0c**\u867d\u7136non-local block\u60f3\u8981\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7279\u5b9a\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\uff0c\u4f46\u662f\u7ecf\u8fc7\u8bad\u7ec3\u4e4b\u540e\uff0c\u5b9e\u9645\u4e0a\u5f62\u6210\u7684attention map\u53d7\u4f4d\u7f6e\u7684\u5f71\u54cd\u975e\u5e38\u4f4e\u3002**\\n\\n\u4e5f\u5c31\u662f\u8bf4\uff0cNLNet\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5b66\u4e60\u4e0d\u53d7\u4f4d\u7f6e\u4f9d\u8d56\u7684attention map\uff0c\u9020\u6210\u4e86\u5927\u91cf\u7684\u8ba1\u7b97\u6d6a\u8d39\u3002\u901a\u8fc7\u4e25\u683c\u7684\u5b9e\u9a8c\u5206\u6790\uff0c\u4f5c\u8005\u53d1\u73b0non-local network\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\u5728\u4e0d\u540c\u4f4d\u7f6e\u51e0\u4e4e\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u8868\u660eNLNet\u7ecf\u8fc7\u8bad\u7ec3\u4e4b\u540e\u5b9e\u9645\u4e0a\u5b66\u4e60\u5230\u7684\u662f\u5f31\u4f4d\u7f6e\u4f9d\u8d56\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\u3002\\n\\n## \u7b80\u5316Non-Local block\\n\\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662fNon-Local block\uff0c\u8bf7\u5148\u9605\u8bfb[Non-Local Neural Networks](./[27]Non-local-Neural-Networks)\u3002\\n\\n\u521a\u624d\u8bf4\u5230\u901a\u8fc7\u4e25\u683c\u7684\u5b9e\u9a8c\u5206\u6790\uff0c\u4f5c\u8005\u53d1\u73b0non-local network\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\u4e0a\u9020\u6210\u4e86\u5927\u91cf\u7684\u8ba1\u7b97\u6d6a\u8d39\u3002\u4f5c\u8005\u53d6\u5176\u7cbe\u534e\u53bb\u5176\u7cdf\u7c95\u8bbe\u8ba1\u4e86\u7b80\u5316\u7684Non-Local block\uff1a\\n\\n![image-20210712230924295](./src/GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond/image-20210712230924295.png)\\n\\n\u4e0a\u56fe\u4e2d\uff08a\uff09\u662fNon-Local neural Networks\u7684\u539f\u8bba\u6587\u4e2d\u63d0\u51fa\u7684Non-Local block\u7ed3\u6784\uff1b\uff08b\uff09\u662f\u8fd9\u7bc7\u8bba\u6587\u7684\u4f5c\u8005\u91cd\u65b0\u8bbe\u8ba1\u7684\u7b80\u5316\u7248\u672c\u3002\\n\\n### \u539f\u7248Non-Local block\\n\\n**\u539f\u7248Non-Local block**\uff08\u4e0a\u56fe\u4e2d\uff08a\uff09\uff09\uff08\u5982\u679c\u4e0d\u77e5\u9053\u8fd9\u662f\u4ec0\u4e48\uff0c\u8bf7\u5148\u9605\u8bfb\u8bf7\u5148\u9605\u8bfb[Non-Local Neural Networks](./[27]Non-local-Neural-Networks)\uff09\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a\\n$$\\nz_i = x_i + \\\\sum_{j=1}^{N_p}\\\\frac{f(x_i,x_j)}{C(x)}(W_v\\\\cdot x_i)\\n$$\\n\u5176\u4e2d$C(x)$\u4e3a\u5f52\u4e00\u5316\u56e0\u5b50\uff1b$f(x_i,x_j)$\u4e3a\u8861\u91cf\u76f8\u5173\u6027\u7684\u51fd\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5b9a\u4e49$w(x_i,x_j)=\\\\frac{f(x_i,x_j)}{C(x)}$\u4e3a\u5f52\u4e00\u5316\u7684\u5173\u7cfb\u8861\u91cf\u51fd\u6570\uff1b$W_z$\u548c$W_v$\u662f\u7ebf\u6027\u53d8\u6362\u77e9\u9635\u3002\\n\\n\u5728\u672c\u6587\u4e2d\uff0c\u4f5c\u8005\u9009\u62e9\u5c06$f(x_i,x_j)$\u8868\u793a\u4e3aEmbedded Gaussian\u7684\u5f62\u5f0f\uff1a\\n$$\\nw(x_i,x_j) = \\\\frac{\\\\exp(W_q x_i,W_k x_j)}{\\\\sum_m\\\\exp(W_q x_i,W_k x_m)}\\n$$\\n\\n### \u7b80\u5316\u7684Non-Local block\\n\\n**\u7b80\u5316\u540e\u7684Non-Local block**\uff08\u4e0a\u56fe\u4e2d\uff08b\uff09\uff09\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a\\n$$\\nz_i = x_i + \\\\sum_{j=1}^{N_p}[\\\\frac{\\\\exp(W_k x_j)}{\\\\sum_{m=1}^{N_p}\\\\exp(W_k x_m)}(W_v\\\\cdot x_j)]\\n$$\\n\u5176\u4e2d$W_k$\u548c$W_v$\u662f\u7ebf\u6027\u53d8\u6362\u77e9\u9635\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u964d\u4f4e\u8ba1\u7b97\u91cf\u4f5c\u8005\u5c06$W_v$\u79fb\u52a8\u5230attention pooling\u7684\u5916\u9762\uff0c\u8868\u793a\u4e3a\uff1a\\n$$\\nz_i = x_i + W_v\\\\sum_{j=1}^{N_p}\\\\frac{\\\\exp(W_k x_j)}{\\\\sum_{m=1}^{N_p}\\\\exp(W_k x_m)}x_j\\n$$\\n\u8fd9\u6837\u4fee\u6539\u4e4b\u540e\uff0c$1\\\\times 1$\u5377\u79ef\u7684FLOPs\u4ece$O(HWC^2)$\u964d\u4f4e\u5230\u4e86$O(C^2)$\u3002\\n\\n\u4e0d\u540c\u4e8e\u539f\u59cb\u7684non-local block\uff0c\u7b80\u5316\u7248non-local block\u7684\u7b2c\u4e8c\u9879\u662f\u4e0d\u53d7\u4f4d\u7f6e\u4f9d\u8d56\u7684\uff0c\u6240\u6709\u4f4d\u7f6e\u5171\u4eab\u8fd9\u4e00\u9879\u3002\u56e0\u6b64\uff0c\u4f5c\u8005\u76f4\u63a5\u5c06\u5168\u5c40\u4e0a\u4e0b\u6587\u5efa\u6a21\u4e3a\u6240\u6709\u4f4d\u7f6e\u7279\u5f81\u7684\u52a0\u6743\u5e73\u5747\u503c\uff0c\u7136\u540e\u805a\u96c6\u5168\u5c40\u4e0a\u4e0b\u6587\u7279\u5f81\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7279\u5f81\u4e0a\u3002\\n\\n## Global Context Modeling Framework\\n\\n\u5982\u540c\u4e0a\u6587\u7684\u53d9\u8ff0\uff0c\u7b80\u5316\u7248\u7684non-local block\u53ef\u4ee5\u62bd\u8c61\u4e3a3\u4e2a\u6b65\u9aa4\uff1a\\n\\n1. \u5168\u5c40attention pooling\uff1a\u91c7\u7528$1\\\\times1$\u5377\u79ef$W_k$\u548csoftmax\u51fd\u6570\u6765\u83b7\u53d6attention map\uff0c\u7136\u540e\u6267\u884cattention pooling\u83b7\u5f97\u5168\u5c40\u4e0a\u4e0b\u6587\u7279\u5f81\u3002\\n2. \u4f7f\u7528$1\\\\times 1$\u5377\u79ef\u7684\u7ebf\u6027\u53d8\u6362$W_v$\u8fdb\u884c\u7279\u5f81\u8f6c\u6362\u3002\\n3. \u5c06\u5f97\u5230\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\u7279\u5f81\u901a\u8fc7\u52a0\u548c\u7684\u65b9\u5f0f\u6574\u5408\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u3002\\n\\n\u6574\u4f53\u8fc7\u7a0b\u7684\u6a21\u5757\u8bbe\u8ba1\u5982\u56fe\u6240\u793a\uff1a\\n\\n![image-20210713155953783](./src/GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond/image-20210713155953783.png)\\n\\n\u4f5c\u8005\u5c06\u8be5\u62bd\u8c61\u8fc7\u7a0b\u63cf\u8ff0\u4e3a\u4e0b\u9762\u7684\u8fd9\u4e2a\u516c\u5f0f\uff1a\\n$$\\nz_i = F(x_i, \\\\delta(\\\\sum_{j=1}^{N_p}\\\\alpha_jx_j))\\n$$\\n\u5176\u4e2d$\\\\sum_{j=1}^{N_p}\\\\alpha_jx_j$\u88ab\u79f0\u4e3a**context modeling**\u6a21\u5757\uff0c\u7528\u4e8e\u901a\u8fc7\u6743\u503c$\\\\alpha$\u805a\u5408\u6765\u81ea\u5168\u5c40\u5404\u4e2a\u4f4d\u7f6e\u7684\u7279\u5f81\uff1b$\\\\delta(\\\\cdot)$\u8868\u793a\u4e00\u79cd\u7528\u4e8e\u6355\u83b7\u901a\u9053\u89c1\u76f8\u5173\u6027\u7684transform\uff1b$F(\\\\cdot,\\\\cdot)$\u8868\u793a\u4e00\u4e2a\u7279\u5f81fusion\u7684\u8fc7\u7a0b\uff0c\u5728\u8fd9\u91cc\u7279\u6307\u4f7f\u7528fusion\u51fd\u6570\u5c06\u83b7\u5f97\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\u7279\u5f81\u6574\u5408\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u3002\\n\\n\u63a5\u4e0b\u6765\uff0c\u8bba\u6587\u63d0\u51fa\u5c06SEBlock\u7684\u64cd\u4f5c\u5206\u4e3a\u4e09\u6b65\uff1a\\n\\n1. global average pooling\u7528\u4e8e\u4e0a\u4e0b\u6587\u5efa\u6a21(\u5373squeeze\u64cd\u4f5c)\u3002\\n2. bottleneck transform\u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u901a\u9053\u7684\u91cd\u8981\u7a0b\u5ea6(\u5373excitation operation)\u3002\\n3. rescaling function\u7528\u4e8e\u901a\u9053\u7279\u5f81\u91cd\u6807\u5b9a(\u5373element-wise multiplication)\u3002\\n\\n\u5e76\u63d0\u51fa\uff0c\u5176\u4e2d\u7684\u7b2c\u4e00\u6b65\uff08squeeze\u64cd\u4f5c\uff09\u53ef\u4ee5\u66ff\u6362\u4e3a\u7b80\u5316\u7248\u7684Non-Local Block\u3002\\n\\n## Global Context Block (GCBlock)\\n\\n\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5168\u5c40\u4e0a\u4e0b\u6587\u5efa\u6a21\u6846\u67b6\uff0cglobal context block(\u7b80\u5199GCNet)\uff0c\u5373\u80fd\u591f\u50cfSNL block\u4e00\u6837\u5efa\u7acb\u6709\u6548\u7684\u957f\u8ddd\u79bb\u4f9d\u8d56\uff0c\u53c8\u80fd\u591f\u50cfSEblock\u4e00\u6837\u5efa\u7acb\u901a\u9053\u95f4\u7684\u5173\u7cfb\uff1a\\n\\n![image-20210713161721108](./src/GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond/image-20210713161721108.png)\\n\\n\u5728\u7b80\u5316\u7248\u7684non-local block\u4e2d\uff0ctransform\u6a21\u5757\u6709\u5927\u91cf\u7684\u53c2\u6570\u3002\u4e3a\u4e86\u83b7\u5f97SE block\u8f7b\u91cf\u7684\u4f18\u70b9\uff0c1x1\u5377\u79ef\u7528bottleneck transform\u6a21\u5757\u6765\u53d6\u4ee3\uff0c\u80fd\u591f\u663e\u8457\u7684\u964d\u4f4e\u53c2\u6570\u91cf(\u5176\u4e2dr\u662f\u964d\u4f4e\u7387)\u3002\u56e0\u4e3a\u4e24\u5c42bottleneck transform\u589e\u52a0\u4e86\u4f18\u5316\u96be\u5ea6\uff0c\u6240\u4ee5\u5728ReLU\u524d\u9762\u589e\u52a0\u4e00\u4e2alayer normalization\u5c42(\u964d\u4f4e\u4f18\u5316\u96be\u5ea6\u4e14\u4f5c\u4e3a\u6b63\u5219\u63d0\u9ad8\u4e86\u6cdb\u5316\u6027)\u3002\\n\\nGCBlock\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a\u4e0b\u9762\u7684\u516c\u5f0f\uff1a\\n$$\\nz_i = x_i + W_{v2}Relu(LN(W_{v1}\\\\sum_{j=1}^{N_p}\\\\alpha_j x_j))\\n$$\\n\u4e0a\u5f0f\u4e2d\uff1a\\n$$\\n\\\\alpha_j = \\\\frac{e^{W_k x_j}}{\\\\sum_{m=1}^{N_p}e^{W_k x_m}}\\n$$\\n\u662f\u5168\u5c40attention pooling\u7684\u6743\u503c\uff0c$\\\\delta(\\\\cdot)=W_{v2}ReLU(LN(W_{v1}(\\\\cdot)))$\u8868\u793abottleneck transform\u7684\u8fc7\u7a0b\u3002\\n\\n\u4e5f\u5c31\u662f\u8bf4\uff0cGCblock\u7684\u64cd\u4f5c\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u4e09\u4e2a\u6b65\u9aa4\uff1a\\n\\n1. global attention pooling\u7528\u4e8e\u4e0a\u4e0b\u6587\u5efa\u6a21\u3002\\n2. bottleneck transform\u6765\u6355\u83b7\u901a\u9053\u95f4\u4f9d\u8d56\u3002\\n3. broadcast element-wise addition\u7528\u4e8e\u7279\u5f81\u878d\u5408\u3002\\n\\n## \u6709\u6548\u6027\u7684\u8ba8\u8bba\\n\\n\u8fd9\u7bc7\u8bba\u6587\u5f88\u7cbe\u5f69\uff0c\u4f46\u662f\u6709\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\u8ba9\u4eba\u60f3\u4e0d\u901a\uff1a\\n\\n1. \u4e3a\u4ec0\u4e48Non-Local\u5728\u4e0d\u540c\u7684query\u4f4d\u7f6e\u751f\u6210\u7684attention map\u662f\u51e0\u4e4e\u76f8\u540c\u7684\uff1f\\n\\n   \u5df2\u7ecf\u6709\u4e24\u7bc7\u8bba\u6587\uff08OCNet\u3001DANet\uff09\u8bc1\u5b9e\u4e86\u5728\u5206\u5272\u6a21\u578b\u91cc\u9762\u52a0\u5165non-local\u7b97\u5b50\u53ef\u4ee5\u8ba9\u5b66\u4e60\u5f97\u5230\u7684attention map\u96c6\u4e2d\u5728\u548cquery pixel\u540c\u7c7b\u522b\u7684\u533a\u57df\uff0c\u800c\u4e0d\u662f\u548cquery\u65e0\u5173\u3002\u53ef\u80fd\u8fd9\u4e2a\u95ee\u9898\u662f\u548c\u5177\u4f53\u4efb\u52a1\u76f8\u5173\u7684\u3002\\n\\n2. \u6587\u4e2d\u7684Global Context Modeling\u4e3a\u4f55\u8981\u8fd9\u6837\u8bbe\u8ba1\u4e5f\u662f\u4e00\u4e2a\u95ee\u9898\u3002\\n\\n   \u6839\u636e\u8bba\u6587\u4e2d\u7ed9\u51fa\u7684\u516c\u5f0f\uff0c\u4f3c\u4e4e\u4f7f\u7528\u5168\u8fde\u63a5\u548c\u4e00\u4e2a\u6b8b\u5dee\u8fde\u63a5\u80fd\u8fbe\u5230\u7c7b\u4f3c\u7684\u529f\u80fd\u3002"},{"id":"/[29]Disentangled-Non-Local-Neural-Networks","metadata":{"permalink":"/blog/[29]Disentangled-Non-Local-Neural-Networks","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[29]Disentangled-Non-Local-Neural-Networks.md","source":"@site/blog/[29]Disentangled-Non-Local-Neural-Networks.md","title":"Disentangled Non-Local Neural Networks","description":"Minghao Yin, Zhuliang Yao, Yue Cao, Xiu Li, Zheng Zhang, Stephen Lin, Han Hu","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"non-convolution","permalink":"/blog/tags/non-convolution"}],"readingTime":8.735,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Disentangled Non-Local Neural Networks","authors":["visualdust"],"tags":["attention-mechanism","non-convolution"]},"prevItem":{"title":"Non-local Networks Meet Squeeze-Excitation Networks and Beyond","permalink":"/blog/[28]GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond"},"nextItem":{"title":"Deep Retinex Decomposition for Low-Light Enhancement","permalink":"/blog/[30]RetinexNet-for-Low-Light-Enhancement"}},"content":"[Minghao Yin](https://arxiv.org/search/cs?searchtype=author&query=Yin%2C+M), [Zhuliang Yao](https://arxiv.org/search/cs?searchtype=author&query=Yao%2C+Z), [Yue Cao](https://arxiv.org/search/cs?searchtype=author&query=Cao%2C+Y), [Xiu Li](https://arxiv.org/search/cs?searchtype=author&query=Li%2C+X), [Zheng Zhang](https://arxiv.org/search/cs?searchtype=author&query=Zhang%2C+Z), [Stephen Lin](https://arxiv.org/search/cs?searchtype=author&query=Lin%2C+S), [Han Hu](https://arxiv.org/search/cs?searchtype=author&query=Hu%2C+H)\\n\\n> The non-local block is a popular module for strengthening the context modeling ability of a regular convolutional neural network. This paper first studies the non-local block in depth, where we find that its attention computation can be split into two terms, a whitened pairwise term accounting for the relationship between two pixels and a unary term representing the saliency of every pixel. We also observe that the two terms trained alone tend to model different visual clues, e.g. the whitened pairwise term learns within-region relationships while the unary term learns salient boundaries. However, the two terms are tightly coupled in the non-local block, which hinders the learning of each. Based on these findings, we present the disentangled non-local block, where the two terms are decoupled to facilitate learning for both terms. We demonstrate the effectiveness of the decoupled design on various tasks, such as semantic segmentation on Cityscapes, ADE20K and PASCAL Context, object detection on COCO, and action recognition on Kinetics.\\n\\n\u4ece\u8bba\u6587\u540d\u79f0\u4e0a\u6765\u770b\uff0c\u8fd9\u7bc7\u8bba\u6587\u5206\u6790\u4e86[Non-Local Neural Networks](./[27]Non-local-Neural-Networks)\u4e2d\u7684Non-Local\u6a21\u5757\u4e2d\u6240\u5b58\u5728\u7684\u6ce8\u610f\u529b\u673a\u5236\uff0c\u5e76\u5bf9\u5176\u8bbe\u8ba1\u8fdb\u884c\u4e86\u89e3\u8026\u3002\u89e3\u8026\u540e\u8be5\u6ce8\u610f\u529b\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u6210\u5bf9\u9879\uff08pairwise term\uff09\u7528\u4e8e\u8868\u793a\u50cf\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e00\u5143\u9879\uff08unary term\uff09\u7528\u4e8e\u8868\u793a\u50cf\u7d20\u81ea\u8eab\u7684\u67d0\u79cd\u663e\u8457\u6027\u3002\u8fd9\u4e24\u9879\u5728Non-Local\u5757\u4e2d\u662f\u7d27\u5bc6\u8026\u5408\u7684\u3002\u8fd9\u7bc7\u8bba\u6587\u53d1\u73b0\u5f53\u7740\u4e24\u90e8\u5206\u88ab\u5206\u5f00\u8bad\u7ec3\u540e\uff0c\u4f1a\u5206\u522b\u5bf9\u4e0d\u540c\u7684\u89c6\u89c9\u7ebf\u7d22\u8fdb\u884c\u5efa\u6a21\uff0c\u5e76\u8fbe\u5230\u4e0d\u9519\u7684\u6548\u679c\u3002\\n\\n\u6574\u7bc7\u8bba\u6587\u4ece\u5bf9Non-Local\u5206\u6790\u5230\u65b0\u7684\u65b9\u6cd5\u63d0\u51fa\u90fd\u975e\u5e38\u5730\u6709\u8c03\u7406\u3002\u6709\u65f6\u95f4\u8bf7\u9605\u8bfb\u539f\u8bba\u6587[Disentangled Non-Local Neural Networks](https://arxiv.org/abs/2006.06668)\u3002\\n\\n> \u5728\u9605\u8bfb\u672c\u6587\u4e4b\u524d\u8bf7\u5148\u9605\u8bfb[Non-Local Neural Networks](./[27]Non-local-Neural-Networks)\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## Non-Local\u7684\u6df1\u5165\u5206\u6790\\n\\nNon-Local\u5757\u7528\u4e8e\u5728\u5355\u5c42\u5185\u5efa\u7acb\u50cf\u7d20\u4e4b\u95f4\u7684\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\uff0c\u662f\u4e00\u79cd\u50cf\u7d20\u7ea7\u7684\u81ea\u6ce8\u610f\u529b\u673a\u5236\u3002\u8fd9\u79cd\u50cf\u7d20\u7ea7\u7684\u81ea\u6ce8\u610f\u529b\u662f\u901a\u8fc7\u50cf\u7d20\u7684\u7279\u5f81\u5728\u5d4c\u5957\uff08Embedding\uff09\u7a7a\u95f4\u8fdb\u884c\u70b9\u79ef\u8fd0\u7b97\u83b7\u5f97\u7684\u3002\u521d\u89c1Non-Local\uff0c\u4f1a\u4e0d\u81ea\u7136\u5730\u5c06\u5176\u5f53\u4f5c\u4e00\u79cd\u6210\u5bf9\uff08Pairwise\uff09\u7684\u5173\u7cfb\uff0c\u5373\u6bcf\u4e2a\u50cf\u7d20\u90fd\u4f1a\u548c\u5176\u4ed6\u50cf\u7d20\u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\u3002\u5728\u66f4\u52a0\u6df1\u523b\u7684\u601d\u8003\u540e\uff0c\u672c\u6587\u7684\u4f5c\u8005\u8ba4\u4e3a\u9664\u4e86Pairwise\u7684\u5173\u7cfb\uff0c\u8fd9\u6837\u7684\u6ce8\u610f\u529b\u8fd8\u5e26\u6709\u4e00\u4e2a\u4e00\u5143\uff08Unary\uff09\u7684\u663e\u8457\u6027\u4fe1\u606f\uff0c\u5373\u6bcf\u4e2a\u50cf\u7d20\u672c\u8eab\u4e5f\u901a\u8fc7\u8fd9\u79cd\u8fd0\u7b97\u5bf9\u5176\u4ed6\u50cf\u7d20\u4ea7\u751f\u5f71\u54cd\u3002\\n\\n\u56de\u987eNon-Local\u662f\u5982\u4f55\u6355\u83b7\u957f\u8ddd\u79bb\u7279\u5f81\u7684\uff1a\\n$$\\ny_i = \\\\sum_{j\\\\in\\\\Omega}w(x_i,x_j)g(x_j)\\n$$\\n\u5176\u4e2d$y_i$\u8868\u793a\u5728\u4f4d\u7f6e$i$\u4e0a\u7684\u8f93\u51fa\uff0c$\\\\Omega$\u8868\u793a\u6240\u6709\u50cf\u7d20\u5bf9\u5e94\u7684\u7279\u5f81\u7684\u96c6\u5408\uff0c$g(\\\\cdot)$\u662f\u4e00\u4e2aemedding\u51fd\u6570\uff0c$w(x_i,x_j)$\u662f\u5728\u5d4c\u5957\uff08Embedded\uff09\u7a7a\u95f4\u5185\u8ba1\u7b97$x_i,x_j$\u76f8\u5173\u6027\u7684\u51fd\u6570\uff08\u5fd8\u8bb0\u4e86\u8fd9\u4e2a\u516c\u5f0f\u7684\u8bdd\u53ef\u4ee5\u590d\u4e60\u4e00\u4e0b[Non-Local Neural Networks](./[27]Non-local-Neural-Networks)\uff09\u3002\u5f53$w(x_i,x_j)$\u662fEmbedded Gaussian\u65f6\uff0c$w(x_i,x_j)$\u53ef\u4ee5\u5c55\u5f00\u4e3a\uff1a\\n$$\\nw(x_i,x_j) = \\\\sigma(q_i^Tk_j) = \\\\frac{exp(q_i^Tk_j)}{\\\\sum_{t\\\\in\\\\Omega}exp(q_i^Tk_t)}\\n$$\\n\u5176\u4e2d$q_i=W_qx_i$\uff0c$k_i=W_kx_i$\uff0c\u5206\u522b\u8868\u793a$x_i$\u7684\u67e5\u8be2\u503c\uff08query\uff09\u548c\u952e\uff08key\uff09\uff08\u5982\u6709\u7591\u60d1\u8bf7\u67e5\u9605[\u6ce8\u610f\u529b\u673a\u5236](../ch3p2/[4]attention)\u4e2d\u6709\u5173\u952e\u503c\u6ce8\u610f\u529b\u7684\u90e8\u5206\uff09\uff0c$\\\\sigma(\\\\cdot)$\u8868\u793a$softmax$\u51fd\u6570\u3002\\n\\n\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\uff0c\u8be5\u516c\u5f0f\u5efa\u7acb\u4e86\u4e00\u79cd\u6210\u5bf9\uff08pairwise\uff09\u7684\u5173\u7cfb\uff0c\u5373\u6bcf\u4e2a\u50cf\u7d20\u90fd\u4f1a\u548c\u5176\u4ed6\u50cf\u7d20\u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\u3002\u4f46\u662f\uff0c\u4f5c\u8005\u540c\u662f\u53d1\u73b0\u8be5\u516c\u5f0f\u4f1a\u540c\u65f6\u7f16\u7801\u50cf\u7d20\u7684\u663e\u8457\u6027\u4fe1\u606f\u3002\u8003\u8651\u5982\u4e0b\u7279\u6b8a\u60c5\u51b5\uff1a\u5f53\u6574\u5f20\u56fe\u7247\u4e0a\u7684\u6240\u6709\u50cf\u7d20\u4f7f\u7528\u540c\u4e2a\u5e38\u91cf\u4f5c\u4e3a\u5176query\u503c\u65f6\uff0c\u6bcf\u4e2a\u50cf\u7d20\u7684key\u5c31\u4f1a\u5bf9\u5176\u4ed6\u6240\u6709\u50cf\u7d20\u7684\u4f4d\u7f6e\u4e0a\u7684\u8f93\u51fa\u4ea7\u751f\u5f71\u54cd\uff08\u539f\u6587\u4e3a`Considering a special case where the query vector is a constant over all image pixels, a key pixel will have global impact on all query pixels.`\uff09\u3002\u5728[GCNet](./[28]GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond)\u4e2d\uff0c\u4f5c\u8005\u901a\u8fc7\u4e00\u7cfb\u5217\u5b9e\u9a8c\u5c55\u73b0\u4e86\u5728\u4e00\u4e9b\u89c6\u89c9\u4efb\u52a1\u4e2d\uff0cNon-Local\u5757\u5e38\u5e38\u9000\u5316\u4e3a\u4e00\u79cd\u4ec5\u5305\u542b\u4e00\u5143\u9879\uff08unary term\uff09\u7684\u6ce8\u610f\u529b\uff1a\\n\\n![](./src/Disentangled-Non-Local-Neural-Networks/image-20210712213203846.png)\\n\\n\u4e0a\u56fe\u8868\u793aNon-Local\u5757\u5728\u4e0d\u540c\u7684query\u4f4d\u7f6e\uff08\u56fe\u7247\u4e2d\u7684\u7ea2\u70b9\u4f4d\u7f6e\uff09\u4ea7\u751f\u7684attention map\u53ef\u89c6\u5316\uff08\u8be6\u89c1[Non-local Networks Meet Squeeze-Excitation Networks and Beyond](./[28]GCNet-Non-local-Networks-Meet-Squeeze-Excitation-Networks-and-Beyond)\uff09\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6bcf\u4e2a\u50cf\u7d20\u7684key\u548c\u6240\u6709\u7684query\u5177\u6709\u7c7b\u4f3c\u7684\u76f8\u4f3c\u5ea6\u65f6\uff0cNon-Local\u5757\u5c31\u4f1a\u9000\u5316\u6210\u4e00\u4e2a\u4ec5\u5305\u542b\u4e00\u5143\u9879\uff08unary term\uff09\u7684\u6ce8\u610f\u529b\uff0c\u8868\u8fbe\u50cf\u7d20\u4e4b\u95f4\u7279\u6b8a\u5173\u7cfb\u7684\u80fd\u529b\u964d\u4f4e\u4e86\u3002\u8fd9\u4e9b\u73b0\u8c61\u90fd\u8bf4\u660e\u4e86\uff0c\u9664\u4e86\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u7684\u6210\u5bf9\uff08pairwise\uff09\u5173\u7cfb\uff0c\u4e00\u5143\uff08unary\uff09\u7684\u5173\u7cfb\uff08\u4e5f\u5c31\u662f\u50cf\u7d20\u7684\u663e\u8457\u6027\u5173\u7cfb\uff09\u4e5f\u88abNon-Local\u5757\u7f16\u7801\u3002\\n\\n\u6240\u4ee5\uff0c\u63a5\u4e0b\u6765\u4f5c\u8005\u5c06Non-Local\u5757\u4e2d\u6240\u4ea7\u751f\u7684\u6ce8\u610f\u529b**\u62c6\u5206\u4e3a\u4e24\u4e2a\u9879\uff08\u5206\u91cf\uff09\uff1a**\\n\\n- **\u6210\u5bf9\u9879\uff08pairwise term\uff09\u7528\u4e8e\u8868\u793a\u50cf\u7d20\u5bf9\u53e6\u4e00\u4e2a\u50cf\u7d20\u7684\u5355\u72ec\u5f71\u54cd**\\n- **\u4e00\u5143\u9879\uff08unary term\uff09\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u50cf\u7d20\u5bf9\u6240\u6709\u50cf\u7d20\u7684\u516c\u5171\u5f71\u54cd**\u3002\\n\\n\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u5355\u72ec\u8bad\u7ec3\u4e86\u4e24\u4e2a\u7f51\u7edc\uff0c\u5206\u522b\u7528\u4e8e\u5bf9\u4e00\u5143\u7684\u548c\u4e8c\u5143\u7684\u4e24\u79cd\u6ce8\u610f\u529b\u8fdb\u884c\u5b9e\u9a8c\uff0c\u4fdd\u8bc1\u5b83\u4eec\u4e92\u76f8\u4e0d\u53d7\u5bf9\u65b9\u5e72\u6270\uff0c\u5e76\u53d1\u73b0\u4e24\u79cd\u6ce8\u610f\u529b\u5206\u522b\u4ea7\u751f\u4e86\u4e0d\u540c\u7684\u4f5c\u7528\uff1a\\n\\n![image-20210716214158300](./src/Disentangled-Non-Local-Neural-Networks/image-20210716214158300.png)\\n\\n\u4e0a\u56fe\u662fNon-Local\u5757\u548c\u89e3\u8026\u7684Non-Local\u5757\u5404\u90e8\u5206\u4ea7\u751f\u6ce8\u610f\u529b\u7684\u53ef\u89c6\u5316\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6210\u5bf9\u9879\uff08pairwise term\uff09\u4ea7\u751f\u7684\u6ce8\u610f\u529b\u5f88\u597d\u5730\u5efa\u6a21\u4e86\u533a\u57df\u5185\u7684\u7ebf\u7d22\uff0c\u800c\u4e00\u5143\u9879\uff08unary term\uff09\u7684\u6ce8\u610f\u529b\u5f88\u597d\u5730\u5efa\u6a21\u4e86\u663e\u8457\u8fb9\u754c\u3002\u5bf9\u6bd4Non-Local\u5757\u5728Non-Local Neural Networks\u4e2d\u7684\u8868\u73b0\uff0c\u5f53\u8fd9\u4e24\u79cd\u6ce8\u610f\u529b\u6ca1\u6709\u88ab\u5206\u5f00\u65f6\uff0c\u5e76\u6ca1\u6709\u5b66\u4e60\u5230\u5982\u6b64\u6e05\u6670\u7684\u89c6\u89c9\u7ebf\u7d22\u3002\u5728\u540e\u7eed\u7684\u6d4b\u8bd5\u4e2d\uff0c\u4f5c\u8005\u53d1\u73b0\u7ed3\u5408\u4e86\u8fd9\u4e24\u79cd\u6ce8\u610f\u529b\u7684Non-Local\u672c\u8eab\u7684\u6027\u80fd\u751a\u81f3\u6bd4\u4ec5\u5305\u542b\u4e00\u5143\u9879\uff08unary term\uff09\u7684\u53d8\u4f53\u8fd8\u5dee\u3002\u8fd9\u8868\u660e\u5c06\u8fd9\u4e24\u4e2a\u9879\uff08term\uff09\u8026\u5408\u5728\u4e00\u8d77\u53ef\u80fd\u4e0d\u5229\u4e8e\u8fd9\u4e9b\u89c6\u89c9\u7ebf\u7d22\u7684\u5b66\u4e60\u3002\\n\\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f5c\u8005\u5c31\u5c06\u8fd9\u4e24\u9879\u5206\u5f00\uff0c\u63d0\u51fa\u4e86\u89e3\u8026\uff08Disentangled\uff09\u7684Non-Local\u3002\u5728\u8fd9\u4e2a\u8bbe\u8ba1\u4e2d\uff0c\u4e0a\u6587\u63d0\u5230\u7684\u4e00\u5143\u9879\uff08unary term\uff09\u7ecf\u8fc7\u5355\u72ec\u7684\u5d4c\u5165\uff08embadding\uff09\u548c\u5355\u72ec\u7684$softmax$\u4ece\u539f\u672c\u7684\u5206\u5e03\u4e2d\u8131\u79bb\u72ec\u7acb\u51fa\u6765\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u4e24\u9879\u7684\u89e3\u8026\u3002\\n\\n## Dividing Non-local Block into Pairwise and Unary Terms\\n\\n\u4e8e\u662f\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5c06\u4e0a\u8ff0\u516c\u5f0f\u5206\u89e3\u4e3apairwise\u548cunary\u4e24\u9879\uff0c\u5e76\u4f7f\u5b83\u4eec\u76f8\u4e92\u4e0d\u4ea7\u751f\u5f71\u54cd\u5462\uff1f\\n\\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u80fd\u5355\u7eaf\u8868\u793akey\u548cquery\u4e4b\u95f4\u5173\u7cfb\u7684\u70b9\u79ef\uff0c\u79f0\u4e3a\u767d\u5316\uff08whitened\uff09\u70b9\u79ef\u7528\u4e8e\u8868\u793apairwise\u9879\uff1a\\n$$\\n(q_i-\\\\mu_q)^T(k_j-\\\\mu_k)\\n$$\\n\u5176\u4e2d$\\\\mu_q=\\\\frac{1}{|\\\\Omega|}\\\\sum_{i\\\\in\\\\Omega}q_i$\u548c$\\\\mu_k = \\\\frac{1}{|\\\\Omega|}\\\\sum_{j\\\\in\\\\Omega}k_j$\u5206\u522b\u8868\u793a\u6240\u6709\u50cf\u7d20\u7684query\u548ckey\uff08\u5728\u5d4c\u5165\u7a7a\u95f4\uff09\u7684\u5747\u503c\uff0c\u8fd9\u79cd\u767d\u5316\uff08whitened\uff09\u7684\u8bbe\u8ba1\u4f7f\u7528query\u548ckey\u4e4b\u95f4\u7684\u5f52\u4e00\u5316\u5dee\u5f02\u6765\u8861\u91cf\u5176\u76f8\u4f3c\u6027\u3002\u4e0a\u8ff0\u8868\u8fbe\u5f0f\u548cNon-Local\u4e2d\u7684\u539f\u59cb\u8bbe\u8ba1\u5173\u7cfb\u5982\u4e0b\uff1a\\n$$\\nq_i^Tk_j =(q_i-\\\\mu_q)^T(k_j-\\\\mu_k) + \\\\mu_q^Tk_j+q_i^T\\\\mu_k+\\\\mu_q^T\\\\mu_k\\n$$\\n\u5176\u4e2d\u6700\u540e\u4e24\u9879\u662f\u540c\u65f6\u51fa\u73b0\u5728\u76f8\u5173\u6027\u51fd\u6570\uff1a\\n$$\\nw(x_i,x_j) = \\\\sigma(q_i^Tk_j) = \\\\frac{exp(q_i^Tk_j)}{\\\\sum_{t\\\\in\\\\Omega}exp(q_i^Tk_t)}\\n$$\\n\u7684\u5206\u5b50\u548c\u5206\u6bcd\u4e2d\u3002\u5728\u539f\u8bba\u6587\u7684\u9644\u5f55\u4e2d\uff0c\u4f5c\u8005\u8bc1\u660e\u4e86\u8fd9\u4f7f\u5f97\u6700\u540e\u4e24\u9879\u53ef\u4ee5\u88ab\u7ea6\u6389\u3002\u6240\u4ee5\uff0c\u76f8\u5173\u6027\u51fd\u6570\u53ef\u4ee5\u88ab\u5199\u4f5c\uff1a\\n$$\\nw(x_i,x_j) = \\\\sigma(q_i^Tk_j) = \\\\sigma(\\\\underbrace{(q_i-\\\\mu_q)^T(k_j-\\\\mu_k)}_{pairwise}+\\\\underbrace{\\\\mu_q^Tk_j}_{unary})\\n$$\\n\u901a\u8fc7\u8fd9\u79cd\u8bbe\u8ba1\uff0c\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u5728\u6b64\u5904\u5c31\u5b66\u4e60\u4e86\u4e24\u79cd\u5206\u5e03\uff0c\u4ece\u800c\u5728\u5206\u5e03\u4e0apairwise\u548cunary\u7684\u5173\u7cfb\u5c31\u88ab\u5206\u79bb\u4e86\u3002\\n\\n![image-20210716214959782](./src/Disentangled-Non-Local-Neural-Networks/image-20210716214959782.png)\\n\\n\u4e0a\u56fe\u4e2d\uff08b\uff09\u3001\uff08c\uff09\u5206\u522b\u8868\u793aPairwise Non-Local\u548cUnary Non-Local\u3002\uff08d\uff09\u662f\u4e0a\u8ff0\u516c\u5f0f\u7684\u7f51\u7edc\u7ed3\u6784\u8868\u793a\u3002"},{"id":"/[30]RetinexNet-for-Low-Light-Enhancement","metadata":{"permalink":"/blog/[30]RetinexNet-for-Low-Light-Enhancement","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[30]RetinexNet-for-Low-Light-Enhancement.md","source":"@site/blog/[30]RetinexNet-for-Low-Light-Enhancement.md","title":"Deep Retinex Decomposition for Low-Light Enhancement","description":"\u8bba\u6587\u540d\u79f0: Deep Retinex Decomposition for Low-Light Enhancement","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"low-light","permalink":"/blog/tags/low-light"},{"label":"backbone","permalink":"/blog/tags/backbone"}],"readingTime":20.45,"hasTruncateMarker":true,"authors":[{"name":"PommesPeter","title":"I want to be strong. But it seems so hard.","url":"https://blog.pommespeter.com/","email":"me@pommespeter.com","imageURL":"https://github.com/PommesPeter.png","key":"pommespeter"}],"frontMatter":{"title":"Deep Retinex Decomposition for Low-Light Enhancement","authors":["pommespeter"],"tags":["low-light","backbone"]},"prevItem":{"title":"Disentangled Non-Local Neural Networks","permalink":"/blog/[29]Disentangled-Non-Local-Neural-Networks"},"nextItem":{"title":"MSR-net - Low-light Image Enhancement Using Deep Convolutional Network","permalink":"/blog/[31]MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network"}},"content":"> \u8bba\u6587\u540d\u79f0: [Deep Retinex Decomposition for Low-Light Enhancement](https://arxiv.org/abs/1808.04560)\\n>\\n> \u8bba\u6587\u4f5c\u8005: Chen Wei, Wenjing Wang, Wenhan Yang, Jiaying Liu\\n>\\n> Code: [https://github.com/weichen582/RetinexNet](https://github.com/weichen582/RetinexNet)\\n\\n\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4f4e\u7167\u5ea6\u589e\u5f3a\u7684\u8bba\u6587\u3002\\n\\n- \u91c7\u7528\u4e86\u5206\u89e3\u7f51\u7edc\u548c\u589e\u5f3a\u7f51\u7edc\uff0c\u4f7f\u7528Retinex\u7406\u8bba\u6784\u5efa\u5206\u89e3\u7f51\u7edc\uff0c\u5206\u89e3\u540e\u518d\u8fdb\u884c\u589e\u5f3a\u3002\\n\\n## Abstract (\u6458\u8981)\\n\\n> Retinex model is an effective tool for low-light image enhancement. It assumes that observed images can be decomposed into the reflectance and illumination. Most existing Retinex-based methods have carefully designed hand-crafted constraints and parameters for this highly ill-posed decomposition, which may be limited by model capacity when applied in various scenes. In this paper, we collect a LOw-Light dataset (LOL) containing low/normal-light image pairs and propose a deepRetinex-Netlearned on this dataset, including a Decom-Net for decomposition and an Enhance-Net for illumination adjusment. In the training process for Decom-Net, there is no ground truth of decomposed reflectance and illumination. The network is learned with only key constraints including the consistent reflectance shared by paired low/normal-light images, and the smoothness of illumination. Based on the decomposition, subsequent lightness enhancement is conducted on illumination by an enhancement network called Enhance-Net, and for joint denoising there is a denoising operation on reflectance. The Retinex-Net is end-to-end trainable, so that the learned decomposition is by nature good for lightness adjustment. Extensive experiments demonstrate that our method not only achieves visually pleasing quality for low-light enhancement but also provides a good representation of image decomposition.\\n\\nRetinex\u6a21\u578b\u662f\u5f31\u5149\u56fe\u50cf\u589e\u5f3a\u7684\u6709\u6548\u5de5\u5177\u3002\u5b83\u5047\u8bbe\u89c2\u5bdf\u5230\u7684\u56fe\u50cf**\u53ef\u4ee5\u5206\u89e3\u4e3a\u53cd\u5c04\u7387\u548c\u7167\u5ea6**\u3002\u5927\u591a\u6570\u73b0\u6709\u7684\u57fa\u4e8e\u89c6\u7f51\u819c\u7684\u65b9\u6cd5\u90fd\u4e3a\u8fd9\u79cd\u9ad8\u5ea6\u4e0d\u9002\u5b9a\u7684\u5206\u89e3\u7cbe\u5fc3\u8bbe\u8ba1\u4e86\u624b\u5de5\u5236\u4f5c\u7684\u7ea6\u675f\u548c\u53c2\u6570\uff0c\u5f53\u5e94\u7528\u4e8e\u5404\u79cd\u573a\u666f\u65f6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u53d7\u5230\u6a21\u578b\u5bb9\u91cf\u7684\u9650\u5236\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u6536\u96c6\u4e86\u4e00\u4e2a\u5305\u542b\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\u5bf9\u7684\u5f31\u5149\u6570\u636e\u96c6\uff0c\u5e76\u5728\u6b64\u6570\u636e\u96c6\u4e0a\u63d0\u51fa\u4e86\u4e00\u4e2aDeeprinex Netlearn\uff0c\u5305\u62ec\u4e00\u4e2a\u7528\u4e8e\u5206\u89e3\u7684Decom-Net\u548c\u4e00\u4e2a\u7528\u4e8e\u5149\u7167\u8c03\u6574\u7684\u589e\u5f3a-Net\u3002\u5728Decom-Net\u7684\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u5b58\u5728\u5206\u89e3\u53cd\u5c04\u7387\u548c\u5149\u7167\u7684\u57fa\u672c\u4e8b\u5b9e\u3002\u8be5\u7f51\u7edc\u4ec5\u5728\u5173\u952e\u7ea6\u675f\u6761\u4ef6\u4e0b\u5b66\u4e60\uff0c\u5305\u62ec\u6210\u5bf9\u7684\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\u5171\u4eab\u7684\u4e00\u81f4\u53cd\u5c04\u7387\u4ee5\u53ca\u7167\u660e\u7684\u5e73\u6ed1\u5ea6\u3002\u5728\u5206\u89e3\u7684\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u589e\u5f3a\u7f51\u7edc\u5bf9\u5149\u7167\u8fdb\u884c\u540e\u7eed\u7684\u4eae\u5ea6\u589e\u5f3a\uff0c\u5bf9\u4e8e\u8054\u5408\u53bb\u566a\uff0c\u5bf9\u53cd\u5c04\u7387\u8fdb\u884c\u53bb\u566a\u64cd\u4f5c\u3002RetinexNet\u662f\u7aef\u5230\u7aef\u8bad\u7ec3\u7684\uff0c\u56e0\u6b64\u5b66\u4e60\u7684\u5206\u89e3\u672c\u8d28\u4e0a\u6709\u5229\u4e8e\u4eae\u5ea6\u8c03\u6574\u3002\u5927\u91cf\u5b9e\u9a8c\u8868\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4e0d\u4ec5\u5728\u5f31\u5149\u589e\u5f3a\u65b9\u9762\u83b7\u5f97\u4e86\u89c6\u89c9\u4e0a\u4ee4\u4eba\u6ee1\u610f\u7684\u8d28\u91cf\uff0c\u800c\u4e14\u63d0\u4f9b\u4e86\u56fe\u50cf\u5206\u89e3\u7684\u826f\u597d\u8868\u793a\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## Introduction\\n\\n\u56fe\u50cf\u6355\u6349\u4e2d\u7684\u7167\u660e\u4e0d\u8db3\u4f1a\u663e\u8457\u964d\u4f4e\u56fe\u50cf\u7684\u53ef\u89c1\u6027\u3002\u4e22\u5931\u7684\u7ec6\u8282\u548c\u4f4e\u5bf9\u6bd4\u5ea6\u4e0d\u4ec5\u4f1a\u9020\u6210\u4e0d\u6109\u5feb\u7684\u4e3b\u89c2\u611f\u53d7\uff0c\u8fd8\u4f1a\u635f\u5bb3\u8bb8\u591a\u4e3a\u6b63\u5e38\u5149\u7ebf\u56fe\u50cf\u8bbe\u8ba1\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u7cfb\u7edf\u7684\u6027\u80fd\u3002\u7167\u660e\u4e0d\u8db3\u7684\u539f\u56e0\u5f88\u591a\uff0c\u4f8b\u5982\u5149\u7ebf\u4e0d\u8db3\u7684\u73af\u5883\u3001\u6444\u5f71\u8bbe\u5907\u6027\u80fd\u6709\u9650\u4ee5\u53ca\u8bbe\u5907\u914d\u7f6e\u4e0d\u5f53\u3002\\n\\n\u76f4\u65b9\u56fe\u5747\u8861\u5316(HE)  [20]\u53ca\u5176\u53d8\u4f53\u6291\u5236\u8f93\u51fa\u56fe\u50cf\u7684\u76f4\u65b9\u56fe\u4ee5\u6ee1\u8db3\u67d0\u4e9b\u7ea6\u675f\u3002\u57fa\u4e8e\u53bb\u96fe\u7684\u65b9\u6cd5[5]\u5229\u7528\u4e86\u5149\u7167\u4e0d\u8db3\u7684\u56fe\u50cf\u548c\u6726\u80e7\u73af\u5883\u4e2d\u7684\u56fe\u50cf\u4e4b\u95f4\u7684\u53cd\u5411\u8054\u7cfb\u3002\u53e6\u4e00\u7c7b\u5f31\u5149\u589e\u5f3a\u65b9\u6cd5\u5efa\u7acb\u5728Retinex\u7406\u8bba[12]\u7684\u57fa\u7840\u4e0a\uff0c\u8be5\u7406\u8bba\u5047\u8bbe\u89c2\u5bdf\u5230\u7684\u5f69\u8272\u56fe\u50cf\u53ef\u4ee5**\u5206\u89e3\u4e3a\u53cd\u5c04\u7387\u548c\u7167\u5ea6**\u3002\u4f5c\u4e3a\u65e9\u671f\u7684\u5c1d\u8bd5\uff0c\u5355\u5c3a\u5ea6\u89c6\u7f51\u819c(SSR)  [11]**\u901a\u8fc7\u9ad8\u65af\u6ee4\u6ce2\u5668\u5c06\u5149\u7167\u56fe\u9650\u5236\u4e3a\u5e73\u6ed1**\u7684\u3002**\u591a\u5c3a\u5ea6\u89c6\u7f51\u819c(MSRCR)  [10]\u901a\u8fc7\u591a\u5c3a\u5ea6\u9ad8\u65af\u6ee4\u6ce2\u5668\u548c\u989c\u8272\u6062\u590d\u6269\u5c55\u4e86SSR\u3002**[23]\u63d0\u51fa\u4e86\u4e00\u79cd\u5229\u7528\u4eae\u5ea6\u7ea7\u8bef\u5dee\u6d4b\u91cf\u6765\u4fdd\u6301\u7167\u660e\u81ea\u7136\u6027\u7684\u65b9\u6cd5\u3002Fu\u7b49\u4eba[7]\u63d0\u51fa\u878d\u5408\u521d\u59cb\u5149\u7167\u56fe\u7684\u591a\u4e2a\u5bfc\u6570\u3002SRIE  [7]\u4f7f\u7528\u52a0\u6743\u53d8\u5206\u6a21\u578b\u540c\u65f6\u4f30\u8ba1\u53cd\u5c04\u7387\u548c\u7167\u5ea6\u3002\u64cd\u7eb5\u7167\u660e\u540e\uff0c\u53ef\u4ee5\u6062\u590d\u76ee\u6807\u7ed3\u679c\u3002\u53e6\u4e00\u65b9\u9762\uff0cLIME [9]\u4ec5\u5229\u7528\u7ed3\u6784\u5148\u9a8c\u4f30\u8ba1\u5149\u7167\uff0c\u5e76\u4f7f\u7528\u53cd\u5c04\u4f5c\u4e3a\u6700\u7ec8\u7684\u589e\u5f3a\u7ed3\u679c\u3002\u8fd8\u6709\u57fa\u4e8eRetinex\u7684\u8054\u5408\u5f31\u5149\u589e\u5f3a\u548c\u566a\u58f0\u53bb\u9664\u65b9\u6cd5[14\uff0c15]\u3002\u5bf9\u4e8eCNN\u65b9\u6cd5\uff0cCNN\u5728\u4f4e\u7ea7\u522b\u56fe\u50cf\u5904\u7406\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u5e94\u7528\uff0c\u5305\u62ec**\u8d85\u5206\u8fa8\u7387[6\uff0c24\uff0c26\uff0c27]\uff0c\u53bb\u96e8[16\uff0c21\uff0c25]\u7b49.  Lore\u7b49[17]\u4f7f\u7528\u5806\u53e0\u7a00\u758f\u53bb\u566a\u81ea\u52a8\u7f16\u7801\u5668\u540c\u65f6\u8fdb\u884c\u5f31\u5149\u589e\u5f3a\u548c\u964d\u566a(LLNet)**\uff0c\u4f46\u6ca1\u6709\u8003\u8651\u5f31\u5149\u56fe\u7247\u7684\u6027\u8d28\u3002(\u524d\u4eba\u5e38\u7528\u7684\u65b9\u6cd5)\\n\\n\u4e3a\u4e86\u514b\u670d\u8fd9\u4e9b\u56f0\u96be\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u6570\u636e\u9a71\u52a8\u7684Retinex\u5206\u89e3\u65b9\u6cd5\u3002\u5efa\u7acb\u4e86\u4e00\u4e2a\u6df1\u5ea6\u7f51\u7edc\uff0c\u79f0\u4e3aRetinexNet\uff0c\u5b83\u96c6\u6210\u4e86\u56fe\u50cf\u5206\u89e3\u548c\u8fde\u7eed\u589e\u5f3a\u64cd\u4f5c\u3002\u9996\u5148\uff0cDecompositionNet\u88ab\u7528\u6765\u5c06\u89c2\u5bdf\u5230\u7684\u56fe\u50cf\u5206\u5272\u6210\u72ec\u7acb\u4e8e\u5149\u7167\u7684\u53cd\u5c04\u548c\u7ed3\u6784\u611f\u77e5\u7684\u5e73\u6ed1\u5149\u7167\u3002Decom-Net\u662f\u5728\u4e24\u4e2a\u7ea6\u675f\u6761\u4ef6\u4e0b\u5b66\u4e60\u7684\u3002\\n\\n\u9996\u5148\uff0c\u4f4e/\u6b63\u5e38\u5149\u56fe\u50cf\u5177\u6709\u76f8\u540c\u7684\u53cd\u5c04\u7387\u3002\u5176\u6b21\uff0c\u5149\u7167\u56fe\u5e94\u8be5\u662f\u5e73\u6ed1\u7684\uff0c\u4f46\u4fdd\u7559\u4e3b\u8981\u7ed3\u6784\uff0c\u8fd9\u662f**\u901a\u8fc7\u7ed3\u6784\u611f\u77e5\u7684\u603b\u53d8\u5316\u635f\u5931**\u83b7\u5f97\u7684\u3002\u7136\u540e\uff0c\u53e6\u4e00\u4e2a**\u589e\u5f3a\u7f51\u7edc\u8c03\u6574\u5149\u7167\u56fe**\uff0c\u4ee5\u4fdd\u6301\u5927\u533a\u57df\u7684\u4e00\u81f4\u6027\uff0c\u540c\u65f6\u901a\u8fc7\u591a\u5c3a\u5ea6\u62fc\u63a5\u8c03\u6574\u5c40\u90e8\u5206\u5e03\u3002\u7531\u4e8e\u566a\u58f0\u5728\u9ed1\u6697\u533a\u57df\u901a\u5e38\u66f4\u5927\uff0c\u751a\u81f3\u88ab\u589e\u5f3a\u8fc7\u7a0b\u653e\u5927\uff0c\u56e0\u6b64\u5f15\u5165\u4e86\u5bf9\u53cd\u5c04\u7387\u7684\u53bb\u566a\u3002\\n\\n\u4e3a\u4e86\u8bad\u7ec3\u8fd9\u6837\u4e00\u4e2a\u7f51\u7edc\uff0c\u6211\u4eec\u4ece\u771f\u5b9e\u6444\u5f71\u548c\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684\u5408\u6210\u56fe\u50cf\u6784\u5efa\u4e86\u4e00\u4e2a\u4f4e/\u6b63\u5e38\u5149\u56fe\u50cf\u5bf9\u7684\u6570\u636e\u96c6\u3002\u5927\u91cf\u5b9e\u9a8c\u8868\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4e0d\u4ec5\u5728\u5f31\u5149\u589e\u5f3a\u4e2d\u83b7\u5f97\u4e86\u4ee4\u4eba\u6ee1\u610f\u7684\u89c6\u89c9\u8d28\u91cf\uff0c\u800c\u4e14\u63d0\u4f9b\u4e86\u56fe\u50cf\u5206\u89e3\u7684\u826f\u597d\u8868\u793a\u3002\u6211\u4eec\u5de5\u4f5c\u7684\u8d21\u732e\u603b\u7ed3\u5982\u4e0b:\\n\\n- \u6784\u5efa\u4e86\u4e00\u4e2a\u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u6355\u83b7\u7684\u6210\u5bf9\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\u3002\u636e\u6211\u4eec\u6240\u77e5\uff0c\u5b83\u662f\u5fae\u5149\u589e\u5f3a\u9886\u57df\u7684\u9996\u6b21\u5c1d\u8bd5\uff1b\\n- \u6784\u5efa\u4e86\u4e00\u4e2a\u57fa\u4e8eRetinex\u6a21\u578b\u7684\u6df1\u5ea6\u5b66\u4e60\u56fe\u50cf\u5206\u89e3\u6a21\u578b\uff1b\\n- \u5206\u89e3\u7f51\u7edc\u662f\u7528\u8fde\u7eed\u7684\u5f31\u5149\u589e\u5f3a\u7f51\u7edc\u8fdb\u884c\u7aef\u5230\u7aef\u8bad\u7ec3\u7684\uff0c\u56e0\u6b64\u80fd\u591f\u81ea\u7136\u5730\u8c03\u8282\u5149\u7167\uff1b\\n- \u9488\u5bf9\u6df1\u5ea6\u56fe\u50cf\u5206\u89e3\uff0c**\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u6784\u611f\u77e5\u7684\u5168\u53d8\u5dee\u7ea6\u675f\u3002\u901a\u8fc7\u51cf\u8f7b\u68af\u5ea6\u5f3a\u7684\u5730\u65b9\u7684\u603b\u53d8\u5316\u7684\u5f71\u54cd\uff0c\u7ea6\u675f\u6210\u529f\u5730\u5e73\u6ed1\u4e86\u5149\u7167\u56fe\u5e76\u4fdd\u7559\u4e86\u4e3b\u8981\u7ed3\u6784**\u3002\\n\\n![image-20210712162050981](./src/RetinexNet-for-Low-Light-Enhancement/image-20210712162050981.png)\\n\\n## RetinexNet\u4f4e\u7167\u5ea6\u589e\u5f3a\\n\\n\u7ecf\u5178\u7684Retienx\u7406\u8bba\u6a21\u62df\u4e86\u4eba\u7c7b\u7684\u989c\u8272\u611f\u77e5\u3002\u5b83\u5047\u8bbe\u89c2\u5bdf\u5230\u7684\u56fe\u50cf\u53ef\u4ee5\u5206\u89e3\u6210\u4e24\u4e2a\u5206\u91cf\uff0c\u53cd\u5c04\u7387\u548c\u7167\u5ea6\u3002\u8ba9\u6211\u4eec\u8868\u793a\u6e90\u56fe\u50cf\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u8868\u793a\u4e3a\\n$$\\nS=R\\\\circ I\\n$$\\n\u5176\u4e2d$R$\u8868\u793a\u53cd\u5c04\u7387\uff0c$I$\u8868\u793a\u4eae\u5ea6\uff0c$\\\\circ$\u8868\u793a\u70b9\u4e58\uff0c\u56fe\u50cf\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u9010\u5143\u7d20\u8fdb\u884c\u76f8\u4e58\u3002\u53cd\u5c04\u7387\u63cf\u8ff0\u4e86\u88ab\u6355\u83b7\u7269\u4f53\u7684\u5185\u5728\u5c5e\u6027\uff0c\u5b83\u88ab\u8ba4\u4e3a\u5728\u4efb\u4f55\u4eae\u5ea6\u6761\u4ef6\u4e0b\u90fd\u662f\u4e00\u81f4\u7684\u3002\u7167\u660e\u8868\u793a\u7269\u4f53\u4e0a\u7684\u5404\u79cd\u4eae\u5ea6\u3002\u5728\u5f31\u5149\u56fe\u50cf\u4e0a\uff0c\u5b83\u901a\u5e38\u53d7\u5230\u9ed1\u6697\u548c\u4e0d\u5e73\u8861\u7167\u660e\u5206\u5e03\u7684\u5f71\u54cd\u3002\\n\\n\u5728\u89c6\u7f51\u819c\u7406\u8bba\u7684\u542f\u53d1\u4e0b\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6df1\u5ea6\u89c6\u7f51\u819c\u7f51\u7edc\u6765\u8054\u5408\u6267\u884c\u53cd\u5c04/\u5149\u7167\u5206\u89e3\u548c\u5f31\u5149\u589e\u5f3a\u3002\u7f51\u7edc\u7531\u4e09\u4e2a\u6b65\u9aa4\u7ec4\u6210:**\u5206\u89e3\u3001\u8c03\u6574\u548c\u91cd\u5efa**\u3002\\n\\n\u5728\u5206\u89e3\u6b65\u9aa4\u4e2d\uff0c\u89c6\u7f51\u819c\u795e\u7ecf\u7f51\u7edc\u901a\u8fc7\u5206\u89e3\u795e\u7ecf\u7f51\u7edc\u5c06\u8f93\u5165\u56fe\u50cf\u5206\u89e3\u6210\u56fe\u50cf\u3002\u5b83\u5728\u8bad\u7ec3\u9636\u6bb5\u63a5\u6536\u6210\u5bf9\u7684\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\uff0c\u800c\u5728\u6d4b\u8bd5\u9636\u6bb5\u53ea\u63a5\u6536\u5f31\u5149\u56fe\u50cf\u4f5c\u4e3a\u8f93\u5165\u3002\\n\\n\u5728\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\u5177\u6709\u76f8\u540c\u7684\u53cd\u5c04\u7387\u548c\u5149\u7167\u5e73\u6ed1\u5ea6\u7684\u7ea6\u675f\u4e0b\uff0cDecom-Net\u5b66\u4e60\u4ee5\u6570\u636e\u9a71\u52a8\u7684\u65b9\u5f0f\u63d0\u53d6\u4e0d\u540c\u5149\u7167\u56fe\u50cf\u4e4b\u95f4\u7684\u4e00\u81f4R\u3002\\n\\n\u5728\u8c03\u6574\u6b65\u9aa4\u4e2d\uff0c\u4f7f\u7528\u589e\u5f3a\u7f51\u6765\u7167\u4eae\u5149\u7167\u56fe\u3002**\u589e\u5f3a\u7f51\u7edc\u91c7\u7528\u4e00\u4e2a\u6574\u4f53\u7684\u7f16\u7801\u5668-\u89e3\u7801\u5668\u6846\u67b6**\u3002**\u4f7f\u7528\u591a\u5c3a\u5ea6\u62fc\u63a5\u6765\u4fdd\u6301\u5927\u533a\u57df\u4e2d\u7167\u660e\u4e0e\u4e0a\u4e0b\u6587\u4fe1\u606f\u7684\u5168\u5c40\u4e00\u81f4\u6027\uff0c\u540c\u65f6\u96c6\u4e2d\u6ce8\u610f\u529b\u8c03\u6574\u5c40\u90e8\u5206\u5e03\u3002**\u6b64\u5916\uff0c\u5982\u679c\u9700\u8981\uff0c\u901a\u5e38\u5728\u5f31\u5149\u6761\u4ef6\u4e0b\u51fa\u73b0\u7684\u653e\u5927\u566a\u58f0\u5c06\u4ece\u53cd\u5c04\u7387\u4e2d\u53bb\u9664\u3002\u7136\u540e\uff0c\u6211\u4eec\u5728\u91cd\u5efa\u9636\u6bb5\u901a\u8fc7\u9010\u5143\u7d20\u4e58\u6cd5\u6765\u7ec4\u5408\u8c03\u6574\u540e\u7684\u7167\u660e\u548c\u53cd\u5c04\u3002\\n\\n### \u6570\u636e\u9a71\u52a8\u578b\u56fe\u50cf\u5206\u89e3\\n\\n\u5206\u89e3\u89c2\u5bdf\u5230\u7684\u56fe\u50cf\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5229\u7528\u7cbe\u5fc3\u624b\u5de5\u5236\u4f5c\u7684\u7ea6\u675f\u76f4\u63a5\u5728\u5f31\u5149\u8f93\u5165\u56fe\u50cf\u4e0a\u4f30\u8ba1\u53cd\u5c04\u7387\u548c\u4eae\u5ea6\u3002\u4ece(1)\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa\u9ad8\u5ea6\u4e0d\u9002\u5b9a\u7684\uff0c\u4e0d\u5bb9\u6613\u8bbe\u8ba1\u9002\u5408\u5404\u79cd\u573a\u666f\u7684\u7ea6\u675f\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8bd5\u56fe\u4ee5\u6570\u636e\u9a71\u52a8\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c**\u901a\u8fc7\u5f15\u5165\u6570\u636e\u6765\u5b9e\u73b0\u4f30\u8ba1\u56fe\u50cf\u7684\u53cd\u5c04\u7387\u548c\u4eae\u5ea6\u3002**\\n\\n\u5728\u8bad\u7ec3\u9636\u6bb5\uff0cDecom-Net\u6bcf\u6b21\u63a5\u6536\u6210\u5bf9\u7684\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\uff0c\u5e76\u5728\u5f31\u5149\u56fe\u50cf\u548c\u6b63\u5e38\u5149\u56fe\u50cf\u5177\u6709\u76f8\u540c\u53cd\u5c04\u7387\u7684\u6307\u5bfc\u4e0b\uff0c\u5b66\u4e60\u5f31\u5149\u53ca\u5176\u5bf9\u5e94\u7684\u6b63\u5e38\u5149\u56fe\u50cf\u7684\u5206\u89e3\u3002\u8bf7\u6ce8\u610f\uff0c\u867d\u7136\u5206\u89e3\u662f\u7528\u6210\u5bf9\u6570\u636e\u8bad\u7ec3\u7684\uff0c\u4f46\u5b83\u53ef\u4ee5\u5728\u6d4b\u8bd5\u9636\u6bb5\u5355\u72ec\u5206\u89e3\u4f4e\u7167\u5ea6\u8f93\u5165\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u63d0\u4f9b\u53cd\u5c04\u7387\u548c\u7167\u5ea6\u7684\u57fa\u672c\u4e8b\u5b9e\u3002\u53ea\u6709\u5fc5\u8981\u7684\u77e5\u8bc6\uff0c**\u5305\u62ec\u53cd\u5c04\u7387\u7684\u4e00\u81f4\u6027\u548c\u5149\u7167\u56fe\u7684\u5e73\u6ed1\u5ea6\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u5d4c\u5165\u5230\u7f51\u7edc\u4e2d\u3002**\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u7f51\u7edc\u7684\u5206\u89e3\u662f\u4ece\u6210\u5bf9\u7684\u4f4e/\u6b63\u5e38\u5149\u56fe\u50cf\u4e2d\u81ea\u52a8\u5b66\u4e60\u7684\uff0c\u5e76\u4e14\u672c\u8d28\u4e0a\u9002\u5408\u4e8e\u63cf\u8ff0\u4e0d\u540c\u5149\u6761\u4ef6\u4e0b\u56fe\u50cf\u4e4b\u95f4\u7684\u5149\u53d8\u5316\u3002\\n\\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u867d\u7136\u8fd9\u4e2a\u95ee\u9898\u5728\u5f62\u5f0f\u4e0a\u53ef\u80fd\u4e0e\u539f\u6709\u56fe\u50cf\u5206\u89e3\u76f8\u4f3c\uff0c\u4f46\u672c\u8d28\u4e0a\u662f\u4e0d\u540c\u7684\u3002\u5728\u6211\u4eec\u7684\u4efb\u52a1\u4e2d\uff0c**\u6211\u4eec\u4e0d\u9700\u8981\u7cbe\u786e\u5730\u83b7\u5f97\u5b9e\u9645\u7684\u539f\u672c\u7684\u56fe\u50cf\uff0c\u800c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5149\u7ebf\u8c03\u8282\u8868\u793a**\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8ba9\u7f51\u7edc\u5b66\u4e60**\u5bfb\u627e\u5f31\u5149\u56fe\u50cf\u4e0e\u5176\u5bf9\u5e94\u7684\u589e\u5f3a\u7ed3\u679c\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u6210\u5206**\u3002\\n\\nDecomNet\u5c06\u4f4e\u7167\u5ea6\u56fe\u50cf$S_{low}$\u548c\u6b63\u5e38\u56fe\u50cf$S_{normal}$\u4f5c\u4e3a\u8f93\u5165\uff0c\u4f30\u8ba1$S_{low}$\u7684\u53cd\u5c04\u7387$R_{low}$\u548c\u4eae\u5ea6$I_{low}$\uff0c\u5bf9\u4e8e$S_{normal}$\u4e5f\u662f\u4f30\u8ba1\u53cd\u5c04\u7387$R_{normal}$\u548c\u4eae\u5ea6$I_{normal}$\u3002\u9996\u5148\u4f7f\u7528$3\\\\times3$\u7684\u5377\u79ef\u5c42\u4ece\u8f93\u5165\u56fe\u50cf\u4e2d\u63d0\u53d6\u7279\u5f81\uff0c\u901a\u8fc7\u51e0\u4e2a\u5e26\u6709ReLU\u6fc0\u6d3b\u51fd\u6570\u7684$3\\\\times3$\u7684\u5377\u79ef\u5c42\u5c06RGB\u56fe\u50cf\u6620\u5c04\u4e3a\u53cd\u5c04\u7387\u548c\u7167\u5ea6\u30023\xd73\u5377\u79ef\u5c42\u4ece\u7279\u5f81\u7a7a\u95f4\u6295\u5c04R\u548cI\uff0c\u5e76\u4f7f\u7528sigmoid\u51fd\u6570\u5c06R\u548cI\u90fd\u7ea6\u675f\u5728[0\uff0c1]\u8303\u56f4\u5185\u3002\\n\\nLoss\u7684\u7ec4\u6210\u4e3b\u8981\u6709\u4e09\u4e2a\u90e8\u5206\uff1a\u91cd\u6784\u635f\u5931$L_{recon}$\uff0c\u4e0d\u53d8\u53cd\u5c04\u7387\u635f\u5931$L_{ir}$\u548c\u5149\u7167\u5e73\u6ed1\u635f\u5931$L_{is}$\uff0c\u603b\u7684Loss\u7684\u635f\u5931\u4e3a:\\n$$\\nL=L_{recon}+\\\\lambda_{ir}L_{ir}+\\\\lambda_{is}L_{is}\\n$$\\n\\n\u5176\u4e2d\uff0c$\\\\lambda_{ir}$\u548c$\\\\lambda_{is}$\u8868\u793a\u53cd\u5c04\u7387\u548c\u5e73\u6ed1\u5149\u7167\u635f\u5931\u7684\u7cfb\u6570\u3002\u57fa\u4e8e\u6211\u4eec\u9884\u60f3\u7684\uff0c$R_{low}$\u548c$R_{high}$\u53ef\u4ee5\u7528\u5bf9\u5e94\u7684\u5149\u7167\u56fe\u91cd\u6784\u56fe\u50cf\uff0c\u91cd\u6784\u635f\u5931\u8868\u793a\u4e3a\\n\\n$$\\nL_{recon}=\\\\sum_{i=low,normal}\\\\sum_{j=low,normal}\\\\lambda_{ij}||R\\\\circ I_j-S_j||_1\\n$$\\n\\n\u4e0d\u53d8\u635f\u5931\u7528\u6765\u7ea6\u675f\u53cd\u5c04\u7387\u7684\u4e00\u81f4\u6027\uff0c\u635f\u5931\u51fd\u6570\u8868\u793a\u4e3a\\n\\n$$\\nL_{ir}=||R_{low}-R_{normal}||_1\\n$$\\n\\n\u5149\u7167\u635f\u5931\u5f53\u4e2d\uff0c\u5149\u7167\u56fe\u7684\u4e00\u4e2a\u57fa\u672c\u5047\u8bbe\u662f\u5c40\u90e8\u4e00\u81f4\u6027\u548c\u7ed3\u6784\u611f\u77e5\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5149\u7167\u8d34\u56fe\u7684\u4e00\u4e2a\u597d\u7684\u89e3\u51b3\u65b9\u6848\u5e94\u8be5\u662f\u5728\u7eb9\u7406\u7ec6\u8282\u5e73\u6ed1\u7684\u540c\u65f6\u4ecd\u7136\u53ef\u4ee5\u4fdd\u7559\u6574\u4f53\u7ed3\u6784\u8fb9\u754c\u3002\\n\\n- \u603b\u53ef\u53d8\u6700\u5c0f\u5316\u635f\u5931Total variation minimization (TV)\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97\u6574\u4e2a\u56fe\u7247\u7684\u68af\u5ea6\u6700\u5c0f\uff0c\u8fd9\u662f\u6bd4\u8f83\u5e38\u7528\u6765\u505a\u5e73\u6ed1\u5148\u9a8c\u5728\u591a\u79cd\u56fe\u50cf\u7684\u6062\u590d\u4efb\u52a1\u4e2d\u4ed6\u76f4\u63a5\u4f7f\u7528TV\u4f5c\u4e3a\u635f\u5931\u5728\u5c40\u90e8\u533a\u57df\u4e2d\u4f1a\u5931\u6548\uff0c\u4f8b\u5982\u56fe\u50cf\u4e2d\u6709\u5f88\u5f3a\u7684\u7ed3\u6784\u6216\u8005\u4eae\u5ea6\u53d8\u5316\u5f88\u5927\u7684\u5730\u65b9\u3002\u8fd9\u662f\u7531\u4e8e\u5149\u7167\u56fe\u7684\u68af\u5ea6\u7684\u5747\u5300\u51cf\u5c11\uff0c\u65e0\u8bba\u8be5\u533a\u57df\u662f\u6587\u672c\u7ec6\u8282\u8fd8\u662f\u5f3a\u8fb9\u754c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cTV\u635f\u5931\u51fd\u6570\u662f\u4e00\u79cd\u6ca1\u6709\u8003\u8651\u5230\u7ed3\u6784\u7684\u635f\u5931\u51fd\u6570\uff0c\u5982\u56fe 2 \u6240\u793a\uff0c\u7167\u660e\u662f\u6a21\u7cca\u7684\uff0c\u5e76\u4e14\u5728\u53cd\u5c04\u4e0a\u7559\u4e0b\u4e86\u5f3a\u70c8\u7684\u9ed1\u8272\u8fb9\u7f18\u3002\\n\\n    ![image-20210715091914773](./src/RetinexNet-for-Low-Light-Enhancement/image-20210715091914773.png)\\n\\n    \u4e3a\u4e86\u8ba9\u635f\u5931\u51fd\u6570\u610f\u8bc6\u610f\u8bc6\u5230\u56fe\u50cf\u7684\u7ed3\u6784\uff0c\u5bf9\u539f\u672c\u7684TV\u51fd\u6570\u53ef\u4ee5\u7ed9\u53cd\u5c04\u56fe\u7684\u68af\u5ea6\u8fdb\u884c\u52a0\u6743\u6700\u7ec8$L_{is}$\u8868\u793a\u4e3a:\\n    $$\\n    L_{is}=\\\\sum_{i=low,normal}||\\\\nabla I_i\\\\circ \\\\exp(-\\\\lambda\\\\nabla R_i)||\\n    $$\\n    \u5176\u4e2d$\\\\nabla$\u8868\u793a\u68af\u5ea6\uff0c\u5305\u542b\u6c34\u5e73\u65b9\u5411$\\\\nabla_h$\u548c\u5782\u76f4\u65b9\u5411$\\\\nabla_v$\uff0c$\\\\lambda_g$\u8868\u793a\u5e73\u8861\u7ed3\u6784\u610f\u8bc6\u5f3a\u5ea6\u7684\u7cfb\u6570\u3002\u5bf9\u4e8e$\\\\exp(-\\\\lambda_g\\\\nabla R_i)$\uff0c$L_{is}$\u51cf\u8f7b\u4e86\u53cd\u5c04\u7387\u7684\u68af\u5ea6\u6bd4\u8f83\u9661\u5ced\u7684\u5e73\u6ed1\u7ea6\u675f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u56fe\u50cf\u7ed3\u6784\u7684\u5b9a\u4f4d\u548c\u5149\u7167\u90fd\u662f\u4e0d\u8fde\u7eed\u7684\u3002\\n\\n    \\n\\n### \u591a\u5c3a\u5ea6\u5149\u7167\u8c03\u6574\\n\\n\u589e\u5f3a\u7f51\u7edc\u91c7\u7528\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7684\u7ed3\u6784\u4f5c\u4e3a\u4e3b\u4f53\uff0c\u4e3a\u4e86\u4ece\u5206\u5c42\u7684\u89d2\u5ea6\u8c03\u6574\u5149\u7167\uff0c\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0a\u5f15\u5165\u4e86\u591a\u5c3a\u5ea6\u7684concat\u3002\u7f16\u7801\u5668\u89e3\u7801\u5668\u7ed3\u6784\u5728\u5927\u533a\u57df\u4e2d\u80fd\u591f\u83b7\u5f97\u56fe\u50cf\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c**\u5728\u8f93\u5165\u56fe\u50cf\u88ab\u8fde\u7eed\u4e0b\u91c7\u6837\u5230\u5c0f\u5c3a\u5ea6\uff0c\u5728\u8fd9\u4e2a\u5c3a\u5ea6\u4e0b\u7f51\u7edc\u53ef\u4ee5\u6709\u6bd4\u8f83\u5927\u5c3a\u5ea6\u5149\u7167\u5206\u5e03\u7684\u89c6\u91ce\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u6211\u4eec\u5177\u6709\u81ea\u9002\u5e94\u8c03\u6574\u7684\u80fd\u529b\u3002**\u5229\u7528\u5927\u5c3a\u5ea6\u5149\u7167\u4fe1\u606f\uff0c\u4e0a\u91c7\u6837\u5757\u91cd\u5efa\u5c40\u90e8\u5149\u7167\u5206\u5e03\u3002\u901a\u8fc7\u5143\u7d20\u6c42\u548c\uff0c\u4ece\u4e0b\u91c7\u6837\u5757\u5230\u5176\u5bf9\u5e94\u7684\u955c\u50cf\u4e0a\u91c7\u6837\u5757\u5f15\u5165\u8df3\u8dc3\u8fde\u63a5\uff0c\u8fd9\u5f3a\u5236\u7f51\u7edc\u5b66\u4e60\u6b8b\u5dee\u3002\\n\\n\u4e3a\u4e86\u5206\u5c42\u8c03\u6574\u5149\u7167\uff0c\u5373\u4fdd\u6301\u5168\u5c40\u5149\u7167\u7684\u4e00\u81f4\u6027\uff0c\u540c\u65f6\u9002\u5e94\u4e0d\u540c\u7684\u5c40\u90e8\u5149\u7167\u5206\u5e03\uff0c\u5f15\u5165\u4e86**\u591a\u5c3a\u5ea6\u62fc\u63a5**\u3002\u5982\u679c\u6709$M$\u4e2a\u9012\u589e\u7684\u4e0a\u91c7\u6837\u5757\uff0c\u6bcf\u4e2a\u4e0a\u91c7\u6837\u5757\u63d0\u53d6\u4e00\u4e2a$C$\u901a\u9053\u7279\u5f81\u56fe\uff0c\u6211\u4eec\u901a\u8fc7\u6700\u8fd1\u90bb\u63d2\u503c\u8c03\u6574\u8fd9\u4e9b\u4e0d\u540c\u6bd4\u4f8b\u7684\u7279\u5f81\u5230\u6700\u7ec8\u6bd4\u4f8b\uff0c\u5e76\u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u4e00\u4e2a$C\\\\times M$\u901a\u9053\u7279\u5f81\u56fe\u3002\u7136\u540e\uff0c\u901a\u8fc7$1\xd71$\u5377\u79ef\u5c42\uff0c\u7ea7\u8054\u7279\u5f81\u88ab\u7b80\u5316\u4e3a$C$\u901a\u9053\u3002\u9075\u5faa$3\xd73$\u5377\u79ef\u5c42\u6765\u91cd\u5efa\u7167\u660e\u56fe$\\\\hat I$.\\n\\n\u4e0b\u91c7\u6837\u5757\u7531\u6b65\u957f\u4e3a2\u7684\u5377\u79ef\u5c42\u548cReLU\u7ec4\u6210\u3002\u5728\u4e0a\u91c7\u6837\u5757\u4e2d\uff0c\u4f7f\u7528\u4e86\u5927\u5c0f\u8c03\u6574\u5377\u79ef\u5c42\u3002\u8c03\u6574\u5927\u5c0f\u5377\u79ef\u5c42\u7531\u6700\u8fd1\u90bb\u63d2\u503c\u64cd\u4f5c\u3001\u6b65\u957f\u4e3a1\u7684\u5377\u79ef\u5c42\u548cReLU\u7ec4\u6210\u3002\\n\\n\u589e\u5f3a\u7f51\u7edc\u7684\u635f\u5931\u51fd\u6570\u5c31\u7531\u91cd\u6784\u635f\u5931\u548c\u5149\u7167\u5e73\u6ed1\u635f\u5931\u7ec4\u6210\uff0c\u91cd\u6784\u635f\u5931\u610f\u5473\u7740\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u6b63\u5e38\u5149\u7167\u56fe$\\\\hat S$\\n$$\\nL_{recon}=||R_{low}\\\\circ\\\\hat I-S_{normal}||_1\\n$$\\n\u5149\u7167\u5e73\u6ed1\u635f\u5931\u4e0e(5)\u5f0f\u76f8\u540c\uff0c\u9664\u4e86$\\\\hat I$\u662f\u88ab\u52a0\u6743\u4e4b\u540e\u7684$R_{low}$\u7684\u68af\u5ea6\u56fe\u3002\\n\\n### \u57fa\u4e8e\u53cd\u5c04\u7387\u7684\u53bb\u566a\u65b9\u6cd5\\n\\n\u5728\u5206\u89e3\u6b65\u9aa4\u4e2d\uff0c\u5bf9\u7f51\u7edc\u65bd\u52a0\u82e5\u5e72\u7ea6\u675f\uff0c\u5176\u4e2d\u4e4b\u4e00\u662f\u5149\u7167\u56fe\u7684\u7ed3\u6784\u611f\u77e5\u5e73\u6ed1\u6027\u3002\u5f53\u4f30\u8ba1\u7684\u5149\u7167\u56fe\u5e73\u6ed1\u65f6\uff0c\u7ec6\u8282\u90fd\u4fdd\u7559\u5728\u53cd\u5c04\u7387\u4e0a\uff0c\u5305\u62ec\u589e\u5f3a\u7684\u566a\u58f0\u3002\u56e0\u6b64\uff0c\u5728\u7528\u5149\u7167\u56fe\u91cd\u5efa\u8f93\u51fa\u56fe\u50cf\u4e4b\u524d\uff0c\u53ef\u4ee5\u5bf9\u53cd\u5c04\u7387\u8fdb\u884c\u53bb\u566a\u5904\u7406\u3002\u9274\u4e8e\u6697\u533a\u57df\u7684\u566a\u58f0\u5728\u5206\u89e3\u8fc7\u7a0b\u4e2d\u6839\u636e\u4eae\u5ea6\u5f3a\u5ea6\u88ab\u653e\u5927\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e0e\u5149\u7167\u76f8\u5173\u7684\u53bb\u566a\u65b9\u6cd5\u3002\\n\\n## Dataset\\n\\n\u6211\u4eec\u7684\u6570\u636e\u96c6\u547d\u540d\u4e3a\u4f4e\u5149\u914d\u5bf9\u6570\u636e\u96c6(LOL)\uff0c\u5305\u542b500\u4e2a\u4f4e/\u6b63\u5e38\u5149\u56fe\u50cf\u5bf9\u3002\u636e\u6211\u4eec\u6240\u77e5\uff0cLOL\u662f\u7b2c\u4e00\u4e2a\u5305\u542b\u4ece\u771f\u5b9e\u573a\u666f\u4e2d\u83b7\u53d6\u7684\u7528\u4e8e\u5f31\u5149\u589e\u5f3a\u7684\u56fe\u50cf\u5bf9\u7684\u6570\u636e\u96c6\u3002\u5927\u591a\u6570\u5f31\u5149\u56fe\u50cf\u662f\u901a\u8fc7\u6539\u53d8\u66dd\u5149\u65f6\u95f4\u548cISO\u6765\u6536\u96c6\u7684\uff0c\u800c\u76f8\u673a\u7684\u5176\u4ed6\u914d\u7f6e\u662f\u56fa\u5b9a\u7684\u3002\u6211\u4eec\u4ece\u5404\u79cd\u573a\u666f\u4e2d\u6355\u6349\u56fe\u50cf\uff0c\u4f8b\u5982\u623f\u5c4b\u3001\u6821\u56ed\u3001\u4ff1\u4e50\u90e8\u3001\u8857\u9053\u3002\u56fe3\u793a\u51fa\u4e86\u573a\u666f\u7684\u5b50\u96c6\u3002\u7531\u4e8e\u76f8\u673a\u6296\u52a8\u3001\u7269\u4f53\u79fb\u52a8\u548c\u4eae\u5ea6\u53d8\u5316\u53ef\u80fd\u5bfc\u81f4\u56fe\u50cf\u5bf9\u4e4b\u95f4\u7684\u672a\u5bf9\u51c6\uff0c\u53d7[1]\u7684\u542f\u53d1\uff0c\u6211\u4eec\u4f7f\u7528\u4e09\u6b65\u65b9\u6cd5\u6765\u6d88\u9664\u6570\u636e\u96c6\u4e2d\u56fe\u50cf\u5bf9\u4e4b\u95f4\u7684\u8fd9\u79cd\u672a\u5bf9\u51c6\u3002\u5b9e\u73b0\u7ec6\u8282\u53ef\u4ee5\u5728\u8865\u5145\u6587\u4ef6\u4e2d\u627e\u5230\u3002\u8fd9\u4e9b\u539f\u59cb\u56fe\u50cf\u4f1a\u8c03\u6574\u5230400\xd7600\uff0c\u5e76\u8f6c\u6362\u4e3a\u4fbf\u643a\u5f0f\u7f51\u7edc\u56fe\u5f62\u683c\u5f0f\u3002\u6570\u636e\u96c6\u5c06\u516c\u5f00\u63d0\u4f9b\u3002(LOL\u6570\u636e\u96c6)\\n\\n...\u5269\u4f59\u5185\u5bb9\u67e5\u770b\u539f\u6587\\n\\n## Experiments\\n\\n\u89c1\u539f\u6587...\\n\\n## Conclusion\\n\\n\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u6df1\u5ea6\u89c6\u7f51\u819c\u5206\u89e3\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u5b66\u4e60\u4ee5\u6570\u636e\u9a71\u52a8\u7684\u65b9\u5f0f\u5c06\u89c2\u6d4b\u56fe\u50cf\u5206\u89e3\u4e3a\u53cd\u5c04\u548c\u5149\u7167\uff0c\u800c\u4e0d\u9700\u8981\u5206\u89e3\u53cd\u5c04\u548c\u5149\u7167\u7684\u57fa\u672c\u4e8b\u5b9e\u3002\u968f\u540e\u7684\u5149\u7167\u589e\u5f3a\u548c\u53cd\u5c04\u7387\u53bb\u566a\u64cd\u4f5c\u88ab\u5f15\u5165\u3002\u5206\u89e3\u7f51\u7edc\u548c\u5f31\u5149\u589e\u5f3a\u7f51\u7edc\u662f\u7aef\u5230\u7aef\u8bad\u7ec3\u7684\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4ea7\u751f\u4e86\u89c6\u89c9\u4e0a\u4ee4\u4eba\u6ee1\u610f\u7684\u589e\u5f3a\u7ed3\u679c\uff0c\u4ee5\u53ca\u56fe\u50cf\u5206\u89e3\u7684\u826f\u597d\u8868\u73b0\u3002"},{"id":"/[31]MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network","metadata":{"permalink":"/blog/[31]MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[31]MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network.md","source":"@site/blog/[31]MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network.md","title":"MSR-net - Low-light Image Enhancement Using Deep Convolutional Network","description":"\u8bba\u6587\u540d\u79f0Low-light Image Enhancement Using Deep Convolutional Network","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"low-light","permalink":"/blog/tags/low-light"},{"label":"multi-scale-learning","permalink":"/blog/tags/multi-scale-learning"}],"readingTime":14.405,"hasTruncateMarker":true,"authors":[{"name":"PommesPeter","title":"I want to be strong. But it seems so hard.","url":"https://blog.pommespeter.com/","email":"me@pommespeter.com","imageURL":"https://github.com/PommesPeter.png","key":"pommespeter"}],"frontMatter":{"title":"MSR-net - Low-light Image Enhancement Using Deep Convolutional Network","authors":["pommespeter"],"tags":["low-light","multi-scale-learning"]},"prevItem":{"title":"Deep Retinex Decomposition for Low-Light Enhancement","permalink":"/blog/[30]RetinexNet-for-Low-Light-Enhancement"},"nextItem":{"title":"LLCNN - A convolutional neural network for low-light image enhancement","permalink":"/blog/[32]LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement"}},"content":"> \u8bba\u6587\u540d\u79f0: [MSR-net:Low-light Image Enhancement Using Deep Convolutional Network](https://arxiv.org/abs/1711.02488)\\n>\\n> \u8bba\u6587\u4f5c\u8005: Liang Shen, Zihan Y ue, Fan Feng, Quan Chen, Shihao Liu, Jie Ma\\n>\\n> Code: None\\n\\n\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u57fa\u4e8eRetinex\u7406\u8bba\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4f4e\u7167\u5ea6\u589e\u5f3a\u7684\u8bba\u6587\u3002\\n\\n- \u57fa\u4e8eMSR\u4f20\u7edf\u7406\u8bba\u6784\u9020\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\\n- \u76f4\u63a5\u5b66\u4e60\u6697\u56fe\u50cf\u548c\u4eae\u56fe\u50cf\u4e4b\u95f4\u7684\u7aef\u5230\u7aef\u6620\u5c04\\n\\n## Abstract (\u6458\u8981)\\n\\n> Images captured in low-light conditions usually suffer from very low contrast, which increases the difficulty of sub-sequent computer vision tasks in a great extent. In this paper, a low-light image enhancement model based on convolutional neural network and Retinex theory is proposed. Firstly, we show that multi-scale Retinex is equivalent to a feedforward convolutional neural network with different Gaussian convolution kernels. Motivated by this fact, we consider a Convolutional Neural Network(MSR-net) that directly learns an end-to-end mapping between dark and bright images. Different fundamentally from existing approaches, low-light image enhancement in this paper is regarded as a machine learning problem. In this model, most of the parameters are optimized by back-propagation, while the parameters of traditional models depend on the artificial setting. Experiments on a number of challenging images reveal the advantages of our method in comparison with other state-of-the-art methods from the qualitative and quantitative perspective.\\n\\n\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u548c\u89c6\u7f51\u819c\u7406\u8bba(Retinex Theory)\u7684\u4f4e\u7167\u5ea6\u56fe\u50cf\u589e\u5f3a\u6a21\u578b\u3002\u8bc1\u660e\u4e86\u591a\u5c3a\u5ea6\u89c6\u7f51\u819c\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u5177\u6709\u4e0d\u540c\u9ad8\u65af\u5377\u79ef\u6838\u7684\u524d\u9988\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u8003\u8651\u4e00\u79cd\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(MSR\u7f51\u7edc)\uff0c\u5b83**\u76f4\u63a5\u5b66\u4e60\u6697\u56fe\u50cf\u548c\u4eae\u56fe\u50cf\u4e4b\u95f4\u7684\u7aef\u5230\u7aef\u6620\u5c04**\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## Introduction\\n\\n\u5728\u5f31\u5149\u6761\u4ef6\u4e0b\u62cd\u6444\u65f6\uff0c\u56fe\u50cf\u6709\u65f6\u5019\u4f1a\u8868\u73b0\u51fa\u975e\u5e38\u4f4e\u7684\u5bf9\u6bd4\u5ea6\u548c\u4eae\u5ea6\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u589e\u52a0\u4e86\u540e\u7eed\u9ad8\u7ea7\u4efb\u52a1\u7684\u96be\u5ea6\u3002\u4e00\u822c\u5f88\u591a\u7ec6\u8282\u90fd\u88ab\u9690\u85cf\u5728\u9ed1\u6697\u7684\u80cc\u666f\u4e2d\u3002\u73b0\u5728\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u4e3b\u8981\u662f\u5206\u4e3a\u57fa\u4e8e\u76f4\u65b9\u56fe\u7684\u65b9\u6cd5\u548c\u57fa\u4e8eRetinex\u7406\u8bba\u7684\u65b9\u6cd5\u3002\\n\\n\u672c\u6587\u63d0\u51fa\u7684\u65b9\u6cd5\u662f\u57fa\u4e8e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u548c\u89c6\u7f51\u819c\u7406\u8bba(Retinex Theory)\u7684\u4f4e\u7167\u5ea6\u56fe\u50cf\u589e\u5f3a\u6a21\u578b\u3002\u6211\u4eec\u89e3\u91ca\u4e86\u591a\u5c3a\u5ea6\u89c6\u7f51\u819c\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u5177\u6709\u4e0d\u540c\u9ad8\u65af\u5377\u79ef\u6838\u7684\u524d\u9988\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(MSR\u7f51\u7edc)\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u5b66\u4e60\u6697\u56fe\u50cf\u548c\u4eae\u56fe\u50cf\u4e4b\u95f4\u7684\u7aef\u5230\u7aef\u6620\u5c04\u3002\\n\\n\u6211\u4eec\u4e3b\u8981\u505a\u4e09\u4e2a\u65b9\u9762\u7684\u5de5\u4f5c:\\n\\n- \u6211\u4eec\u5efa\u7acb\u4e86\u591a\u5c3a\u5ea6\u89c6\u7f51\u819c\u795e\u7ecf\u7f51\u7edc\u548c\u524d\u9988\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\\n- \u6211\u4eec\u5c06\u5f31\u5149\u56fe\u50cf\u589e\u5f3a\u89c6\u4e3a\u4e00\u4e2a\u76d1\u7763\u5b66\u4e60\u95ee\u9898\uff0c\u6697\u56fe\u50cf\u548c\u4eae\u56fe\u50cf\u5206\u522b\u4f5c\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u3002\\n- \u5728\u4e00\u4e9b\u5177\u6709\u6311\u6218\u6027\u7684\u56fe\u50cf\u4e0a\u7684\u5b9e\u9a8c\u63ed\u793a\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u5176\u4ed6\u6700\u5148\u8fdb\u7684\u65b9\u6cd5\u76f8\u6bd4\u7684\u4f18\u52bf\u3002(\u5b9e\u9a8c\u5bf9\u6bd4)\\n\\n## Related Work \\n\\n### \u4f4e\u7167\u5ea6\u589e\u5f3a\\n\\n\u4e00\u822c\u6765\u8bf4\uff0c\u5fae\u5149\u56fe\u50cf\u589e\u5f3a\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b:\u57fa\u4e8e\u76f4\u65b9\u56fe\u7684\u65b9\u6cd5\u548c\u57fa\u4e8e\u89c6\u7f51\u819c\u7684\u65b9\u6cd5(histogram-based methods and\\nRetinex-based methods)\u3002\u901a\u8fc7\u76f4\u65b9\u56fe\u53d8\u6362\u76f4\u63a5\u653e\u5927\u5f31\u5149\u56fe\u50cf\u53ef\u80fd\u662f\u6700\u76f4\u89c2\u7684\u4eae\u6697\u56fe\u50cf\u7684\u65b9\u6cd5\u3002\u6700\u7b80\u5355\u4e5f\u662f\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u6280\u672f\u4e4b\u4e00\u662f\u76f4\u65b9\u56fe\u5747\u8861\u5316(he)\uff0c\u5b83\u4f7f\u6574\u4e2a\u56fe\u50cf\u7684\u76f4\u65b9\u56fe\u5c3d\u53ef\u80fd\u5e73\u8861\u3002\u4f3d\u9a6c\u6821\u6b63\u4e5f\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u540c\u65f6\u6269\u5927\u6697\u533a\u548c\u538b\u7f29\u4eae\u533a\u6765\u589e\u5f3a\u5bf9\u6bd4\u5ea6\u548c\u4eae\u5ea6\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u662f\u5355\u72ec\u5904\u7406\u7684\uff0c\u6ca1\u6709\u5176\u90bb\u57df\u7684\u4f9d\u8d56\u6027\uff0c\u8fd9\u4f7f\u5f97\u7ed3\u679c\u770b\u8d77\u6765\u4e0e\u771f\u5b9e\u573a\u666f\u4e0d\u4e00\u81f4\u3002\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u5728\u76f4\u65b9\u56fe\u4e0a\u4f7f\u7528\u4e0d\u540c\u6b63\u5219\u9879\u7684\u53d8\u5206\u65b9\u6cd5\u3002\u76f8\u5bf9\u800c\u8a00\uff0c\u66f4\u591a\u5730\u4f1a\u4f7f\u7528Retinex\u7684\u65b9\u6cd5\u3002\\n\\nRetinex\u7406\u8bba\u7684\u4e3b\u8981\u5185\u5bb9\u662f\uff1a\u56fe\u50cf\u53ef\u4ee5\u88ab\u5206\u89e3\u6210\u4e3a\u53cd\u5c04\u548c\u4eae\u5ea6(\u516c\u793a\u8868\u8fbe\u4e3a:$I(x,y)=r(x,y)\\\\cdot S(x,y)$)\u3002\u6b64\u5916\uff0c\u4fee\u6b63\u7684MSR [16]\u5728\u8272\u5ea6\u7a7a\u95f4\u4e2d\u5e94\u7528\u989c\u8272\u6062\u590d\u51fd\u6570(CRF)\u6765\u6d88\u9664MSR\u8f93\u51fa\u4e2d\u660e\u663e\u7684\u989c\u8272\u5931\u771f\u548c\u7070\u8272\u533a\u57df\u3002\\n\\n### \u4f7f\u7528CNN\u505a\u4f4e\u7ea7\u89c6\u89c9\u4efb\u52a1\\n\\n\u8fd1\u671f\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5b9e\u73b0\u4f4e\u7ea7\u7684\u89c6\u89c9\u4efb\u52a1\u3002\u8fd9\u65b9\u9762\u505a\u4e86\u5f88\u591a\u5de5\u4f5c\uff0c\u5982\u53bb\u9664\u96e8\u6c34\uff0c\u53bb\u9664\u5927\u96fe\u7b49\u3002\\n\\n\\n\\n## CNN for Image Enhancement\\n\\n\u672c\u6587\u4e3b\u8981\u63d0\u51fa\u7684\u662f\u4e00\u4e2a\u76f4\u63a5\u5b66\u4e60\u4f4e\u7167\u5ea6\u56fe\u50cf\u548c\u4eae\u56fe\u50cf\u4e4b\u95f4\u7aef\u5230\u7aef\u7684\u6620\u5c04\u3002\\n\\n### \u591a\u5c3a\u5ea6\u89c6\u7f51\u819c\\n\\n\u9996\u5148\u4ecb\u7ecdSSR\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\u5355\u5c3a\u5ea6Retinex\u662f\u57fa\u4e8eRetinex\u7406\u8bba\uff0cSSR\u7684\u6838\u5fc3\u516c\u5f0f\u5982\u4e0b\\n$$\\nI(x,y)=r(x,y)\\\\cdot S(x,y)\\n$$\\n\u5176\u4e2d$I$\u548c$r$\u5206\u522b\u8868\u793a\u6355\u83b7\u7684\u56fe\u50cf\u548c\u53cd\u5c04\u3002\u57fa\u4e8e\u4e2d\u5fc3/\u5468\u56f4\u89c6\u7f51\u819c\u7684\u5355\u5c3a\u5ea6\u89c6\u7f51\u819c(SSR)\u7c7b\u4f3c\u4e8e\u81ea\u7136\u89c6\u89c9\u79d1\u5b66\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u9ad8\u65af\u5dee\u5206(DOG)\u51fd\u6570\u3002\\n$$\\nR_i(x,y)=\\\\log I_i(x,y)-\\\\log[F(x,y)*I_i(x,y)]\\n$$\\n\u5176\u4e2d$R_i(x\uff0cy)$\u662f\u76f8\u5173\u7684Retinex\u8f93\u51fa\uff0c$I_i(x\uff0cy)$\u662f\u7b2c$i$\u4e2a\u989c\u8272\u5149\u8c31\u5e26\u4e2d\u7684\u56fe\u50cf\u5206\u5e03\uff0c$*$\u8868\u793a\u5377\u79ef\u8fd0\u7b97\uff0c\u800c$F(x\uff0cy)$\u662f\u9ad8\u65af\u73af\u7ed5\u51fd\u6570\u3002\\n$$\\nF(x,y)=Ke^{-\\\\frac{x^2+y^2}{2c^2}}\\n$$\\n\u5176\u4e2d$c$\u662f\u6807\u51c6\u5dee\uff0c$K$\u662f\u4e00\u4e2a\u7cfb\u6570\uff0c\u4f7f\u5f97(3)\u5f0f\u6ee1\u8db3:\\n$$\\n\\\\iint F(x,y)dxdy=1\\n$$\\n\u901a\u8fc7\u6539\u53d8\u5bf9\u6570\u5728\u4e0a\u8ff0\u516c\u5f0f\u4e2d\u7684\u4f4d\u7f6e\u5f97\\n$$\\nR_i(x,y)=\\\\log I_i(x,y)-[\\\\log I_i(x,y)] * F(x,y)\\n$$\\n\u901a\u8fc7\u4e0a\u8ff0\u64cd\u4f5c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684\u9ad8\u901a\u7ebf\u6027\u6ee4\u6ce2\u5668\u3002(2)\u5f0f\u548c(5)\u5f0f\u5728\u6570\u5b66\u4e0a\u8868\u8fbe\u5f0f\u662f\u4e0d\u7b49\u4ef7\u7684\uff0c**\u524d\u8005\u662f\u6c42\u56fe\u50cf\u4e0e\u5176\u52a0\u6743\u5e73\u5747\u503c\u4e4b\u6bd4\u7684\u5bf9\u6570\uff0c\u540e\u8005\u662f\u56fe\u50cf\u4e0e\u5939\u5168\u4e58\u79ef\u4e4b\u6bd4\u7684\u5bf9\u6570\u3002**\u672c\u8d28\u4e0a\u76f8\u5f53\u4e8e\u662f\u7b97\u672f\u5e73\u5747\u503c\u548c\u51e0\u4f55\u5e73\u5747\u503c\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\u90a3\u4e48\u6c42\u89e3\u591a\u5c3a\u5ea6\u7684Retinex\u589e\u5f3a\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4e0d\u540c\u5c3a\u5ea6\u5927\u5c0f\u7684\u5206\u522b\u8fdb\u884c\u589e\u5f3a\uff0c\u7136\u540e\u6c42\u5176\u52a0\u6743\u5e73\u5747\u503c\u3002\\n$$\\nR_{MSR_i}=\\\\sum^N_{n=1}w_nR_{n_i}\\n$$\\n\u5176\u4e2d$N$\u8868\u793a\u4e0d\u540c\u5c3a\u5ea6\u7684\u6570\u91cf\uff0c$R_{n_i}$\u8868\u793a\u7b2c$n$\u4e2a\u5c3a\u5ea6\u7684\u7b2c$i$\u4e2a\u5206\u91cf\uff0c$R_{MSR_i}$\u8868\u793aMSR\u8f93\u51fa\u7684\u7b2c$i$\u4e2a\u5206\u91cf\u3002$w_n$\u8868\u793a\u4e0e\u7b2c$n$\u4e2a\u5c3a\u5ea6\u76f8\u5173\u7684\u6743\u91cd\u3002\u4e3a\u4e86\u6d88\u9664\u5f3a\u8fb9\u7f18\u9644\u8fd1\u53ef\u89c1\u7684\u201c\u5149\u6655\u201d\u4f2a\u5f71\uff0c\u5bf9\u7b2c\u4e09\u4e2a\u4e2d\u95f4\u8303\u56f4\u7684\u9700\u6c42\u7acb\u5373\u53d8\u5f97\u660e\u663e[16]\u3002\u56e0\u6b64\uff0c\u516c\u5f0f\u5982\u4e0b:\\n$$\\nR_{MSR_i}(x, y) =\\\\frac{1}{3}\\\\sum^3_{n=1}\\\\{\\\\log I_i(x, y) \u2212 [\\\\log I_i(x, y)] \u2217 F_n(x, y)\\\\}\\n$$\\n\u5177\u4f53\u800c\u8a00\u5c31\u5f97\u5230\\n$$\\nR_{MSR_i}(x,y)=\\\\log I_i(x,y)-\\\\frac{1}{3}\\\\log I_i(x,y)*[\\\\sum^3_{n=1}K_ne^{-\\\\frac{x^2+y^2}{2c^2_n}}]\\n$$\\n\u6ce8\u610f\u5230\u4e24\u4e2a\u9ad8\u65af\u51fd\u6570\u7684\u5377\u79ef\u4ecd\u7136\u662f\u9ad8\u65af\u51fd\u6570\uff0c\u5176\u65b9\u5dee\u7b49\u4e8e\u4e24\u4e2a\u539f\u59cb\u65b9\u5dee\u4e4b\u548c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ea7\u8054\u7ed3\u6784\u6765\u8868\u793a\u4e0a\u9762\u7684\u7b49\u5f0f(8)\uff0c\u5982\u56fe2(a)\u6240\u793a**(\u8be5\u56fe\u4e0d\u662f\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u56fe)**\u3002\\n\\n![image-20210708085043777](./src/MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network/image-20210708085043777.png)\\n\\n\u4e09\u4e2a\u7ea7\u8054\u5377\u79ef\u5c42\u88ab\u89c6\u4e3a\u4e09\u4e2a\u4e0d\u540c\u7684\u9ad8\u65af\u6838\u3002\u66f4\u5177\u4f53\u5730\uff0c\u7b2c\u4e00\u5377\u79ef\u5c42\u7684\u53c2\u6570\u57fa\u4e8e\u9ad8\u65af\u5206\u5e03\uff0c\u5176\u65b9\u5dee\u4e3a$c^2_1$\u3002\u7c7b\u4f3c\u5730\uff0c\u7b2c\u4e8c\u548c\u7b2c\u4e09\u5377\u79ef\u5c42\u7684\u65b9\u5dee\u5206\u522b\u4e3a$c^2_2-c^2_1$\uff0c$c_3^2-c_2^2$\uff0c\u7ea7\u8054\u5c42\u548c$1 \xd7 1$\u5377\u79ef\u5c42\u4ee3\u8868\u52a0\u6743\u5e73\u5747\u503c\u3002\u603b\u4e4b\uff0c\u591a\u5c3a\u5ea6\u89c6\u7f51\u819c\u795e\u7ecf\u7f51\u7edc\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5177\u6709\u6b8b\u5dee\u7ed3\u6784\u7684\u524d\u9988\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\\n\\n### \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u65b9\u6cd5\\n\\n\u5728\u524d\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u591a\u5c3a\u5ea6\u89c6\u7f51\u819c\u7b49\u6548\u4e8e\u524d\u9988\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u4e8b\u5b9e\u3002\u5728\u8fd9\u4e00\u90e8\u5206\u4e2d\uff0c\u53d7\u8fd9\u4e2a\u65b0\u4e8b\u5b9e\u7684\u542f\u53d1\uff0c\u6211\u4eec\u8003\u8651\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6765\u89e3\u51b3\u5f31\u5149\u56fe\u50cf\u589e\u5f3a\u95ee\u9898\u3002\u6211\u4eec\u5728\u56fe2(b)\u4e2d\u6982\u8ff0\u7684\u65b9\u6cd5\u4e0e\u73b0\u6709\u65b9\u6cd5\u6709\u6839\u672c\u7684\u4e0d\u540c\uff0c\u73b0\u6709\u65b9\u6cd5\u5c06\u5f31\u5149\u56fe\u50cf\u589e\u5f3a\u4f5c\u4e3a\u4e00\u4e2a\u6709\u76d1\u7763\u7684\u5b66\u4e60\u95ee\u9898\u3002**\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u5206\u522b\u5bf9\u5e94\u4e8e\u5f31\u5149\u548c\u4eae\u56fe\u50cf**\u3002\\n\\n![image-20210708085645880](./src/MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network/image-20210708085645880.png)\\n\\n\u6211\u4eec\u7684\u6a21\u578b\u7531\u4e09\u90e8\u5206\u7ec4\u6210:\u591a\u5c3a\u5ea6\u5bf9\u6570\u53d8\u6362\u3001\u5377\u79ef\u5dee\u548c\u989c\u8272\u6062\u590d\u51fd\u6570\u3002\u4e0eMSR\u7684\u5355\u5c3a\u5ea6\u5bf9\u6570\u53d8\u6362\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u6a21\u578b\u5c1d\u8bd5\u4f7f\u7528\u591a\u5c3a\u5ea6\u5bf9\u6570\u53d8\u6362\uff0c\u5728\u5b9e\u8df5\u4e2d\u5f97\u5230\u9a8c\u8bc1\uff0c\u53d6\u5f97\u4e86\u66f4\u597d\u7684\u6027\u80fd\u3002\u56fe7\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\u3002\u5377\u79ef\u5dee\u5728MSR\u8d77\u5230\u4e0e\u9ad8\u65af\u5dee\u7c7b\u4f3c\u7684\u4f5c\u7528\uff0c\u8272\u5f69\u6062\u590d\u529f\u80fd\u4e5f\u662f\u5982\u6b64\u3002\u6211\u4eec\u7684\u6a21\u578b\u4e0e\u539f\u59cbMSR\u6a21\u578b\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u6211\u4eec\u7684\u6a21\u578b\u4e2d\u7684\u5927\u591a\u6570\u53c2\u6570\u662f\u4ece\u8bad\u7ec3\u6570\u636e\u4e2d\u5b66\u4e60\u7684\uff0c\u800cMSR\u6a21\u578b\u4e2d\u7684\u53c2\u6570\uff0c\u5982\u65b9\u5dee\u548c\u5176\u4ed6\u5e38\u6570\uff0c\u5219\u53d6\u51b3\u4e8e\u4eba\u5de5\u8bbe\u7f6e\u3002\\n\\n\u5f62\u5f0f\u4e0a\uff0c\u6211\u4eec\u5c06\u5f31\u5149\u56fe\u50cf\u8868\u793a\u4e3a\u8f93\u5165$X$\uff0c\u76f8\u5e94\u7684\u4eae\u56fe\u50cf\u8868\u793a\u4e3aY\uff0c\u5047\u8bbe$f_1\u3001f_2\u3001f_3$\u8868\u793a\u4e09\u4e2a\u5b50\u51fd\u6570:\u591a\u5c3a\u5ea6\u5bf9\u6570\u53d8\u6362\u3001\u5377\u79ef\u5dee\u548c\u989c\u8272\u6062\u590d\u51fd\u6570\u3002\u6211\u4eec\u7684\u6a21\u578b\u53ef\u4ee5\u5199\u6210\u4e09\u4e2a\u51fd\u6570\u7684\u7ec4\u5408:\\n$$\\nf(X)=f_3(f_2(f_1(X)))\\n$$\\n\\n- \u591a\u5c3a\u5ea6\u5bf9\u6570\u53d8\u6362\\n\\n  \u591a\u5c3a\u5ea6\u5bf9\u6570\u53d8\u6362$f_1(X)$\u4ee5\u539f\u59cb\u4f4e\u7167\u5ea6\u56fe\u50cf$X$\u4e3a\u8f93\u5165\uff0c\u8ba1\u7b97\u76f8\u540c\u5927\u5c0f\u7684\u8f93\u51fa$X_1$\u3002\u9996\u5148\uff0c\u5bf9\u4f4e\u7167\u5ea6\u56fe\u50cf\u8fdb\u884c\u591a\u6b21\u5dee\u5206\u5bf9\u6570\u53d8\u6362\u589e\u5f3a\u3002\u516c\u5f0f\u5982\u4e0b:\\n  $$\\n  M_j=\\\\log_{v_j+1}(1+v_j\\\\cdot X),j=1,2,...,n\\n  $$\\n  \u5176\u4e2d$M_j$\u8868\u793a\u5728\u7ecf\u8fc7\u5e95\u6570\u4e3a$v_j+1$\u7684\u5bf9\u6570\u8fd0\u7b97\u4e4b\u540e\u7684\u7b2c$j$\u4e2a\u5c3a\u5ea6\u8f93\u51fa\u3002n\u8868\u793a\u5bf9\u6570\u53d8\u6362\u51fd\u6570\u7684\u6570\u91cf\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b3D\u5f20\u91cf$Mj(3\u4e2a\u901a\u9053\xd7\u5bbd\u5ea6\xd7\u9ad8\u5ea6)$\u8fde\u63a5\u6210\u66f4\u5927\u76843D\u5f20\u91cf$M(3n\u4e2a\u901a\u9053\xd7\u5bbd\u5ea6\xd7\u9ad8\u5ea6)$\uff0c\u7136\u540e\u4f7f\u5176\u901a\u8fc7\u5377\u79ef\u5c42\u548cReLU\u5c42\u3002\\n  $$\\n  M=[M_1,M_2,...,M_n](\u505aconcat) \\\\\\\\\\n  X_1=\\\\max(0, M*W_{-1}+b_{-1})*W_0+b_0\\n  $$\\n  \u5176\u4e2d$*$\u8868\u793a\u5377\u79ef\u7b97\u5b50\uff0c$w_1$\u662f\u5c06$3n$\u4e2a\u901a\u9053\u6536\u7f29\u4e3a3\u4e2a\u901a\u9053\u7684\u5377\u79ef\u6838\uff0c$max(0,\\\\cdot)$\u5bf9\u5e94\u4e8eReLU\uff0c$w_0$\u662f\u5177\u6709\u4e09\u4e2a\u8f93\u51fa\u901a\u9053\u7684\u5377\u79ef\u6838\uff0c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u975e\u7ebf\u6027\u8868\u793a\u3002\u4ece\u4e0a\u9762\u7684\u64cd\u4f5c\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u90e8\u5206\u4e3b\u8981\u662f\u4e3a\u4e86**\u901a\u8fc7\u591a\u6b21\u5bf9\u6570\u53d8\u6362\u7684\u52a0\u6743\u548c\u5f97\u5230\u66f4\u597d\u7684\u56fe\u50cf\uff0c\u52a0\u5feb\u4e86\u7f51\u7edc\u7684\u6536\u655b\u901f\u5ea6\u3002**\\n\\n- \u5377\u79ef\u5dee\\n\\n  \u5377\u79ef\u5dee\u51fd\u6570$f_2$\u53d6\u8f93\u5165$X_1$\uff0c\u5e76\u8ba1\u7b97\u76f8\u540c\u5927\u5c0f\u7684\u8f93\u51fa$X_2$\u3002\u9996\u5148\uff0c\u8f93\u5165$X_1$\u7a7f\u8fc7\u591a\u5c42\u5377\u79ef\u5c42\u548c\u4e00\u5c42ReLU\u3002\\n  $$\\n  H_0=X_1\\\\\\\\\\n  H_m=\\\\max(0, H_{m-1}*W_m+b_m),m=1,2,...,K\\n  $$\\n  \u5176\u4e2d$m$\u8868\u793a\u7b2c$m$\u4e2a\u5377\u79ef\u5c42\uff0c$K$\u7b49\u4e8e\u5377\u79ef\u5c42\u6570\u3002\u800c$W_m$\u4ee3\u8868\u7b2cm\u4e2a\u6838\u7684\u6743\u91cd\u3002$H_1,H_2,...,H_K$\u88ab\u8ba4\u4e3a\u662f\u4e0d\u540c\u5c3a\u5ea6\u4e0b\u7684\u5e73\u6ed1\u56fe\u50cf\uff0c\u7136\u540e\u6211\u4eec\u5c06\u8fd9\u4e9b3D\u5f20\u91cf$H_m$\u8fde\u63a5\u5230\u66f4\u5927\u76843D\u5f20\u91cfH\uff0c\u5e76\u4f7f\u5176\u901a\u8fc7\u5377\u79ef\u5c42:\\n  $$\\n  H = [H_1, H_2, ..., H_K] \\\\\\\\\\n  H_{K+1}=H\u2217W_{K+1}+ b_{K+1}\\n  $$\\n  \u5176\u4e2d$W_{K+1}$\u662f\u5177\u6709\u4e09\u4e2a\u8f93\u51fa\u901a\u9053\u548c$1  \xd7 1$\u611f\u53d7\u91ce\u7684\u5377\u79ef\u5c42\uff0c\u76f8\u5f53\u4e8e\u5bf9\u8fd9\u4e9b$K$\u4e2a\u56fe\u50cf\u6c42\u5e73\u5747\u3002\u7c7b\u4f3c\u4e8eMSR\uff0c$f_2$\u7684\u8f93\u51fa$X_2$\u662f$X_1$\u548c$H_{K+1}$\u4e4b\u95f4\u7684\u51cf\u6cd5:\\n  $$\\n  X_2=f_2(X)=X_1-H_{K+1}\\n  $$\\n\\n- \u989c\u8272\u6062\u590d\u51fd\u6570\\n\\n  **\u8003\u8651\u5230MSR\u7ed3\u679c\u901a\u5e38\u770b\u8d77\u6765\u4e0d\u81ea\u7136**\uff0c\u4fee\u6539\u540e\u7684MSR\u5728\u8272\u5ea6\u7a7a\u95f4\u4e2d\u5e94\u7528\u989c\u8272\u6062\u590d\u51fd\u6570(CRF)\u6765\u6d88\u9664MSR\u8f93\u51fa\u4e2d**\u660e\u663e\u7684\u989c\u8272\u5931\u771f\u548c\u7070\u8272\u533a\u57df**\u3002\u5728\u6211\u4eec\u7684\u6a21\u578b\u4e2d\uff0c\u989c\u8272\u6062\u590d\u51fd\u6570\u662f\u7528\u4e00\u4e2a\u5177\u6709\u4e09\u4e2a\u8f93\u51fa\u901a\u9053\u7684$1 \xd7  1$\u5377\u79ef\u5c42\u6765\u6a21\u62df:\\n  $$\\n  \\\\hat Y=f_3(X_2)=X_2*W_{K+2}+b_{K+2}\\n  $$\\n  \u5176\u4e2d$\\\\hat Y$\u662f\u6700\u7ec8\u7684\u589e\u5f3a\u56fe\u50cf\u3002\u4e3a\u4e86\u66f4\u52a0\u76f4\u89c2\uff0c\u56fe3\u4e2d\u5206\u522b\u663e\u793a\u4e86\u5f31\u5149\u56fe\u50cf\u548c$f_1\u3001f_2\u3001f_3$\u7684\u7ed3\u679c\u3002\\n\\n  ### \u76ee\u6807\u51fd\u6570\\n\\n  \u6211\u4eec\u6a21\u578b\u7684\u76ee\u6807\u662f\u8bad\u7ec3\u4e00\u4e2a\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u4f7f\u8f93\u51fa$f(X)$\u548c\u6807\u7b7e$Y$**\u5728Frobenius\u8303\u6570**\u7684\u51c6\u5219\u4e0b\u5c3d\u53ef\u80fd\u63a5\u8fd1\u3002\\n  $$\\n  L =\\\\frac{1}{N}\\\\sum^N_{i=1}||f(X_i) \u2212 Y_i||^2_F+\u03bb\\\\sum^{K+2}_{i=-1}||Wi||^2_F\\n  $$\\n  \u5176\u4e2d$N$\u4e3a\u8bad\u7ec3\u6837\u672c\u6570\uff0c$\u03bb$\u4e3a\u6b63\u5219\u5316\u53c2\u6570\u3002\u6743\u91cd$W$\u548c\u504f\u5dee$b$\u662f\u6211\u4eec\u6a21\u578b\u4e2d\u7684\u5168\u90e8\u53c2\u6570\u3002\u6b64\u5916\uff0c\u6a21\u578b\u4e2d\u8003\u8651\u4e86\u6b63\u5219\u5316\u53c2\u6570$\u03bb$\u3001\u5bf9\u6570\u53d8\u6362\u51fd\u6570\u4e2a\u6570$n$\u3001\u5bf9\u6570\u53d8\u6362\u5c3a\u5ea6$v$\u548c\u5377\u79ef\u5c42\u6570$K$\u4f5c\u4e3a\u8d85\u53c2\u6570\u3002\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u8fdb\u884c\u4f18\u5316\uff0c\u8d85\u53c2\u6570\u901a\u8fc7\u7f51\u683c\u641c\u7d22\u8fdb\u884c\u9009\u62e9\u3002\\n\\n\\n  ## \u95ee\u9898\\n\\n  \u672c\u6587\u7531\u4e8e\u6211\u4eec\u6a21\u578b\u4e2d\u7684\u611f\u53d7\u91ce\u6709\u9650\uff0c\u50cf\u6674\u7a7a\u8fd9\u6837\u975e\u5e38\u5e73\u6ed1\u7684\u533a\u57df\u6709\u65f6\u4f1a\u53d7\u5230\u5149\u6655\u6548\u5e94\u7684\u653b\u51fb\u3002\u6269\u5927\u611f\u53d7\u91ce\u6216\u589e\u52a0\u9690\u85cf\u5c42\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\\n\\n  ![image-20210708095003523](./src/MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network/image-20210708095003523.png)\\n\\n## \u5b9e\u9a8c\\n\\n\u5b9e\u9a8c\u90e8\u5206\u81ea\u884c\u9605\u8bfb\u539f\u6587"},{"id":"/[32]LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement","metadata":{"permalink":"/blog/[32]LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[32]LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement.md","source":"@site/blog/[32]LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement.md","title":"LLCNN - A convolutional neural network for low-light image enhancement","description":"\u8bba\u6587\u540d\u79f0 A convolutional neural network for low-light image enhancement","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"low-light","permalink":"/blog/tags/low-light"},{"label":"multi-scale-learning","permalink":"/blog/tags/multi-scale-learning"}],"readingTime":10.735,"hasTruncateMarker":true,"authors":[{"name":"PommesPeter","title":"I want to be strong. But it seems so hard.","url":"https://blog.pommespeter.com/","email":"me@pommespeter.com","imageURL":"https://github.com/PommesPeter.png","key":"pommespeter"}],"frontMatter":{"title":"LLCNN - A convolutional neural network for low-light image enhancement","authors":["pommespeter"],"tags":["low-light","multi-scale-learning"]},"prevItem":{"title":"MSR-net - Low-light Image Enhancement Using Deep Convolutional Network","permalink":"/blog/[31]MSR-netLow-light-Image-Enhancement-Using-Deep-Convolutional-Network"},"nextItem":{"title":"VOLO - Vision Outlooker for Visual Recognition","permalink":"/blog/[33]VOLO-Vision-Outlooker-for-Visual-Recognition"}},"content":"> \u8bba\u6587\u540d\u79f0: [LLCNN: A convolutional neural network for low-light image enhancement](https://ieeexplore.ieee.org/abstract/document/8305143/)\\n>\\n> \u8bba\u6587\u4f5c\u8005: Li Tao, Chuang Zhu, Guoqing Xiang, Yuan Li, Huizhu Jia, Xiaodong Xie\\n>\\n> Code: [https://github.com/BestJuly/LLCNN](https://github.com/BestJuly/LLCNN)\\n\\n### \u8fd9\u7bc7\u7b14\u8bb0\u7684\u5199\u4f5c\u8005\u662f[PommesPeter](https://github.com/PommesPeter)\u3002\\n\\n\u8fd9\u662f\u4e00\u7bc7\u8bb2\u89e3\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4f4e\u7167\u5ea6\u589e\u5f3a\u7684\u8bba\u6587\u3002\\n\\n- \u672c\u6587\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u4f4e\u7167\u5ea6\u589e\u5f3a\\n- \u4f7f\u7528SSIM\u635f\u5931\u66f4\u597d\u5730\u8bc4\u4ef7\u56fe\u50cf\u597d\u574f\u548c\u68af\u5ea6\u6536\u655b\\n\\n## Abstract (\u6458\u8981)\\n\\n> In this paper, we propose a CNN based method to perform low-light image enhancement. We design a special  module to utilize multiscale feature maps, which can avoid  gradient vanishing problem as well. In order to preserve image textures as much as possible, we use SSIM loss to train our model. The contrast of low-light images can be adaptively enhanced using our method. Results demonstrate that our CNN based method  outperforms other contrast enhancement methods. \\n\\n\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eCNN\u7684\u4f4e\u7167\u5ea6\u56fe\u50cf\u589e\u5f3a\u65b9\u6cd5\u3002\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u6a21\u5757\u6765**\u5229\u7528\u591a\u5c3a\u5ea6\u7279\u5f81\u6620\u5c04**\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u68af\u5ea6\u6d88\u5931\u7684\u95ee\u9898\u3002**\u4e3a\u4e86\u5c3d\u53ef\u80fd\u5730\u4fdd\u7559\u56fe\u50cf\u7eb9\u7406\uff0c\u6211\u4eec\u4f7f\u7528SSIM\u635f\u5931\u6765\u8bad\u7ec3\u6211\u4eec\u7684\u6a21\u578b**\u3002\u4f7f\u7528\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5**\u81ea\u9002\u5e94\u5730\u589e\u5f3a\u5f31\u5149\u56fe\u50cf\u7684\u5bf9\u6bd4\u5ea6**\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## Introduction\\n\\n\u4e3a\u4e86\u589e\u5f3a\u56fe\u50cf\u5bf9\u6bd4\u5ea6\u548c\u63d0\u9ad8\u56fe\u50cf\u4eae\u5ea6\uff0c\u63d0\u51fa\u4e86\u51e0\u79cd\u7b97\u6cd5\u3002**\u76f4\u65b9\u56fe\u5747\u8861(HE)\u65b9\u6cd5**[1]\uff0c[2]\u91cd\u65b0\u6392\u5217\u50cf\u7d20\u503c\uff0c\u4f7f\u5176\u670d\u4ece\u5747\u5300\u5206\u5e03\u3002**\u57fa\u4e8e\u89c6\u7f51\u819c\u7406\u8bba\u7684\u65b9\u6cd5**[3]\u2013[7]\u5229\u7528\u4e86\u4e00\u4e2a\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5047\u8bbe\u56fe\u50cf\u662f\u7167\u660e\u548c\u53cd\u5c04\u7684\u76f8\u4e92\u4f5c\u7528\u3002**\u57fa\u4e8edehaze\u6a21\u578b\u7684\u65b9\u6cd5**[8]\u56fa\u5b9a\u50cf\u7d20\u503c\uff0c\u4f7f\u5176\u670d\u4ece\u81ea\u7136\u5206\u5e03\u3002\u6211\u4eec\u79f0\u6240\u6709\u8fd9\u4e9b\u65b9\u6cd5\u4e3a\u4f20\u7edf\u65b9\u6cd5\u3002\\n\\n\u672c\u6587\u5e94\u7528CNN\u5bf9\u4f4e\u7167\u5ea6\u56fe\u50cf\u8fdb\u884c\u589e\u5f3a\u3002\u6211\u4eec\u79f0\u6240\u63d0\u51fa\u7684\u7f51\u7edc\u4e3a\u4f4e\u7167\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u5b83\u5b66\u4e60\u7528\u4e0d\u540c\u7684\u6838\u8fc7\u6ee4\u5f31\u5149\u56fe\u50cf\uff0c\u7136\u540e\u5c06\u591a\u5c3a\u5ea6\u7279\u5f81\u56fe\u7ec4\u5408\u5728\u4e00\u8d77\u751f\u6210\u589e\u5f3a\u56fe\u50cf\uff0c\u8fd9\u4e9b\u56fe\u50cf\u770b\u8d77\u6765\u662f\u5728\u6b63\u5e38\u5149\u7167\u6761\u4ef6\u4e0b\u6355\u83b7\u7684\uff0c\u5e76\u4e14\u4fdd\u7559\u4e86\u539f\u59cb\u7279\u5f81\u548c\u7eb9\u7406\u3002\u6b64\u5916\uff0c**SSIM\u635f\u5931\u88ab\u6574\u5408\u5230\u6211\u4eec\u7684LLCNN\uff0c\u4ee5\u91cd\u5efa\u66f4\u51c6\u786e\u7684\u56fe\u50cf\u7eb9\u7406\u3002**\u6211\u4eec\u5c06\u6211\u4eec\u7684\u7ed3\u679c\u4e0e\u5176\u4ed6\u65b9\u6cd5\u8fdb\u884c\u4e86\u6bd4\u8f83\uff0c\u7ed3\u679c\u8868\u660e\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u5e38\u89c1\u7684\u5f31\u5149\u56fe\u50cf\u589e\u5f3a\u65b9\u6cd5\u4e2d\u53d6\u5f97\u4e86\u6700\u597d\u7684\u6027\u80fd\u3002\\n\\n## Related Work\\n\\n### \u4f4e\u7167\u5ea6\u589e\u5f3a\u65b9\u6cd5\\n\\n\u4e00\u822c\u6765\u8bf4\uff0c\u4f4e\u7167\u5ea6\u56fe\u50cf\u589e\u5f3a\u65b9\u6cd5\u53ef\u4ee5\u5206\u4e3a**\u4e09\u7c7b**\u3002\\n\\n- HE\u65b9\u6cd5\u4fdd\u6301\u50cf\u7d20\u503c\u4e4b\u95f4\u7684\u76f8\u5bf9\u5173\u7cfb\uff0c\u5c3d\u91cf\u4f7f\u5176\u670d\u4ece\u5747\u5300\u5206\u5e03\u3002\\n\\n- \u52a8\u6001\u76f4\u65b9\u56fe\u5747\u8861\u5316(DHE)  [1]\u5c06\u76f4\u65b9\u56fe\u5206\u6210\u51e0\u4e2a\u90e8\u5206\uff0c\u5e76\u5728\u6bcf\u4e2a\u5b50\u76f4\u65b9\u56fe\u4e2d\u6267\u884cHE\u5904\u7406\u3002\\n- \u5bf9\u6bd4\u5ea6\u53d7\u9650\u7684\u81ea\u9002\u5e94\u76f4\u65b9\u56fe\u5747\u8861\u5316(CLAHE)  [2]\u81ea\u9002\u5e94\u5730\u9650\u5236\u4e86HE\u7684\u5bf9\u6bd4\u5ea6\u589e\u5f3a\u7ed3\u679c\u7684\u7a0b\u5ea6\u3002\\n\\n\u5bf9\u4e8e\u8fd9\u4e9bHE\u65b9\u6cd5\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u4e25\u91cd\u7684\u504f\u8272\u95ee\u9898\uff0c\u800c\u4e14\u6697\u9ed1\u6697\u533a\u57df\u7684\u7ec6\u8282\u6ca1\u6709\u5f97\u5230\u9002\u5f53\u7684\u589e\u5f3a\u3002\\n\\n\u57fa\u4e8eRetinex\u7406\u8bba\u7684\u65b9\u6cd5\u8ba1\u7b97\u56fe\u50cf\u7684\u7167\u5ea6\uff0c\u5e76\u901a\u8fc7\u53bb\u9664\u5b83\u4eec\u6765\u5b9e\u73b0\u56fe\u50cf\u589e\u5f3a\u3002\u5355\u5c3a\u5ea6\u89c6\u7f51\u819c(SSR)  [3]\u3001\u591a\u5c3a\u5ea6\u89c6\u7f51\u819c(MSR) [4]\u548c\u5e26\u989c\u8272\u6062\u590d\u7684\u591a\u5c3a\u5ea6\u89c6\u7f51\u819c(MSRCR) [5]\u662f\u8fd9\u7c7b\u65b9\u6cd5\u7684\u5178\u578b\u4f5c\u54c1\u3002\u6700\u8fd1\uff0c\u4e00\u4e9b\u65b0\u7684\u65b9\u6cd5(SRIE  [6]\uff0cLIME[7])\u88ab\u63d0\u51fa\u6765\u4f30\u8ba1\u5149\u7167\u56fe\u548c\u53cd\u5c04\u7387\u4ee5\u589e\u5f3a\u4f4e\u7167\u5ea6\u56fe\u50cf\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e25\u91cd\u7684**\u989c\u8272\u5931\u771f**\u3002\\n\\n\u57fa\u4e8eDehaze\u6a21\u578b\u7684\u65b9\u6cd5\u53cd\u8f6c\u4f4e\u7167\u5ea6\u56fe\u50cf\uff0c\u5e76\u5728\u5176\u4e0a\u5e94\u7528dehaze\u65b9\u6cd5\u3002\u5728Dehaze\u6a21\u578b\u4e2d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7528\u4e8e\u589e\u5f3a\u4f4e\u7167\u5ea6\u56fe\u50cf\u3002\u7136\u800c\uff0c\u56fe\u50cf\u901a\u5e38\u88ab\u8fc7\u5ea6\u589e\u5f3a\uff0c\u5e76\u4e14\u589e\u5f3a\u56fe\u50cf\u7684\u9971\u548c\u5ea6\u901a\u5e38\u88ab\u5938\u5927\u3002\\n\\n### \u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u8fdb\u884c\u56fe\u50cf\u5904\u7406\u7684\u65b9\u6cd5\\n\\n\\\\*LLNet\u662f\u552f\u4e00\u4f7f\u7528\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u589e\u5f3a\u4f4e\u7167\u5ea6\u56fe\u50cf\u7684\u65b9\u6cd5\u3002\u8be5\u7f51\u7edc\u662f**\u5806\u53e0\u7a00\u758f\u53bb\u566a\u81ea\u52a8\u7f16\u7801\u5668\u7684\u53d8\u4f53**\uff0c\u5e76\u4e14\u5b83\u4e0d\u4f7f\u7528\u5377\u79ef\u5c42\u3002\u4f7f\u7528\u975e\u7ebf\u6027\u65b9\u6cd5\u6a21\u62df\u5f31\u5149\u6761\u4ef6\uff0c\u4f7f\u81ea\u7136\u56fe\u50cf\u53d8\u6697\u3002\u8fd9\u4e9b\u56fe\u50cf\u88ab\u8bbe\u7f6e\u4e3a\u8bad\u7ec3\u6570\u636e\u3002\u7ecf\u8fc7\u8bad\u7ec3\uff0c\u7f51\u7edc\u53ef\u4ee5\u589e\u5f3a\u5f31\u5149\u56fe\u50cf\u3002\\n\\n### Inception\u6a21\u5757\u548c\u6b8b\u5dee\u5b66\u4e60\\n\\n\u5728\u8bb8\u591a\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u4e2d\uff0c\u6df1\u5ea6\u7f51\u7edc\u6bd4\u975e\u6df1\u5ea6\u7f51\u7edc\u5177\u6709\u66f4\u597d\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u5f53\u5806\u53e0\u7684\u5377\u79ef\u5c42\u8d8a\u6df1\uff0c\u7f51\u7edc\u5c31\u4f1a\u9047\u5230\u68af\u5ea6\u6d88\u5931\u7684\u4e25\u91cd\u95ee\u9898\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bad\u7ec3\u96be\u4ee5\u6536\u655b\u3002\u4f7f\u7528inception\u6a21\u5757\u548c\u6b8b\u5dee\u5b66\u4e60\u80fd\u591f\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002(\u56e0\u4e3aGoogleNet and ResNet\u53d6\u5f97\u4e86\u6bd4\u8f83\u597d\u7684\u6548\u679c)\\n\\n## Proposed Method\\n\\n### \u7f51\u7edc\u7ed3\u6784\\n\\n\u867d\u7136\u4f4e\u7167\u5ea6\u56fe\u50cf\u589e\u5f3a\u5c5e\u4e8e\u4f4e\u5c42\u6b21(low-level)\u7684\u56fe\u50cf\u5904\u7406\u4efb\u52a1\uff0c\u4f46\u5b83\u4e0e\u8d85\u5206\u8fa8\u7387\u548c\u56fe\u50cf\u53bb\u566a\u6709\u5f88\u5927\u4e0d\u540c\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u4efb\u52a1\uff0c\u52a3\u8d28\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u503c\u90fd\u5728\u771f\u503c\u9644\u8fd1\uff0c\u5e73\u5747\u50cf\u7d20\u503c\u51e0\u4e4e\u4e0d\u53d8\uff0c\u8fd9\u5728\u6211\u4eec\u7684\u4efb\u52a1\u4e2d\u662f\u4e0d\u540c\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u4e0d\u540c\u4f46\u6709\u6548\u7684CNN\u7f51\u7edc\u6765\u589e\u5f3a\u5f31\u5149\u56fe\u50cf\u3002\u7f51\u7edc\u7ed3\u6784\u5982\u4e0b\\n\\n![image-20210709090203976](./src/LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement/image-20210709090203976.png)\\n\\n\u5177\u4f53\u6d41\u7a0b\u5982Fig2\uff0c\u53ef\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\u3002\\n\\n\u5728\u7b2c\u4e00\u9636\u6bb5\uff0c\u6570\u636e\u4ee5\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u5904\u7406\u3002\u4e00\u79cd\u65b9\u5f0f\u662f1\xd71\u5377\u79ef\u5c42\uff0c\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4e24\u4e2a3\xd73\u5377\u79ef\u5c42\u3002\u6211\u4eec\u5c06\u5b83\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u7b2c\u4e8c\u9636\u6bb5\u7684\u8f93\u5165\u3002\u7b2c\u4e00\u9636\u6bb5\u7c7b\u4f3c\u4e8e\u521d\u59cb\u6a21\u5757\u3002\u6211\u4eec\u4e0d\u5bf9\u7ed3\u679c\u505aconcat\uff0c\u800c\u662f\u76f4\u63a5\u76f8\u52a0\u5b83\u4eec\u3002\\n\\n\u7b2c\u4e8c\u9636\u6bb5\uff0c\u4e5f\u6709\u4e24\u79cd\u65b9\u5f0f\u3002\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u4e24\u4e2a3\xd73\u5377\u79ef\u5c42\u5904\u7406\u6570\u636e\uff0c\u800c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\u76f4\u63a5\u7ed5\u8fc7\u8f93\u5165\u6570\u636e\uff0c\u8fd9\u662f\u6b8b\u5dee\u5b66\u4e60\u4e2d\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\u3002\\n\\n![image-20210709090435335](./src/LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement/image-20210709090435335.png)\\n\\n\u5bf9\u4e8eVDSR\u548cDnCNN\uff0c\u7f51\u7edc\u4f1a\u751f\u6210\u4e00\u4e2a\u6b8b\u5dee\u56fe\u50cf\uff0c\u901a\u8fc7\u5c06\u6b8b\u5dee\u56fe\u50cf\u4e0e\u539f\u59cb\u56fe\u50cf\u76f8\u52a0\u6765\u8ba1\u7b97\u6700\u7ec8\u56fe\u50cf\u3002\u8fd9\u662f\u56e0\u4e3a\u5bf9\u4e8e\u8d85\u5206\u8fa8\u7387\u548c\u56fe\u50cf\u53bb\u566a\uff0c\u5730\u9762\u771f\u5b9e\u548c\u52a3\u5316\u56fe\u50cf\u4e4b\u95f4\u7684\u5dee\u5f02\u4e0d\u662f\u5f88\u5927\u3002\u5bf9\u4e8e\u5f31\u5149\u56fe\u50cf\u589e\u5f3a\uff0c\u7f51\u7edc\u5b66\u4e60\u6b8b\u7559\u56fe\u50cf\u4f3c\u4e4e\u6bd4\u4e00\u70b9\u4e00\u70b9\u5730\u589e\u5f3a\u56fe\u50cf\u66f4\u56f0\u96be\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528\u8fd9\u79cd\u5728VDSR\u6216DnCNN\u7684\u67b6\u6784\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u6211\u4eec\u5df2\u7ecf\u5728\u6a21\u5757\u4e2d\u5229\u7528\u4e86\u6b8b\u5dee\u5b66\u4e60\u3002\\n\\nLLCNN\u7684\u7ed3\u6784\u662f\u8fd9\u6837\u63cf\u8ff0\u7684:\\n\\n\u4e00\u4e2a\u5377\u79ef\u5c42\u505a\u9884\u5904\u7406\u4ea7\u751f\u5f52\u4e00\u5316\u7684\u8f93\u5165\uff0c\u53e6\u4e00\u4e2a\u5377\u79ef\u5c42\u4ea7\u751f\u589e\u5f3a\u56fe\u50cf\uff0c\u5728\u8fd9\u4e24\u5c42\u4e4b\u95f4\u653e\u7f6e\u51e0\u4e2a\u7279\u6b8a\u8bbe\u8ba1\u7684\u5377\u79ef\u6a21\u5757\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8fc7\u6ee4\u5668\uff0c\u6211\u4eec\u4f7f\u752864\u4e2a\u8fc7\u6ee4\u5668\uff0c\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u3002\u6700\u540e\u4e00\u5c42\u4e2d\u4f7f\u7528\u7684\u6ee4\u955c\u6570\u91cf\u53d6\u51b3\u4e8e\u989c\u8272\u901a\u9053\u7684\u6570\u91cf\u3002\\n\\n\u8be5\u7f51\u7edc\u4ee5\u5f31\u5149\u56fe\u50cf\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u4f7f\u8f93\u51fa\u56fe\u50cf\u770b\u8d77\u6765\u50cf\u662f\u5728\u6b63\u5e38\u5149\u7ebf\u6761\u4ef6\u4e0b\u6355\u83b7\u7684\u3002\u7c7b\u4f3c\u4e8eVDSR\u548cDnCNN\uff0c\u6211\u4eec\u5c06\u539f\u59cb\u56fe\u50cf\u5207\u5272\u6210\u9762\u7247\u3002\u8865\u4e01\u5927\u5c0f\u8bbe\u7f6e\u4e3a41\xd741\u3002\u6240\u6709\u8f93\u5165\u56fe\u50cf\u5747\u91c7\u7528\u975e\u7ebf\u6027\u65b9\u6cd5\u751f\u6210\uff0c\u4ee5\u6a21\u62df\u5f31\u5149\u6761\u4ef6\u3002\\n\\n### SSIM\u635f\u5931\u51fd\u6570\\n\\n\u5728\u4f4e\u7167\u5ea6\u589e\u5f3a\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u589e\u5f3a\u5728\u7279\u5b9a\u5149\u7167\u73af\u5883\u4e0b\u7684\u56fe\u50cf\u3002\u4f8b\u5982\uff0c\u7ed9\u5b9a\u5728\u767d\u5929\u62cd\u6444\u7684\u81ea\u7136\u56fe\u50cf\uff0c\u901a\u8fc7\u6dfb\u52a0\u6216\u51cf\u53bb\u4e00\u4e2a\u5c0f\u6570\u5b57\u6765\u6539\u53d8\u6240\u6709\u50cf\u7d20\u503c\u662f\u5f71\u54cd\u5f88\u5c0f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7ed3\u6784\u51e0\u4e4e\u4e0d\u4f1a\u6539\u53d8\uff0c\u4f46\u4f7f\u7528PSNR\u51fd\u6570\u4f1a\u6709\u5f88\u5927\u7684\u5dee\u5f02\u3002SSIM\u516c\u5f0f\u5982\u4e0b\\n$$\\nSSIM(p)=\\\\frac{2\\\\mu_x\\\\mu_y+C_1}{\\\\mu_x^2+\\\\mu_y^2+C_1}\\\\cdot\\\\frac{2\\\\sigma_{xy}+C_2}{\\\\sigma_x^2+\\\\sigma_y^2+C_2}\\n$$\\nSSIM\u7684\u503c\u57df\u8303\u56f4\u4e3a$(0,1]$\uff0c\u503c\u4e3a1\u65f6\u8868\u793a\u4e24\u5f20\u56fe\u50cf\u5b8c\u5168\u4e00\u6837\uff0c\u56e0\u6b64\u6211\u4eec\u7528$1-SSIM(p)$\u6765\u8ba1\u7b97\u50cf\u7d20\u7684\u635f\u5931\u3002\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\\n$$\\nl_{ssim}\\\\frac{1}{N}\\\\sum_{p\\\\in P}1-SSIM(p)\\n$$\\n\u6211\u4eec\u9075\u5faa[11]\u5e76\u5c06\u81ea\u7136\u56fe\u50cf\u8bbe\u7f6e\u4e3a\u5730\u9762\u771f\u5b9e\u56fe\u50cf\uff0c\u5e76\u4e14\u901a\u8fc7\u9000\u5316\u65b9\u6cd5\u4ea7\u751f\u5f31\u5149\u56fe\u50cf\u3002\u968f\u673a\u4f3d\u739b\u8c03\u6574\u7528\u4e8e\u6a21\u62df\u5f31\u5149\u56fe\u50cf\u3002\u53c2\u6570\u03b3\u5728\u8303\u56f4(2\uff0c5)\u5185\u968f\u673a\u8bbe\u7f6e\uff0c\u8fd9\u5c06\u4f7f\u7f51\u7edc\u80fd\u591f\u81ea\u9002\u5e94\u5730\u589e\u5f3a\u56fe\u50cf\u3002\u6211\u4eec\u6d4b\u8bd5\u4e86\u4e24\u79cd\u4e0d\u540c\u6df1\u5ea6\u7684\u7f51\u7edc\u3002\u4e00\u4e2a\u53eb\u505aLLCNN\uff0c\u5b83\u6709\u4e09\u4e2a\u6a21\u5757\uff0c\u6240\u4ee5\u5b83\u670917\u4e2a\u5377\u79ef\u5c42\u3002\u53e6\u4e00\u4e2aLLCNN-s\u4f7f\u7528\u4e24\u4e2a\u6a21\u5757\uff0c\u5377\u79ef\u5c42\u6570\u4e3a12\u5c42\u3002\u9664\u4e86\u6700\u540e\u4e00\u5c42\uff0c\u6211\u4eec\u5728\u6bcf\u5c42\u8bbe\u7f6e\u4e8664\u4e2a\u8fc7\u6ee4\u5668\u3002\u8bad\u7ec3\u65f6\u52a8\u91cf\u8bbe\u7f6e\u4e3a0.9\uff0c\u91cd\u91cf\u8870\u51cf\u4e3a0.0001\u3002\u57fa\u7840\u5b66\u4e60\u7387\u4e3a0.01\u3002\u5b66\u4e60\u901f\u5ea6\u4f1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u53d1\u751f\u53d8\u5316\u3002\u8fd9\u91cc\u8fd8\u63d0\u4f9b\u4e86SSIM\u635f\u8017\u5c42\u7684\u53c2\u6570\u3002\u5377\u79ef\u6838\u5927\u5c0f\u548c$C_1$,$C_2$\u5206\u522b\u8bbe\u7f6e\u4e3a8\u30010.0001\u548c0.001\u3002\u5728\u6211\u4eec\u7684\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u8fed\u4ee34\u4e07\u6b21\u8868\u793a1\u4e2aepoch\u3002\\n\\n## Experiments\\n\\n\u8be6\u89c1\u539f\u6587\\n\\n![image-20210709091917127](./src/LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement/image-20210709091917127.png)\\n\\n![image-20210709091927771](./src/LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement/image-20210709091927771.png)"},{"id":"/[33]VOLO-Vision-Outlooker-for-Visual-Recognition","metadata":{"permalink":"/blog/[33]VOLO-Vision-Outlooker-for-Visual-Recognition","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[33]VOLO-Vision-Outlooker-for-Visual-Recognition.md","source":"@site/blog/[33]VOLO-Vision-Outlooker-for-Visual-Recognition.md","title":"VOLO - Vision Outlooker for Visual Recognition","description":"\u8bba\u6587\u540d\u79f0\uff1aVOLO: Vision Outlooker for Visual Recognition","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"non-convolution","permalink":"/blog/tags/non-convolution"}],"readingTime":10.175,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"VOLO - Vision Outlooker for Visual Recognition","authors":["asthestarsfall"],"tags":["attention-mechanism","non-convolution"]},"prevItem":{"title":"LLCNN - A convolutional neural network for low-light image enhancement","permalink":"/blog/[32]LLCNN-A-Convolutional-Neural-Network-for-Low-light-Image-Enhancement"},"nextItem":{"title":"Polarized Self-Attention - Towards High-quality Pixel-wise Regression","permalink":"/blog/[34]Polarized-Self-Attention-Towards-High-quality-Pixel-wise-Regression"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1aVOLO: Vision Outlooker for Visual Recognition\\n>\\n> \u4f5c\u8005\uff1aLi Yuan, Qibin Hou, Zihang Jiang, Jiashi Feng, Shuicheng Yan\\n>\\n> Code\uff1a https://github.com/sail-sg/volo\\n\\n## \u6458\u8981\\n\\n- \u89c6\u89c9\u8bc6\u522b\u4efb\u52a1\u5df2\u88ab$CNN$\u4e3b\u5bb0\u591a\u5e74\u3002\u57fa\u4e8e\u81ea\u6ce8\u610f\u529b\u7684$ViT$\u5728$ImageNet$\u5206\u7c7b\u65b9\u9762\u8868\u73b0\u51fa\u4e86\u6781\u5927\u7684\u6f5c\u529b\uff0c\u5728\u6ca1\u6709\u989d\u5916\u6570\u636e\u524d\u63d0\u4e0b\uff0c$Transformer$\u7684\u6027\u80fd\u4e0e\u6700\u5148\u8fdb\u7684$CNN$\u6a21\u578b\u4ecd\u5177\u6709\u5dee\u8ddd\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u7f29\u5c0f\u8fd9\u4e24\u8005\u4e4b\u95f4\u7684\u6027\u80fd\u5dee\u8ddd\uff0c\u5e76\u4e14\u8bc1\u660e\u4e86\u57fa\u4e8e\u6ce8\u610f\u529b\u7684\u6a21\u578b\u786e\u5b9e\u80fd\u591f\u6bd4$CNN$\u8868\u73b0\u66f4\u597d\u3002\\n- \u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u9650\u5236$ViTs$\u5728$ImageNet$\u5206\u7c7b\u4e2d\u7684\u6027\u80fd\u7684\u4e3b\u8981\u56e0\u7d20\u662f\u5176\u5728\u5c06\u7ec6\u7c92\u5ea6\u7ea7\u522b\u7684\u7279\u5f81\u7f16\u7801\u4e58$Token$\u8868\u793a\u8fc7\u7a0b\u4e2d\u6bd4\u8f83\u4f4e\u6548\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684$outlook$\u6ce8\u610f\u529b\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u800c\u901a\u7528\u7684\u67b6\u6784\uff0c\u79f0\u4e3a$Vision$ $outlooker$ ($VOLO$)\u3002$outlook$\u6ce8\u610f\u529b\u4e3b\u8981\u5c06$fine$\u200b-$level$\u7ea7\u522b\u7684\u7279\u5f81\u548c\u4e0a\u4e0b\u6587\u4fe1\u606f\u66f4\u9ad8\u6548\u5730\u7f16\u7801\u5230$token$\u8868\u793a\u4e2d\uff0c\u8fd9\u4e9b$token$\u5bf9\u8bc6\u522b\u6027\u80fd\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u5f80\u5f80\u88ab\u81ea\u6ce8\u610f\u529b\u6240\u5ffd\u89c6\u3002\\n- \u5b9e\u9a8c\u8868\u660e\uff0c\u5728\u4e0d\u4f7f\u7528\u4efb\u4f55\u989d\u5916\u8bad\u7ec3\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c$VOLO$\u5728$ImageNet$-$1K$\u5206\u7c7b\u4efb\u52a1\u4e0a\u8fbe\u5230\u4e8687.1%\u7684$top$-$1$\u51c6\u786e\u7387\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u8d85\u8fc787%\u7684\u6a21\u578b\u3002\u6b64\u5916\uff0c\u9884\u8bad\u7ec3\u597d\u7684VOLO\u6a21\u578b\u8fd8\u53ef\u4ee5\u5f88\u597d\u5730\u8fc1\u79fb\u5230\u4e0b\u6e38\u4efb\u52a1\uff0c\u5982\u8bed\u4e49\u5206\u5272\u3002\u6211\u4eec\u5728$Cityscapes$\u9a8c\u8bc1\u96c6\u4e0a\u83b7\u5f97\u4e8684.3% $mIoU$\uff0c\u5728$ADE20K$\u9a8c\u8bc1\u96c6\u4e0a\u83b7\u5f97\u4e8654.3%\u7684$mIoU$\uff0c\u5747\u521b\u4e0b\u4e86\u6700\u65b0\u8bb0\u5f55\u3002\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/20210730004322.png\\" />\\n\\n**\u603b\u7ed3**\uff1a\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u578b\u7684\u6ce8\u610f\u529b\u673a\u5236\u2014\u2014$Outlook\\\\ Attention$\uff0c\u4e0e\u7c97\u7565\u5efa\u6a21\u5168\u5c40\u957f\u8ddd\u79bb\u5173\u7cfb\u7684$Self\\\\ Attention$\u4e0d\u540c\uff0c$Outlook$\u80fd\u5728\u90bb\u57df\u4e0a\u66f4\u7cbe\u7ec6\u5730\u7f16\u7801\u9886\u57df\u7279\u5f81\uff0c\u5f25\u8865\u4e86$Self\\\\ Attention$\u5bf9\u66f4\u7cbe\u7ec6\u7279\u5f81\u7f16\u7801\u7684\u4e0d\u8db3\u3002\\n\\n## OutLooker Attention\\n\\n**OutLooker**\u6a21\u5757\u53ef\u89c6\u4f5c\u62e5\u6709\u4e24\u4e2a\u72ec\u7acb\u9636\u6bb5\u7684\u7ed3\u6784\uff0c\u7b2c\u4e00\u4e2a\u90e8\u5206\u5305\u542b\u4e00\u5806$OutLooker$\u7528\u4e8e\u751f\u6210\u7cbe\u7ec6\u5316\u7684\u8868\u793a\uff08$Token$ $representations$\uff09\uff0c\u7b2c\u4e8c\u4e2a\u90e8\u5206\u90e8\u7f72\u4e00\u7cfb\u5217\u7684\u8f6c\u6362\u5668\u6765\u805a\u5408\u5168\u5c40\u4fe1\u606f\u3002\u5728\u6bcf\u4e2a\u90e8\u5206\u4e4b\u524d\uff0c\u90fd\u6709\u5757\u5d4c\u5165\u6a21\u5757\uff08$patch$ $embedding$ $module$\uff09\u5c06\u8f93\u5165\u6620\u5c04\u5230\u6307\u5b9a\u5f62\u72b6\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n### \u7406\u8bba\u548c\u5f62\u5f0f\\n\\nOutLooker\u7684\u63d0\u51fa\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u4e24\u70b9\uff1a\\n\\n1. \u6bcf\u4e2a\u7a7a\u95f4\u4f4d\u7f6e\u7684\u7279\u5f81\u90fd\u5177\u6709\u8db3\u591f\u7684\u4ee3\u8868\u6027\uff0c\u53ef\u4ee5\u751f\u6210\u805a\u96c6\u4e86\u5c40\u90e8\u90bb\u8fd1\u4fe1\u606f\u7684\u6ce8\u610f\u529b\u6743\u91cd\\n2. \u5bc6\u96c6\u7684\u5c40\u90e8\u7a7a\u95f4\u805a\u5408\u4fe1\u606f\u53ef\u4ee5\u6709\u6548\u5730\u7f16\u7801\u7cbe\u7ec6\u5c42\u6b21\u7684\u4fe1\u606f\\n\\nOutLooker\u7531\u7528\u4e8e\u7a7a\u95f4\u4fe1\u606f\u7f16\u7801\u7684outlook\u6ce8\u610f\u5c42\u548c\u7528\u4e8e\u901a\u9053\u4fe1\u606f\u4ea4\u4e92\u7684MLP\u7ec4\u6210\uff0c\u7ed9\u5b9a$X\\\\in \\\\mathbb{R}^{H\\\\times W\\\\times C}$\uff0c\u6709\u4e00\u4e0b\u5f62\u5f0f\uff1a\\n$$\\n\\\\tilde{\\\\mathbf{X}}=OutlookAtt(LN(\\\\mathbf{X}))+\\\\mathbf{X},\\\\qquad(1)\\\\\\\\\\n\\\\mathbf{Z}=MLP(LN(\\\\tilde{\\\\mathbf{X}}))+\\\\tilde{\\\\mathbf{X}}.\\\\qquad\\\\qquad(2)\\n$$\\n\u5176\u4e2d$LN$\u8868\u793a$LayerNorm$d\\n\\n### \u65b9\u6cd5\\n\\n![image-20210723151620803](https://gitee.com/Thedeadleaf/images/raw/master/image-20210723151620803.png)\\n\\n\u4ece\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5f97\u5230\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5206\u4e3a\u4e24\u6761\u8def\u7ebf\uff0c\u63a5\u4e0b\u6765\u5148\u4ecb\u7ecd\u7b2c\u4e00\u6761\\n\\n![](https://gitee.com/Thedeadleaf/images/raw/master/20210730004422.gif)\\n\\n**Outlook Attention Generation**\uff1a\\n\\n1. \u901a\u8fc7\u5168\u8fde\u63a5\u5c42\u5c06$Input$\u200b\u7684\u901a\u9053\u7531$[H,W,C]$\u200b\u53d8\u4e3a$[H,W,K^4]$\u200b\uff0c\u5f97\u5230$Q$\\n2. \u901a\u8fc7$reshape$\u200b\u5c06\u6ce8\u610f\u529b\u6743\u91cd\u53d8\u4e3a$[H*W,K*K,K*K]$\u200b\uff0c\u8868\u793a\u6bcf\u4e2a\u50cf\u7d20\u751f\u6210\u7684\u6743\u91cd\\n3. \u5728\u6700\u540e\u4e00\u7ef4\u4f7f\u7528$Softmax$\u200b\u200b\uff0c\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u4e3a\u4ec0\u4e48\u901a\u9053\u6570\u53d8\u4e3a$K^4$\u200b\u200b\u200b\u200b\uff0c\u56e0\u4e3a\u5176\u9700\u8981\u4e3a$K\\\\times K$\u5927\u5c0f\u7684\u7a97\u53e3\u91cc\u6240\u6709\u7684\u50cf\u7d20\u5efa\u7acb\u76f8\u4e92\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u5c40\u90e8\u7684$self-attention$\uff0c\u8fd9\u4e5f\u662f\u4e0e$Involution$\u200b\u7b49\u7c7b\u4f3c\u5de5\u4f5c\u7684\u4e00\u4e2a\u5de8\u5927\u4e0d\u540c\u4e4b\u5904\uff1b\u8fd9\u91cc\u7684$Softmax$\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\u8ba1\u7b97\u4e0e\u5176\u4ed6\u6240\u6709\u50cf\u7d20\uff08\u5305\u62ec\u81ea\u5df1\uff09\u7684\u4e00\u4e2a\u76f8\u4f3c\u5ea6\\n\\n**Dense aggregation(Value Generation)**\uff1a\\n\\n1. \u9996\u5148\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u4e00\u6b21\u7ebf\u6027\u53d8\u6362\uff0c\u901a\u9053\u6570\u4e0d\u6539\u53d8\\n2. \u4f7f\u7528`nn.Unfold()`\u8fdb\u884c\u5c55\u5f00\uff0c\u7ef4\u5ea6\u4e3a$[H*W,K*K,C]$\u200b\uff0c\u5f97\u5230$V$\\n\\n**Calculate The Attention**\uff1a\\n\\n1. \u4e24\u6761\u8def\u7ebf\u5f97\u5230\u7684\u77e9\u9635\u8fdb\u884c\u77e9\u9635\u4e58\u79ef\uff0c\u76f8\u5f53\u8fdb\u884c\u4e86\u4e00\u6b21\u5377\u79ef\u64cd\u4f5c\uff0c\u5377\u79ef\u6838\u4e3a$Outlook\\\\ Attention\\\\ Weight$\u200b\\n2. \u4f7f\u7528`nn.Fold`\u6298\u53e0\u56de\u539f\u5c3a\u5bf8\\n\\n\u6574\u4e2a\u8fc7\u7a0b\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\n![image-20210723162203748](https://gitee.com/Thedeadleaf/images/raw/master/image-20210723162203748.png)\\n\\n```python\\nclass OutlookAttention(nn.Module):\\n    \\"\\"\\"\\n    Implementation of outlook attention\\n    --dim: hidden dim\\n    --num_heads: number of heads\\n    --kernel_size: kernel size in each window for outlook attention\\n    return: token features after outlook attention\\n    \\"\\"\\"\\n\\n    def __init__(self, dim, num_heads, kernel_size=3, padding=1, stride=1,\\n                 qkv_bias=False, qk_scale=None, attn_drop=0., proj_drop=0.):\\n        super().__init__()\\n        head_dim = dim // num_heads\\n        self.num_heads = num_heads\\n        self.kernel_size = kernel_size\\n        self.padding = padding\\n        self.stride = stride\\n        self.scale = qk_scale or head_dim**-0.5\\n\\n        self.v = nn.Linear(dim, dim, bias=qkv_bias)\\n        self.attn = nn.Linear(dim, kernel_size**4 * num_heads)\\n\\n        self.attn_drop = nn.Dropout(attn_drop)\\n        self.proj = nn.Linear(dim, dim)\\n        self.proj_drop = nn.Dropout(proj_drop)\\n\\n        self.unfold = nn.Unfold(kernel_size=kernel_size, padding=padding, stride=stride)\\n        self.pool = nn.AvgPool2d(kernel_size=stride, stride=stride, ceil_mode=True) # stride\u7684\u5b9e\u73b0\u53ef\u80fd\u9760\u7834\\n\\n    def forward(self, x):\\n        B, H, W, C = x.shape\\n\\n        v = self.v(x).permute(0, 3, 1, 2)  # B, H, W, C ->B, C, H, w\\n\\n        h, w = math.ceil(H / self.stride), math.ceil(W / self.stride)\\n        v = self.unfold(v).reshape(B, self.num_heads, C // self.num_heads,\\n                                   self.kernel_size * self.kernel_size,\\n                                   h * w).permute(0, 1, 4, 3, 2)  # B, N, C//N, K*K, H*W->B, N, H*W, K*K, C//N \\n\\n        attn = self.pool(x.permute(0, 3, 1, 2)).permute(0, 2, 3, 1)\\n        attn = self.attn(attn).reshape(\\n            B, h * w, self.num_heads, self.kernel_size * self.kernel_size,\\n            self.kernel_size * self.kernel_size).permute(0, 2, 1, 3, 4)  # B,H,N,kxk,kxk\\n        attn = attn * self.scale\\n        attn = attn.softmax(dim=-1)\\n        attn = self.attn_drop(attn)\\n\\n        x = (attn @ v).permute(0, 1, 4, 3, 2).reshape(\\n            B, C * self.kernel_size * self.kernel_size, h * w)\\n        x = F.fold(x, output_size=(H, W), kernel_size=self.kernel_size,\\n                   padding=self.padding, stride=self.stride)\\n\\n        x = self.proj(x.permute(0, 2, 3, 1))\\n        x = self.proj_drop(x)\\n\\n        return x\\n```\\n\\n\\n\\n### \u591a\u5934\u673a\u5236\u7684\u5b9e\u73b0\\n\\n\u591a\u5934\u673a\u5236\u7684\u5b9e\u73b0\u5341\u5206\u7b80\u5355\uff0c\u5047\u8bbe\u8bbe\u7f6e\u5934\u6570\u4e3a$N$\uff0c\u53ea\u9700\u8981\u8c03\u6574$W_A\\\\in \\\\mathbb{R}^{C\\\\times K^4}\\\\rightarrow W_A\\\\in \\\\mathbb{R}^{C\\\\times N\\\\cdot K^4}$\uff0c\u6700\u540e\u751f\u6210$N$\u4e2a$A_n\\\\in\\\\mathbb{R}^{H\\\\times W\\\\times K^4},V_n\\\\in\\\\mathbb{R}^{H\\\\times W\\\\times C_N}$\uff0c\u5176\u4e2d$C_N\\\\times N=C$\uff0c\u5206\u522b\u8ba1\u7b97\u6700\u540eConcat\u8d77\u6765\\n\\n### Patch Embedding\\n\\nPatch Embedding\u6700\u521d\u5e94\u8be5\u662f\u6e90\u4e8eViT\uff0c\u7c7b\u4f3c\u4e8e\u6c60\u5316\uff0c\u901a\u8fc7\u5377\u79ef\u7684\u7ebf\u6027\u53d8\u6362\u5c06\u7279\u5f81\u56fe\u4e2d\u7684\u4e00\u5c0f\u5757\uff08patch\uff09\u8fdb\u884c\u6620\u5c04\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e00\u79cd\u4e0b\u91c7\u6837\u7684\u6548\u679c\\n\\n\u4e0d\u540c\u4e0e\u6c60\u5316\u7684\u7c97\u66b4\uff0cPatch Embedding\u80fd\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4fdd\u7559\u4fe1\u606f\uff0c\u6269\u5927\u611f\u53d7\u91ce\\n\\n\u540c\u65f6\uff0c\u53ef\u4ee5\u51cf\u5c11\u540e\u7eed\u6a21\u5757\u7684\u8ba1\u7b97\u91cf\\n\\n\u5176\u5b9e\u73b0\u65b9\u6cd5\u901a\u8fc7\u63a7\u5236\u5377\u79ef\u6838\u5927\u5c0f\u548c\u6b65\u957f\u6765\u5b9e\u73b0\uff0cVOLO\u5b9e\u73b0\u7684\u4ee3\u7801\u5982\u4e0b\\n\\n```python\\nclass PatchEmbed(nn.Module):\\n    \\"\\"\\"\\n    Image to Patch Embedding.\\n    Different with ViT use 1 conv layer, we use 4 conv layers to do patch embedding\\n    \\"\\"\\"\\n\\n    def __init__(self, img_size=224, stem_conv=False, stem_stride=1,\\n                 patch_size=8, in_chans=3, hidden_dim=64, embed_dim=384):\\n        super().__init__()\\n        assert patch_size in [4, 8, 16]\\n\\n        self.stem_conv = stem_conv\\n        if stem_conv:\\n            self.conv = nn.Sequential(\\n                nn.Conv2d(in_chans, hidden_dim, kernel_size=7, stride=stem_stride,\\n                          padding=3, bias=False),  # 112x112\\n                nn.BatchNorm2d(hidden_dim),\\n                nn.ReLU(inplace=True),\\n                nn.Conv2d(hidden_dim, hidden_dim, kernel_size=3, stride=1,\\n                          padding=1, bias=False),  # 112x112\\n                nn.BatchNorm2d(hidden_dim),\\n                nn.ReLU(inplace=True),\\n                nn.Conv2d(hidden_dim, hidden_dim, kernel_size=3, stride=1,\\n                          padding=1, bias=False),  # 112x112\\n                nn.BatchNorm2d(hidden_dim),\\n                nn.ReLU(inplace=True),\\n            )\\n\\n        self.proj = nn.Conv2d(hidden_dim,\\n                              embed_dim,\\n                              kernel_size=patch_size // stem_stride,\\n                              stride=patch_size // stem_stride)\\n        self.num_patches = (img_size // patch_size) * (img_size // patch_size)\\n\\n    def forward(self, x):\\n        if self.stem_conv:\\n            x = self.conv(x)\\n        x = self.proj(x)  # B, C, H, W\\n        return x\\n\\n```\\n\\n\u4e0d\u540c\u4e0eViT\u4f7f\u7528\u4e00\u5c42\u5377\u79ef\u8fdb\u884c\u5d4c\u5165\uff0c\u672c\u6587\u4f7f\u7528\u56db\u5c42\uff0c\u524d\u4e09\u5c42\u63d0\u53d6\u4e00\u5b9a\u7684\u7279\u5f81\uff0c\u6700\u540e\u4e00\u5c42\u5c06\u6574\u5f20feature map\u5206\u4e3apatch_size\u4e2a\u90e8\u5206\uff0c\u5f62\u72b6\u53d8\u4e3a$patch\\\\_size\\\\times patch\\\\_size$\\n\\n$Patch\\\\ Embedding$\u5728\u6b64\u8d77\u7740\u5173\u952e\u7684\u4f5c\u7528\uff0c\u5176\u4e0d\u4f46\u964d\u4f4e\u4e86\u6ce8\u610f\u529b\u6a21\u5757\u6240\u9700\u7684\u8ba1\u7b97\u91cf\uff0c\u5176\u6b21\uff0c\u80fd\u591f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8d77\u5230\u805a\u5408\u4e34\u8fd1\u4fe1\u606f\u7684\u4f5c\u7528\uff0c\u56e0\u4e3a$Outlook\\\\ Attention$\u200b\u7684\u751f\u6210\u662f\u4ec5\u4ec5\u5728\u901a\u9053\u4e0a\u4f7f\u7528\u7ebf\u6027\u8f6c\u6362\uff0c\u5176\u611f\u53d7\u91ce\u5b9e\u9645\u4e0a\u4e3a$1$\uff0c$Patch\\\\ Embedding$\u4f7f\u5f97\u611f\u53d7\u91ce\u5927\u5927\u589e\u52a0\uff0c\u867d\u7136$Outlook\\\\ Attention$\u53ea\u662f\u6ce8\u610f\u4e2d\u5fc3\u50cf\u7d20\u51e0\u4e2a\u90bb\u8fd1\u50cf\u7d20\uff0c\u4f46\u662f\u5176\u5728\u539f\u56fe\u4e0a\u7684\u611f\u53d7\u91ce\u5341\u5206\u5927\u3002\\n\\n\u5f53\u7136\uff0c\u5728$Value\\\\quad Generation$\u4e2d\u4e5f\u5f97\u5230\u4e86\u5c40\u90e8\u90bb\u8fd1\u4fe1\u606f\u7684\u805a\u5408\u3002\\n\\n### \u7f51\u7edc\u7ed3\u6784\\n\\n![image-20210723195055970](https://gitee.com/Thedeadleaf/images/raw/master/image-20210723195055970.png)\\n\\n### Attention\\n\\n![image-20210730004022377](https://gitee.com/Thedeadleaf/images/raw/master/20210730004036.png)\\n\\n\u5728$Self\\\\ Attention$\u200b\u4e2d\uff0cQ\uff0cK\uff0cV\u90fd\u662f\u8f93\u5165\u672c\u8eab\u7684\u7ebf\u6027\u53d8\u6362\\n\\n\u5728$EXternal\\\\ Attention$\u4e2d\uff0cQ\u4e3a\u8f93\u5165\u672c\u8eab\u7684\u7ebf\u6027\u53d8\u6362\uff0c\u800cK\u548cV\u662f\u5f15\u5165\u7684\u53c2\u6570\\n\\n\u5728$Outlook\\\\ Attention$\u200b\u4e2d\uff0cQ\u4e3a\u8f93\u5165\u672c\u8eab\uff0cV\u4e3a\u8f93\u5165\u672c\u8eab\u7684\u7ebf\u6027\u53d8\u6362\uff0c\u800cK\u662f\u5f15\u5165\u7684\u53c2\u6570\\n\\n### \u5176\u4ed6\\n\\n\u5b9e\u9645\u4e0a\u8fd9\u7bc7\u8bba\u6587\u4e0e[*Involution: Inverting the Inherence of Convolution for Visual Recognition*](https://arxiv.org/abs/2103.06255)\u5341\u5206\u76f8\u4f3c\uff0c\u5728**Involution**\u4e00\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u66f4\u4e3a\u5e7f\u6cdb\u7684\u65b9\u6cd5\uff0c\u672c\u6587\u53ef\u4ee5\u770b\u4f5c\u662fInvolution\u7684\u4e00\u79cd\u5b9e\u4f8b\\n\\n\u5bf9\u4e8e\u8fd9\u4e2a\u60c5\u51b5\uff0c\u4f5c\u8005\u662f\u5982\u6b64\u56de\u5e94\u7684\uff1a\\n\\n![image-20210723210045503](https://gitee.com/Thedeadleaf/images/raw/master/image-20210723210045503.png)\\n\\n\u4e5f\u5c31\u662f\u4e0a\u6587\u6240\u8bf4\u7684$K^4$\u7684\u539f\u56e0\\n\\n\u4e24\u7bc7\u6587\u7ae0\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e$Involution$\u5c06\u8fd9\u79cd\u65b9\u6cd5\u89c6\u4e3a\u4e00\u79cd\u65b0\u578b\u7684\u5377\u79ef\uff0c\u800c\u672c\u6587\u5219\u662f\u89c6\u5176\u4e3a\u4e00\u79cd\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u5b9e\u9645\u4e0a\u4e8c\u8005\u5b58\u5728\u7740\u67d0\u4e9b\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\uff0c\u8b6c\u5982\u672c\u6587\u4e2d\u7684\u591a\u5934\u673a\u5236\u5219\u5bf9\u5e94\u7740$Involution$\u4e2d\u7684\u5206\u7ec4(\u5e76\u4e0d\u5b8c\u5168\u76f8\u540c)\\n\\n\u4e0d\u540c\u4e4b\u5904\u53c8\u5728\u4e8e\uff0c\u672c\u6587\u5b66\u4e60\u4e86$ViT$\u200b\u7684$patch\\\\ embedding$\u65b9\u6cd5\uff0c\u51cf\u5c11\u4e86\u6ce8\u610f\u529b\u6a21\u5757\u4e2d\u7684\u8ba1\u7b97\u91cf\uff0c\u5e76\u4e14\u6539\u5584\u4e86\u201c\u5377\u79ef\u6838\u201d\u7684\u751f\u6210\u4ec5\u4e0e\u4e2d\u5fc3\u50cf\u7d20\u6709\u5173\u7684\u60c5\u51b5\uff08\u6216\u8bb8\u901a\u8fc7\u4e0d\u65ad\u5b66\u4e60\uff0c\u5377\u79ef\u6838\u80fd\u591f\u5efa\u6a21\u4e2d\u5fc3\u50cf\u7d20\u4e0e\u4e34\u8fd1\u50cf\u7d20\u7684\u5173\u7cfb\uff09\u3002"},{"id":"/[34]Polarized-Self-Attention-Towards-High-quality-Pixel-wise-Regression","metadata":{"permalink":"/blog/[34]Polarized-Self-Attention-Towards-High-quality-Pixel-wise-Regression","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[34]Polarized-Self-Attention-Towards-High-quality-Pixel-wise-Regression.md","source":"@site/blog/[34]Polarized-Self-Attention-Towards-High-quality-Pixel-wise-Regression.md","title":"Polarized Self-Attention - Towards High-quality Pixel-wise Regression","description":"\u8bba\u6587\u540d\u79f0\uff1aPolarized Self-Attention: Towards High-quality Pixel-wise Regression","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"refinement","permalink":"/blog/tags/refinement"}],"readingTime":10.76,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"Polarized Self-Attention - Towards High-quality Pixel-wise Regression","authors":["asthestarsfall"],"tags":["attention-mechanism","refinement"]},"prevItem":{"title":"VOLO - Vision Outlooker for Visual Recognition","permalink":"/blog/[33]VOLO-Vision-Outlooker-for-Visual-Recognition"},"nextItem":{"title":"SimAM - A Simple, Parameter-Free Attention Module for Convolutional Neural Networks","permalink":"/blog/[35]SimAM-A-Simple-Parameter-Free-Attention-Module-for-Convolutional-Neural-Networks"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1a[Polarized Self-Attention: Towards High-quality Pixel-wise Regression](https://arxiv.org/pdf/2107.00782.pdf)\\n>\\n> \u4f5c\u8005\uff1aHuajun Liu,  Fuqiang Liu, Xinyi Fan\\n>\\n> Code\uff1ahttps://github.com/DeLightCMU/PSA\\n\\n\u8fd9\u7bc7\u7b14\u8bb0\u7684\u5199\u4f5c\u8005\u662f[AsTheStarsFall](https://github.com/asthestarsfalll)\u3002\\n\\n## \u6458\u8981\\n\\n\u7ec6\u7c92\u5ea6\u7684\u50cf\u7d20\u7ea7\u4efb\u52a1\uff08\u6bd4\u5982\u8bed\u4e49\u5206\u5272\uff09\u4e00\u76f4\u90fd\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4efb\u52a1\u3002\u4e0d\u540c\u4e8e\u5206\u7c7b\u6216\u8005\u68c0\u6d4b\uff0c\u7ec6\u7c92\u5ea6\u7684\u50cf\u7d20\u7ea7\u4efb\u52a1\u8981\u6c42\u6a21\u578b\u5728\u4f4e\u8ba1\u7b97\u5f00\u9500\u4e0b\uff0c\u80fd\u591f\u5efa\u6a21\u9ad8\u5206\u8fa8\u7387\u8f93\u5165/\u8f93\u51fa\u7279\u5f81\u7684\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\uff0c\u8fdb\u800c\u6765\u4f30\u8ba1\u9ad8\u5ea6\u975e\u7ebf\u6027\u7684\u50cf\u7d20\u8bed\u4e49\u3002$CNN$\u200b\u200b\u200b\u4e2d\u7684\u6ce8\u610f\u529b\u673a\u5236\u80fd\u591f\u6355\u83b7\u957f\u8ddd\u79bb\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u5341\u5206\u590d\u6742\u4e14**\u5bf9\u566a\u58f0\u654f\u611f**\u3002\\n\\n\u672c\u6587\u63d0\u51fa\u4e86\u5373\u63d2\u5373\u7528\u7684\u6781\u5316\u81ea\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u5305\u542b\u4e24\u4e2a\u5173\u952e\u8bbe\u8ba1\uff0c\u4ee5\u4fdd\u8bc1\u9ad8\u8d28\u91cf\u7684\u50cf\u7d20\u56de\u5f52\uff1a\\n\\n1. \u6781\u5316\u6ee4\u6ce2\uff08$Polarized\\\\ filtering$\u200b\uff09\uff1a\u5728\u901a\u9053\u548c\u7a7a\u95f4\u7ef4\u5ea6\u4fdd\u6301\u6bd4\u8f83\u9ad8\u7684\u5206\u8fa8\u7387\uff08\u5728\u901a\u9053\u4e0a\u4fdd\u6301$C/2$\u200b\u7684\u7ef4\u5ea6\uff0c\u5728\u7a7a\u95f4\u4e0a\u4fdd\u6301$[H,W]$\u200b\u7684\u7ef4\u5ea6 \uff09\uff0c\u8fdb\u4e00\u6b65\u51cf\u5c11\u4f4e\u5206\u8fa8\u7387\u3001\u4f4e\u901a\u9053\u6570\u548c\u4e0a\u91c7\u6837\u9020\u6210\u7684\u4fe1\u606f\u635f\u5931\u3002\\n2. \u589e\u5f3a\uff08$Enhancement$\u200b\uff09\uff1a\u91c7\u7528\u7ec6\u7c92\u5ea6\u56de\u5f52\u8f93\u51fa\u5206\u5e03\u7684\u975e\u7ebf\u6027\u51fd\u6570\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u76f8\u5173\u5de5\u4f5c\\n\\n### \u9010\u50cf\u7d20\u56de\u5f52\u4efb\u52a1 \\n\\n\u7528\u4e8e\u50cf\u7d20\u56de\u5f52\u7684$DCNN$\u200b\u200b\u200b\u7684\u8fdb\u5c55\u57fa\u672c\u4e0a\u90fd\u662f\u8ffd\u6c42\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\uff0c\u76ee\u524d\u6709\u76f8\u5f53\u591a\u7684\u7f51\u7edc\u6311\u6218\u5982\u4f55\u4fdd\u6301\u56fe\u50cf\u7684\u9ad8\u5206\u8fa8\u7387\uff0c\u7814\u7a76\u4eba\u5458\u4e5f\u8d8a\u6765\u8d8a\u8ba4\u8bc6\u5230\u9ad8\u5206\u8fa8\u7387\u4fe1\u606f\u7684\u91cd\u8981\u6027\uff0c$PSA$\u200b\u200b\u200b\u5c06\u4ece\u6ce8\u610f\u529b\u7684\u89d2\u5ea6\u8fdb\u4e00\u6b65\u8ffd\u6c42\u4e0a\u8ff0\u52aa\u529b\u7684\u9ad8\u5206\u8fa8\u7387\u76ee\u6807\uff0c\u5e76\u8fdb\u4e00\u6b65\u63a8\u52a8$DCNN$\u200b\u200b\u200b\u7684\u53d1\u5c55\u3002\u57fa\u4e8e\u53cc\u91cd\u6ce8\u610f\u529b\u673a\u5236,\u672c\u6587\u9488\u5bf9$Pixel-wise\\\\ regression$\u200b\u200b\u7684\u4efb\u52a1,\u63d0\u51fa\u4e86\u4e00\u79cd\u66f4\u52a0\u7cbe\u7ec6\u7684\u53cc\u91cd\u6ce8\u610f\u529b\u673a\u5236\u2014\u2014\u6781\u5316\u81ea\u6ce8\u610f\u529b\\n\\n### \u81ea\u6ce8\u610f\u529b\u673a\u5236\\n\\n\u6ce8\u610f\u529b\u673a\u5236\u5df2\u7ecf\u88ab\u5f15\u5165\u5230\u8bb8\u591a\u89c6\u89c9\u4efb\u52a1\u4e2d\uff0c\u4ee5\u5f25\u8865\u6807\u51c6\u5377\u79ef\u7684\u7f3a\u70b9\u3002\u81ea\u6ce8\u610f\u529b\u5728\u5e8f\u5217\u5efa\u6a21\u548c\u751f\u6210\u6027\u5efa\u6a21\u4efb\u52a1\u4e2d\u83b7\u5f97\u6210\u529f\u540e\uff0c\u5df2\u7ecf\u6210\u4e3a\u6355\u83b7\u957f\u8ddd\u79bb\u5173\u7cfb\u7684\u6807\u51c6\u6a21\u5757\u3002\u5df2\u6709\u5de5\u4f5c\u8bc1\u660e\uff0c\u62e5\u6709\u8db3\u591f\u6570\u91cf\u5934\u7684\u591a\u5934\u81ea\u6ce8\u610f\u529b\u5c42\u53ef\u4ee5\u81f3\u5c11\u4e0e\u4efb\u4f55\u5377\u79ef\u5c42\u5177\u6709\u76f8\u540c\u7684\u8868\u73b0\u529b\u3002$PSA$\u4fc3\u8fdb\u4e86\u9010\u50cf\u7d20\u56de\u5f52\u7684\u81ea\u6ce8\u610f\u529b\u3002\\n\\n## \u65b9\u6cd5\\n\\n![image-20210805155514030](https://gitee.com/Thedeadleaf/images/raw/master/image-20210805155514030.png)\\n\\n\u4e0a\u56fe\u663e\u793a\u4e86\u4e00\u4e9b\u6ce8\u610f\u529b\u6a21\u5757\u5728\u901a\u9053\u548c\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u7684\u5206\u8fa8\u7387\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u770b\u5230\uff0c$NL$\u200b\u5728\u901a\u9053\u548c\u7a7a\u95f4\u7ef4\u5ea6\u7684\u5206\u8fa8\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5f88\u9ad8\uff1b\u5269\u4e0b\u7684\u6a21\u5757\u867d\u7136\u8ba1\u7b97\u91cf\u8f83\u5c0f\uff0c\u4f46\u662f\u5f88\u96be\u505a\u5230\u4fdd\u6301\u9ad8\u5206\u8fa8\u7387\u3002\\n\\n\u800c\u672c\u6587\u63d0\u51fa\u7684$PSA$\u200b\u200b\u53ef\u4ee5\u5728\u4fdd\u6301\u9ad8\u5206\u8fa8\u7387\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0\u8f83\u4f4e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\\n\\n### Polarized Self-Attention (PSA) Block\\n\\n\u4f5c\u8005\u5728$PSA$\u4e2d\u91c7\u7528\u4e86\u4e00\u79cd\u6781\u5316\u6ee4\u6ce2\uff08$polarized filtering$\uff09\u7684\u673a\u5236\u3002\u7c7b\u4f3c\u4e8e\u5149\u5b66\u900f\u955c\u8fc7\u6ee4\u5149\u4e00\u6837\uff0c\u6bcf\u4e2a$SA$\u200b\u7684\u4f5c\u7528\u90fd\u662f\u7528\u4e8e\u589e\u5f3a\u6216\u8005\u524a\u5f31\u7279\u5f81\u3002\uff08\u5728\u6444\u5f71\u65f6\uff0c\u6240\u6709\u6a2a\u5411\u7684\u5149\u90fd\u4f1a\u8fdb\u884c\u53cd\u5c04\u548c\u6298\u5c04\u3002\u6781\u5316\u6ee4\u6ce2\u7684\u4f5c\u7528\u5c31\u662f\u53ea\u5141\u8bb8\u6b63\u4ea4\u4e8e\u6a2a\u5411\u65b9\u5411\u7684\u5149\u901a\u8fc7\uff0c\u4ee5\u6b64\u6765\u63d0\u9ad8\u7167\u7247\u7684\u5bf9\u6bd4\u5ea6\u3002 \u7531\u4e8e\u5728\u6ee4\u6ce2\u8fc7\u7a0b\u4e2d\uff0c\u603b\u5f3a\u5ea6\u4f1a\u635f\u5931\uff0c\u6240\u4ee5\u6ee4\u6ce2\u540e\u7684\u5149\u901a\u5e38\u52a8\u6001\u8303\u56f4\u8f83\u5c0f\uff0c\u56e0\u6b64\u9700\u8981\u989d\u5916\u7684\u63d0\u5347\uff0c\u7528\u6765\u6062\u590d\u539f\u59cb\u573a\u666f\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\uff09\\n\\n\u5176\u5b9e\u5c31\u662f\u7f16\u6545\u4e8b\uff08X\uff09\uff0c\u7b80\u800c\u8a00\u4e4b\uff0c$PSA$\u200b\u200b\u6a21\u5757\u5206\u522b\u5728\u7a7a\u95f4\u548c\u901a\u9053\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\uff0c\u5176\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff0c\u6709\u4e24\u79cd\u6392\u5217\u65b9\u5f0f\uff1a\\n\\n![image-20210805165646225](https://gitee.com/Thedeadleaf/images/raw/master/image-20210805165646225.png)\\n\\n\u5728\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u6a21\u5757\u7ed3\u6784\u524d\uff0c\u5148\u4e86\u89e3\u4e00\u4e0b\u5404\u4e2a\u7b26\u53f7\u7684\u542b\u4e49\uff1a\\n\\n$X\\\\in\\\\mathbb{R}^{C\\\\times H\\\\times W}$\u200b\u200b\u200b\u200b\u200b\u200b\u8868\u793a\u8f93\u5165\uff0c$W$\u200b\u200b\u200b\u200b\u200b\u200b\u8868\u793a$1\xd71$\u200b\u200b\u200b\u200b\u200b\u200b\u5377\u79ef\uff0c$\u03b8_i$\u200b\u200b\u200b\u200b\u200b\u200b\u8868\u793a$reshape$\u200b\u200b\u200b\u200b\u200b\u200b\u64cd\u4f5c\uff0c$\\\\sigma$\u200b\u200b\u200b\u200b\u200b\u200b\u8868\u793a$Sigmoid$\u200b\u200b\u200b\u200b\u200b\u200b\uff0c$LN$\u200b\u200b\u200b\u200b\u200b\u200b\u8868\u793a\u5c42\u5f52\u4e00\u5316\uff0c$F_{SM}=\\\\sum_{j=1}^{N_p}\\\\frac{e^{x_j}}{\\\\sum_{m=1}^{N_p}e^{x_m}}x_j$\u200b\u200b\u200b\u200b\u200b\u200b\u200b\uff0c\u8fd9\u5176\u4e2d$x_j$\u200b\u200b\u200b\u200b\u8868\u793a$X$\u200b\u200b\u200b\u7684\u7b2c$i$\u200b\u200b\u200b\u4e2a\u901a\u9053\u4e0a\u7684\u7279\u5f81\u56fe\uff0c\u4e5f\u5c31\u662f\u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u8fdb\u884c$Softmax$\u200b,$F_{GP}$\u200b\u200b\u8868\u793a\u5168\u5c40\u5e73\u5747\u6c60\u5316\u3002\\n\\n### Channel-only branch\\n\\n![image-20210805194024766](https://gitee.com/Thedeadleaf/images/raw/master/image-20210805194024766.png)\\n\\n\u901a\u9053\u6ce8\u610f\u529b\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\n$$\\nA^{ch}(X)=\\\\sigma\\\\bigg[LN\\\\bigg[W_z\\\\bigg[\\\\bigg(\\\\theta_1(W_v(X)\\\\bigg)\\\\times F_{SM}\\\\bigg(\\\\theta_2\\\\big(W_q(X)\\\\big)\\\\bigg)\\\\bigg]\\\\bigg]\\\\bigg]\\n$$\\n\u5176\u4e3b\u8981\u6d41\u7a0b\u4e3a\uff1a\\n\\n- \u751f\u6210$Q$\u200b\u200b\u200b\u5e76\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u200b\uff1a\u901a\u8fc7$1\\\\times 1$\u200b\u200b\u200b\u5377\u79ef\u964d\u4f4e\u901a\u9053\u6570\u81f3$1$\u200b\u200b\u200b\u200b\uff0c\u4f7f\u7528$Reshape$\u200b\u200b\u200b\u64cd\u4f5c\u4ee3\u66ff$K^TQ$\u200b\u200b\u200b\u200b\uff0c\u4e0e\u901a\u9053\u6ce8\u610f\u529b\u7684\u5168\u5c40\u5e73\u5747\u6c60\u5316\u964d\u4f4e\u4e86\u5927\u91cf\u5206\u8fa8\u7387\u4e0d\u540c\uff0c\u8fd9\u91cc\u7684$Softmax$\u200b\u200b\u200b\u200b\u7ed9\u51fa\u4e86\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u5404\u4e2a\u50cf\u7d20\u70b9\u7684\u76f8\u5bf9\u91cd\u8981\u6027\uff08\u5e76\u4e0d\u80fd\u79f0\u4e4b\u4e3a\u76f8\u4f3c\u5ea6\u5427\uff09\u5e76\u4e14\u8d77\u5230\u4e00\u79cd\u5f52\u4e00\u5316\u7684\u4f5c\u7528\u3002\\n\\n- \u751f\u6210$V$\u200b\u200b\u200b\u200b\u200b\uff1a\u901a\u8fc7$1\\\\times 1$\u200b\u200b\u200b\u200b\u200b\u5377\u79ef\u964d\u4f4e\u901a\u9053\u6570\u81f3$C/2$\u200b\u200b\u200b\u200b\u200b\uff0c\u4f7f\u7528$Reshape$\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u64cd\u4f5c\u65b9\u4fbf\u4e0e\u76f8\u4f3c\u5ea6\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\uff0c\u540c\u65f6\u805a\u96c6\u4e86\u5404\u4e2a\u901a\u9053\u4e0a\u7684\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u91cc\u5728\u6bcf\u4e2a\u901a\u9053\u4e0a\u4fdd\u6301\u9ad8\u5206\u8fa8\u7387\u7684\u540c\u65f6\u5b8c\u6210\u4e86\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\uff0c\u5177\u4f53\u6f14\u793a\u5982\u4e0b\uff1a\\n  $$\\n  VQ=\\n  \\\\left[\\\\begin{array}\\n  {c}\\n  x_{1,1}&x_{1,2}&\\\\cdots&x_{1,hw}\\\\\\\\\\n  x_{2,1}&x_{2,2}&\\\\cdots&x_{2,hw}\\\\\\\\\\n  \\\\vdots&\\\\vdots&\\\\ddots&\\\\vdots\\\\\\\\\\n  x_{\\\\frac{c}{2},1}&x_{\\\\frac{c}{2},2}&\\\\cdots&x_{\\\\frac{c}{2},hw}\\\\\\\\\\n  \\\\end{array}\\\\right]\\n  \\\\left[\\\\begin{array}\\n  {c}\\n  y_{1,1}\\\\\\\\\\n  y_{1,2}\\\\\\\\\\n  \\\\vdots\\\\\\\\\\n  y_{1,hw}\\n  \\\\end{array}\\\\right]\\n  $$\\n  $V$\u200b\u200b\u7684\u6bcf\u4e00\u884c\u90fd\u4ee3\u8868\u7740\u6bcf\u4e00\u4e2a\u901a\u9053\u4e0a\u7684\u7a7a\u95f4\u4fe1\u606f\uff0c\u4e0e$Q$\u8fdb\u884c\u52a0\u6743\u3002\\n\\n- \u5f97\u5230\u901a\u9053\u6ce8\u610f\u529b\uff1a\u4f7f\u7528$1\\\\times 1$\u200b\u200b\u5377\u79ef\u964d\u7ef4\uff0c$LN$\u200b\u8fdb\u884c\u5f52\u4e00\u5316\uff0c$Simoid$\u200b\u200b\u8d1f\u8d23\u6700\u540e\u6fc0\u6d3b\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a$C\\\\times 1\\\\times 1$\u200b\u200b\u200b\u7684\u901a\u9053\u6ce8\u610f\u529b\u6743\u91cd\u3002\\n\\n\u53ef\u80fd\u7684\u4ee3\u7801\uff1a\\n\\n```python\\nclass ChannelAttention(nn.Module):\\n    def __init__(self, in_ch):\\n        super(ChannelAttention).__init__()\\n        self.wq = nn.Conv2d(in_ch, 1, 1)\\n        self.wv = nn.Conv2d(in_ch, in_ch//2, 1)\\n        self.softmax = nn.Softmax(dim=1)\\n        self.wz = nn.Conv2d(in_ch//2, in_ch, 1)\\n        self.ln = nn.LayerNrom(in_ch)\\n\\n    def forward(self, x):\\n        b, c, h, w = x.size()\\n        q = self.wq(x).reshape(b, h*w, 1, 1)\\n        v = self.wv(x).reshape(b, c//2, -1)\\n        z = self.wz(torch.matmul(v, self.softmax(q))\\n        out=torch.sigmoid(nn.ln(z))\\n        return out\\n```\\n\\n\u5176\u5b9e\u8fd9\u548c\u7a7a\u95f4\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\u6709\u67d0\u4e9b\u76f8\u4f3c\u4e4b\u5904\uff1a\\n\\n1. \u7a7a\u95f4\u6ce8\u610f\u529b\u4e00\u822c\u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u6700\u5927\u6216\u8005\u5e73\u5747\u6c60\u5316\uff0c\u5728\u8fd9\u91cc\u4f7f\u7528\u4e86$1\\\\times 1$\u200b\u7684\u5377\u79ef\u6765\u805a\u96c6\u4fe1\u606f\uff1b\\n2. \u8fd9\u91cc\u7684\u7b2c\u4e8c\u6b65\u76f8\u5f53\u4e8e\u7a7a\u95f4\u6ce8\u610f\u529b\u7684\u52a0\u6743\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u7a7a\u95f4\u6ce8\u610f\u529b\u5728\u6b64\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\uff1b\\n3. \u5728\u52a0\u6743\u4e4b\u540e\uff0c\u901a\u8fc7\u4e00\u4e2a\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u7684\u6c42\u548c\uff0c\u6765\u83b7\u53d6\u6bcf\u4e00\u4e2a\u901a\u9053\u7684\u6743\u91cd\u3002\\n\\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u7c7b\u4f3c\u7684\u4ee3\u7801\uff0c\u66f4\u5145\u5206\u7684\u5229\u7528\u7a7a\u95f4\u4e0a\u7684\u4fe1\u606f\u6765\u83b7\u5f97\u901a\u9053\u6ce8\u610f\u529b\uff1a\\n\\n```python\\nclass Channel_Attention_With_Spatial(nn.Module):\\n    def __init__(self):\\n        self.conv = nn.Conv2d(2, 1, kernel_size=7, padding=3, bias=false)\\n        super(Channel_Attention_With_Spatial, self).__init__()\\n    def forward(self, x):\\n        b = x.shape[0]\\n        ave = torch.mean(x, dim=1, keepdim=True)\\n        m, _ = torch.max(x, dim=1, keepdim=True)\\n        weight = torch.sigmoid(self.conv(torch.cat([ave, m], dim=1)))\\n        atten = (x*weight).sum(axis=[2, 3], keepdim=True)\\n        return atten*x\\n\\n```\\n\\n\\n\\n### Spatial-only branch\\n\\n![image-20210805194037181](https://gitee.com/Thedeadleaf/images/raw/master/image-20210805194037181.png)\\n\\n\u7a7a\u95f4\u6ce8\u610f\u529b\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\n$$\\nA^{sp}(X)=\\\\sigma\\\\bigg[\\\\theta_3\\\\bigg(F_{SM}\\\\big(\\\\theta_1(\\\\sigma(F_{GP}(W_q(X))))\\\\times\\\\theta_2(W_v(X))\\\\big)\\\\bigg)\\\\bigg]\\n$$\\n\u5176\u4e3b\u8981\u6d41\u7a0b\u4e3a\uff1a\\n\\n- \u751f\u6210$Q$\u200b\u200b\u5e76\u8ba1\u7b97\u76f8\u4f3c\u5ea6\uff1a\u901a\u8fc7$1\\\\times 1$\u200b\u200b\u7684\u5377\u79ef\u964d\u4f4e\u901a\u9053\u6570\u81f3$C/2$\u200b\u200b\uff0c\u4f7f\u7528\u5168\u5c40\u5e73\u5747\u6c60\u5316\u805a\u96c6\u4fe1\u606f\uff0c\u4f7f\u7528$Reshape$\u200b\u200b\u200b\u4ee3\u66ff$K^TQ$\u200b\u200b\uff0c\u5728\u6700\u540e\u4e00\u7ef4\u4f7f\u7528$Softmax$\u200b\u200b\u200b\u200b\u200b\u6c42\u89e3\u76f8\u4f3c\u5ea6\uff1b\\n\\n- \u751f\u6210$V$\uff1a\u901a\u8fc7$1\\\\times 1$\u5377\u79ef\u964d\u4f4e\u901a\u9053\u6570\u81f3$C/2$\uff0c\u4f7f\u7528$Reshape$\u200b\u200b\u200b\u200b\u64cd\u4f5c\u65b9\u4fbf\u4e0e\u76f8\u4f3c\u5ea6\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\uff1b\u5176\u8ba1\u7b97\u4e86\u6bcf\u4e2a\u50cf\u7d20\u70b9\u901a\u9053\u4e0a\u7684\u6ce8\u610f\u529b\uff0c\u5982\u4e0b\u56fe\uff1a\\n  $$\\n  QV=\\n  \\\\left[\\\\begin{array}\\n  {c}\\n  x_{1,1}&x_{1,2}&\\\\cdots&x_{1,\\\\frac{c}{2}}\\\\\\\\\\n  \\\\end{array}\\\\right]\\n  \\\\left[\\\\begin{array}\\n  {c}\\n  y_{1,1}&y_{1,2}&\\\\cdots&y_{1,hw}\\\\\\\\\\n  y_{2,1}&y_{2,2}&\\\\cdots&y_{2,hw}\\\\\\\\\\n  \\\\vdots&\\\\vdots&\\\\ddots&\\\\vdots\\\\\\\\\\n  y_{\\\\frac{c}{2},1}&y_{\\\\frac{c}{2},2}&\\\\cdots&y_{\\\\frac{c}{2},hw}\\n  \\\\end{array}\\\\right]\\n  $$\\n  $Q$\u200b\u200b\u7684\u6bcf\u4e00\u5217\u90fd\u4ee3\u8868\u7740\u67d0\u4e2a\u50cf\u7d20\u70b9\u4e0a\u6240\u6709\u901a\u9053\u7684\u4fe1\u606f\uff0c\u4e0e$V$\u8fdb\u884c\u52a0\u6743\u3002\\n\\n- \u5f97\u5230\u7a7a\u95f4\u6ce8\u610f\u529b\uff1a$Reshape$\u5e76\u4f7f\u7528$Sigmoid$\u200b\u8fdb\u884c\u6700\u540e\u7684\u6fc0\u6d3b\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a$1\\\\times H\\\\times W$\u200b\u7684\u7a7a\u95f4\u6ce8\u610f\u529b\u6743\u91cd\u3002\\n\\n\u53ef\u80fd\u7684\u4ee3\u7801\uff1a\\n\\n```python\\nclass SpatialAttention(nn.Module):\\n    def __init__(self, in_ch):\\n        super(SpatialAttention).__init__()\\n        self.wq=nn.Conv2d(in_ch, in_ch//2, 1)\\n        self.wv=nn.Conv2d(in_ch, in_ch//2, 1)\\n        self.gp=nn.AdaptiveAvgPool2d((1, 1))\\n        self.softmax=nn.Softmax(dim=-1)\\n\\n    def forward(self, x):\\n        b, c, h, w=x.size()\\n        q=self.gp(self.wq(x)).reshape(b, 1, c//2)\\n        v=self.wv(x).reshape(b, c//2, -1)\\n        z=torch .matmul(nn.softmax(q), v).reshape(b, 1, h, w)\\n        return torch.sigmoid(z)\\n```\\n\\n\u540c\u7406\uff0c\u8fd9\u91cc\u4e0e\u4e0a\u6587\u7c7b\u4f3c\uff0c\u4e5f\u662f\u7c7b\u4f3c\u4e8e\u901a\u9053\u6ce8\u610f\u529b\uff1a\\n\\n1. \u4f7f\u7528\u5168\u5c40\u5e73\u5747\u6c60\u5316\u805a\u96c6\u4fe1\u606f\\n2. \u4e0d\u8fc7\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528$MLP$\u200b\u6765\u5efa\u6a21\u901a\u9053\u95f4\u5173\u7cfb\uff0c\u800c\u662f\u76f4\u63a5\u8fdb\u884c\u52a0\u6743\uff0c\u5e76\u4e14\u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u4e86\u6c42\u548c\\n3. \u5c06\u4e0a\u8ff0\u7ed3\u679c\u4f5c\u4e3a\u6ce8\u610f\u529b\\n\\n\u540c\u6837\u5730\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7ecf\u5178\u7684SEnet\u6765\u5b9e\u73b0\u8fd9\u6837\u7684\u64cd\u4f5c\uff1a\\n\\n```python\\nclass Spatial_Attention_With_Channel(nn.Module):\\n    def __init__(self, in_ch, ratio=16):\\n        super(Spatial_Attention_With_Channel, self).__init__()\\n        self.global_avg = nn.AdaptiveAvgPool2d((1, 1))\\n        self.fc1 = nn.Conv2d(in_ch, in_ch//ratio, 1, bias=False)\\n        self.relu = nn.ReLU(inplace=True)\\n        self.fc2 = nn.Conv2d(in_ch//ratio, in_ch, 1, bias=False)\\n\\n    def forward(self, x):\\n        ave = self.fc2(self.relu(self.fc1(self.global_avg(x))))\\n        atten = (x*ave).sum(axis=1, keepdim=True)\\n        return x*atten\\n```\\n\\n\\n\\n###  Composition\\n\\n\u5e76\u5217\uff1a\\n$$\\n\\\\begin{align}\\nPSA_P(X)&=Z^{ch}+Z^{sp}\\\\\\\\ \\\\tag1\\n&=A^{ch}(X)\\\\cdot X+A^{sp}(X)\\\\cdot X\\n\\\\end{align}\\n$$\\n\u987a\u5e8f\uff1a\\n$$\\n\\\\begin{align}\\nPSA_s(X)&=Z^{sp}(Z^{ch})\\\\\\\\ \\\\tag2\\n&=A^{sp}(A^{ch}(X)\\\\cdot X)\\\\cdot A^{ch}(X)\\\\cdot X\\n\\\\end{align}\\n$$\\n\\n## \u603b\u7ed3\\n\\n$Polarized$\u200b\u7ffb\u8bd1\u4f5c`\u6781\u5316`\u6216\u8bb8\u4e0d\u662f\u90a3\u4e48\u8d34\u5207\uff0c\u53ef\u80fd\u7ffb\u8bd1\u4f5c`\u504f\u632f`\u66f4\u7b26\u5408\u672c\u6587\u7684\u601d\u60f3\\n\\n\u672c\u6587\u7684\u4e3b\u8981\u8d21\u732e\u662f\u8ba1\u7b97\u6ce8\u610f\u529b\u7684\u540c\u65f6\uff0c\u5728\u901a\u9053\u548c\u7a7a\u95f4\u4e0a\u4fdd\u6301\u7740\u9ad8\u5206\u8fa8\u7387\\n\\n\u4f46\u662f\u6211\u89c9\u5f97\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u7a7a\u95f4\u6ce8\u610f\u529b\u6216\u8005\u901a\u9053\u6ce8\u610f\u529b\u5411\u540e\u591a\u63a8\u4e86\u4e00\u6b65\uff0c\u5373\u5728\u8ba1\u7b97\u7a7a\u95f4\u6ce8\u610f\u529b\u65f6\uff0c\u4f7f\u7528\u7684\u662f\u901a\u9053\u6ce8\u610f\u529b\u7684\u65b9\u6cd5\uff0c\u5728\u4ee5\u5f80\u901a\u9053\u6ce8\u610f\u529b\u5f97\u5230\u7684$Refined\\\\ Feature$\u200b\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u901a\u9053\u4e0a\u7684\u6c42\u548c\uff0c\u5c06\u6700\u540e\u7ed3\u679c\u4f5c\u4e3a$Spatial\\\\ Attention$\uff1b\u672c\u6587\u7684\u901a\u9053\u6ce8\u610f\u529b\u4e5f\u662f\u5982\u6b64\uff0c\u8fd9\u6837\u6216\u8bb8\u80fd\u591f\u5728\u8ba1\u7b97\u8fd9\u4e8c\u8005\u65f6\uff0c\u66f4\u597d\u5730\u5229\u7528\u5176\u4ed6\u7ef4\u5ea6\u7684\u4fe1\u606f\u5427\u3002"},{"id":"/[35]SimAM-A-Simple-Parameter-Free-Attention-Module-for-Convolutional-Neural-Networks","metadata":{"permalink":"/blog/[35]SimAM-A-Simple-Parameter-Free-Attention-Module-for-Convolutional-Neural-Networks","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[35]SimAM-A-Simple-Parameter-Free-Attention-Module-for-Convolutional-Neural-Networks.md","source":"@site/blog/[35]SimAM-A-Simple-Parameter-Free-Attention-Module-for-Convolutional-Neural-Networks.md","title":"SimAM - A Simple, Parameter-Free Attention Module for Convolutional Neural Networks","description":"\u8bba\u6587\u540d\u79f0\uff1aSimAM: A Simple, Parameter-Free Attention Module for Convolutional Neural Networks","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"param-less","permalink":"/blog/tags/param-less"},{"label":"non-convolution","permalink":"/blog/tags/non-convolution"}],"readingTime":6.34,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"SimAM - A Simple, Parameter-Free Attention Module for Convolutional Neural Networks","authors":["asthestarsfall"],"tags":["attention-mechanism","param-less","non-convolution"]},"prevItem":{"title":"Polarized Self-Attention - Towards High-quality Pixel-wise Regression","permalink":"/blog/[34]Polarized-Self-Attention-Towards-High-quality-Pixel-wise-Regression"},"nextItem":{"title":"SOLO - Segmenting Objects by Locations","permalink":"/blog/[36]SOLO-Segmenting-Objects-by-Locations"}},"content":">\u8bba\u6587\u540d\u79f0\uff1a[SimAM: A Simple, Parameter-Free Attention Module for Convolutional Neural Networks](http://proceedings.mlr.press/v139/yang21o/yang21o.pdf)\\n>\\n>\u4f5c\u8005\uff1a[**Lingxiao Yang**](https://zjjconan.github.io/), [Ru-Yuan Zhang](https://ruyuanzhang.github.io/), [Lida Li](https://github.com/lld533), [Xiaohua Xie](http://sdcs.sysu.edu.cn/content/2478)\\n>\\n>Code\uff1ahttps://github.com/ZjjConan/SimAM\\n\\n## \u4ecb\u7ecd\\n\\n\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7b80\u5355\u6709\u6548\u76843D\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u57fa\u4e8e\u8457\u540d\u7684\u795e\u7ecf\u79d1\u5b66\u7406\u8bba\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u80fd\u91cf\u51fd\u6570\uff0c\u5e76\u4e14\u63a8\u5bfc\u51fa\u5176\u5feb\u901f\u89e3\u6790\u89e3\uff0c\u80fd\u591f\u4e3a\u6bcf\u4e00\u4e2a\u795e\u7ecf\u5143\u5206\u914d\u6743\u91cd\u3002\u4e3b\u8981\u8d21\u732e\u5982\u4e0b\uff1a\\n\\n- \u53d7\u4eba\u8111\u6ce8\u610f\u673a\u5236\u7684\u542f\u53d1\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u5177\u67093D\u6743\u91cd\u7684\u6ce8\u610f\u6a21\u5757\uff0c\u5e76\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u80fd\u91cf\u51fd\u6570\u6765\u8ba1\u7b97\u6743\u91cd\uff1b\\n- \u63a8\u5bfc\u4e86\u80fd\u91cf\u51fd\u6570\u7684\u5c01\u95ed\u5f62\u5f0f\u7684\u89e3\uff0c\u52a0\u901f\u4e86\u6743\u91cd\u8ba1\u7b97\uff0c\u5e76\u4fdd\u6301\u6574\u4e2a\u6a21\u5757\u7684\u8f7b\u91cf\uff1b\\n- \u5c06\u8be5\u6a21\u5757\u5d4c\u5165\u5230\u73b0\u6709ConvNet\u4e2d\u5728\u4e0d\u540c\u4efb\u52a1\u4e0a\u8fdb\u884c\u4e86\u7075\u6d3b\u6027\u4e0e\u6709\u6548\u6027\u7684\u9a8c\u8bc1\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u76f8\u5173\u5de5\u4f5c\\n\\n![image-20210722184726269](https://gitee.com/Thedeadleaf/images/raw/master/image-20210722184726269.png)\\n\\n\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u7f51\u7edc\u8868\u8fbe\u80fd\u529b\u7684\u63d0\u5347\u4e3b\u8981\u4f53\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a**\u7f51\u7edc\u7ed3\u6784**\u548c**\u6ce8\u610f\u529b\u6a21\u5757**\\n\\n**\u7f51\u7edc\u7ed3\u6784**\uff1a\u4eceAlexNet\u5230VGG\u518d\u5230ResNet\u8d8a\u6765\u8d8a\u6df1\u7684\u7f51\u7edc\u5806\u53e0\u7ed3\u6784\uff0c\u6216\u662fGoogLeNet\u7b49\u66f4\u5bbd\u7684\u7ed3\u6784\u8d4b\u4e88\u4e86\u7f51\u7edc\u66f4\u5f3a\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u4e5f\u6709\u76f8\u5f53\u591a\u7684\u5de5\u4f5c\u4f7f\u7528AutoML\u6765\u907f\u514d\u4eba\u5de5\u8bbe\u8ba1\u3002\\n\\n\u7136\u800c\uff0c\u4f5c\u8005\u7684\u76ee\u6807\u662f\u8bbe\u8ba1\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5373\u63d2\u5373\u7528\u7684\u6a21\u5757\u4ee5\u5e94\u7528\u4e8e\u5404\u79cd\u4efb\u52a1\uff0c\u800c\u65e0\u9700\u5bf9\u7f51\u7edc\u7ed3\u6784\u505a\u51fa\u8f83\u5927\u7684\u6539\u53d8\\n\\n**\u6ce8\u610f\u529b\u6a21\u5757**\uff1a\\n\\n\u4ee5SENet\u4e3a\u4ee3\u8868\u7684\u901a\u9053\u6ce8\u610f\u529b\u6a21\u5757\u6216\u662f\u4e00\u4e9b\u7a7a\u95f4\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u867d\u7136\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u6548\u679c\uff0c\u4f46\u662f\u5176\u8ba1\u7b97\u6743\u91cd\u7684\u7b97\u6cd5\u591a\u662f\u4eba\u5de5\u8bbe\u8ba1\uff0c\u9700\u8981\u5927\u91cf\u7684\u8ba1\u7b97\u91cf\uff0c\u5f53\u7136\u4e5f\u6709\u4e00\u4e9b\u6a21\u5757\u53d7\u5230\u795e\u7ecf\u79d1\u5b66\u7684\u542f\u53d1\u3002\\n\\n**\u5c40\u9650\u6027**\uff1a\u5bf9\u4e8e\u901a\u9053\u6ce8\u610f\u529b/\u7a7a\u95f4\u6ce8\u610f\u529b\u6765\u8bf4\uff0c\u4ed6\u4eec\u5f80\u5f80\u53ea\u662f\u5bf9\u4e0d\u540c\u901a\u9053/\u4f4d\u7f6e\u533a\u522b\u5bf9\u5f85\uff0c\u800c\u5bf9\u6240\u6709\u7684\u4f4d\u7f6e/\u901a\u9053\u540c\u7b49\u5bf9\u5f85\uff1b\u5e76\u4e14\u5176\u5f80\u5f80\u9700\u8981\u989d\u5916\u7684\u5b50\u7f51\u7edc\u6765\u751f\u6210\u6743\u91cd\u3002\\n\\n## \u65b9\u6cd5\\n\\n\u4f5c\u8005\u8ba4\u4e3a\u6ce8\u610f\u673a\u5236\u7684\u5b9e\u73b0\u5e94\u8be5\u9075\u5faa\u795e\u7ecf\u8ba1\u7b97\u4e2d\u7684\u4e00\u4e9b\u7edf\u4e00\u539f\u5219\u3002\u56e0\u6b64\uff0c\u57fa\u4e8e\u4e00\u4e9b\u6210\u719f\u7684\u795e\u7ecf\u79d1\u5b66\u7406\u8bba\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\u3002\\n\\n\u5728\u89c6\u89c9\u795e\u7ecf\u5b66\u4e2d\uff0c\u90a3\u4e9b\u4fe1\u606f\u91cf\uff08most informative\uff09\u6700\u5927\u7684\u795e\u7ecf\u5143\u901a\u5e38\u4e0e\u5468\u56f4\u795e\u7ecf\u5143\u62e5\u6709\u4e0d\u540c\u7684\u653e\u7535\u6a21\u5f0f\u3002\\n\\n\u540c\u65f6\uff0c\u4e00\u4e2a\u6d3b\u8dc3\u7684\u795e\u7ecf\u5143\u4e5f\u53ef\u80fd\u4e00\u76f4\u5468\u56f4\u7684\u795e\u7ecf\u5143\u6d3b\u52a8\uff0c\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u201d\u7a7a\u95f4\u6291\u5236\u201c\u3002\\n\\n\u6362\u8a00\u4e4b\uff0c\u5728\u89c6\u89c9\u4e2d\uff0c\u8868\u73b0\u51fa\u660e\u663e\u7a7a\u95f4\u4e00\u76f4\u6548\u5e94\u7684\u795e\u7ecf\u5143\u5e94\u8be5\u88ab\u8d4b\u4e88\u66f4\u9ad8\u7684\u91cd\u8981\u6027\uff0c\u800c\u627e\u5230\u8fd9\u4e9b\u795e\u7ecf\u5143\u7684\u6700\u7b80\u5355\u65b9\u5f0f\u5c31\u662f\u6d4b\u91cf\u4e00\u4e2a\u76ee\u6807\u795e\u7ecf\u5143\u4e0e\u5176\u4ed6\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u7ebf\u6027\u53ef\u5206\u6027\u3002\\n\\n### \u80fd\u91cf\u51fd\u6570\\n\\n\u57fa\u4e8e\u4ee5\u4e0a\u79d1\u5b66\u53d1\u73b0\uff0c\u63d0\u51fa\u4e86\u4ee5\u4e0b\u7684\u80fd\u91cf\u51fd\u6570\uff08\u516c\u5f0f\u6765\u6e90[\u53c2\u8003](https://blog.csdn.net/liangdas/article/details/44251469)\uff09\uff1a\\n$$\\ne_t(w_t,b_t,\\\\mathbf{y},x_i) = (y_t-\\\\hat{t})^2+\\\\frac{1}{M-1}\\\\sum_{i=1}^{M-1}(y_0-\\\\hat{x}_i)^2.\\\\tag{1}\\n$$\\n$t$\u548c$x_i$\u662f\u8f93\u5165$X\\\\in \\\\mathbb{R}^{C\\\\times H\\\\times W}$\u4e2d\u5355\u901a\u9053\u4e0a\u7684\u76ee\u6807\u795e\u7ecf\u5143\u548c\u5176\u4ed6\u795e\u7ecf\u5143\\n\\n$\\\\hat{t}=w_tt+b_t$\u548c$\\\\hat{x}_i=w_tx_i+b_t$\u662f$t$\u548c$x_i$\u7684\u7ebf\u6027\u53d8\u6362\uff0c$w_t$\u548c$b_t$\u5206\u522b\u4ee3\u8868\u7ebf\u6027\u53d8\u6362\u7684\u6743\u91cd\u548c\u504f\u7f6e\\n\\n$i$\u662f\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u7684\u7d22\u5f15\uff0c$M=H\\\\times W$\u4ee3\u8868\u8be5\u4e2a\u901a\u9053\u4e0a\u795e\u7ecf\u5143\u7684\u4e2a\u6570\\n\\n$(1)$\u5f0f\u4e2d\u7684\u6240\u6709\u91cf\u90fd\u662f\u6807\u91cf\uff0c\u5f53$y_t=\\\\hat{t}$\u548c\u6240\u6709$x_i=y_o$\u65f6\u53d6\u5f97\u6700\u5c0f\u503c\uff0c\u5176\u4e2d\uff0c$y_t$\u548c$y_o$\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u503c\\n\\n\u6c42\u89e3$(1)$\u5f0f\u7684\u6700\u5c0f\u503c\u7b49\u4ef7\u4e8e\u6c42\u89e3\u76ee\u6807\u795e\u7ecf\u5143\u548c\u5176\u4ed6\u6240\u6709\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u7ebf\u6027\u53ef\u5206\u6027\\n\\n\u7b80\u4fbf\u8d77\u89c1\uff0c\u4f7f\u7528\u4e8c\u503c\u6807\u7b7e\uff0c\u5373$y_t=1\\\\quad y_o=-1$\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e86\u6b63\u5219\u9879\uff0c\u5219\u6700\u7ec8\u7684\u80fd\u91cf\u51fd\u6570\u5982\u4e0b\uff1a\\n$$\\ne_t(w_t,b_t,\\\\mathbf{y},x_i) = \\\\frac{1}{M-1}\\\\sum_{i=1}^{M-1}(-1-(w_tx_i+b_t))^2+(1-(w_tt+b_t))^2+\\\\lambda w_t^2.\\\\tag2\\n$$\\n\\n\u516c\u5f0f\u7684\u6765\u6e90\u5e94\u8be5\u662fSVM\uff0c\u5c06\u5f53\u524d\u795e\u7ecf\u5143\u8bbe\u7f6e\u4e3a\u6b63\u7c7b\uff0c\u5176\u4f59\u795e\u7ecf\u5143\u8bbe\u7f6e\u4e3a\u8d1f\u7c7b\uff0c\u6765\u8861\u91cf\u4ed6\u4eec\u4e4b\u95f4\u7684\u5dee\u5f02\u6027\u3002\\n\\n### \u89e3\u6790\u89e3\\n\\n\u7406\u8bba\u4e0a\uff0c \u6bcf\u4e2a\u901a\u9053\u62e5\u6709$M$\u4e2a\u80fd\u91cf\u51fd\u6570\uff0c\u9010\u4e00\u6c42\u89e3\u662f\u5f88\u5927\u7684\u8ba1\u7b97\u8d1f\u62c5\\n\\n\u5e78\u8fd0\u7684\u662f\uff0c\u53ef\u4ee5\u83b7\u5f97$(2)$\u7684\u95ed\u5f0f\u89e3\uff08\u5373\u89e3\u6790\u89e3\uff09\uff0c\u5982\u4e0b\uff1a\\n$$\\nw_t=-\\\\frac{2(t-\\\\mu_t)}{(t-\\\\mu_t)^2+2\\\\sigma_t^2+2\\\\lambda},\\\\tag3\\n$$\\n$$\\nb_t=-\\\\frac{1}{2}(t-\\\\mu_t)w_t.\\\\tag4\\n$$\\n\\n\u5176\u4e2d$\\\\mu_t=\\\\frac{1}{M-1}\\\\sum_{i=1}^{M-1}x_i$\uff0c$\\\\sigma_t^2=\\\\frac{1}{M-1}\\\\sum_{i=1}^{M-1}(x_i-\\\\mu_t)^2$\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8be5\u901a\u9053\u4e2d\u9664\u53bb\u76ee\u6807\u795e\u7ecf\u5143\u7684\u5747\u503c\u548c\u65b9\u5dee\\n\\n\u7531\u4e8e\u89e3\u6790\u89e3\u662f\u5728\u5355\u4e2a\u901a\u9053\u4e0a\u83b7\u5f97\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5408\u7406\u5047\u8bbe\u6bcf\u4e2a\u901a\u9053\u4e2d\u6240\u6709\u50cf\u7d20\u9075\u5faa\u76f8\u540c\u7684\u5206\u5e03\uff0c\u6700\u5c0f\u80fd\u91cf\u5373\u4e3a\uff1a\\n$$\\ne_t^*=\\\\frac{4(\\\\mu^2+\\\\lambda)}{(t-\\\\mu)^2+2\\\\sigma^2+2\\\\lambda}.\\\\tag5\\n$$\\n**\u80fd\u91cf\u8d8a\u4f4e\uff0c\u795e\u7ecf\u5143t\u4e0e\u5468\u56f4\u795e\u7ecf\u5143\u7684\u533a\u522b\u8d8a\u5927\uff0c\u91cd\u8981\u6027\u8d8a\u9ad8**\u3002\u56e0\u6b64\uff0c\u795e\u7ecf\u5143\u7684\u91cd\u8981\u6027\u53ef\u4ee5\u901a\u8fc7$1/e_t^*$\u5f97\u5230\u3002\\n\\n\u6839\u636e\u4ee5\u5f80\u7684\u795e\u7ecf\u5b66\u7814\u7a76\uff0c\u54fa\u4e73\u52a8\u7269\u5927\u8111\u4e2d\u7684\u6ce8\u610f\u529b\u8c03\u8282\u901a\u5e38\u8868\u73b0\u4e3a\u795e\u7ecf\u5143\u53cd\u5e94\u7684\u589e\u76ca\u6548\u5e94\uff0c\u56e0\u6b64\u4f7f\u7528\u653e\u7f29\u8fd0\u7b97\u800c\u975e\u52a0\u6cd5\u6765\u5b9e\u73b0\u52a0\u6743\uff1a\\n$$\\n\\\\widetilde{X}=sigmoid(\\\\frac{1}{E})\\\\otimes X,\\\\tag6\\n$$\\n\u540c\u65f6$sigmoid$\u51fd\u6570\u8fd8\u53ef\u4ee5\u9650\u5236$E$\u4e2d\u7684\u8fc7\u5927\u503c\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u6bcf\u4e2a\u795e\u7ecf\u5143\u7684\u76f8\u5bf9\u91cd\u8981\u6027\\n\\nPytorch\u4ee3\u7801\u4e3a\uff1a\\n\\n```python\\ndef forward(X,lambda):\\n\\tn = X.shape[2] * X.shape[3] - 1\\n\\td = (X - X.mean(dim=[2,3])).pow(2)\\n\\tv = d.sum(dim=[2,3])/n\\n\\tE_inv = d / (4 * (v + lambda)) +0.5\\n\\treturn X * torch.sigmoid(E_inv)\\n```\\n\\n## \u5b9e\u9a8c\\n\\n# \u5728\u5404\u7c7b\u4efb\u52a1\u4e0a\u90fd\u53d6\u5f97\u4e86\u76f8\u5f53\u597d\u7684\u6548\u679c\u3002"},{"id":"/[36]SOLO-Segmenting-Objects-by-Locations","metadata":{"permalink":"/blog/[36]SOLO-Segmenting-Objects-by-Locations","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[36]SOLO-Segmenting-Objects-by-Locations.md","source":"@site/blog/[36]SOLO-Segmenting-Objects-by-Locations.md","title":"SOLO - Segmenting Objects by Locations","description":"Xinlong Wang, Tao Kong, Chunhua Shen, Yuning Jiang, Lei Li","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"instance-segmentation","permalink":"/blog/tags/instance-segmentation"},{"label":"backbone","permalink":"/blog/tags/backbone"},{"label":"multi-branch","permalink":"/blog/tags/multi-branch"}],"readingTime":19.775,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"SOLO - Segmenting Objects by Locations","authors":["visualdust"],"tags":["segmentation","instance-segmentation","backbone","multi-branch"]},"prevItem":{"title":"SimAM - A Simple, Parameter-Free Attention Module for Convolutional Neural Networks","permalink":"/blog/[35]SimAM-A-Simple-Parameter-Free-Attention-Module-for-Convolutional-Neural-Networks"},"nextItem":{"title":"YOLACT - Real-time Instance Segmentation","permalink":"/blog/[37]YOLACT-Real-time-Instance-Segmentation"}},"content":"[Xinlong Wang](https://arxiv.org/search/cs?searchtype=author&query=Wang%2C+X), [Tao Kong](https://arxiv.org/search/cs?searchtype=author&query=Kong%2C+T), [Chunhua Shen](https://arxiv.org/search/cs?searchtype=author&query=Shen%2C+C), [Yuning Jiang](https://arxiv.org/search/cs?searchtype=author&query=Jiang%2C+Y), [Lei Li](https://arxiv.org/search/cs?searchtype=author&query=Li%2C+L)\\n\\n> We present a new, embarrassingly simple approach to instance segmentation in images. Compared to many other dense prediction tasks, e.g., semantic segmentation, it is the arbitrary number of instances that have made instance segmentation much more challenging. In order to predict a mask for each instance, mainstream approaches either follow the \'detect-thensegment\' strategy as used by Mask R-CNN, or predict category masks first then use clustering techniques to group pixels into individual instances. We view the task of instance segmentation from a completely new perspective by introducing the notion of \\"instance categories\\", which assigns categories to each pixel within an instance according to the instance\'s location and size, thus nicely converting instance mask segmentation into a classification-solvable problem. Now instance segmentation is decomposed into two classification tasks. We demonstrate a much simpler and flexible instance segmentation framework with strong performance, achieving on par accuracy with Mask R-CNN and outperforming recent singleshot instance segmenters in accuracy. We hope that this very simple and strong framework can serve as a baseline for many instance-level recognition tasks besides instance segmentation.\\n\\n\u5b9e\u4f8b\u5206\u5272\u76f8\u6bd4\u4e8e\u8bed\u4e49\u5206\u5272\uff0c\u4e0d\u4ec5\u9700\u8981\u9884\u6d4b\u51fa\u6bcf\u4e00\u4e2a\u50cf\u7d20\u70b9\u7684\u8bed\u4e49\u7c7b\u522b\uff0c\u8fd8\u8981\u5224\u65ad\u51fa\u8be5\u50cf\u7d20\u70b9\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5b9e\u4f8b\u3002\u4ee5\u5f80**\u4e8c\u9636\u6bb5**\u7684\u65b9\u6cd5\u4e3b\u8981\u662f\uff1a\\n\\n1. \u5148\u68c0\u6d4b\u540e\u5206\u5272\uff1a\u4f8b\u5982Mask R-CNN \uff0c\u5148\u7528\u68c0\u6d4b\u7684\u65b9\u6cd5\u5230\u5f97\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u7136\u540e\u5bf9\u8be5\u5b9e\u4f8b\u8fdb\u884c\u8bed\u4e49\u5206\u5272\uff0c\u5206\u5272\u5f97\u5230\u7684\u50cf\u7d20\u90fd\u5c5e\u4e8e\u6b64\u5b9e\u4f8b\u3002\\n2. \u5148\u5206\u5272\u540e\u5206\u7c7b\uff1a\u5148\u91c7\u7528\u8bed\u4e49\u5206\u5272\u7684\u65b9\u6cd5\u5bf9\u6574\u4e2a\u56fe\u7684\u6240\u6709\u50cf\u7d20\u70b9\u505a\u8bed\u4e49\u7c7b\u522b\u7684\u9884\u6d4b\uff0c\u7136\u540e\u5b66\u4e60\u4e00\u4e2a\u5d4c\u5165\u5411\u91cf\uff0c\u4f7f\u7528\u805a\u7c7b\u65b9\u6cd5\u62c9\u8fd1\u5c5e\u4e8e\u540c\u4e00\u5b9e\u4f8b\u7684\u50cf\u7d20\u70b9\uff0c\u4f7f\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u7c7b\uff08\u540c\u4e2a\u5b9e\u4f53\uff09\u3002\\n\\n\u5355\u9636\u6bb5\u65b9\u6cd5\uff08Single Stage Instance Segmentation\uff09\u65b9\u9762\u7684\u5de5\u4f5c\u53d7\u5230\u5355\u9636\u6bb5\u76ee\u6807\u68c0\u6d4b\u7684\u5f71\u54cd\u5927\u4f53\u4e0a\u4e5f\u5206\u4e3a\u4e24\u7c7b\uff1a\u4e00\u79cd\u662f\u53d7one-stage, anchot-based\u68c0\u6d4b\u6a21\u578b\u5982YOLO\uff0cRetinaNet\u542f\u53d1\uff0c\u4ee3\u8868\u4f5c\u6709YOLACT\u548cSOLO\uff1b\u4e00\u79cd\u662f\u53d7anchor-free\u68c0\u6d4b\u6a21\u578b\u5982 FCOS \u542f\u53d1\uff0c\u4ee3\u8868\u4f5c\u6709PolarMask\u548cAdaptIS\u3002\u4e0a\u8ff0\u8fd9\u4e9b\u5b9e\u4f8b\u5206\u5272\u7684\u65b9\u6cd5\u90fd\u4e0d\u90a3\u4e48\u76f4\u63a5\uff0c\u4e5f\u4e0d\u90a3\u4e48\u7b80\u5355\u3002SOLO\u7684\u51fa\u53d1\u70b9\u5c31\u662f\u505a\u66f4\u7b80\u5355\u3001\u66f4\u76f4\u63a5\u7684\u5b9e\u4f8b\u5206\u5272\u3002\\n\\n\u57fa\u4e8e\u5bf9MSCOCO\u6570\u636e\u96c6\u7684\u7edf\u8ba1\uff0c\u4f5c\u8005\u63d0\u51fa\uff0c\u9a8c\u8bc1\u5b50\u96c6\u4e2d\u603b\u5171\u670936780\u4e2a\u5bf9\u8c61\uff0c\u5176\u4e2d98.3\uff05\u7684\u5bf9\u8c61\u5bf9\u7684\u4e2d\u5fc3\u8ddd\u79bb\u5927\u4e8e30\u4e2a\u50cf\u7d20\u3002\u81f3\u4e8e\u5176\u4f59\u76841.7\uff05\u7684\u5bf9\u8c61\u5bf9\uff0c\u5176\u4e2d40.5\uff05\u7684\u5927\u5c0f\u6bd4\u7387\u5927\u4e8e1.5\u500d\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e0d\u8003\u8651\u50cfX\u5f62\u4e24\u4e2a\u7269\u4f53\u8fd9\u6837\u7684\u5c11\u6570\u60c5\u51b5\u3002\u603b\u4e4b\uff0c**\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u56fe\u50cf\u4e2d\u7684\u4e24\u4e2a\u5b9e\u4f8b\u8981\u4e48\u5177\u6709\u4e0d\u540c\u7684\u4e2d\u5fc3\u4f4d\u7f6e\uff0c\u8981\u4e48\u5177\u6709\u4e0d\u540c\u7684\u5bf9\u8c61\u5927\u5c0f**\u3002\\n\\n\u4e8e\u662f\u4f5c\u8005\u63d0\u51fa\u901a\u8fc7\u7269\u4f53\u5728\u56fe\u7247\u4e2d\u7684**\u4f4d\u7f6e**\u548c**\u5f62\u72b6**\u6765\u8fdb\u884c\u5b9e\u4f8b\u7684\u533a\u5206\u3002\u540c\u4e00\u5f20\u56fe\u7247\u4e2d\uff0c\u4f4d\u7f6e\u548c\u5f62\u72b6\u5b8c\u5168\u76f8\u540c\uff0c\u5c31\u662f\u540c\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u7531\u4e8e\u5f62\u72b6\u6709\u5f88\u591a\u65b9\u9762\uff0c\u6587\u7ae0\u4e2d\u6734\u7d20\u5730\u4f7f\u7528\u5c3a\u5bf8\u63cf\u8ff0\u5f62\u72b6\u3002\\n\\n\u8be5\u65b9\u6cd5\u4e0e Mask R-CNN \u5b9e\u73b0\u4e86\u540c\u7b49\u51c6\u786e\u5ea6\uff0c\u5e76\u4e14\u5728\u51c6\u786e\u5ea6\u4e0a\u4f18\u4e8e\u6700\u8fd1\u7684\u5355\u6b21\u5b9e\u4f8b\u5206\u5272\u5668\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## YOLO\u5982\u4f55\u63cf\u8ff0\u76ee\u6807\\n\\nYOLO\u7684\u8bbe\u8ba1\u601d\u8def\u662f\u7684CNN\u7f51\u7edc\u5c06\u8f93\u5165\u7684\u56fe\u7247\u5206\u5272\u6210$S\\\\times S$\u200b\u4e2a\u7f51\u683c\uff0c\u7136\u540e\u6bcf\u4e2a\u5355\u5143\u683c\u8d1f\u8d23\u53bb\u68c0\u6d4b\u90a3\u4e9b\u4e2d\u5fc3\u70b9\u843d\u5728\u8be5\u683c\u5b50\u5185\u7684\u76ee\u6807\uff1a\\n\\n![image-20210812171831245](./src/SOLO-Segmenting-Objects-by-Locations/image-20210812171831245.png)\\n\\n\u53ef\u4ee5\u770b\u5230\u4e0a\u56fe\u4e2d\u76ee\u6807\u201c\u72d7\u201d\u7684\u4e2d\u5fc3\u843d\u5728\u5de6\u4e0b\u89d2\u4e00\u4e2a\u5355\u5143\u683c\u5185\uff0c\u90a3\u4e48\u8be5\u5355\u5143\u683c\u8d1f\u8d23\u9884\u6d4b\u8be5\u76ee\u6807\u3002\u6bcf\u4e2a\u5355\u5143\u683c\u5177\u6709\u4e00\u5b9a\u4fe1\u606f\u91cf\uff08\u8fd9\u4e9b\u4fe1\u606f\u91cf\u5806\u53e0\u5728channel\u4e0a)\uff1a\\n\\n- \u6bcf\u4e2a\u5355\u5143\u683c\u4f1a\u9884\u6d4b$B$\u200b\u200b\uff08bounding box\uff09\u4e2a\u8fb9\u754c\u6846\uff0c\u6bcf\u4e2a\u8fb9\u754c\u6846\u5305\u542b\u4f4d\u7f6e$x,y$\u200b\u548c\u5927\u5c0f$w,h$\u200b\uff0c\u4ee5\u53ca\u8fd9\u4e2abounding box\u7684\u7f6e\u4fe1\u5ea6$c$\u200b\uff08confidence\uff09\uff1b\\n\\n- \u6bcf\u4e2a\u5355\u5143\u683c\u8fd8\u8981\u7ed9\u51fa\u5bf9$C$\u200b\uff08num of classes\uff09\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u503c\u3002\u5176\u8868\u5f81\u7684\u662f\u7531\u8be5\u5355\u5143\u683c\u8d1f\u8d23\u9884\u6d4b\u7684\u8fb9\u754c\u6846\u5176\u76ee\u6807\u5c5e\u4e8e\u5404\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff08\u5b9e\u9645\u4e0a\u662f\u5728\u5404\u4e2a\u8fb9\u754c\u6846\u7f6e\u4fe1\u5ea6\u4e0b\u7684\u6761\u4ef6\u6982\u7387\uff09\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u7ba1\u4e00\u4e2a\u5355\u5143\u683c\u9884\u6d4b\u591a\u5c11\u4e2a\u8fb9\u754c\u6846\uff0c\u5176\u53ea\u9884\u6d4b\u4e00\u7ec4\u7c7b\u522b\u6982\u7387\u503c\uff0c\u8fd9\u662fYolo\u7b97\u6cd5\u7684\u4e00\u4e2a\u7f3a\u70b9\u3002\u6240\u4ee5\u4eceYOLO9000\u5f00\u59cb\uff0c\u7c7b\u522b\u6982\u7387\u548c\u7f6e\u4fe1\u5ea6\u4e00\u6837\u7ed1\u5b9a\u5728\u6bcf\u4e2a\u6846\u4e0a\u3002\\n\\n\u5728YOLO V3\u4e2d\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u540e\u9762\u7684channel\u5806\u53e0\u7684\u5171\u6709$[B\\\\times (4+1+C)]$\u4e2a\u503c\u3002\u5bf9\u4e8e$N\\\\times N$\u4e2a\u5355\u5143\u683c\uff0c\u8f93\u51fa\u7684\u4fe1\u606f\u603b\u91cf\u4e3a\uff1a\\n$$\\nN\\\\times N\\\\times [B\\\\times(4+1+C)]\\n$$\\n\u5176\u4e2d$+4$\u200b\u8868\u793a\u6846\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\uff0c$+1$\u200b\u8868\u793a\u6846\u7684\u7f6e\u4fe1\u5ea6\uff0c$+C$\u200b\u200b\u200b\u200b\u8868\u793a\u7c7b\u522b\u7684\u7f6e\u4fe1\u5ea6\u3002\u5982\u679c\u8ba4\u4e3a\u6bcf\u4e2a\u5355\u5143\u683c\u4ec5\u51fa\u73b0\u4e00\u4e2a\u7269\u4f53\uff0c\u5219\u4e00\u4e2a\u5355\u5143\u683c\u4e2d\u51fa\u73b0\u591a\u4e2a\u7269\u4f53\u65f6\uff0c\u52bf\u5fc5\u4f1a\u9020\u6210\u5ffd\u7565\u3002\u8c03\u8282$B$\u7684\u503c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u8fc7\u5927\u7684$B$\u4f1a\u5bfc\u81f4\u8fd0\u7b97\u91cf\u7684\u589e\u5927\u3002\\n\\n## SOLO\u5982\u4f55\u63cf\u8ff0\u5b9e\u4f8b\\n\\n\u672c\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u7684\u3001\u975e\u5e38\u7b80\u5355\u7684\u5e76\u4e14\u601d\u8def\u50cf\u6781\u4e86YOLO\u7684\u5355\u9636\u6bb5\u5b9e\u4f8b\u5206\u5272\u65b9\u6cd5\uff0c\u9996\u5148\u5bf9\u4e00\u5e45\u56fe\u8fdb\u884c$S\\\\times S$\u200b\u200b\u200b\u200b\u200b\u4e2a\u7f51\u683c\u7684\u5212\u5206\uff0c\u5982\u679c\u67d0\u4e2a\u5b9e\u4f8b\u7684\u4e2d\u5fc3\u70b9\u843d\u5165\u8fd9\u4e2a\u7f51\u683c\u4e2d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7f51\u683c\u5c31\u9700\u8981\u8d1f\u8d23\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u5f62\u72b6\u548c\u5b9e\u4f8b\u7c7b\u522b\u3002\u5176\u4e3b\u4f53\u601d\u60f3\u5728\u4e8e\u5229\u7528\u56fe\u50cf\u4e2d\u4e0d\u540c\u5b9e\u4f8b\u7684\u4f4d\u7f6e\u548c\u5c3a\u5ea6\u4fe1\u606f\u7684\u4e0d\u540c\uff0c\u6765\u533a\u5206\u51fa\u4e0d\u540c\u7684\u5b9e\u4f8b\u3002\\n\\n\u7b80\u800c\u8a00\u4e4b\uff0cSOLO\u5c06\u8f93\u5165\u5206\u4e3a$S\\\\times S$\u200b\u200b\u4e2a\u7f51\u683c\uff0c\u4e5f\u5c31\u662f\u8f93\u51fa\u5f20\u91cf\u7684\u5927\u5c0f\u4e3a$S\\\\times S\\\\times (S^2 +C)$\u200b\u200b\u200b\uff0c\u5176\u4e2d$S\\\\times S$\u200b\u200b\u5bf9\u5e94\u6bcf\u4e2a\u7f51\u683c\uff0c$S^2+1$\u200b\u200b\u662fchannel\u7ef4\u5ea6\u5806\u53e0\u7684\u4fe1\u606f\uff0c$S^2$\u200b\u200b\u8868\u793a\u8fd9\u4e2a\u7f51\u683c\u8d1f\u8d23\u7684\u5b9e\u4f8b\u7684mask\u200b\uff0c$C$\u200b\u200b\u200b\u200b\u8868\u793a\u7c7b\u522b\u6982\u7387\u3002channel\u7ef4\u5ea6\u4e0a\u7684$S^2$\u548c$C$\u5206\u522b\u7531\u4e24\u6761\u7f51\u7edc\u5206\u652f\u751f\u6210\u3002\\n\\n**SOLO\u6846\u67b6\u7684\u4e2d\u5fc3\u601d\u60f3\u662f\u5c06\u5b9e\u4f8b\u5206\u5272\u91cd\u65b0\u8868\u8ff0\u4e3a\u4e24\u4e2a\u540c\u65f6\u7684\u3001\u7c7b\u522b\u611f\u77e5\u9884\u6d4b\u548c\u5b9e\u4f8b\u611f\u77e5\u63a9\u7801\u751f\u6210\u95ee\u9898**\uff1a\\n\\n![image-20210812175633495](./src/SOLO-Segmenting-Objects-by-Locations/image-20210812175633495.png)\\n\\n\u4f5c\u8005\u5c06\u5b9e\u4f8b\u5206\u5272\u4efb\u52a1\u5206\u4e3a\u4e24\u4e2a\u5b50\u4efb\u52a1\uff1a\u7c7b\u522b\u9884\u6d4b\u548c\u63a9\u7801\u751f\u6210\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u7f51\u7edc\u5206\u4e3aCategory Branch\u548cMask Branch\u4f5c\u4e3a\u4e00\u4e2aSOLO Head\uff0c\u5206\u522b\u5b8c\u6210\u7c7b\u522b\u9884\u6d4b\u548c\u63a9\u7801\u751f\u6210\u3002\\n\\n\u8981\u7406\u89e3\u672c\u6587\u7684\u601d\u60f3\uff0c\u91cd\u70b9\u5c31\u662f\u8981\u7406\u89e3SOLO\u63d0\u51fa\u7684**\u5b9e\u4f8b\u7c7b\u522b\uff08Instance Category\uff09**\u7684\u6982\u5ff5\u3002\u4f5c\u8005\u6307\u51fa\uff0c\u5b9e\u4f8b\u7c7b\u522b\u5c31\u662f\u91cf\u5316\u540e\u7684**\u7269\u4f53\u4e2d\u5fc3\u4f4d\u7f6e\uff08location\uff09**\u548c\u7269\u4f53\u7684**\u5c3a\u5bf8\uff08size)**\u3002\\n\\nSOLO\u7684\u8fd9\u4e24\u4e2a\u5206\u652f\u524d\u9762\u8fde\u63a5\u7684\u662fFPN\u9aa8\u5e72\u7f51\u7edc\uff0c\u5b83\u751f\u6210\u4e0d\u540c\u5927\u5c0f\u7684\u91d1\u5b57\u5854\u7279\u5f81\u56fe\uff0c\u6bcf\u4e2a\u7ea7\u522b\u5177\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u901a\u9053\uff08\u901a\u5e38\u4e3a 256\uff09\u3002\u8fd9\u4e9bfeature map\u7528\u4f5c\u6bcf\u4e2a\u9884\u6d4b\u5934\u7684\u8f93\u5165\uff1a\u8bed\u4e49\u7c7b\u522b\u548c\u5b9e\u4f8b\u63a9\u7801\u3002\u6bcf\u4e2aHead\u7684\u6743\u91cd\u5728\u4e0d\u540c\u7ea7\u522b\u4e4b\u95f4\u5171\u4eab\u3002\\n\\n### Semantic Category: Category Branch\\n\\nSOLO\u5728\u9884\u6d4b\u7684\u8f93\u51fa\u4e2d\u7528C\u7ef4\u8868\u793a\u8bed\u4e49\u7c7b\u522b\u6982\u7387\uff0c\u5176\u4e2dC\uff08num of classes\uff09\u662f\u7c7b\u522b\u7684\u6570\u91cf\u3002\u6211\u4eec\u5c06\u8f93\u5165\u56fe\u50cf\u5212\u5206\u4e3a$S\\\\times S$\u200b\u200b\u200b\u200b\u4e2a\u7f51\u683c\uff0c\u6545\u8f93\u51fa\u7a7a\u95f4\u7684\u7ef4\u5ea6\u4e3a$S\\\\times S\\\\times C$\u200b\u200b\u200b\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u57fa\u4e8e\u8fd9\u6837\u7684\u5047\u8bbe\uff1a$S\\\\times S$\u200b\u200b\u7f51\u683c\u7684\u6bcf\u4e2a\u5355\u5143\u683c\u5fc5\u5c5e\u4e8e\u4e00\u4e2a\u5355\u72ec\u7684\u5b9e\u4f8b\uff0c\u5373\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u8bed\u4e49\u7c7b\u522b\u3002 \u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\uff0cC\u4e2a\u901a\u9053\u5206\u522b\u8868\u793a\u6bcf\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u7684\u7c7b\u6982\u7387\u3002\\n\\n### Instance Mask: Mask Branch\\n\\nMask Branch\u548cCategory Branch\u5e76\u884c\uff0c\u6bcf\u4e2a\u7f51\u683c\u5355\u5143\u9664\u4e86\u5bf9\u5e94\u4e00\u7ec4\u7c7b\u522b\u6982\u7387\u4e5f\u4f1a\u751f\u6210\u76f8\u5e94\u7684\u5b9e\u4f8b\u63a9\u7801\u3002\u5bf9\u4e8e\u8f93\u5165\u56fe\u50cf$I$\uff0c\u5982\u679c\u5c06\u5176\u5212\u5206\u4e3a$S\\\\times S$\u4e2a\u7f51\u683c\uff0c\u5219\u603b\u5171\u6700\u591a\u6709$S^2$\u4e2a\u9884\u6d4b\u63a9\u7801\u3002SOLO\u5728\u8f93\u51fa\u5f20\u91cf\u7684\u901a\u9053\u7ef4\u5ea6\u4e0a\u663e\u5f0f\u5730\u7f16\u7801\u63a9\u7801\u4fe1\u606f\u3002\\n\\n\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u8f93\u5165$I\\\\in R^{H,W}$\u200b\u200b\u5b9e\u4f8b\u63a9\u7801\u8f93\u51fa\u7684\u7ef4\u5ea6\u4e3a$H\\\\times W\\\\times S^2$\u200b\u200b\u3002\u7b2c$k$\u200b\u200b\u4e2a\u901a\u9053\u5c06\u8d1f\u8d23\u5728\u7f51\u683c$(i,j)$\u200b\u200b\u5904\u5206\u5272\u5b9e\u4f8b\uff0c\u5176\u4e2d$k = i\xb7S + j$\u200b\u200b\uff08$i$\u548c $j$\u200b\u4ece\u96f6\u5f00\u59cb\uff09\u3002\u4e3a\u6b64\uff0c\u5728\u8bed\u4e49\u7c7b\u522b\u548c\u7c7b\u522b\u4e0d\u53ef\u77e5\u63a9\u7801\u4e4b\u95f4\u5efa\u7acb\u4e86\u4e00\u5bf9\u4e00\u7684\u5bf9\u5e94\u5173\u7cfb\uff1a\\n\\n![image-20210812235500474](./src/SOLO-Segmenting-Objects-by-Locations/image-20210812235500474.png)\\n\\nSOLO\u4e2d\u83b7\u5f97\u5b9e\u4f8b\u63a9\u7801\u7684\u76f4\u63a5\u65b9\u6cd5\u662f\u91c7\u7528\u5168\u5377\u79ef\u7f51\u7edc\u3002\u7136\u800c\uff0c\u4f20\u7edf\u7684\u5377\u79ef\u64cd\u4f5c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u7a7a\u95f4\u4e0d\u53d8\u7684\u3002\u7a7a\u95f4\u4e0d\u53d8\u6027\u5bf9\u4e8e\u67d0\u4e9b\u4efb\u52a1\uff08\u4f8b\u5982\u56fe\u50cf\u5206\u7c7b\uff09\u662f\u53ef\u53d6\u7684\uff0c\u56e0\u4e3a\u5b83\u5f15\u5165\u4e86\u8db3\u591f\u7684\u9c81\u68d2\u6027\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u5b9e\u4f8b\u5206\u5272\u4efb\u52a1\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7a7a\u95f4\u53d8\u5316\u7684\u6a21\u578b\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u4f4d\u7f6e\u654f\u611f\u7684\u6a21\u578b\u3002\\n\\n\u89e3\u51b3\u65b9\u6848\u975e\u5e38\u7b80\u5355\uff1a\u5728\u7f51\u7edc\u5f00\u59cb\u65f6\uff0c\u53d7Coord-Conv\u7b97\u5b50\u7684\u542f\u53d1\uff0c\u76f4\u63a5\u5c06\u5f52\u4e00\u5316\u50cf\u7d20\u5750\u6807\u63d0\u4f9b\u7ed9\u7f51\u7edc\u3002\u5177\u4f53\u6765\u8bf4\uff0cSOLO\u4f7f\u7528\u4e00\u4e2a\u4e0e\u8f93\u5165\u76f8\u540c\u5927\u5c0f\u7684\u5f20\u91cf\uff0c\u5176\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u4e00\u4e2a\u6240\u5728\u4f4d\u7f6e\u50cf\u7d20\u7684\u5ea7\u6807\uff0c\u8fd9\u4e9b\u5750\u6807\u88ab\u5f52\u4e00\u5316\u4e3a$[\u22121, 1]$\u200b\u200b\u3002\u7136\u540e\u5c06\u8be5\u5f20\u91cf\u8fde\u63a5\u5230\u8f93\u5165\u7279\u5f81\u5e76\u4f20\u9012\u5230\u4ee5\u4e0b\u5c42\u3002\u901a\u8fc7\u7b80\u5355\u5730\u8ba9\u5377\u79ef\u8bbf\u95ee\u5b83\u81ea\u5df1\u7684\u8f93\u5165\u5750\u6807\uff0c\u6211\u4eec\u5c06\u7a7a\u95f4\u529f\u80fd\u6dfb\u52a0\u5230\u4f20\u7edf\u7684 FCN \u6a21\u578b\u4e2d\u3002`\u8bf7\u6ce8\u610f\uff0c\u4e3a\u4e86\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807Coord-Conv \u5e76\u4e0d\u662f\u552f\u4e00\u7684\u9009\u62e9\u3002\u4f8b\u5982\uff0csemi-convolutional\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u4e0d\u8fc7\u8bba\u6587\u4e2d\u7531\u4e8e\u662f\u56e0\u4e3a\u7b80\u5355\u4e14\u6613\u4e8e\u5b9e\u73b0\u800c\u4f7f\u7528\u4e86Coord-Conv\u3002`\\n\\n\u5982\u679c\u539f\u59cb\u7279\u5f81\u5f20\u91cf\u7684\u5927\u5c0f\u4e3a$H\\\\times W\\\\times D$\uff0c\u5219\u65b0\u5f20\u91cf\u7684\u5927\u5c0f\u53d8\u4e3a$H\\\\times W\\\\times (D +2)$\uff0c\u5176\u4e2d\u6700\u540e\u4e24\u4e2a\u901a\u9053\u7528\u4e8e\u8868\u793a$x,y$\u50cf\u7d20\u5750\u6807\u3002\\n\\n### \u5173\u4e8eCoordConv\\n\\n\u5728\u8fd9\u91cc\u5bf9\u521a\u624d\u8bf4\u9053\u7684CoordConv\u4f5c\u51fa\u8865\u5145\u8bf4\u660e\u3002CoordConv\u662fUber AI Lab\uff1a\\n\\n![image-20210813090143777](./src/SOLO-Segmenting-Objects-by-Locations/image-20210813090143777.png)\\n\\n\u8fd9\u4efd\u5de5\u4f5c\u7684\u63d0\u51fa\u539f\u56e0\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc (CNN) \u5728\u4e00\u4e9b\u5f88\u7b80\u5355\u5f88\u76f4\u63a5\u7684\u4efb\u52a1\u91cc\u9762\u4f1a\u5931\u5b88\u3002\u4f8b\u5982\u4e0a\u56fe\u4e2d\uff0c\u76d1\u7763\u6e32\u67d3\u3001\u76d1\u7763\u5750\u6807\u5206\u7c7b\uff0c\u4ee5\u53ca\u76d1\u7763\u56de\u5f52\u7b49\u4efb\u52a1\u4e2d\uff0c\u5377\u79ef\u5bfc\u81f4\u5ea7\u6807\u4fe1\u606f\u4e22\u5931\u5bf9CNN\u6765\u8bf4\u90fd\u662f\u5927\u96be\u9898\u3002\\n\\n![image-20210813090428559](./src/SOLO-Segmenting-Objects-by-Locations/image-20210813090428559.png)\\n\\n\u800cCoordConv\u8981\u505a\u7684\uff0c\u5c31\u5728\u7ed9\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165\u91cc\uff0c\u52a0\u5165**\u4e24\u4e2a\u5750\u6807\u901a\u9053**\uff0c\u6bcf\u4e00\u4f4d\u5206\u522b\u8868\u793a\u5bf9\u5e94\u50cf\u7d20\u7684$x,y$\u200b\u5ea7\u6807\u3002\\n\\n### \u5408\u5e76\\n\\n\u5728SOLO\u4e2d\uff0c\u7c7b\u522b\u9884\u6d4b\u548c\u76f8\u5e94\u7684mask\u81ea\u7136\u7531\u5b83\u4eec\u7684\u53c2\u8003\u7f51\u683c\u5355\u5143\u5173\u8054\uff0c\u5373$k = i\\\\cdot S + j$\u200b\u200b\u200b\u200b\u3002 \u57fa\u4e8e\u6b64\uff0cSOLO\u76f4\u63a5\u4e3a\u6bcf\u4e2a\u7f51\u683c\u5f62\u6210\u6700\u7ec8\u5b9e\u4f8b\u5206\u5272\u7ed3\u679c\u3002\u539f\u59cb\u5b9e\u4f8b\u5206\u5272\u7ed3\u679c\u662f\u901a\u8fc7\u6536\u96c6\u6240\u6709\u7f51\u683c\u7ed3\u679c\u751f\u6210\u7684\u3002\u6700\u540e\uff0c\u4f7f\u7528\u975e\u6781\u5927\u6291\u5236\uff08NMS\uff09\u83b7\u5f97\u6700\u7ec8\u5b9e\u4f8b\u5206\u5272\u7ed3\u679c\uff0c\u4e0d\u9700\u8981\u5176\u4ed6\u540e\u5904\u7406\u64cd\u4f5c\u3002\\n\\n## SOLO\u7684\u7f51\u7edc\u7ed3\u6784\\n\\nSOLO\u7684\u6574\u4e2a\u7f51\u7edc\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\uff1abackbone\u3001neck\u3001head\u3002\u4f8b\u5982\uff0c\u4f7f\u7528ResNet50\u4f5c\u4e3abackbone\u3001FPN\u4f5c\u4e3aneck\u3001solo_head\u4f5c\u4e3ahead\uff0c\u90a3\u4e48\u7f51\u7edc\u7ed3\u6784\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\n\\n![image-20210814213819473](./src/SOLO-Segmenting-Objects-by-Locations/image-20210814213819473.png)\\n\\nSOLO head\u7684\u524d\u5411\u4f20\u64ad\u4ee3\u7801\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u5212\u5206\u51fa\u6765\u7684\u5355\u5143\u683c\u5355\u72ec\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u3002\u5982\u4e0b\u662f\u6bcf\u4e2a\u5355\u5143\u683c\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u7684\u4ee3\u7801\uff1a\\n\\n```python\\ndef forward_single(self, x, idx, eval=False, upsampled_size=None):\\n        \'\'\'\\n        :param x: fpn\u6bcf\u4e2alevel\u7684feature map [N,C,H,W]\\n        :param idx:  [0,1,2,3,4]\u4e2d\u7684\u4e00\u4e2a,\u7528\u6765\u6307\u793a\u5f53\u524d\u7684level\u7ea7\u522b\\n        :param upsampled_size: \u6700\u5927feature map/C1 \u7684h,w\\n        \'\'\'\\n        # \u56e0\u4e3a\u8fd9\u91cc\u6709\u4e24\u4e2abranch\uff0c\u8981\u628a\u8f93\u5165\u590d\u5236\u4e3a\u4e24\u4efd\\n        ins_feat = x\\n        cate_feat = x\\n\\n        # \u8fd9\u91cc\u5148\u5904\u7406mask\u5206\u652f\\n        x_range = torch.linspace(-1, 1, ins_feat.shape[-1], device=ins_feat.device) # w --\x3e x\\n        y_range = torch.linspace(-1, 1, ins_feat.shape[-2], device=ins_feat.device) # h --\x3e y\\n        # \u5bf9x_range, y_range \u8fdb\u884c\u6269\u5145\\n        # torch.meshgrid\uff08\uff09\u7684\u529f\u80fd\u662f\u751f\u6210\u7f51\u683c\uff0c\u53ef\u4ee5\u7528\u4e8e\u751f\u6210\u5750\u6807\u3002\u51fd\u6570\u8f93\u5165\u4e24\u4e2a\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u4e00\u7ef4\u5f20\u91cf\uff0c\u4e24\u4e2a\u8f93\u51fa\u5f20\u91cf\u7684\u884c\u6570\u4e3a\u7b2c\u4e00\u4e2a\u8f93\u5165\u5f20\u91cf\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5217\u6570\u4e3a\u7b2c\u4e8c\u4e2a\u8f93\u5165\u5f20\u91cf\u7684\u5143\u7d20\u4e2a\u6570\\n        # \u5176\u4e2d\u7b2c\u4e00\u4e2a\u8f93\u51fa\u5f20\u91cf\u586b\u5145\u7b2c\u4e00\u4e2a\u8f93\u5165\u5f20\u91cf\u4e2d\u7684\u5143\u7d20\uff0c\u5404\u884c\u5143\u7d20\u76f8\u540c\uff1b\u7b2c\u4e8c\u4e2a\u8f93\u51fa\u5f20\u91cf\u586b\u5145\u7b2c\u4e8c\u4e2a\u8f93\u5165\u5f20\u91cf\u4e2d\u7684\u5143\u7d20\u5404\u5217\u5143\u7d20\u76f8\u540c\u3002\\n        y, x = torch.meshgrid(y_range, x_range)\\n        # \u5c06\u4e24\u4e2a\u5750\u6807\u6269\u62104\u7ef4\\n        y = y.expand([ins_feat.shape[0], 1, -1, -1])\\n        x = x.expand([ins_feat.shape[0], 1, -1, -1])\\n        # \u5c06\u5750\u6807cancat\u5230feature map\u7684\u901a\u9053\u4e0a\\n        coord_feat = torch.cat([x, y], 1)\\n        ins_feat = torch.cat([ins_feat, coord_feat], 1)\\n        # \u5c06\u5904\u7406\u597d\u7684\u65b0\u7684fearure map\u9001\u8fdbins_convs\\n        for i, ins_layer in enumerate(self.ins_convs):\\n            ins_feat = ins_layer(ins_feat)\\n        # \u8fd9\u91cc\u5c06feature map\u4e0a\u91c7\u6837\u52302H*2W,\u5e94\u8be5\u662f\u4e3a\u4e86\u63d0\u9ad8mask\u5206\u5272\u7684\u7cbe\u5ea6\\n        ins_feat = F.interpolate(ins_feat, scale_factor=2, mode=\'bilinear\')\\n        # \u8fd9\u91cc\u83b7\u5f97\u4e86mask\u5206\u652f\u7684\u7ed3\u679c\\n        ins_pred = self.solo_ins_list[idx](ins_feat)\\n\\n        # \u8fd9\u91cc\u5f00\u59cb\u5904\u7406category\u5206\u652f\\n        for i, cate_layer in enumerate(self.cate_convs):\\n            # \u5982\u679c\u662f\u7b2c\u4e00\u4e2aconv\uff0c\u5219\u9700\u8981\u8fdb\u884c\u91c7\u6837\uff0c\u56e0\u4e3acategory\u5206\u652f\u7684\u5c3a\u5bf8\u662fh=w=S\\n            if i == self.cate_down_pos:\\n                seg_num_grid = self.seg_num_grids[idx]\\n                cate_feat = F.interpolate(cate_feat, size=seg_num_grid, mode=\'bilinear\')\\n            cate_feat = cate_layer(cate_feat)\\n        # \u8fd9\u91cc\u83b7\u5f97\u4e86category\u5206\u652f\u7684\u7ed3\u679c\\n        cate_pred = self.solo_cate(cate_feat)\\n\\n        # \u5982\u679c\u4f7f\u6d4b\u8bd5\u6a21\u5f0f,\\n        # \u5c06mask\u5206\u652f\u7684\u7ed3\u679c\u53d6sigmoid,\u5e76\u4e14\u4e0a\u91c7\u6837\u5230\u539f\u59cbC1\u7684\u5c3a\u5bf8\\n        # category\u5206\u652f\u7684\u7ed3\u679c\u8fdb\u884cpoints_nms,\u8fd9\u4e2a\u5f85\u4f1a\u518d\u770b\\n        if eval:\\n            ins_pred = F.interpolate(ins_pred.sigmoid(), size=upsampled_size, mode=\'bilinear\')\\n            cate_pred = points_nms(cate_pred.sigmoid(), kernel=2).permute(0, 2, 3, 1)\\n        return ins_pred, cate_pred\\n```\\n\\n### \u8f93\u51fa\u662f\u5982\u4f55\u4ea7\u751f\u7684\\n\\nSOLO\u5149\u770b\u8bba\u6587\u53ef\u80fd\u7a0d\u5fae\u6709\u4e00\u70b9\u8ff7\u7cca\u3002\u8fd8\u597d\u4ee3\u7801\u662f\u5f00\u6e90\u7684\u3002\u901a\u8fc7\u4ee3\u7801\u53ef\u4ee5\u66f4\u52a0\u6e05\u6670\u5730\u4e86\u89e3head\u90e8\u5206\u7684\u64cd\u4f5c\u6d41\u7a0b\u3002\u603b\u7ed3\u5982\u4e0b\uff1a\\n\\n1. \u6a21\u578b\u8f93\u5165backbone\u4e2d\uff08\u4f8b\u5982ResNet50\uff09\uff0c\u4ea7\u751f\u7279\u5f81\u56fe\uff08feature map\uff09\u3002\\n\\n2. \u7279\u5f81\u56fe\u8f93\u5165FPN neck\uff0c\u4ea7\u751f\u4e0d\u540clevel\u7684\u7279\u5f81\u56fe\u3002\u5b9e\u9a8c\u8bc1\u660e\uff0c\u4e0d\u540clevel\u5bf9SOLO\u5206\u5272\u4e0d\u540c\u5927\u5c0f\u7684\u7269\u4f53\u8d77\u5230\u4e86\u975e\u5e38\u5927\u7684\u5e2e\u52a9\u4f5c\u7528\u3002\\n\\n3. \u4e0a\u8ff0\u5904\u7406\u7684\u7279\u5f81\u56fe\u8f93\u5165SOLO head\uff1a\\n\\n   1. \u7279\u5f81\u56fe\u8fdb\u5165Category branch\uff0c\u8f93\u51fa\u4e00\u7ef4\u7684\u7c7b\u522b\u7f6e\u4fe1\u5ea6\u4fe1\u606f\u3002\u4e4b\u540e\u4f1a\u7528\u4e8e\u6781\u5927\u503c\u6291\u5236\u3002\\n   2. \u7279\u5f81\u56fe\u8f93\u5165Mask Branch\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u5143\u683c\uff0c\u90fd\u8981\u5bf9\u6574\u4e2afeature map\u8fdb\u884c\u5904\u7406\u3002\u56e0\u4e3a\u7269\u4f53\u7684\u8fb9\u754c\u53ef\u80fd\u4f1a\u8d85\u51fa\u5355\u5143\u683c\u7684\u8303\u56f4\u3002\u53ea\u8981\u7269\u4f53\u7684\u4e2d\u5fc3\u8fd8\u5728\u8fd9\u4e2a\u5355\u5143\u683c\u91cc\uff0c\u5c31\u8fd8\u7b97\u5c5e\u4e8e\u8fd9\u4e2a\u5355\u5143\u683c\u3002\\n\\n   \u4e0a\u8ff0\u4e24\u4e2a\u5206\u652f\u5904\u7406\u5b8c\u6210\u540e\u7684\u7ed3\u679c\u5408\u5e76\u3002\\n\\n4. \u7ed3\u679c\u8f93\u5165\u8fdb\u5165\u975e\u6781\u5927\u503c\u6291\u5236\uff0c\u8fdb\u884c\u7b5b\u9009\\n\\n5. \u8f93\u51fa\\n\\n## Loss\u8bbe\u8ba1\\n\\n### Label Assignment\\n\\n\u5bf9\u4e8e\u7c7b\u522b\u9884\u6d4b\u5206\u652f\uff0c\u7f51\u7edc\u9700\u8981\u7ed9\u51fa\u6bcf\u4e2a$S\\\\times S$\u200b\u7f51\u683c\u7684\u5bf9\u8c61\u7c7b\u522b\u6982\u7387\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u7f51\u683c$(i\uff0cj)$\u200b\u843d\u5165\u4efb\u4f55\u771f\u5b9e\u6ce8\u91ca\u8499\u7248\u7684\u4e2d\u5fc3\u533a\u57df\uff0c\u5219\u5c06\u5176\u89c6\u4e3a\u6b63\u6837\u672c\uff1b\u5426\u5219\uff0c\u5b83\u4e3a\u8d1f\u6837\u672c\u3002\u5728\u6700\u8fd1\u7684FCOS\u7b49\u76ee\u6807\u68c0\u6d4b\u76f8\u5173\u7684\u5de5\u4f5c\u4e2d\u5df2\u7ecf\u8bc1\u660e\u4e86\u4e2d\u5fc3\u91c7\u6837\u662f\u6709\u6548\u7684\uff0c\u8fd9\u91ccSOLO\u4e5f\u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f\u8fdb\u884c\u63a9\u7801\u7c7b\u522b\u5206\u7c7b\u3002\u7ed9\u5b9aground truth \u63a9\u7801\u7684\u8d28\u5fc3$(c_x, c_y )$\u200b\u3001\u5bbd\u5ea6$w$\u200b\u548c\u9ad8\u5ea6$h$\u200b\uff0c\u4e2d\u5fc3\u533a\u57df\u7531\u4e00\u4e2a\u5e38\u91cf$\\\\epsilon$\u200b\u63a7\u5236\uff1a$(c_x , c_y , \\\\epsilon w,\\\\epsilon h)$\u200b\u3002SOLO\u7684\u4ee3\u7801\u4e2d\u8bbe\u7f6e$\\\\epsilon = 0.2$\u200b\uff0c\u5e73\u5747\u6bcf\u4e2aground truth\u63a9\u7801\u6709 3 \u4e2a\u6b63\u6837\u672c\u3002\\n\u9664\u4e86\u5b9e\u4f8b\u7c7b\u522b\u7684\u6807\u7b7e\uff0c\u6211\u4eec\u8fd8\u4e3a\u6bcf\u4e2a\u6b63\u6837\u672c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5206\u5272mask\u3002\u7531\u4e8e\u5b58\u5728$S^2$\u200b\u4e2a\u7f51\u683c\uff0c\u56e0\u6b64\u6bcf\u4e2a\u56fe\u50cf\u90fd\u6709$S^2$\u200b\u4e2a\u8f93\u51famask\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6b63\u6837\u672c\uff0c\u5bf9\u5e94\u7684\u76ee\u6807\u4e8c\u503cmask\u5c06\u88ab\u6ce8\u91ca\u3002\u53ef\u80fd\u6709\u4eba\u62c5\u5fc3mask\u7684\u987a\u5e8f\u4f1a\u5f71\u54cdmask\u9884\u6d4b\u5206\u652f\uff0c\u8bba\u6587\u4e2d\u8bc1\u660e\u4e86\u6700\u7b80\u5355\u7684\u6309\u884c\u5217\u987a\u5e8f\u7684\u6392\u5e8f\u65b9\u6cd5\u662f\u6709\u6548\u7684\u3002\\n\\n### Loss Functions\uff08\u635f\u5931\u51fd\u6570\u8bbe\u8ba1\uff09\\n\\n\u8bad\u7ec3\u635f\u5931\u51fd\u6570\u8bbe\u8ba1\u4e3a\uff1a\\n$$\\nL = L_{cate} + \u03bbL_{mask}\\n$$\\n\u5176\u4e2d$L_{cate}$\u4e3a\u5bf9\u8bed\u4e49\u5206\u5272\u5206\u7c7b\u7684Focal loss\uff0c$L_{mask}$\u662f\u5bf9mask\u9884\u6d4b\u7684loss\uff1a\\n$$\\nL_{mask} = \\\\frac{1}{N_{pos}}\\\\sum_{k}1_{P^*_{i,j>0}d_{mask}(m_k,m_k^*)}\\n$$\\n\u5176\u4e2d\uff0c$i = int(k/s)$ \uff0c$j = k \\\\mod s$\uff0c\u4f4d\u7f6e\u7d22\u5f15\u662f\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5f80\u53f3\u4ea7\u751f\u7684\u3002$N_{pos}$\u662f\u6b63\u6837\u672c\u7684\u6570\u91cf\u3002$p*$\u3001$m*$\u5206\u522b\u4ee3\u8868\u4e86\u5206\u7c7b\u548cmask\u3002\\n\\n$d_{maxk}(\\\\cdot)$\u200b\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u4f8b\u5982Binary Cross Entropy (BCE)\u3001Focal Loss\u548cDice Loss\u3002\u6700\u7ec8\u51fa\u4e8e\u6548\u7387\u548c\u7a33\u5b9a\u6027\uff0c\u9009\u7528\u4e86Dice Loss\uff1a\\n$$\\nL_{Dice} = 1-D(p,q)\\\\\\\\\\nD(p,q) = \\\\frac{2\\\\sum_{x,y}(p_{x,y}\\\\cdot q_{x,y})}{\\\\sum_{x,y}p^2_{x,y} + \\\\sum_{x,y}q^2_{x,y}}\\n$$\\n\u5176\u4e2d$p,q$\u200b\u200b\u5206\u522b\u4e3a\u9884\u6d4b\u7684mask\u548cground truth mask\uff0c$p_{x,y},q_{x,y}$\u200b\u4e3a\u5bf9\u5e94$x,y$\u200b\u200b\u4f4d\u7f6e\u7684\u503c\u3002\\n\\n## SOLO\u7684\u6709\u6548\u6027\\n\\n![image-20210813100527967](./src/SOLO-Segmenting-Objects-by-Locations/image-20210813100527967.png)\\n\\n\u8bba\u6587\u4e2d\u53ef\u89c6\u5316\u4e86$S=12$\u65f6\u7f51\u683c\u751f\u6210\u7684\u7f51\u7edc\u8f93\u51fa\u3002\u5b50\u56fe$i,j$\u8868\u793a\u7531\u76f8\u5e94\u7684mask\u901a\u9053\uff08\u5728Sigmoid\u4e4b\u540e\uff09\u751f\u6210\u7684soft mask\u9884\u6d4b\u7ed3\u679c\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0d\u540c\u7684\u5b9e\u4f8b\u5728\u4e0d\u540c\u7684\u6a21\u677f\u9884\u6d4b\u901a\u9053\u4e0a\u6fc0\u6d3b\u3002\u901a\u8fc7\u5728\u4e0d\u540c\u4f4d\u7f6e\u663e\u5f0f\u5730\u5206\u5272\u5b9e\u4f8b\uff0cSOLO\u5c06\u5b9e\u4f8b\u5206\u5272\u95ee\u9898\u8f6c\u6362\u4e3a\u4f4d\u7f6e\u611f\u77e5\u7684\u5206\u7c7b\u4efb\u52a1\u3002\\n\\n\u5728\u6bcf\u4e2a\u7f51\u683c\u5904\u5c06\u4ec5\u4ee3\u8868\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e76\u4e14\u53ef\u4ee5\u7531\u591a\u4e2a\u76f8\u90bb\u7684mask\u901a\u9053\u6765\u9884\u6d4b\u4e00\u4e2a\u5b9e\u4f8b\u3002\u5728\u63a8\u65ad\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528NMS\u6291\u5236\u5197\u4f59\u63a9\u7801\u3002"},{"id":"/[37]YOLACT-Real-time-Instance-Segmentation","metadata":{"permalink":"/blog/[37]YOLACT-Real-time-Instance-Segmentation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[37]YOLACT-Real-time-Instance-Segmentation.md","source":"@site/blog/[37]YOLACT-Real-time-Instance-Segmentation.md","title":"YOLACT - Real-time Instance Segmentation","description":"Daniel Bolya, Chong Zhou, Fanyi Xiao, Yong Jae Lee","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"instance-segmentation","permalink":"/blog/tags/instance-segmentation"},{"label":"backbone","permalink":"/blog/tags/backbone"},{"label":"multi-branch","permalink":"/blog/tags/multi-branch"}],"readingTime":13.375,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"YOLACT - Real-time Instance Segmentation","authors":["visualdust"],"tags":["segmentation","instance-segmentation","backbone","multi-branch"]},"prevItem":{"title":"SOLO - Segmenting Objects by Locations","permalink":"/blog/[36]SOLO-Segmenting-Objects-by-Locations"},"nextItem":{"title":"You Only Look One-level Feature","permalink":"/blog/[38]You-Only-Look-One-level-Feature"}},"content":"[Daniel Bolya](https://arxiv.org/search/cs?searchtype=author&query=Bolya%2C+D), [Chong Zhou](https://arxiv.org/search/cs?searchtype=author&query=Zhou%2C+C), [Fanyi Xiao](https://arxiv.org/search/cs?searchtype=author&query=Xiao%2C+F), [Yong Jae Lee](https://arxiv.org/search/cs?searchtype=author&query=Lee%2C+Y+J)\\n\\n> We present a simple, fully-convolutional model for real-time instance segmentation that achieves 29.8 mAP on MS COCO at 33.5 fps evaluated on a single Titan Xp, which is significantly faster than any previous competitive approach. Moreover, we obtain this result after training on only one GPU. We accomplish this by breaking instance segmentation into two parallel subtasks: (1) generating a set of prototype masks and (2) predicting per-instance mask coefficients. Then we produce instance masks by linearly combining the prototypes with the mask coefficients. We find that because this process doesn\'t depend on repooling, this approach produces very high-quality masks and exhibits temporal stability for free. Furthermore, we analyze the emergent behavior of our prototypes and show they learn to localize instances on their own in a translation variant manner, despite being fully-convolutional. Finally, we also propose Fast NMS, a drop-in 12 ms faster replacement for standard NMS that only has a marginal performance penalty.\\n\\nYOLACT\u662fYou Only Look At CoefficienTs \u7684\u7b80\u5199\uff0c\u5176\u4e2d coefficients \u662f\u8fd9\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u4e4b\u4e00\uff0c\u8fd9\u4e2a\u547d\u540d\u98ce\u683c\u5e94\u662f\u81f4\u656c\u4e86\u53e6\u4e00\u76ee\u6807\u68c0\u6d4b\u6a21\u578b YOLO\u3002\\n\\n![image-20210818180207356](./src/YOLACT-Real-time-Instance-Segmentation/image-20210818180207356.png)\\n\\n\u4e0a\u56fe\uff1aYOLACT\u7684\u7f51\u7edc\u7ed3\u6784\u56fe\u3002**YOLACT\u7684\u76ee\u6807\u662f\u5c06\u63a9\u6a21\u5206\u652f\u6dfb\u52a0\u5230\u73b0\u6709\u7684\u4e00\u9636\u6bb5\uff08one-stage\uff09\u76ee\u6807\u68c0\u6d4b\u6a21\u578b**\u3002\u6211\u4e2a\u4eba\u89c9\u5f97\u8fd9\u662f\u5939\u5728\u4e00\u9636\u6bb5\u548c\u4e8c\u9636\u6bb5\u4e2d\u95f4\u7684\u4ea7\u7269\u3002\u5c06\u5176\u5206\u4e3a\u4e00\u9636\u6bb5\u7684\u4f9d\u636e\u662f\u5176\u5b9e\u73b0\u201c\u5c06\u63a9\u6a21\u5206\u652f\u6dfb\u52a0\u5230\u73b0\u6709\u7684\u4e00\u9636\u6bb5\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\u201d\u7684\u65b9\u5f0f\u4e0eMask R-CNN\u5bf9 Faster-CNN \u64cd\u4f5c\u76f8\u540c\uff0c\u4f46\u6ca1\u6709\u8bf8\u5982feature repooling\u548cROI align\u7b49\u660e\u786e\u7684\u76ee\u6807\u5b9a\u4f4d\u6b65\u9aa4\u3002\u4e5f\u5c31\u662f\uff0c`\u5b9a\u4f4d-\u5206\u7c7b-\u5206\u5272`\u7684\u64cd\u4f5c\u88ab\u53d8\u6210\u4e86`\u5206\u5272-\u526a\u88c1`\u3002\\n\\n\u6839\u636e\u8bc4\u4f30\uff0c\u5f53YOLACT \u5904\u7406$550\\\\times 550$\u200b\u200b\u200b\u5927\u5c0f\u7684\u56fe\u7247\u65f6\uff0c\u5176\u901f\u5ea6\u8fbe\u5230\u4e86 33FPS\uff0c\u800c\u4e92\u8054\u7f51\u4e0a\u591a\u6570\u89c6\u9891\u4e00\u822c\u662f 30FPS \u7684\uff0c\u8fd9\u4e5f\u5c31\u662f\u5b9e\u65f6\u7684\u542b\u4e49\u4e86\u3002\u8fd9\u662f\u5355\u9636\u6bb5\u6bd4\u8f83\u65e9\u7684\u4e00\u4efd\u5de5\u4f5c\uff0c\u867d\u7136\u8fd9\u4e2a\u901f\u5ea6\u4e0d\u5feb\u4f46\u4e5f\u8fd8\u884c\u4e86\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## YOLACT\u7f51\u7edc\u7ed3\u6784\\n\\n![image-20210818180207356](./src/YOLACT-Real-time-Instance-Segmentation/image-20210818180207356.png)\\n\\n\u672c\u6587\u4f5c\u8005\u5c06\u5b9e\u4f8b\u5206\u5272\u7684\u590d\u6742\u4efb\u52a1\u5206\u89e3\u4e3a\u4e24\u4e2a\u66f4\u7b80\u5355\u7684\u5e76\u884c\u4efb\u52a1\uff0c\u5206\u522b\u662f\u4f7f\u7528FCN\u751f\u6210\u4e00\u7ec4\u5bf9\u8c61\u65e0\u5173\u7684\u5206\u5272\u63a9\u7801\uff08\u79f0\u4e3aprototype masks\uff0c\u201c\u539f\u578b\u63a9\u7801\u201d\uff09\u4ee5\u53ca\u5728\u76ee\u6807\u68c0\u6d4b\u5206\u652f\u6dfb\u52a0\u989d\u5916\u7684head\u751f\u6210\u67d0\u79cd\u76f8\u5173\u7cfb\u6570\uff08\u79f0\u4e3amask coefficients\uff0c\u201c\u63a9\u6a21\u7cfb\u6570\u201d\uff09\u3002\\n\\n\u53ef\u4ee5\u770b\u51fa\uff0c\u6574\u4e2a\u7f51\u7edc\u5171\u4eab\u4e86\u4e00\u4e2abackbone\uff0c\u4f7f\u7528FPN\u4f5c\u4e3aneck\uff0c\u5728\u540e\u9762\u624d\u5206\u4e3a\u4e86\u4e24\u4e2a\u5206\u652f\u3002\u5176\u4e2d\u4e0a\u65b9\u7684\u5206\u652f\u662f\u52a0\u5165\u4e86\u4e00\u4e2ahead\u7528\u4e8e\u9884\u6d4b\u63a9\u6a21\u7cfb\u6570\u7684\uff0c\u4e0b\u653e\u7684\u5206\u652f\u662f\u4f7f\u7528protonet\u751f\u6210\u539f\u578b\u63a9\u6a21\u7684\u3002\\n\\n## \u8001\u670b\u53cb\uff1abackbone+FPN\\n\\n\u5728YOLACT\u4e2d\uff0c\u8f93\u5165\u7ecf\u8fc7backbone+FPN\u7ed3\u6784\u5904\u7406\u540e\u624d\u8fdb\u5165\u4e24\u4e2a\u5206\u652f\u3002\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e24\u4e2a\u5206\u652f\u5171\u4eab\u8fd9\u4e2abackbone\u3002\\n\\nBackbone+FPN\uff08neck\uff09\u662f\u9700\u8981\u83b7\u5f97\u4e0d\u540clevel\u7279\u5f81\u56fe\u65f6\u5e38\u7528\u7684\u63d0\u53d6\u7ed3\u6784\uff0c\u5728\u5f88\u591a\u5176\u4ed6\u7f51\u7edc\u4e2d\u4e5f\u89c1\u5f97\u7740\u3002\u4f8b\u5982\uff0c\u5728[SOLO: Segmenting Objects by Locations](./[36]SOLO-Segmenting-Objects-by-Locations)\u4e2d\uff0c\u524d\u5e8f\u7f51\u7edc\u4e5f\u662f\u7c7b\u4f3c\u7684\u7ed3\u6784\u3002\u4ee5resnet101\u4e3a\u4f8b\uff1a\\n\\n![image-20210818200548063](./src/YOLACT-Real-time-Instance-Segmentation/image-20210818200548063.png)\\n\\n\u4e0a\u56fe\u4e2d\u5206\u5272\u7ebf\u4e0a\u65b9\u662fResNet\u7684backbone\uff0c\u56fe\u4e2d_make_layer\u662fYOLACT\u4ee3\u7801\u4e2d\u7684helper\u51fd\u6570\u3002\u5728\u540e\u7eed\u7ed3\u6784\u4e2d\u4f1a\u7528\u5230backbone\u5728\u591a\u4e2alevel\u4e0a\u7684\u7279\u5f81\uff0c\u4e5f\u5c31\u662f\u5de6\u4fa7\u6807\u53f70\u30011\u30012\u30013\u7684\u84dd\u8272\u5757\u3002\u8fd9\u4e9b\u4e0d\u540clevel\u7684\u8f93\u51fa\u8fdb\u5165\u4e86FPN\u3002\u5206\u5272\u7ebf\u4e0b\u653e\u662fFPN\u7ed3\u6784\uff0c\u5176\u4f7f\u7528\u4e86\u6765\u81eabackbone\u7684\u591a\u7ea7\u8f93\u51fa\uff0c\u5e76\u4ea7\u751f\u65b0\u7684\u591a\u7ea7\u8f93\u51fa\uff0c\u5373\u56fe\u4e2d\u53f3\u4e0b\u4fa7\u9ec4\u8272\u4e09\u89d20\u30011\u30012\u30013\u30014\u3002\\n\\n\u8fd9\u79cdBackbone+FPN\u7684\u7ed3\u6784\u80fd\u591f\u878d\u5408\u591a\u611f\u53d7\u91ce\uff0c\u6d45\u5c42\u4f4e\u5c42\u7ea7\u7279\u5f81\u5f97\u5230\u4e86\u4fdd\u7559\uff0c\u6df1\u5c42\u7f51\u7edc\u7684\u9ad8\u5c42\u7ea7\u7279\u5f81\u4e5f\u878d\u5165\u4e86\u8fdb\u6765\u3002\u6240\u4ee5\u8fd9\u79cd\u7ed3\u6784\u5728\u5206\u5272\u7f51\u7edc\u4e2d\u7ecf\u5e38\u4f7f\u7528\u3002\\n\\n## prototype mask\u5206\u652f\\n\\n\u7f51\u7edc\u7ed3\u6784\u56fe\u4e2d\u4e0b\u4fa7\u7684\u5206\u652f\u662f\u7528\u4e8e\u751f\u6210\u56fe\u50cf\u5927\u5c0f\u7684\u539f\u578b\u63a9\u7801\uff08prototype masks\uff09\u7684\u7f51\u7edc\u5206\u652f\u3002\\n\\n![image-20210818205234469](./src/YOLACT-Real-time-Instance-Segmentation/image-20210818205234469.png)\\n\\n\u4e0a\u56fe\uff1aYOLACT\u4e2d\u4e24\u4e2a\u5206\u652f\u7684\u7ed3\u6784\u3002\u5176\u4e2d\u9ec4\u8272\u4e09\u89d20\u30011\u30012\u30013\u30014\u5206\u522b\u8868\u793a\u524d\u5e8f\u7684backbone+FPN\u8f93\u51fa\u7684\u4e0d\u540clevel\u7684\u7279\u5f81\u56fe\u3002\u4e0a\u56fe\u4e2d\u7070\u8272\u5206\u5272\u7ebf\u5de6\u4fa7\u662fprototype mask\u5206\u652f\u7684\u7ed3\u6784\u3002\u53ef\u4ee5\u770b\u51fa\u7528\u4e8e\u9884\u6d4b\u539f\u578bmask\u5206\u652f\u7684\u5206\u652f\u4f7f\u7528\u4e86\u4e86\u4e0a\u91c7\u6837\u5230\u6700\u5927\u5206\u8fa8\u7387\u5e76\u518d\u878d\u5408\u7684\u6700\u5927\u7279\u5f81\u56fe\uff08\u6807\u53f70\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u83b7\u5f97\u7cbe\u7ec6\u7684\u5206\u5272mask\u3002\\n\\n\u6700\u7ec8\u8fd9\u4e2a\u5206\u652f\u7684\u8f93\u51fa\u6709\u4e24\u4e2a\uff1a\\n\\n- `proto`\uff1a\u4e0emask\u7cfb\u6570\u914d\u5408\u4f7f\u7528\u7684\u5206\u5272\u7279\u5f81\u56fe\uff0c\u5f62\u72b6\u4e3a\uff081\uff0c138\uff0c138\uff0c32\uff09\\n- `segm`\uff1a\u5f97\u5230\u4e00\u4e2a\u7c7b\u4f3c\u5206\u5272\u7684\u70ed\u5ea6\u56fe\uff0c\u8fd9\u91cc\u7684\u5f62\u72b6\u4e3a\uff081\uff0cnum_class-1\uff0c69\uff0c69\uff09\uff0c\u4f30\u8ba1segm\u662f\u4e3a\u4e86\u4f7f\u5f97\u7f51\u7edc\u5feb\u901f\u6536\u655b\u7528\u7684\u3002\\n\\n\u5728\u539f\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u7528\u8d85\u53c2\u6570$k$\u63cf\u8ff0protonet\u90e8\u5206\u8f93\u51fa\u7684\u901a\u9053\u6570\uff1a\\n\\n![image-20210819165708915](./src/YOLACT-Real-time-Instance-Segmentation/image-20210819165708915.png)\\n\\n\u4e0a\u56fe\uff1aprotonet\u7684\u7ed3\u6784\u3002\u4e0a\u9762\u7684\u8bdd\u6362\u4e2a\u7406\u89e3\uff0c\u5c31\u662f\u5bf9\u4e00\u7ec4\u8f93\u51fa\uff0cprototype mask\u5206\u652f\u4f1a\u751f\u6210\u4e00\u7ec4\u5171$k$\u200b\u4e2amask\u3002\u8fd9\u4e9bmask\u548c\u540e\u9762\u7684\u63a9\u6a21\u7cfb\u6570\u7ebf\u6027\u7ec4\u5408\u4f1a\u4ea7\u751f\u5b9e\u4f8b\u7ea7\u7684\u5206\u5272\u7ed3\u679c\u3002\\n\\n## mask coefficients\u5206\u652f\\n\\n\u8fd9\u4e2a\u5206\u652f\u7528\u4e8e\u83b7\u5f97\u68c0\u6d4b\u6846\u548c\u63a9\u6a21\u76f8\u5173\u7cfb\u6570\uff0c\u5bf9\u4e00\u7ec4\u8f93\u51fa\u8fdb\u884c\u5904\u7406\u7684\u662f\u4e00\u4e2ahead\u3002\u4e0a\u65b9\u7684\u673a\u6784\u56fe\u4e2d\u7070\u8272\u5206\u5272\u7ebf\u53f3\u4fa7\u662f\u8be5\u5206\u652f\u7ed3\u6784\u56fe\u3002\\n\\n![image-20210818205345171](./src/YOLACT-Real-time-Instance-Segmentation/image-20210818205345171.png)\\n\\n\u4e0a\u56fe\uff1a\u5bf9\u4e8e\u4e0d\u540clevel\u7684\u7279\u5f81\u56fe\u8f93\u5165\uff0c\u5206\u522b\u5bf9\u5e94\u591a\u4e2ahead\uff0c\u5373\u5bf9\u9ec4\u8272\u4e09\u89d2\u4ee3\u8868\u76840\u30011\u30012\u30013\u30014\u8f93\u5165\uff0c\u5206\u522b\u5bf9\u5e94\u4e00\u4e2a\u8fd9\u6837\u7684\u7ed3\u6784\u3002\u591a\u4e2alevel\u4e0a\u7684head\u5904\u7406\u5b8c\u540e\u4f1aconcat\u5728\u4e00\u8d77\uff0c\u6700\u7ec8\u5728\u8be5\u5206\u652f\u4e0a\u4ea7\u751f\u4e94\u79cd\u8f93\u51fa\uff1a\\n\\n- `loc`\uff1a\u6bcf\u4e2aanchorbox\u7684\u9884\u6d4b\u504f\u79fb\u91cf\uff0c\u5f62\u72b6\u4e3a\uff081\uff0c19248\uff0c4\uff09\\n- `conf`\uff1a\u6bcf\u4e2aanchorbox\u7684\u7c7b\u522b\u9884\u6d4b\uff0c\u5f62\u72b6\u4e3a\uff081\uff0c19248\uff0cnum_class\uff09\\n- `mask`\uff1a\u5c31\u662f\u8bba\u6587\u4e2d\u6307\u51fa\u7684mask\u7cfb\u6570\uff0c\u5f62\u72b6\u4e3a\uff081\uff0c19248\uff0c32\uff09\\n- `priors`\uff1a\u9884\u8bbe\u7684anchorbox\u7684\u5750\u6807\uff0c\u5f62\u72b6\u4e3a\uff0819248\uff0c4\uff09\\n\\n## YOLACT\u5982\u4f55\u5b66\u4e60\\n\\n### \u5b9e\u4f8b\u7ea7\u63a9\u6a21\u5408\u6210\uff08Mask Assembly\uff09\\n\\n\u524d\u9762\u6211\u4eec\u804a\u4e86\u4e24\u4e2a\u5206\u652f\u3002\u5c06\u6574\u4e2a\u7f51\u7edc\u7ed3\u6784\u62fc\u5728\u4e00\u8d77\u5c31\u662f\uff1a\\n\\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](./src/YOLACT-Real-time-Instance-Segmentation/flkjdsfhdsjfkdshgkfjdsglkfdgfdgdfgfd.png)\\n\\n\u4e0a\u56fe\uff1a\u6574\u4e2a\u7f51\u7edc\u524d\u5411\u4f20\u64ad\u6d41\u7a0b\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u6709\u4e00\u79cd\u7b80\u5355\u7684\u7406\u89e3\uff1aYOLACT\u662f\u8fdb\u884c\u4e86\u4e00\u6b21\u8bed\u4e49\u7279\u5f81\u56fe\u7684\u751f\u6210\uff0c\u7136\u540e\u7528\u76f8\u5173\u7cfb\u6570\u548c\u8bed\u4e49\u7279\u5f81\u56fe\u4ea7\u751f\u6700\u7ec8\u7684\u5b9e\u4f8b\u5206\u5272\u7ed3\u679c\u3002\\n\\n\u5728\u539f\u8bba\u6587\u7684\u4ee3\u7801\u4e2d\uff0c\u4e3a\u4e86\u751f\u6210\u5b9e\u4f8b\u63a9\u6a21\uff0c\u901a\u8fc7\u57fa\u672c\u7684\u77e9\u9635\u4e58\u6cd5\u914d\u5408sigmoid\u51fd\u6570\u6765\u5904\u7406\u4e24\u5206\u652f\u7684\u8f93\u51fa\uff0c\u4ece\u800c\u5408\u6210mask\uff1a\\n$$\\nMask = \\\\sigma(PC^T)\\n$$\\n\u5176\u4e2d$P\\\\in h\\\\times w\\\\times k$\u662f\u539f\u578bmask\u96c6\u5408\uff08\u4e5f\u5c31\u662fProtonet\u751f\u6210\u7684\u4e00\u7ec4\u7279\u5f81\u56fe\uff09\uff0c$C\\\\in n\\\\times k$\u200b\u662f\u63a9\u6a21\u7cfb\u6570\uff08Coefficient\uff09\u96c6\u5408\uff0c\u4ee3\u8868\u6709n\u4e2a\u901a\u8fc7NMS\u548c\u9608\u503c\u8fc7\u6ee4\u7684\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u5bf9\u5e94\u6709k\u4e2amask\u7cfb\u6570\u3002\\n\\n### Loss\u8bbe\u8ba1\\n\\nYOLACT\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c\u91c7\u7528\u4e09\u4e2aLoss\u5bf9\u6a21\u578b\u8fdb\u884c\u4f18\u5316\uff1a\\n\\n1. \u5206\u7c7bLoss\uff0c\u5373$L_{cls}$\u200b\u3002\u53ef\u80fd\u7684\u9009\u62e9\u662f\u7c7b\u522b\u4e0a\u505a\u4ea4\u53c9\u71b5\u3002\\n2. \u8fb9\u754c\u6846\u56de\u5f52Loss\uff0c\u5373$L_{box}$\u3002\u53ef\u80fd\u7684\u9009\u62e9\u662fIOU\u7cfb\u5217Loss\u3002\\n3. \u8bed\u4e49\u5206\u5272\u7684\u63a9\u6a21loss\uff0c\u5373$L_{maxk}$\u200b\u3002\u8ba1\u7b97\u65b9\u5f0f\u662f\u4e8c\u503c\u4ea4\u53c9\u71b5$L_{mask} = BCE(M,M_{gt})$\u3002\\n\\n\u4e0a\u8ff0loss\u4e2d\u524d\u4e24\u4e2a\u4f5c\u7528\u4e8e\u63a9\u6a21\u76f8\u5173\u7cfb\u6570\u5206\u652f\uff0c\u7b2c\u4e09\u4e2a\u4f5c\u7528\u4e8e\u539f\u578b\u63a9\u6a21\u4ea7\u751f\u7684\u5206\u652f\u3002\\n\\n### Mask\u526a\u88c1\u7684\u7ec6\u8282\\n\\n\u5728\u524d\u5411\u4f20\u64ad\u65f6\uff0cYOLACT\u4f1a\u4f7f\u7528bounding box\u88c1\u526a\u63a9\u6a21\u5f62\u6210\u5b9e\u4f8b\u5206\u5272\u7ed3\u679c\u3002\u503c\u5f97\u6ce8\u610f\u7684\u7ec6\u8282\u662f\uff0c\u88c1\u526a\u4f7f\u7528\u7684bounding box\u5728\u9884\u6d4b\u548c\u8bad\u7ec3\u65f6\u662f\u4e0d\u540c\u7684\u3002\u4e3a\u4e86\u4f7f\u4e24\u4e2a\u5206\u652f\u7684\u8bad\u7ec3\u4e0d\u8fc7\u591a\u5730\u76f8\u4e92\u5e72\u6d89\uff0c\u5728\u8bad\u7ec3\u65f6\uff0c\u88c1\u526amask\u4f7f\u7528\u7684\u662f\u6765\u81eaground truth\u7684bounding box\uff0c\u800c\u5728\u9884\u6d4b\u65f6\u624d\u4f1a\u4f7f\u7528\u53e6\u4e00\u4e2a\u5206\u652f\u4ea7\u751f\u7684bounding box\u3002\u8fd9\u6837\uff0c\u8bad\u7ec3\u65f6\u4e24\u4e2a\u5206\u652f\u7684Loss\u5c31\u4e0d\u4f1a\u76f8\u5173\u3002\\n\\n## Emergent Behavior\\n\\n\u9605\u8bfb\u8fc7Fully Convolutional Instance-aware Semantic Segmentation\u7684\u670b\u53cb\u90fd\u77e5\u9053\uff0c\u5b9e\u4f8b\u5206\u5272\u4efb\u52a1\u6709\u4e00\u4e2a\u5171\u8bc6\uff0cFCN\u662f\u5e73\u79fb\u7b49\u53d8\u7684\u3002\u8fd9\u5bfc\u81f4\u5728feature localizing\u80fd\u529b\u7684\u7f3a\u5931\u3002\u56e0\u6b64\uff0c\u5728Mask R-CNN\u548cFCIS\u7b49\u4e8c\u9636\u6bb5\u5b9e\u4f8b\u5206\u5272\u65b9\u6cd5\u4e2d\uff0c\u901a\u8fc7\u5c06mask\u9884\u6d4b\u5206\u652f\u653e\u5728\u7b2c\u4e8c\u4e2astage\u6765\u89e3\u51b3\u5e73\u79fb\u7b49\u53d8\u5e26\u6765\u7684\u95ee\u9898\uff1a\u90fd\u4f7f\u5f97\u5b83\u4eec\u4e0d\u9700\u8981\u518d\u5904\u7406localize\u7684\u95ee\u9898\u3002\\n\\n\u548c\u4e0a\u8ff0\u65b9\u6cd5\u4e0d\u540c\uff0cYOLACT\u901a\u8fc7\u5b66\u4e60\u5728\u539f\u578b\u63a9\u6a21\u751f\u6210\u65f6\u4f1a\u751f\u6210\u4e00\u7ec4\u4e0d\u540c\u7684\u6fc0\u6d3b\uff1a\\n\\n![image-20210818224206183](./src/YOLACT-Real-time-Instance-Segmentation/image-20210818224206183.png)\\n\\n\u4f8b\u5982\u4e0a\u56fe(a)\u4e2d\u7684\u7eaf\u8272\u7ea2\u8272\u65b9\u5757\uff0c\u5982\u679c\u60f3\u5728FCN\u4e2d\u4ea7\u751f(a)\u4e0b\u65b9\u7684\u6fc0\u6d3b\u56fe\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u539f\u56e0\u975e\u5e38\u7b80\u5355\uff1a\\n\\n> if its input everywhere in the image is the same, the result everywhere in the conv output will be the same.\\n\\n\u7531\u4e8e\u5377\u79ef\u5728\u6574\u4e2a\u8f93\u5165\u4e0a\u90fd\u662f\u6743\u503c\u5171\u4eab\u7684\uff0c\u5377\u79ef\u6838\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8f93\u51fa\u4e3a\u5355\u4e2a\u503c\uff0c\u5982\u679c\u8f93\u5165\u4e00\u6837\uff0c\u8f93\u51fa\u4e5f\u4f1a\u4e00\u6837\u3002\u6240\u4ee5\u5bf9(a)\u4e2d\u7684\u7eaf\u7ea2\u8272\u65b9\u5757\uff0c\u5168\u5377\u79ef\u5e94\u8be5\u4e0d\u80fd\u4ea7\u751f\u5176\u4e0b\u65b9\u7684\u8fd9\u79cd\u6709\u53d8\u5316\u7684\u6fc0\u6d3b\u56fe\u3002\\n\\n\u5728\u539f\u8bba\u6587\u4ee3\u7801\u4e2d\uff0cFCN\u4f7f\u7528\u7684\u662fResNet\u4f5c\u4e3aBackbone\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\u3002\u5982\u679c\u6709\u591a\u4e2aLayer\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u5b83\u4eec\u90fd\u4f7f\u7528\u4e86padding\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6709\u8da3\u7684\u73b0\u8c61\uff1a\\n\\n![image-20210818231430047](./src/YOLACT-Real-time-Instance-Segmentation/image-20210818231430047.png)\\n\\n\u4e0a\u56fe\uff1apadding\u5bf9\u4e0b\u4e00\u5c42\u7684\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53d6\u5377\u79ef\u6838\u5927\u5c0f\u4e3a$3\\\\times 3$\u200b\uff0c$padding = 1$\u200b\u200b\uff0c\u56fe\u4e2d\u84dd\u8272\u8868\u793a\u4f9d\u7136\u5e73\u79fb\u4e0d\u53d8\u7684\u8f93\u5165\uff0c\u6a58\u9ec4\u8272\u8868\u793a\u5f53\u524d\u5c42\u7684padding\u50cf\u7d20\uff0c\u9ec4\u8272\u8868\u793a\u53d7\u4e4b\u524d\u5c42\u4e2dpadding\u50cf\u7d20\u5f71\u54cd\u7684\u50cf\u7d20\u3002\u4e0d\u96be\u60f3\u8c61\uff0c\u968f\u7740\u5c42\u6570\u7684\u52a0\u6df1\uff0c\u8fd9\u79cdpadding\u5e26\u6765\u7684\u5f71\u54cd\u53ef\u4ee5\u63cf\u8ff0\u201c\u67d0\u4e2a\u50cf\u7d20\u4e0e\u8fb9\u754c\u7684\u8ddd\u79bb\u201d\u3002\\n\\n![image-20210819000815145](./src/YOLACT-Real-time-Instance-Segmentation/image-20210819000815145.png)\\n\\n\u4e0a\u56fe\uff1a\u81ea\u5df1\u505a\u7684\u4e00\u4e2a\u5b9e\u9a8c\u3002\u5728\u7ecf\u5386\u4e86\u4e94\u5c42\u5377\u79ef\u540e\uff0c\u4e00\u4e2a\u7eaf\u8272\u7684\u65b9\u5757\u8f93\u5165\u5728\u65e0padding\u548c\u4f7f\u75280\u8fdb\u884cpadding\u7684\u60c5\u51b5\u4e0b\u5c55\u73b0\u51fa\u5dee\u5f02\u3002\\n\\n\u5728\u539f\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u63cf\u8ff0\u4e86YOLACT\u4e2d\u539f\u578b\u63a9\u6a21\u7684\u6709\u6548\u6027\uff1a\\n\\n![image-20210819164117962](./src/YOLACT-Real-time-Instance-Segmentation/image-20210819164117962.png)\\n\\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u6bcf\u4e00\u5217mask\u5c31\u662f\u4e00\u7ec4\u539f\u578b\u63a9\u6a21\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u7ecf\u8fc7\u5b66\u4e60\u540e\uff0c\u8be5\u5206\u652f\u7684\u8f93\u51fa\u5bf9\u5b9e\u4f53\u7684\u7c7b\u522b\u548c\u5b9e\u4f53\u672c\u8eab\u90fd\u5c55\u73b0\u51fa\u4e86\u7279\u5f02\u6027\u3002\u4f8b\u5982\uff0c\u5728mask\u7f16\u53f71-3\u4e2d\uff0c\u63a9\u6a21\u8868\u73b0\u51fa\u65b9\u5411\u76f8\u5173\u6027\uff0c\u5373mask\u53ea\u6709\u6cbf\u4e00\u6761\u66f2\u7ebf\u7684\u4e00\u4fa7\u88ab\u6fc0\u6d3b\uff1b\u800c\u518dmask\u7f16\u53f74-6\u4e2d\uff0c\u63a9\u6a21\u8868\u73b0\u51fa\u7c7b\u522b\u654f\u611f\uff0c\u4f8b\u5982\u5728\u8f93\u5165f\u5bf9\u5e94\u7684\u63a9\u6a21mask\u7f16\u53f75\u548c6\u5206\u522b\u6fc0\u6d3b\u4e86\u975e\u524d\u666f\u7684\u90e8\u5206\u548c\u5730\u9762\u7684\u90e8\u5206\u3002\\n\\n![image-20210819165708915](./src/YOLACT-Real-time-Instance-Segmentation/image-20210819165708915.png)\\n\\n\u4e0a\u56fe\uff1aprotonet\u7684\u7ed3\u6784\u3002\u5728\u4e0a\u9762\u7684\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u7f16\u53f71-6\u7684mask\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728protonet\u4e2d\u5c06$k$\u200b\u8bbe\u7f6e\u4e3a6\uff0c\u4ece\u800c\u4ea7\u751f\u4e86\u4e00\u7ec46\u4e2a\u539f\u578b\u63a9\u6a21\u3002\u4f5c\u8005\u5b9e\u9a8c\u8bf4\u660e\u4e86\u5373\u4f7f\u8bbe\u7f6e$k=32$\u200b\u6a21\u578b\u7684\u6027\u80fd\u4e5f\u4e0d\u4f1a\u964d\u4f4e\u3002\u6216\u8005\u8bf4\uff0c\u589e\u52a0$k$\u5f88\u53ef\u80fd\u662f\u65e0\u6548\u7684\uff0c\u56e0\u4e3a\u9884\u6d4b\u63a9\u6a21\u7cfb\u6570\u5f88\u56f0\u96be\u3002\u5982\u679c\u7f51\u7edc\u5373\u4f7f\u5728\u4e00\u4e2a\u7cfb\u6570\u4e2d\u51fa\u73b0\u5927\u9519\u8bef\uff0c\u7531\u4e8e\u7ebf\u6027\u7ec4\u5408\u7684\u6027\u8d28\uff0c\u751f\u6210\u7684\u63a9\u7801\u53ef\u80fd\u4f1a\u6d88\u5931\u6216\u5305\u62ec\u6765\u81ea\u5176\u4ed6\u5bf9\u8c61\u7684\u6cc4\u6f0f\u3002\u56e0\u6b64\uff0c\u7f51\u7edc\u5fc5\u987b\u53d1\u6325\u5e73\u8861\u4f5c\u7528\u4ee5\u4ea7\u751f\u6b63\u786e\u7684\u7cfb\u6570\uff0c\u800c\u6dfb\u52a0\u66f4\u591a\u539f\u578b\u4f1a\u4f7f\u8fd9\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\\n\\n\u5728\u5b9e\u9a8c\u4e2d\u4f5c\u8005\u53d1\u73b0\u5bf9\u4e8e\u66f4\u9ad8\u7684$k$\u200b\u503c\uff0c\u7f51\u7edc\u53ea\u662f\u7b80\u5355\u4ea7\u751f\u4e86\u8fb9\u7f18\u7ea7\u522b\u53d8\u5316\uff0c\u8fd9\u4f7f\u5f97AP95\u7565\u5fae\u4e0a\u6da8\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\u5e76\u6ca1\u6709\u592a\u591a\u5176\u4ed6\u7528\u9014\u3002"},{"id":"/[38]You-Only-Look-One-level-Feature","metadata":{"permalink":"/blog/[38]You-Only-Look-One-level-Feature","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[38]You-Only-Look-One-level-Feature.md","source":"@site/blog/[38]You-Only-Look-One-level-Feature.md","title":"You Only Look One-level Feature","description":"Qiang Chen, Yingming Wang, Tong Yang, Xiangyu Zhang, Jian Cheng, Jian Sun","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"fpn","permalink":"/blog/tags/fpn"},{"label":"backbone","permalink":"/blog/tags/backbone"},{"label":"light-weight","permalink":"/blog/tags/light-weight"},{"label":"multi-scale-learning","permalink":"/blog/tags/multi-scale-learning"}],"readingTime":16.865,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"You Only Look One-level Feature","authors":["visualdust"],"tags":["fpn","backbone","light-weight","multi-scale-learning"]},"prevItem":{"title":"YOLACT - Real-time Instance Segmentation","permalink":"/blog/[37]YOLACT-Real-time-Instance-Segmentation"},"nextItem":{"title":"Instance-sensitive Fully Convolutional Networks","permalink":"/blog/[39]Instance-sensitive-Fully-Convolutional-Networks"}},"content":"[Qiang Chen](https://arxiv.org/search/cs?searchtype=author&query=Chen%2C+Q), [Yingming Wang](https://arxiv.org/search/cs?searchtype=author&query=Wang%2C+Y), [Tong Yang](https://arxiv.org/search/cs?searchtype=author&query=Yang%2C+T), [Xiangyu Zhang](https://arxiv.org/search/cs?searchtype=author&query=Zhang%2C+X), [Jian Cheng](https://arxiv.org/search/cs?searchtype=author&query=Cheng%2C+J), [Jian Sun](https://arxiv.org/search/cs?searchtype=author&query=Sun%2C+J)\\n\\n> This paper revisits feature pyramids networks (FPN) for one-stage detectors and points out that the success of FPN is due to its divide-and-conquer solution to the optimization problem in object detection rather than multi-scale feature fusion. From the perspective of optimization, we introduce an alternative way to address the problem instead of adopting the complex feature pyramids - {\\\\em utilizing only one-level feature for detection}. Based on the simple and efficient solution, we present You Only Look One-level Feature (YOLOF). In our method, two key components, Dilated Encoder and Uniform Matching, are proposed and bring considerable improvements. Extensive experiments on the COCO benchmark prove the effectiveness of the proposed model. Our YOLOF achieves comparable results with its feature pyramids counterpart RetinaNet while being 2.5\xd7 faster. Without transformer layers, YOLOF can match the performance of DETR in a single-level feature manner with 7\xd7 less training epochs. With an image size of 608\xd7608, YOLOF achieves 44.3 mAP running at 60 fps on 2080Ti, which is 13% faster than YOLOv4. Code is available at [this https URL](https://github.com/megvii-model/YOLOF).\\n\\n\u672c\u6587\u7b80\u79f0YOLOF\u3002\u622a\u81f3\u5230\u672c\u6587\u5199\u4f5c\u65f6\uff0c\u4e8c\u9636\u6bb5\u548c\u5355\u9636\u6bb5\u76ee\u6807\u68c0\u6d4b\u7684SOTA\u65b9\u6cd5\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u4e86\u591a\u5c3a\u5ea6\u7279\u5f81\u878d\u5408\u7684\u65b9\u6cd5\u3002FPN\u65b9\u6cd5\u51e0\u4e4e\u5df2\u7ecf\u79f0\u4e3a\u4e86\u7f51\u7edc\u4e2d\u7406\u6240\u5e94\u5f53\u7684\u4e00\u4e2a\u7ec4\u4ef6\u3002\\n\\n\u672c\u6587\u4e2d\u4f5c\u8005\u91cd\u65b0\u56de\u987e\u4e86FPN\u6a21\u5757\uff0c\u5e76\u6307\u51faFPN\u7684\u4e24\u4e2a\u4f18\u52bf\u5206\u522b\u662f\u5176\u5206\u6cbb\uff08divide-and-conquer\uff09\u7684\u89e3\u51b3\u65b9\u6848\u3001\u4ee5\u53ca\u591a\u5c3a\u5ea6\u7279\u5f81\u878d\u5408\u3002\u672c\u6587\u5728\u5355\u9636\u6bb5\u76ee\u6807\u68c0\u6d4b\u5668\u4e0a\u7814\u7a76\u4e86FPN\u7684\u8fd9\u4e24\u4e2a\u4f18\u52bf\uff0c\u5e76\u5728RetinaNet\u4e0a\u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u5c06\u4e0a\u8ff0\u4e24\u4e2a\u4f18\u52bf\u89e3\u8026\uff0c\u5206\u522b\u7814\u7a76\u5176\u53d1\u6325\u7684\u4f5c\u7528\uff0c\u5e76\u6307\u51fa\uff0cFPN\u5728\u591a\u5c3a\u5ea6\u7279\u5f81\u878d\u5408\u4e0a\u53d1\u6325\u7684\u4f5c\u7528\u53ef\u80fd\u6ca1\u6709\u60f3\u8c61\u4e2d\u90a3\u4e48\u5927\u3002\\n\\n\u6700\u540e\uff0c\u4f5c\u8005\u63d0\u51faYOLOF\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u4f7f\u7528FPN\u7684\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u3002\u5176\u4e3b\u8981\u521b\u65b0\u662f\uff1a\\n\\n1. Dilated Encoder\\n2. Uniform Matching\\n\\n\u8be5\u7f51\u7edc\u5728\u8fbe\u5230RetinaNet\u5bf9\u7b49\u7cbe\u5ea6\u7684\u60c5\u51b5\u4e0b\u901f\u5ea6\u63d0\u5347\u4e862.5\u500d\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## \u8ba8\u8bbaFPN\u7684\u4f5c\u7528\\n\\nFPN\u662f\u591a\u5c3a\u5ea6\u7279\u5f81\u878d\u5408\u7684\u7ecf\u5178\u8bbe\u8ba1\uff0c\u5177\u6709\u91cd\u5927\u7684\u542f\u53d1\u610f\u4e49\u3002\\n\\n![image-20210826204958764](./src/You-Only-Look-One-level-Feature/image-20210826204958764.png)\\n\\n\u4e0a\u56fe\uff1a\u4e00\u4e2a\u5178\u578b\u7684FPN\u7ed3\u6784\u793a\u610f\u56fe\u3002FPN\u7ed3\u6784\u63a5\u53d7\u6765\u81ea\u9aa8\u5e72\u7f51\u7edc\u7684\u591alevel\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\uff0c\u9996\u5148\u7ecf\u8fc7$1\\\\times 1$\u5377\u79ef\u7684\u4fa7\u5411\u8fde\u63a5\u8fdb\u884c\u901a\u9053\u5bf9\u9f50\uff0c\u7136\u540e\u7ecf\u8fc7\u4ece\u9ad8\u7ea7\u7279\u5f81\u5230\u4f4e\u7ea7\u7279\u5f81\u4e0d\u65ad\u5730Upsample\u548c\u6309\u4f4d\u76f8\u52a0\u64cd\u4f5c\u5f97\u5230\u878d\u5408\u7684\u7279\u5f81\u56fe\u3002\u8fd9\u6837\u7684\u8bbe\u8ba1\u5728\u542f\u53d1\u610f\u4e49\u4e0a\u4f7f\u4eba\u8ba4\u4e3aFPN\u662f\u5728\u8fdb\u884c\u591a\u7ea7\u7279\u5f81\u878d\u5408\u5e76\u7531\u6b64\u63d0\u5347\u6027\u80fd\u3002\\n\\n\u540c\u65f6\uff0cFPN\u7684\u53e6\u4e00\u4e2a\u8bbe\u8ba1\u52a8\u673a\u662f\u4e3a\u4e86\u8ba9\u4e0d\u540c\u5c3a\u5ea6\u7684\u76ee\u6807\u7269\u4f53\u5206\u914d\u5230\u4e0d\u540clevel\u7684\u7279\u5f81\u56fe\u8fdb\u884c\u9884\u6d4b\uff0c\u79f0\u4e4b\u4e3a\u201c\u5206\u800c\u6cbb\u4e4b\u201d\u7684\u7b56\u7565\u3002\u8fd9\u6837\u7684\u7b56\u7565\u5728SSD\u3001YOLOv3\u7b49\u76ee\u6807\u68c0\u6d4b\u5668\u4e2d\u88ab\u4f7f\u7528\uff0c\u5373\u4f7f\u7528\u4e0d\u540clevel\u7684\u7279\u5f81\u56fe\u505a\u4e0d\u540c\u5c3a\u5ea6\u7684\u76ee\u6807\u68c0\u6d4b\u3002\\n\\n\u7136\u800c\uff0cFPN\u7684\u4ee3\u4ef7\u662f\u5728\u63a8\u7406\u65f6\u5b58\u5728\u5185\u5b58\u590d\u5236\u3001\u878d\u5408\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4f1a\u5728\u539f\u7f51\u7edc\u8f93\u51fa\u7684\u57fa\u7840\u4e0a\u5360\u7528\u4e24\u500d\u4ee5\u4e0a\u7684\u663e\u5b58\u7a7a\u95f4\uff0c\u540c\u65f6\u4f1a\u5bfc\u81f4\u8fd0\u7b97\u7684\u7f13\u6162\u3002\u8fd9\u5bfc\u81f4\u4e86\u4f7f\u7528FPN\u7684\u7f51\u7edc\u5728\u8d44\u6e90\u9650\u5236\u4e0b\u65e0\u6cd5\u5904\u7406\u8d85\u5927\u5206\u8fa8\u7387\uff08\u4f8b\u5982\uff0c2K\u30014K\u5206\u8fa8\u7387\u6216\u4ee5\u4e0a\uff09\u7684\u56fe\u7247\u3002\\n\\n\u5728\u8fd9\u91cc\uff0c\u4f5c\u8005\u79f0FPN\u662f\u4e00\u4e2a\u591a\u8f93\u5165\u591a\u8f93\u51fa\uff08Multiple-in-Multiple-out\uff0c\u4ee5\u4e0b\u7b80\u79f0MiMo\uff09\u7684\u7f16\u7801\u5668\uff08encoder\uff09\uff0cMiMo\u4f7f\u7528\u6765\u81ea\u9aa8\u5e72\u7f51\u7edc\u7684\u591a\u7ea7\u7279\u5f81\u8fdb\u884c\u878d\u5408\uff0c\u7136\u540e\u7ed9\u540e\u7eed\u7684decoder\uff08\u4f8b\u5982\u5404\u79cddetection head\uff09\u63d0\u4f9b\u591a\u7ea7\u878d\u5408\u7684\u7279\u5f81\u3002\\n\\n## MiMo\u3001SiMo\u3001MiSo\u548cSiSo\\n\\n\u5728\u672c\u6587\u4e2d\uff0c\u4f5c\u8005\u5c06\u76ee\u6807\u68c0\u6d4b\u7f51\u7edc\u5206\u4e3a\u4e09\u4e2a\u7ec4\u6210\u90e8\u5206\uff1a\\n\\n![image-20210826220312496](./src/You-Only-Look-One-level-Feature/image-20210826220312496.png)\\n\\n\u5982\u4e0a\u56fe\uff0c\u8fd9\u4e09\u4e2a\u7ec4\u6210\u90e8\u5206\u5206\u522b\u662f\u9aa8\u5e72\u7f51\u7edc\uff08backbone\uff0c\u4f8b\u5982ResNet50\uff09\uff0c\u7f16\u7801\u5668\uff08encoder\uff0c\u4f8b\u5982FPN\uff09\u4ee5\u53ca\u89e3\u7801\u5668\uff08decoder\uff0c\u4f8b\u5982yolo head\uff09\u3002\\n\\n\u5728\u672c\u6587\u4e2d\uff0c\u4f5c\u8005\u5c06\u591a\u8f93\u5165\u591a\u8f93\u51fa\uff08\u4ee5\u4e0b\u7b80\u79f0MiMo\uff09\u3001\u5355\u8f93\u5165\u591a\u8f93\u51fa\uff08\u4ee5\u4e0b\u7b80\u79f0SiMo\uff09\u3001\u591a\u8f93\u5165\u5355\u8f93\u51fa\uff08\u4ee5\u4e0b\u7b80\u79f0MiSo\uff09\u548c\u5355\u8f93\u5165\u5355\u8f93\u51fa\uff08\u4ee5\u4e0b\u7b80\u79f0SiSo\uff09\u7684encoder\u8fdb\u884c\u4e86\u68c0\u6d4b\u6846AP\u7684\u5bf9\u6bd4\u3002\\n\\n![image-20210826214506814](./src/You-Only-Look-One-level-Feature/image-20210826214506814.png)\\n\\n\u4e0a\u56fe\uff1a\u56db\u79cdencoder\u7684\u8f93\u5165\u8f93\u51fa\u65b9\u5f0f\u793a\u610f\u4ee5\u53ca\u68c0\u6d4b\u6846AP\u3002\u5176\u4e2dC3\u3001C4\u4ee5\u53caC5\u5206\u522b\u8868\u793a\u9aa8\u5e72\u7f51\u7edc\u4e0b\u91c7\u6837\u52308\u300116\u300132\u500d\u7684\u7279\u5f81\u56fe\uff1bP3~P7\u4ee3\u8868\u6700\u7ec8\u7528\u4e8e\u68c0\u6d4b\u7684\u8f93\u51fa\u7279\u5f81\u56fe\u3002\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u8f93\u5165\u5747\u4ea7\u751f\u81eaResNet-50\uff0c\u5e76\u4e14\u4e0a\u56fe\u4e2dMiMo\u7684\u7ed3\u6784\u548cRetinaNet\u4e2d\u4f7f\u7528\u7684FPN\u7ed3\u6784\u76f8\u540c\u3002\\n\\n![image-20210826230926535](./src/You-Only-Look-One-level-Feature/image-20210826230926535.png)\\n\\n\u4e0a\u56fe\uff1aMiMo\u3001SiMo\u3001MiSo\u3001SiSo\u7684\u5177\u4f53\u7ed3\u6784\u3002\\n\\n| \u82f1\u6587\u7f29\u5199 | \u4e2d\u6587\u91ca\u4e49     | \u82f1\u6587\u5168\u62fc                 |\\n| -------- | ------------ | ------------------------ |\\n| MiMo     | \u591a\u8f93\u5165\u591a\u8f93\u51fa | Multiple-in-Multiple-out |\\n| SiMo     | \u5355\u8f93\u5165\u591a\u8f93\u51fa | Single-in-Multiple-out   |\\n| MiSo     | \u591a\u8f93\u5165\u5355\u8f93\u51fa | Multiple-in-Single-out   |\\n| SiSo     | \u5355\u8f93\u5165\u5355\u8f93\u51fa | Single-in-Single-out     |\\n\\n\u4e0a\u8868\uff1a\u56db\u4e2a\u7f29\u5199\u5bf9\u7167\u8868\u3002\\n\\n![image-20210826220913659](./src/You-Only-Look-One-level-Feature/image-20210826220913659.png)\\n\\n\u4e0a\u56fe\uff1aMiMo\u548cSiSo\u5728\u4e0d\u540c\u8d85\u53c2\uff08channel\u6570\u91cf\u7b49\uff09\u4e0b\u7684\u6027\u80fd\u5bf9\u6bd4\u3002\u56fe\u4e2d\u4f7f\u7528\u4e0d\u540c\u989c\u8272\u7684\u67f1\u72b6\u56fe\u6807\u8bb0\u4e86\u7f51\u7edc\u7684\u4e09\u4e2a\u7ec4\u6210\u90e8\u5206\u5bf9\u6027\u80fd\u7684\u6d88\u8017\u60c5\u51b5\uff0c\u53ef\u4ee5\u770b\u51fa\uff0cencoder\u5bf9\u7f51\u7edc\u7684\u8ba1\u7b97\u901f\u5ea6\u5177\u6709\u91cd\u5927\u5f71\u54cd\u3002`\u6ce8\uff1a\u4e0a\u56fe\u4e2d\u6700\u540e\u7684YOLOF\u548c\u5bfc\u6570\u7b2c\u4e8c\u4e2aRetinaNet\u662f\u4e0d\u540c\u7ed3\u6784\u7684\uff0c\u56e0\u6b64AP\u5dee\u5f02\u8f83\u5927\u3002`\\n\\n\u5728\u672c\u6587\u7684\u5b9e\u9a8c\u4e2d\uff0c\u4f5c\u8005\u53d1\u73b0SiSo\u548cMiSo\u7684\u8868\u73b0\u7ed3\u679c\u5e76\u4e0d\u597d\uff0c\u4f46\u4ee4\u4eba\u60ca\u5947\u7684\u662fSiMo\u8fd9\u79cd\u5e76\u4e0d\u4f1a\u8fdb\u884c\u4efb\u4f55\u7279\u5f81\u878d\u5408\u7684\u7ed3\u6784\u5374\u5728AP\u4e0a\u5177\u6709\u548cMiMo\u5bf9\u7b49\u7684\u7cbe\u5ea6\uff08\u76f8\u5dee\u4e0d\u52301\uff09\u56e0\u6b64\u4f5c\u8005\u624d\u4f1a\u63d0\u51fa\u8981\u53ea\u4f7f\u7528\u4e00\u5c42\u7279\u5f81\u56fe\u8fdb\u884c\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1\uff0c\u5373\u820d\u5f03\u5360\u7528\u5927\u91cf\u663e\u5b58\u7684FPN\u3002\\n\\n![image-20210826221541252](./src/You-Only-Look-One-level-Feature/image-20210826221541252.png)\\n\\n\u4e0a\u56fe\uff1aSiMo\u4f7f\u7528\u7684\u8f93\u5165\u8f93\u51fa\u793a\u610f\u3002\u6839\u636e\u4e0a\u8ff0\u5b9e\u9a8c\uff0c\u4ec5\u4f7f\u7528C5\u4f5c\u4e3a\u8f93\u51fa\u5e76\u4e14\u4e0d\u8fdb\u884c\u4efb\u4f55\u7279\u5f81\u878d\u5408\u7684encoder\u5177\u6709\u548cMiMo\u5bf9\u7b49\u7684\u7cbe\u5ea6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ecebackbone\u90a3\u91cc\u5f97\u5230\u7684C5\u7279\u5f81\u56fe\u5df2\u7ecf\u5305\u542b\u4e86\u8db3\u591f\u5b8c\u6210\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\\n\\n## YOLOF\u7684\u8bbe\u8ba1\\n\\n\u6839\u636e\u4e0a\u8ff0\u5b9e\u9a8c\uff0c\u4f5c\u8005\u63d0\u51fa\u7279\u5f81\u56feC5\u6709\u80fd\u529b\u72ec\u81ea\u627f\u62c5\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1\u3002\u4e8e\u662f\u4f5c\u8005\u5e0c\u671b\u4ec5\u4f7f\u7528\u6765\u81eabackbone\u7684\u5355\u4e2a\u7279\u5f81\u56feC5+SiSo\u7684encoder\u5b8c\u6210\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1\u3002\u4f46\u662f\uff0c\u4ec5\u4f7f\u7528C5\u4e5f\u5bfc\u81f4\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a\\n\\n1. \u88ab\u9650\u5236\u4e86\u7684\u611f\u53d7\u91ce\uff08receptive field is limited\uff09\\n\\n   \u4e0e C5 \u7279\u5f81\u7684\u611f\u53d7\u91ce\u5339\u914d\u7684\u5c3a\u5ea6\u8303\u56f4\u662f\u6709\u9650\u7684\uff0c\u8fd9\u963b\u788d\u4e86\u5bf9\u4e0d\u540c\u5c3a\u5ea6\u7684\u7269\u4f53\u7684\u68c0\u6d4b\u6027\u80fd\u3002\\n\\n2.  \u6b63\u6837\u672c\u4e0d\u5747\u8861\uff08imbalance problem on positive anchors\uff09\\n\\n   \u5355\u5c42\u7279\u5f81\u4e2d\u7a00\u758fanchor\u5bfc\u81f4\u7684\u6b63\u8d1f\u6837\u672c\u7684\u4e0d\u5e73\u8861\u95ee\u9898\uff0c\u8001\u8bdd\u9898\u4e86\u3002\\n\\n\u56e0\u6b64\uff0c\u4f5c\u8005\u4f7f\u7528\u4e24\u79cd\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5b83\u4eec\u662f\u4f7f\u7528\u7a7a\u6d1e\u5377\u79ef\u7684encoder\uff08Dilated Encoder\uff09\u548c\u7edf\u4e00\u5339\u914d\u89e3\u7801\u5668\uff08Uniform Matching\uff09\u3002\\n\\n![image-20210826230512567](./src/You-Only-Look-One-level-Feature/image-20210826230512567.png)\\n\\n\u4e0a\u56fe\uff1aYOLOF\u7684\u5927\u81f4\u7ed3\u6784\u3002\u53ef\u4ee5\u770b\u51fa\uff0cYOLOF\u4ec5\u4f7f\u7528C5\u8fdb\u884c\u76ee\u6807\u68c0\u6d4b\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u804a\u4e00\u4e0b\u4f7f\u7528\u7a7a\u6d1e\u5377\u79ef\u7684encoder\uff08Dilated Encoder\uff09\u548c\u7edf\u4e00\u5339\u914d\u89e3\u7801\u5668\uff08Uniform Matching\uff09\u7684\u8bbe\u8ba1\u3002\\n\\n### Dilated Encoder \u89e3\u51b3 Limited receptive field\\n\\n\u4f5c\u8005\u60f3\u8981\u901a\u8fc7\u6807\u51c6\u7684\u7a7a\u6d1e\u5377\u79ef**\uff08dilated convolution\uff09**\u63d0\u5347\u7279\u5f81\u56feC5\u7684\u611f\u53d7\u91ce\uff0c\u4f46\u4e00\u76f4\u4e0b\u91c7\u6837\u867d\u7136\u53ef\u4ee5\u8ba9 feature \u8986\u76d6\u5927\u7684\u7269\u4f53\uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u6355\u83b7\u5c0f\u5c3a\u5bf8\u7269\u4f53\u3002\u56e0\u6b64\uff0c\u672c\u6587\u52a0\u5165\u6b8b\u5dee\uff0c\u5c06\u539f\u59cb\u7684 scale \u8303\u56f4\u548c\u6269\u5927\u540e\u7684 scale \u8303\u56f4\u7ed3\u5408\u8d77\u6765\uff0c\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u8986\u76d6\u6240\u6709\u7269\u4f53\u7684 scale \u7684\u5177\u6709\u591a\u4e2a\u611f\u53d7\u91ce**\uff08multiple receptive field\uff09**\u7684\u8f93\u51fa\u7279\u5f81\uff0c\u6784\u5efa\u7684Dilated Encoder\u7ed3\u6784\u5982\u4e0b\uff1a\\n\\n![image-20210826231550035](./src/You-Only-Look-One-level-Feature/image-20210826231550035.png)\\n\\n\u4e0a\u56fe\uff1a\u672c\u6587\u6784\u9020\u7684Dilated Encoder\u7ed3\u6784\u3002\u5176\u5305\u62ec\u4e00\u4e2a$1\\\\times 1$\u5377\u79ef+$3\\\\times 3$\u5377\u79ef\u7684projector\u4ee5\u53ca\u56db\u4e2a\u4e32\u8054\u7684\u6b8b\u5dee\u5757\u3002\u5176\u4e2d\uff0c\u56db\u4e2a\u8fde\u7eed\u7684 Residual \u6a21\u5757\u4e2d\u5bf9\u4e8e3x3\u5377\u79ef\u91c7\u7528\u7a7a\u6d1e\u5377\u79ef\uff08dilated convolution\uff09\u4e14\u6709\u7740\u4e0d\u540c\u7684 dilate rate\u3002\u8fd9\u6837\u4ee5\u6765\uff0cencoder\u5c31\u4eceC5\u4e2d\u83b7\u5f97\u4e86\u4e00\u4e2a\u5177\u6709\u66f4\u5927\u611f\u53d7\u91ce\u4e14\u4e0d\u4e22\u5931\u5c0f\u7269\u4f53\u7684\u7279\u5f81\u56fe\u3002`\u4e2a\u4eba\u7591\u60d1\uff1a\u8fd9\u6837\u505a\u548c\u76f4\u63a5\u4ecebackbone\u53d6\u51fa\u66f4\u6df1\u7684\u7279\u5f81\u56fe\u7684\u533a\u522b\u4ec5\u4ec5\u662f\u7a7a\u6d1e\u5377\u79ef\u7684\u52a0\u5165\u5417\uff1f`\\n\\n### Uniform Matching \u89e3\u51b3 positive anchors\' Imbalance problem\\n\\n\u76ee\u6807\u68c0\u6d4b\u4e2d\u7684\u6837\u672c\u4e0d\u5e73\u8861\u95ee\u9898\uff0c\u662f\u6307\u5bf9\u4e8e\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\uff0c\u8d1f\u6837\u672c\u7684\u4e2a\u6570\u8fdc\u591a\u4e8e\u6b63\u6837\u672c(\u6807\u7b7e\u4e3a\u80cc\u666f\u7684\u68c0\u6d4b\u6846\u6bd4\u6807\u7b7e\u4e3a\u76ee\u6807\u7684\u68c0\u6d4b\u6846\u591a\u5f97\u591a)\uff0c\u540c\u65f6\uff0c\u8d1f\u6837\u672c\u4e2d\u7b80\u5355\u8d1f\u6837\u672c\u7684\u4e2a\u6570\u4e5f\u8fdc\u591a\u4e8e\u56f0\u96be\u8d1f\u6837\u672c\u3002\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u907f\u514d\u8fd9\u79cd\u4e0d\u5e73\u8861\u5bf9\u6a21\u578b\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u4ee5\u514d\u6a21\u578b\u5c06\u6240\u6709\u6837\u672c\u90fd\u5224\u65ad\u4e3a\u8d1f\u6837\u672c\u3002\\n\\n- \u4e24\u9636\u6bb5\u7f51\u7edc\uff1a\u4e24\u9636\u6bb5\u7f51\u7edc\u4e2d\u7b2c\u4e00\u9636\u6bb5\u7684 RPN \u4e0e\u5355\u9636\u6bb5\u7f51\u7edc\u7c7b\u4f3c\uff0c\u4f46\u7b2c\u4e8c\u9636\u6bb5 proposal \u7684\u4e0d\u5e73\u8861\u95ee\u9898\u5f97\u5230\u4e86\u5f88\u5927\u7f13\u89e3\uff0c\u8fd9\u4e3b\u8981\u662f\u7531\u4e8e RPN \u5904\u7406\u540e\uff0cproposal \u4e2d\u7684\u7b80\u5355\u8d1f\u6837\u672c\u5927\u5927\u51cf\u5c11\uff0c\u4ece\u800c\u540c\u65f6\u51cf\u8f7b\u4e86\u6b63\u8d1f\u6837\u672c\u548c\u56f0\u96be/\u7b80\u5355\u8d1f\u6837\u672c\u7684\u4e0d\u5e73\u8861\u95ee\u9898\u3002\\n- \u5355\u9636\u6bb5\u7f51\u7edc\uff1a\u76ee\u524d\u7edd\u5927\u591a\u6570\u5355\u9636\u6bb5\u7f51\u7edc\u4ecd\u7136\u57fa\u4e8e anchor \u3002\u7f51\u7edc anchor \u7684\u6b63\u8d1f\u6837\u672c\u548c\u56f0\u96be/\u7b80\u5355\u8d1f\u6837\u672c\u4e0d\u5e73\u8861\u95ee\u9898\u5341\u5206\u7a81\u51fa\u3002\\n\\n\u76ee\u524d\u5927\u5bb6\u719f\u77e5\u7684\u89e3\u51b3\u6837\u672c\u4e0d\u5747\u8861\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u6709\u6309\u6bd4\u4f8b\u968f\u673a\u91c7\u6837\uff08\u4f8b\u5982Faster R-CNN \u4e2d\u7b2c\u4e00\u9636\u6bb5 RPN \u91c7\u7528\u6309\u6bd4\u4f8b\u968f\u673a\u91c7\u6837\uff09\u3001\u5728\u7ebf\u96be\u6837\u672c\u6316\u6398(OHEM, Online Hard Example Mining)\u3001Focal Loss\uff08\u8fd9\u5927\u6982\u662f\u6700\u51fa\u540d\u7684\u4e13\u95e8\u5904\u7406\u4e0d\u5747\u8861\u7684Loss\u8bbe\u8ba1\u7684paper\u4e86\uff09\u3001IoU \u5e73\u8861\u91c7\u6837\u3002\\n\\n\u5728anchor-based\u68c0\u6d4b\u6a21\u578b\u4e2d\uff0c\u5b9a\u4e49 positive anchor \u7684\u6807\u51c6\u901a\u5e38\u4e0e anchor \u548c ground truth \u7684 IoU \u6709\u5173\uff0c\u5728 RetinaNet\u4e2d\uff0c\u5982\u679c anchor \u4e0e\u6240\u6709 ground truth \u7684\u6700\u5927 IoU \u503c\u5927\u4e8e 0.5\uff0c\u5219\u8be5 anchor \u662f positive anchor\uff0c\u6b64\u65b9\u6cd5\u4f5c\u8005\u79f0\u4e4b\u4e3a Max-IoU matching\u3002\\n\\n\u5728 MiMo Encoder \u4e2d\uff0canchor\u5728 multi-level \u7279\u5f81\u56fe\u4e0a\u5bc6\u96c6\u7684\u5206\u5e03\u5728\u6574\u4e2a\u56fe\u50cf\u4e0a\uff0c\u5e76\u4e14ground truth\u4f1a\u5728\u5176\u5c3a\u5bf8\u5bf9\u5e94\u7684 level \u7684\u7279\u5f81\u56fe\u4e0a\u4ea7\u751f positive anchors\uff0c\u56e0\u6b64\u8fd9\u79cd\u5206\u6cbb\u673a\u5236\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u5c3a\u5bf8\u7684 ground truth \u90fd\u80fd\u4ea7\u751f\u8db3\u591f\u591a\u7684 positive anchors\uff0c\u4f46\u5728 SiSo Encoder\u4e2d\uff0c\u7531\u4e8e\u53ea\u6709\u4e00\u4e2a level \u7279\u5f81\u56fe\uff0c\u4e14\u4e0d\u91c7\u7528\u5206\u6cbb\u673a\u5236\uff08\u5373 single out\uff09\uff0c\u4f1a\u8ba9 positive anchor \u6570\u91cf\u9aa4\u51cf\u3002\\n\\n\u56e0\u6b64\uff0c\u4f5c\u8005\u63d0\u51fa Uniform Matching Strategy\uff1a\u5bf9\u4e8e\u6bcf\u4e2a ground truth\uff0c\u91c7\u7528k\u8fd1\u90bb\uff08k nearest\uff09\u7684 anchors \u4f5c\u4e3a positive anchors \uff0c\u8fd9\u4e00\u6b65\u4fdd\u8bc1\u4e86\u6240\u6709\u7684 ground truth \u90fd\u80fd\u5747\u5300\u7684\u5339\u914d\u5230\u76f8\u540c\u6570\u91cf\u7684 positive anchors \u800c\u4e0d\u53d7 ground truth \u81ea\u8eab scale \u7684\u5f71\u54cd\uff08\u6b63\u6837\u672c\u7684\u5e73\u8861\u4e5f\u4f1a\u4f7f\u5f97\u5b83\u4eec\u5bf9\u8bad\u7ec3\u7684\u8d21\u732e\u76f8\u540c\uff09\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u5728 Uniform Matching \u4e2d\u5ffd\u7565 IoU>0.7 \u7684 negative anchors \u548c IoU<0.15 \u7684 positive anchors\u3002\\n\\n## Encoder \u8bbe\u8ba1\\n\\n\u53c2\u8003YOLOF\u7684\u7ed3\u6784\uff1a\\n\\n![image-20210826230512567](./src/You-Only-Look-One-level-Feature/image-20210826230512567.png)\\n\\n\u5728backbone\u4f5c\u8005\u8fd8\u662f\u91c7\u7528\u7ecf\u5178\u7684ResNet\u548cResNeXt\uff0c\u9009\u53d6\u7684\u7279\u5f81\u56fe\u662fC5\uff0c\u901a\u9053\u6570\u4e3a2048\u4e14\u4e0b\u91c7\u6837\u7387\u4e3a32\u3002\\n\\n![image-20210826231550035](./src/You-Only-Look-One-level-Feature/image-20210826231550035.png)\\n\\n\u4e0a\u56fe\uff1a\u672c\u6587\u7684encoder\u7ed3\u6784\u3002encoder\u4e2d\u7b2c\u4e00\u6b65\u548cFPN\u7c7b\u4f3c\uff0c\u5bf9backbone\u7684\u8f93\u51fa\u4f7f\u7528\u6295\u5f71\u5c42\uff08\u75311x1\u5377\u79ef\u548c3x3\u5377\u79ef\u7ec4\u6210\uff09\uff0c\u5f97\u5230\u901a\u9053\u6570\u4e3a512\u7684\u7279\u5f81\u56fe`\u6ce8\uff1aFPN\u4e2d\u4f7f\u75281x1\u5377\u79ef\u6295\u5f71\u7279\u5f81\u56fe\u7528\u4e8e\u5bf9\u9f50\u901a\u9053`\u3002\u63a5\u7740\uff0c\u4e3a\u4e86\u83b7\u5f97\u5168\u5c3a\u5ea6\u611f\u53d7\u91ce\uff0c\u4f5c\u8005\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u79cd\u6b8b\u5dee\u6a21\u5757\uff0c\u5b83\u7531\u4e09\u4e2a\u5377\u79ef\u7ec4\u6210\uff0c\u7b2c\u4e00\u4e2a$1\\\\times 1$\u5377\u79ef\u901a\u9053\u51cf\u5c114\u500d\uff0c\u7136\u540e\u4e00\u4e2a$3\\\\times 3$\u81a8\u80c0\u5377\u79ef\u7528\u4e8e\u589e\u5927\u611f\u53d7\u91ce\uff0c\u6700\u540e\u7684$1\\\\times 1$\u5377\u79ef\u6062\u590d\u901a\u9053\u7ef4\u5ea6\uff0c\u8fd9\u4e2a\u6b8b\u5dee\u5757\u4f1a\u91cd\u590d\u56db\u6b21\u3002\\n\\n## Decoder\u7684\u8bbe\u8ba1\\n\\ndecoder\u548cRetinaNet\u7c7b\u4f3c\uff0c\u5b83\u5305\u542b\u4e24\u4e2a\u5e76\u884c\u7684head\u5206\u652f\uff0c\u7528\u4e8e\u76ee\u6807\u5206\u7c7b\u548c\u8fb9\u6846\u56de\u5f52\u4efb\u52a1\u3002\u4f5c\u8005\u8fd9\u91cc\u4e3b\u8981\u505a\u4e86\u4e24\u4e2a\u6539\u52a8\uff1a\u53c2\u8003DETR\u4e2dFFN\u7684\u8bbe\u8ba1\u4f7f\u7528\u4e24\u4e2a\u9884\u6d4b\u5934\u4ee5\u53ca\u53c2\u8003AutoAssign\u52a8\u6001\u5206\u914d\u6b63\u8d1f\u6837\u672c\u3002\\n\\n### \u4f7f\u7528\u4e24\u4e2a\u9884\u6d4b\u5934\\n\\n\u53c2\u7167DETR\uff08End-to-End Object Detection with Transformers\uff09\u4e2dFFN\u7684\u8bbe\u8ba1\uff0c\u4f7f\u5f97\u4e24\u4e2ahead\u5377\u79ef\u5c42\u6570\u76ee\u4e0d\u540c\u3002\\n\\n![End-to-End Object Detection with Transformers-DETR](./src/You-Only-Look-One-level-Feature/v2-84679d261c01da7a28a67fb9509cc1ec_1440w.jpg)\\n\\n\u4e0a\u56fe\uff1aDETR\u7ed3\u6784\u793a\u610f\u3002\u5176\u4e3b\u8981\u8d21\u732e\u662f\u5c06\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1\u8f6c\u5316\u4e3a\u4e00\u4e2a\u96c6\u5408\u9884\u6d4b\uff08set prediction\uff09\u7684\u4efb\u52a1\uff0c\u4f7f\u7528transformer\u7f16\u7801-\u89e3\u7801\u5668\u7ed3\u6784\u548c\u53cc\u8fb9\u5339\u914d\u7684\u65b9\u6cd5\uff0c\u7531\u8f93\u5165\u56fe\u50cf\u76f4\u63a5\u5f97\u5230\u9884\u6d4b\u7ed3\u679c\u96c6\u5408\u3002\u548cSOTA\u7684\u68c0\u6d4b\u65b9\u6cd5\u4e0d\u540c\uff0c\u6ca1\u6709proposal\uff08Faster R-CNN\uff09\uff0c\u6ca1\u6709anchor\uff08YOLO\uff09\uff0c\u6ca1\u6709center(CenterNet)\uff0c\u4e5f\u6ca1\u6709\u7e41\u7410\u7684NMS\uff0c\u76f4\u63a5\u9884\u6d4b\u68c0\u6d4b\u6846\u548c\u7c7b\u522b\uff0c\u5229\u7528\u4e8c\u5206\u56fe\u5339\u914d\u7684\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u5c06CNN\u548ctransformer\u5de7\u5999\u7684\u7ed3\u5408\uff0c\u5b9e\u73b0\u76ee\u6807\u68c0\u6d4b\u7684\u4efb\u52a1\u3002\\n\\n\u5176\u4e2d\u7684\u9884\u6d4b\u5934\u90e8\uff08Feed-forward network\uff0cFFN\uff09\u662f\u672c\u6587\u53c2\u8003\u7684\u4e00\u4e2a\u8bbe\u8ba1\uff1a\\n\\n![image-20210827093728559](./src/You-Only-Look-One-level-Feature/image-20210827093728559.png)\\n\\n\u4e0a\u56fe\uff1aFFN\u5728DETR\u7ed3\u6784\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5728\u53f3\u4e0a\u89d2\u7684\u4e24\u4e2aFFN\u7ed3\u6784\u4e0d\u662f\u4e00\u6837\u7684\u3002\u8fd9\u4e24\u4e2aFFN\u901a\u8fc7\u4e0d\u540c\u7684Loss\u5206\u522b\u4f18\u5316\uff0c\u7528\u4e8e\u5206\u522b\u751f\u6210\u7c7b\u522b\u548c\u68c0\u6d4b\u6846\u3002\\n\\n\u672c\u6587\u5728decoder\u4e0a\u7684\u4e24\u4e2a\u5206\u652f\u53c2\u8003\u4e86\u8fd9\u79cd\u8bbe\u8ba1\uff0c\u5728\u56de\u5f52\uff08regression\uff09\u5206\u652f\u4e2d\u5305\u542b4\u4e2aConv-BN-ReLU\u64cd\u4f5c\uff0c\u5728\u5206\u7c7b\uff08classification\uff09\u5206\u652f\u4e2d\u5305\u542b2\u4e2aConv-BN-ReLU\u64cd\u4f5c\u6784\u6210\u4e24\u4e2a\u201cFFN\u201d\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u8f93\u5165\u5b8c\u6210\u4e0d\u540c\u7684\u751f\u6210\u4efb\u52a1\u3002\\n\\n### \u8df3\u51fa\u975e\u6b63\u5373\u8d1f\u7684assign\u65b9\u5f0f\u548c\u76d1\u7763\u539f\u5219\\n\\n\u4f9d\u636eAutoAssign\uff0c\u56de\u5f52\u5206\u652f\u4e2d\u7684\u6bcf\u4e2aanchor\u90fd\u6709\u4e00\u4e2aobjectness prediction\uff0c\u6700\u7ec8\u7684\u5206\u7c7b\u5f97\u5206\u7531\u5206\u7c7b\u5206\u652f\u7684\u8f93\u51fa\u4e58\u4ee5objectness prediction\u5f97\u5230\u3002\\n\\nAutoAssign\u8ba4\u4e3a\u6bcf\u4e2alocation\u4f17\u751f\u5e73\u7b49\uff08\u8fd9\u91cc\u5305\u62ecFPN\u5404\u4e2alevel\uff09\uff0c\u6bcf\u4e2alocation\u90fd\u6709\u6b63\u6837\u672c\u5c5e\u6027\u548c\u8d1f\u6837\u672c\u5c5e\u6027\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4f18\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e9b\u6837\u672c\u4f1a\u540c\u65f6\u53d7\u5230\u6765\u81ea\u5b83\u4e3a\u6b63\u6837\u672c\u7684\u76d1\u7763\u548c\u8d1f\u6837\u672c\u7684\u76d1\u7763\u3002\\n\\n\u5e76\u4e14\uff0c\u76f8\u8f83\u4e8e\u5927\u591a\u6570\u65b9\u6cd5\u5206\u5f00\u4f18\u5316classification\u548cregression\uff0cAutoAssign\u5c06\u4e24\u8005\u8fdb\u884c\u8054\u5408\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u66f4\u597d\u5730\u7b80\u5316\u8868\u793a\u7edf\u4e00\u4f18\u5316\uff0c\u53e6\u4e00\u65b9\u9762\u5728\u534f\u52a9\u751f\u6210\u6b63\u6837\u672c\u7f6e\u4fe1\u5ea6\u7684\u65f6\u5019\u53ef\u4ee5\u7efc\u5408\u8003\u8651\u5206\u7c7b\u548c\u5b9a\u4f4d\u7684\u60c5\u51b5\u3002\u5373\u4f18\u5316\u4e0aregression\u548cclassification\u662f\u7edf\u4e00\u7684\uff1a\\n$$\\nL_i(\\\\theta) = L_i^{cls}(\\\\theta) + \\\\lambda L_i^{loc}(\\\\theta)\\\\\\\\\\n= -\\\\log(P_i(cls|\\\\theta))+\\\\lambda L_i^{loc}(\\\\theta)\\\\\\\\\\n= -log(P_i(cls|\\\\theta)e^{-\\\\lambda L_i^{loc}(\\\\theta)})\\\\\\\\\\n= -\\\\log(P_i(cls|\\\\theta)P_i(loc|\\\\theta))\\\\\\\\\\n= -\\\\log(P_i(theta))\\n$$\\n\u8fd9\u7bc7AutoAssign\u7684\u5185\u5bb9\u662f\u7a0d\u5fae\u6709\u70b9\u591a\u7684\uff0c\u5efa\u8bae\u5355\u72ec\u9605\u8bfb\u4e00\u4e0b\u3002"},{"id":"/[39]Instance-sensitive-Fully-Convolutional-Networks","metadata":{"permalink":"/blog/[39]Instance-sensitive-Fully-Convolutional-Networks","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[39]Instance-sensitive-Fully-Convolutional-Networks.md","source":"@site/blog/[39]Instance-sensitive-Fully-Convolutional-Networks.md","title":"Instance-sensitive Fully Convolutional Networks","description":"Jifeng Dai, Kaiming He, Yi Li, Shaoqing Ren, Jian Sun","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"fcn","permalink":"/blog/tags/fcn"},{"label":"segmentation","permalink":"/blog/tags/segmentation"},{"label":"instance-segmentation","permalink":"/blog/tags/instance-segmentation"},{"label":"backbone","permalink":"/blog/tags/backbone"}],"readingTime":13.585,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Instance-sensitive Fully Convolutional Networks","authors":["visualdust"],"tags":["fcn","segmentation","instance-segmentation","backbone"]},"prevItem":{"title":"You Only Look One-level Feature","permalink":"/blog/[38]You-Only-Look-One-level-Feature"},"nextItem":{"title":"Learning in the Frequency Domain","permalink":"/blog/[40]Learning-in-the-Frequency-Domain"}},"content":"[Jifeng Dai](https://arxiv.org/search/cs?searchtype=author&query=Dai%2C+J), [Kaiming He](https://arxiv.org/search/cs?searchtype=author&query=He%2C+K), [Yi Li](https://arxiv.org/search/cs?searchtype=author&query=Li%2C+Y), [Shaoqing Ren](https://arxiv.org/search/cs?searchtype=author&query=Ren%2C+S), [Jian Sun](https://arxiv.org/search/cs?searchtype=author&query=Sun%2C+J)\\n\\n> Fully convolutional networks (FCNs) have been proven very successful for semantic segmentation, but the FCN outputs are unaware of object instances. In this paper, we develop FCNs that are capable of proposing instance-level segment candidates. In contrast to the previous FCN that generates one score map, our FCN is designed to compute a small set of instance-sensitive score maps, each of which is the outcome of a pixel-wise classifier of a relative position to instances. On top of these instance-sensitive score maps, a simple assembling module is able to output instance candidate at each position. In contrast to the recent DeepMask method for segmenting instances, our method does not have any high-dimensional layer related to the mask resolution, but instead exploits image local coherence for estimating instances. We present competitive results of instance segment proposal on both PASCAL VOC and MS COCO.\\n\\n\u8fd9\u7bc7\u5de5\u4f5c\u53c8\u540dInstanceFCN\u3002\u5b9e\u4f8b\u5206\u5272\u65b9\u9762\uff0c\u7531\u4e8e\u7f51\u7edc\u96be\u4ee5\u540c\u65f6\u8fdb\u884c\u5206\u7c7b\u548c\u5206\u5272\u4efb\u52a1\uff0c\u56e0\u6b64\u9996\u5148\u6d41\u884c\u7684\u662f\u4e8c\u9636\u6bb5\u5b9e\u4f8b\u5206\u5272\u7f51\u7edc\uff0c\u9996\u5148\u5bf9\u8f93\u5165\u627e\u5230\u5b9e\u4f8b\u7684proposal\uff0c\u7136\u540e\u5728\u5176\u4e2d\u8fdb\u884c\u5bc6\u96c6\u9884\u6d4b\uff08\u4e5f\u5c31\u662f\u5148\u6846\u6846\u518d\u5206\u5272\uff09\u3002\u672c\u6587\u4ece\u540d\u79f0\u4e0a\u770b\u4e0d\u662f\u4e00\u7bc7\u8bb2\u5b9e\u4f8b\u5206\u5272\u7684\u6587\u7ae0\uff0c\u662f\u8bb2\u5982\u4f55\u901a\u8fc7FCN\u83b7\u5f97\u5b9e\u4f8b\u7ea7\u522b\u7684\u5206\u5272mask\u7684\u7684\u3002\\n\\n\u5728\u9605\u8bfb\u4e4b\u524d\u6211\u60f3\u63d0\u9192\u4e00\u4e0b\uff0c\u8fd9\u7bc7\u5de5\u4f5c\u7684\u6548\u679c\u662f\u6bd4\u8f83\u5dee\u7684\uff0c\u6bd5\u7adf\u662f\u65e9\u671f\u5de5\u4f5c\u3002\u4e0d\u8fc7\u8fd9\u7bc7\u5de5\u4f5c\u5177\u6709\u4e0d\u9519\u7684\u542f\u53d1\u610f\u4e49\uff0c\u503c\u5f97\u8bfb\u4e00\u8bfb\u3002\u540e\u9762\u7684\u4e00\u7bc7\u5de5\u4f5cFCIS\uff08Fully Convolutional Instance-aware Semantic Segmentation\uff09\u4e2d\u5c31\u501f\u9274\u4e86\u672c\u6587\u4e2d\u63d0\u51fa\u7684instance-sensitive score maps\uff08\u8bf7\u4e0d\u8981\u5f04\u6df7\u672c\u7bc7\u5de5\u4f5c\u548cFCIS\uff09\u3002\u672c\u6587\u7684\u4e00\u5927\u8d21\u732e\u5c31\u662f\u63d0\u51fa\u4f7f\u7528instance-sensitive score maps\u533a\u5206\u4e0d\u540c\u4e2a\u4f53\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## InstanceFCN\\n\\n\u5927\u5bb6\u4e5f\u79f0\u8fd9\u7bc7\u5de5\u4f5c\u4e3aInstanceFCN\u3002\u8fd9\u7bc7\u5de5\u4f5c\u7684\u529f\u80fd\u53ea\u662f\u533a\u5206\u4e86\u5b9e\u4f8b\uff0c\u5e76\u6ca1\u6709\u533a\u5206\u7c7b\u522b\u3002\u8fd9\u662f\u4e00\u7bc7\u201d\u4e24\u4e0d\u50cf\u201c\u7684\u5de5\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u201d\u5bf9\u8c61\u5206\u5272\u201c\uff1a\\n\\n| \u540d\u79f0                 | \u63cf\u8ff0                                             |\\n| -------------------- | ------------------------------------------------ |\\n| \u8bed\u4e49\u5206\u5272             | \u533a\u5206\u5404\u4e2a\u50cf\u7d20\u7c7b\u522b\u7684\u5bc6\u96c6\u9884\u6d4b\u4efb\u52a1                   |\\n| \u5b9e\u4f8b\u5206\u5272             | \u533a\u5206\u5404\u4e2a\u50cf\u7d20\u7c7b\u522b\u53ca\u5176\u5c5e\u4e8e\u7684\u5bf9\u8c61\u5b9e\u4f8b\u7684\u5bc6\u96c6\u9884\u6d4b\u4efb\u52a1 |\\n| \u5bf9\u8c61\u5206\u5272\uff08\u672c\u7bc7\u5de5\u4f5c\uff09 | \u533a\u5206\u5404\u4e2a\u50cf\u7d20\u5c5e\u4e8e\u7684\u5bf9\u8c61\u5b9e\u4f8b\u7684\u5bc6\u96c6\u9884\u6d4b\u4efb\u52a1         |\\n\\n\u8fd9\u7bc7\u5de5\u4f5c\u662f\u4f7f\u7528\u5168\u5377\u79ef\u7f51\u7edc\u533a\u5206\u50cf\u7d20\u6240\u5c5e\u7684\u5bf9\u8c61\u5b9e\u4f8b\u7684\uff1a\\n\\n![image-20210831174047097](./src/Instance-sensitive-Fully-Convolutional-Networks/image-20210831174047097.png)\\n\\n\u4e0a\u56fe\u662fInstanceFCN\u7684\u4e3b\u8981\u7ed3\u6784\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u4e4b\u540e\uff08\u539f\u8bba\u6587\u4e2dInstanceFCN\u4f7f\u7528\u5728ImageNet\u4e0a\u9884\u8bad\u7ec3\u7684\u4fee\u6539\u7248VGG-16\u4f5c\u4e3a\u9aa8\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff0c\u4fee\u6539\u7248\u662f\u6307\u4f5c\u8005\u5bf9\u539f\u7248\u7684VGG-16\u505a\u4e86\u4e00\u4e9b\u8c03\u6574\u907f\u514d\u8fc7\u5ea6\u7684\u4e0b\u91c7\u6837\u5bfc\u81f4\u5206\u8fa8\u7387\u8fc7\u5ea6\u635f\u5931\u3002\u5177\u4f53\u53ef\u4ee5\u770b\u4e00\u4e0b\u539f\u8bba\u6587\u4e2d\u7b97\u6cd5\u90e8\u5206\u7684\u76f8\u5173\u63cf\u8ff0\uff09\uff0cInstanceFCN\u5728\u9aa8\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u4e4b\u540e\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u5206\u652f\uff0c\u5206\u522b\u662finstance\u5206\u652f\uff08\u7528\u4e8e\u4ea7\u751f\u5b9e\u4f8b\u7ea7\u7684\u50cf\u7d20\u6253\u5206\uff09\u4ee5\u53caobjectness\u5206\u652f\uff08\u7528\u4e8e\u4ea7\u751f\u67d0\u4f4d\u7f6e\u662f\u4e0d\u662f\u4e00\u4e2a\u5b9e\u4f53\u7684\u6253\u5206\uff09\u3002\u8fd9\u4e24\u4e2a\u5206\u652f\u7684\u7ed3\u679c\u5c06\u76f8\u4e58\u5f62\u6210\u6700\u7ec8\u7684\u5f97\u5206\u3002\\n\\n\u63a5\u4e0b\u6765\u6211\u4eec\u4e3b\u8981\u804a\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u5206\u652f\u5982\u4f55\u5de5\u4f5c\u3002\\n\\n## Instance\u5206\u652f\\n\\n\u8fd9\u4e2a\u5206\u652f\u7684\u4f5c\u7528\u4ea7\u751f\u4e00\u4e2a\u50cf\u7d20\u4e0e\u5b9e\u4f53\u5173\u7cfb\u7684\u6253\u5206\uff0c\u53ef\u8861\u91cf\u4e00\u4e2a\u50cf\u7d20\u5e94\u8be5\u5c5e\u4e8e\u54ea\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u5206\u652f\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\\n\\n1. \u901a\u8fc7\u5377\u79ef\u5f97\u5230instance-sensitive score maps\u3002\\n2. \u4e00\u4e2aassembling module\u5c06\u5b83\u4eec\u7ec4\u88c5\u79f0\u4e3a\u6700\u7ec8\u7684\u7ed3\u679c\u3002\\n\\n\u63a5\u4e0b\u6765\u5206\u522b\u4ecb\u7ecd\u8fd9\u4e24\u4e2a\u9636\u6bb5\u3002\\n\\n### Instance-sensitive score maps\\n\\ninstance-sensitive score maps\u662f\u8fd9\u4efd\u5de5\u4f5c\u7684\u6838\u5fc3\u8d21\u732e\u4e4b\u4e00\u3002InstanceFCN\u901a\u8fc7\u8fd9\u4e00\u8d21\u732e\u5b9e\u73b0\u533a\u5206\u4e0d\u540c\u5bf9\u8c61\u3002\u5728\u8bed\u4e49\u5206\u5272\u6a21\u578b\u4e2d\uff0c\u901a\u5e38\u5c06\u635f\u5931\u8bbe\u5b9a\u4e3a\u4ea4\u53c9\u71b5\uff0c\u56e0\u6b64\u6bcf\u4e2a\u50cf\u7d20\u5728\u4f18\u5316\u65f6\u4ec5\u8868\u8fbe\u4e00\u4e2a\u8bed\u4e49\u3002\u8fd9\u5bf9\u4e8e\u5f88\u591a\u4e2a\u5bf9\u8c61\u5b58\u5728\u91cd\u53e0\u7684\u50cf\u7d20\u96be\u4ee5\u5224\u65ad\u5176\u6240\u5c5e\u3002\\n\\n\u76f8\u6bd4\u4e8e\u7528\u4e8e\u8bed\u4e49\u5206\u5272\u7684FCN\u5728\u6700\u7ec8\u8f93\u51fa\u4e00\u4e2a\u7c7b\u522b\uff0cInstanceFCN\u6700\u540e\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u50cf\u7d20\u4e8e\u5bf9\u8c61\u5173\u7cfb\u7684\u6253\u5206\u3002\u5927\u81f4\u4e0a\u53bb\u7406\u89e3\uff0c\u5c31=\u5c31\u662f\u4e00\u4e2a\u50cf\u7d20\u8d8a\u53ef\u80fd\u5c5e\u4e8e\u67d0\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u6253\u5206\u5c31\u8d8a\u9ad8\u3002\u8fdb\u884c\u6253\u5206\u7684\u65b9\u5f0f\u6765\u6e90\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\uff1a\u4e0d\u540c\u5bf9\u8c61\u5e94\u8be5\u5904\u5728\u4e0d\u540c\u4f4d\u7f6e\u3002\u56e0\u6b64\u5728\u539f\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u4f7f\u7528$k\\\\times k$\u7684\u77e9\u9635\u5b9a\u4e49\u4e00\u79cd\u201d\u76f8\u5bf9\u4f4d\u7f6e\u201c\uff1a\\n\\n![image-20210831165835721](./src/Instance-sensitive-Fully-Convolutional-Networks/image-20210831165835721.png)\\n\\n\u4f8b\u5982\u5728\u4e0a\u56fe\u4e2d\uff0c$k=3$\uff0c\u5c31\u4f1a\u4ea7\u751f$k^2=9$\u4e2ascore map\u3002\u8fd9\u4e9bscore map\u88ab\u79f0\u4e3ainstance-sensitive score maps\uff0c\u53ef\u4ee5\u7528\u4e8e\u5bf9\u50cf\u7d20\u548c\u5bf9\u8c61\u7684\u76f8\u5bf9\u4f4d\u7f6e\u8fdb\u884c\u6253\u5206\u3002\\n\\n\u8fd9\u4e2a$k\\\\times k$\u7684\u77e9\u9635\u6211\u4eec\u6682\u4e14\u79f0\u4e4b\u4e3a\u201d\u6253\u5206\u5668\u201c\u3002\u8fd9\u4e2a\u6253\u5206\u5668\u662f\u4e00\u4e2a\u5728\u5168\u56fe\u4e0a\u79fb\u52a8\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u5c06\u5bf9\u5168\u56fe\u7684\u5404\u4e2a\u533a\u57df\u8fdb\u884c\u6253\u5206\u3002\u8fd8\u662f\u521a\u624d\u63d0\u5230\u7684\uff0c\u4f5c\u8005\u8ba4\u4e3a\u4e0d\u540c\u7684\u5bf9\u8c61\u5904\u4e8e\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u53ea\u8981\u6253\u5206\u5668\u5728\u6240\u6709\u4f4d\u7f6e\u90fd\u6253\u4e00\u4e0b\u5206\uff0c\u4f7f\u6bcf\u4e2a\u50cf\u7d20\u90fd\u5177\u6709\u4e00\u4e2a\u8ddf\u4f4d\u7f6e\u76f8\u5173\u7684\u5206\u6570\uff0c\u5c31\u80fd\u533a\u5206\u8fd9\u4e2a\u50cf\u7d20\u5230\u5e95\u5c5e\u4e8e\u54ea\u4e2a\u5bf9\u8c61\u3002\u4f8b\u5982\u4e0a\u56fe\u4e2d\u6709\u4e24\u4e2a\u7c7b\u522b\u4e3a\u4eba\u7684\u5b9e\u4f53\uff0c\u6253\u5206\u5668\u5728\u5de6\u4fa7\u7684\u4eba\u7684\u4f4d\u7f6e\u4ea7\u751f\u7684score maps\u6700\u7ec8\u4ec5\u62fc\u63a5\u51fa\u4e86\u5de6\u4fa7\u7684\u4eba\uff0c\u5e76\u6ca1\u6709\u62fc\u63a5\u51fa\u53f3\u9762\u7684\u3002\\n\\n\u6839\u636e\u539f\u8bba\u6587\uff0c\u524d\u7f6e\u9aa8\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u8f93\u51fa\u7279\u5f81\u56fe\u540e\uff0c\u9996\u5148\u4f7f\u7528\u4e00\u4e2a512-d\u7684$1\\\\times 1$\u5377\u79ef\u5bf9\u7279\u5f81\u8fdb\u884c\u4e00\u4e0b\u8f6c\u6362\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a$3\\\\times 3$\u7684\u5377\u79ef\u5c42\u4ea7\u751finstance-sensitive score maps\uff1a\\n\\n![image-20210831195822063](./src/Instance-sensitive-Fully-Convolutional-Networks/image-20210831195822063.png)\\n\\n\u521a\u624d\u6211\u4eec\u63d0\u5230\u8bba\u6587\u4e2d\u4f7f\u7528\u4e00\u4e2a$k\\\\times k$\u7684\u7f51\u683c\u6253\u5206\u5668\u63cf\u8ff0\u67d0\u79cd\u76f8\u5bf9\u4f4d\u7f6e\u4fe1\u606f\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7528\u4e8e\u5f62\u6210score map\u7684$3\\\\times 3$\u5377\u79ef\u5c42\u5377\u79ef\u6838\u7ef4\u5ea6\u5c31\u662f$k^2$\u3002\u4e5f\u5c31\u662f\u5bf9\u4e8e\u8f93\u51fa\uff0c\u5206\u8fa8\u7387\u4e0a\u6bcf\u4e2a\u50cf\u7d20\u540e\u65b9\u5806\u53e0\u7740$k^2$\u4e2a\u6570\u5b57\uff0c\u5206\u522b\u8868\u793a\u8fd9\u4e2a\u50cf\u7d20\u5bf9$k^2$\u4e2a\u76f8\u5bf9\u4f4d\u7f6e\u7684\u6253\u5206\u3002\\n\\n\u8fd9\u91cc\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5c0f\u7591\u95ee\uff0c\u5c31\u662f\u5377\u79ef\u6838\u660e\u660e\u662f\u9010\u50cf\u7d20\u7684\u8fed\u4ee3\uff0c\u800c\u4e14\u6839\u636e\u4e0a\u9762\u7684\u63cf\u8ff0\u53ea\u6709$3\\\\times 3$\u7684\u5927\u5c0f\uff0c\u600e\u4e48\u53ef\u80fd\u8986\u76d6\u56fe\u4e2d\u7684\u533a\u57df\uff1a\\n\\n![image-20210831201633024](./src/Instance-sensitive-Fully-Convolutional-Networks/image-20210831201633024.png)\\n\\n\u4f8b\u5982\u8fd9\u5e45\u793a\u610f\u56fe\u4e2d\uff0c\u4e00\u4e2a$k\\\\times k,k=3$\u7684\u6253\u5206\u5668\u547d\u540d\u5c31\u662f\u4e00\u4e2a$3\\\\times 3$\u7684\u5377\u79ef\u6838\uff0c\u5982\u4f55\u8986\u76d6\u4e00\u4e2a\u4eba\u7684\u50cf\u7d20\u8303\u56f4\uff1f\u6211\u81ea\u5df1\u7684\u7406\u89e3\u662fVGG-16\u90fd\u8fdb\u6765\u5377\u8fc7\u4e86\uff0c\u4e00\u4e2a\u50cf\u7d20\u5c31\u5df2\u7ecf\u80fd\u4ee3\u8868\u4e00\u5b9a\u5927\u5c0f\u7684\u611f\u53d7\u91ce\u4e86\u3002\u800c\u4e14\u5728$3\\\\times 3$\u5377\u79ef\u4e4b\u524d\u8fd8\u6709\u4e00\u4e2a$1\\\\times 1$\u7684\u5377\u79ef\u5c42\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u5b83\u5b66\u4e86\u5565\u5168\u662f\u7384\u5b66\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u8fd9\u90e8\u5206\u53ef\u89e3\u91ca\u6027\u6bd4\u8f83\u7275\u5f3a\uff08\u4e5f\u8bb8\u662f\u6211\u624d\u758f\u5b66\u6d45\u89e3\u8bfb\u5931\u8bef\uff09\u3002`\u5927\u5bb6\u90fd\u5e38\u8bb2\u8d77\u8fd9\u4e2a\u7b11\u8bdd\uff1a\u201c\u901a\u8fc7\u5b66\u4e60\u7684\u5377\u79ef\u6838\u80fd\u505a\u5230\u7684\u8bdd\u89e3\u91ca\u4e0d\u901a\u4e5f\u662f\u80fd\u89e3\u91ca\u901a\u7684\u201d\u3002\u5982\u679c\u60a8\u6709\u5fc3\u94bb\u7814\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u53ef\u89e3\u91ca\u6027\uff0c\u90a3\u4e48\u795d\u60a8\u80fd\u5728\u8fd9\u6761\u8def\u4e0a\u8d70\u5f97\u987a\u5229\ud83d\udc7b\u3002\u6709\u4efb\u4f55\u5b9e\u8d28\u6027\u7684\u8fdb\u5c55\u8bf7\u8ba9\u6211\u4e5f\u4e86\u89e3\u4e00\u4e0b\u60a8\u7684\u5de5\u4f5c`\u3002\\n\\n> \u63d2\u4e00\u5634\uff0c\u6211\u5728\u60f3\u8fd9\u6837\u7684\u7ed3\u6784\u5728\u4e0d\u540c\u611f\u53d7\u91ce\u7684\u7269\u4f53\u4e0a\u8868\u73b0\u5e94\u8be5\u4e0d\u4f1a\u5747\u8861\u5427\u3002\u8fd9\u6837\u8bbe\u8ba1\u5b9e\u5c5e\u662f\u628a\u5bf9\u4e0d\u540c\u611f\u53d7\u91ce\u7684\u517c\u5bb9\u6027\u629b\u7ed9\u4e86\u9aa8\u5e72\u7f51\u7edc\u548c\u90a3\u4e2a\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b58\u5728\u7684$1\\\\times 1$\u5377\u79ef\u3002\u770b\u4e86\u4e00\u773c\u539f\u8bba\u6587\u8bd5\u9a8c\u7ed3\u679c\u90e8\u5206\uff0c\u786e\u5b9e\u6548\u679c\u4e00\u822c\u3002\u4f1a\u4e0d\u4f1a\u6362\u4e0aRes-Net\u6216\u8005U\u7ed3\u6784\u7684\u7f51\u7edc\u540e\u6027\u80fd\u4f1a\u663e\u8457\u63d0\u5347\u5462\uff1f\\n\\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4efdinstance-sensitive score maps\u3002\u4e0d\u8fc7\u4ec5\u51ed\u6b64\u8fd8\u4e0d\u80fd\u533a\u5206\u51fa\u5bf9\u8c61\uff0c\u8fd8\u9700\u8981\u901a\u8fc7\u4e00\u4e2a\u79f0\u4e3a\u7ec4\u88c5\uff08assembling\uff09\u7684\u8fc7\u7a0b\u751f\u6210\u5bf9\u8c61\u7ea7\u7684\u8f93\u51fa\u3002\\n\\n### Instance assembling module\\n\\ninstance-sensitive score maps\u8fd8\u4e0d\u8db3\u4ee5\u76f4\u63a5\u4ea7\u751f\u5bf9\u8c61\u5b9e\u4f8b\u3002\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u201d\u7ec4\u88c5\u201cscore maps\u6765\u4ea7\u751f\u5bf9\u8c61\u5b9e\u4f8b\uff1a\\n\\n![image-20210831180137018](./src/Instance-sensitive-Fully-Convolutional-Networks/image-20210831180137018.png)\\n\\n\u4f8b\u5982\uff0c\u5728\u4e0a\u56fe\u6240\u793a\u7684\u4e24\u4e2a\u7c7b\u522b\u4e3a\u4eba\u7684\u5bf9\u8c61\u4e0a\uff0c\u901a\u8fc7\u5377\u79ef\u6253\u5206\u4ea7\u751finstance-sensitive score maps\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u8fd9\u4e2a$k\\\\times k ,k=3$\u7684\u6253\u5206\u5668\u4f4d\u4e8e\u5de6\u4fa7\u7684\u4eba\u7684\u4f4d\u7f6e\u65f6\uff0c\u5728\u8fd9\u4e2a\u6253\u5206\u5668\u5185\u90e8\u7684$k^2 = 9$\u4e2a\u4f4d\u7f6e\u4e0a\u8f93\u51fa\u4ea7\u751f\u4e86\u4e0d\u540c\u7684score map\uff08\u4e5f\u5c31\u662f\u4e0a\u4e2a\u9636\u6bb5\u7f51\u7edc\u7684\u8f93\u51fa\u662f$k^2$\u7ef4\u7684\uff0c\u5206\u522b\u4ee3\u8868\u5f53\u524d\u4f4d\u7f6e\u4e0b\u548c\u8fd9$k^2$\u4e2a\u533a\u57df\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\u5206\u6570\uff09\u3002\\n\\n\u63a5\u4e0b\u6765Instance assembling module\u4f1a\u7528\u8fd9\u4e2a$k^2$\u7ef4\u7684\u8f93\u51fa\u201c\u7ec4\u88c5\u201d\u51fa\u4e00\u4e2a\u50cf\u7d20\u7ea7\u7684\u5b9e\u4f8b\u8f93\u51fa\u3002\u539f\u8bba\u6587\u5c06\u8fd9\u4e2a\u7ec4\u88c5\u7684\u6a21\u5757\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u5927\u5c0f\u4e3a$m\\\\times m$\u7684\u7a97\u53e3\uff08\u5176\u4e2dm\u662fk\u7684\u500d\u6570\uff09\uff0c\u5c06\u8fd9\u4e2a\u7a97\u53e3\u5206\u4e3a$\\\\frac{m}{k}\\\\times \\\\frac{m}{k}$\u4e2a\u5b50\u7a97\u53e3\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u7a97\u53e3\u662f$k\\\\times k$\u8fd9\u4e48\u5927\uff0c\u6bcf\u4e2a\u5b50\u7a97\u53e3\u76f4\u63a5\u4ecescore map\u7684\u76f8\u5e94\u4f4d\u7f6e\u590d\u5236\u5bf9\u5e94\u7684\u503c\uff0c\u7136\u540e\u62fc\u5728\u4e00\u8d77\uff08\u4f9d\u636e\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u62fc\u5728\u4e00\u8d77\uff09\u5f62\u6210$m^2$\u5927\u5c0f\u7684\u8f93\u51fa\u3002\u5728\u539f\u6587\u4e2d\uff0c\u4f5c\u8005\u9009\u62e9\u4e86$m=21$\uff0c\u6b65\u957f$stride = 8$\u3002\\n\\n\u4f5c\u8005\u5728\u539f\u6587\u4e2d\u91cd\u7533\uff0c\u8fd9\u4e2a\u6a21\u5757\u662f\u6ca1\u6709\u53c2\u6570\u7684\uff0c\u5176\u4e2d\u4ec5\u5305\u542b\u590d\u5236\u7c98\u8d34\u7684\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u5b66\u4e60\u3002\u4f46\u662f\u8fd9\u4e2a\u6a21\u5757\u4ecd\u7136\u662f\u4ea7\u751f$m^2$\u5206\u8fa8\u7387\u8f93\u51fa\u7684\u201c\u552f\u4e00\u6307\u5b9a\u7ec4\u4ef6\u201d\uff08the only component\uff09\uff0c\u662f\u7f51\u7edc\u7684\u91cd\u8981\u7ec4\u4ef6\uff0c\u4e14\u7279\u5f81\u56fe\u7531\u5b83\u7ecf\u624b\u540e\u5f97\u5230\u7684\u8f93\u51fa\u76f4\u63a5\u53c2\u4e0eloss\u8ba1\u7b97\uff0c\u6240\u4ee5\u5176\u8bbe\u8ba1\u5f71\u54cd\u7f51\u7edc\u7684\u8bad\u7ec3\u4f18\u5316\u8fc7\u7a0b\u3002\\n\\n> \u56de\u770b\u521a\u624d\u6211\u4eec\u5728Instance-sensitive score maps\u90a3\u91cc\u63d0\u5230\u7684\u5c0f\u7591\u95ee\uff0cInstanceFCN\u901a\u8fc7\u5377\u79ef\u4ea7\u751f\u201c\u4f4d\u7f6e\u654f\u611f\u7684\u201d\u8f93\u51fa\u4ec5\u901a\u8fc7\u5377\u79ef\u8fd9\u4ef6\u4e8b\u786e\u5b9e\u96be\u4ee5\u89e3\u91ca\u3002\u5982\u679c\u771f\u7684\u662f\u8fd9\u6837\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u5728\u7ec4\u88c5\u90e8\u5206\u4e5f\u76f4\u63a5\u7528\u4e00\u4e2a\u53ef\u4ee5\u5b66\u4e60\u7684\u5377\u79ef\u89e3\u51b3\u5462\uff1f\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u4e2a\u201c\u590d\u5236\u7c98\u8d34\u201d\u6a21\u5757\u662f\u89e3\u91ca\u7684\u4e00\u90e8\u5206\u3002\u4f5c\u8005\u5728\u91cd\u7533\u7684\u65f6\u5019\u4e5f\u63d0\u5230\u4e86\uff0c\u8fd9\u4e2a\u6a21\u5757\u5f71\u54cd\u7f51\u7edc\u7684\u8bad\u7ec3\u4f18\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u5e72\u9884\u524d\u5e8f\u7f51\u7edc\u5b66\u4e60\u884c\u4e3a\u7684\u3002\u56e0\u4e3a\u5b83\u201c\u5bf9\u7740\u4f4d\u7f6e\u590d\u5236\u7c98\u8d34\u201d\u7684\u884c\u4e3a\uff0c\u5728\u4f18\u5316\u7f51\u7edc\u7684\u65f6\u5019\u5bfc\u81f4\u4e86\u524d\u9762score map\u7684\u4ea7\u751f\u662f\u533a\u57df\u654f\u611f\u7684\uff08\u4ee5\u4e0a\u7eaf\u5c5e\u6211\u81ea\u5df1\u7684\u81c6\u60f3\uff09\u3002\\n\\n\u7531\u4e8e\u8fd9\u7bc7\u8bba\u6587\u5e76\u6ca1\u6709\u63d0\u4f9b\u5177\u4f53\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\u8fd9\u4e2aassembling\u6a21\u5757\u7684\u5177\u4f53\u8bbe\u8ba1\u65e0\u4ece\u77e5\u6653\u3002\u731c\u6d4b\u662f\u4e00\u4e2a`[0,0,...,1,...,0]`\u957f\u76f8\u7684\u5377\u79ef\u3002\\n\\n## Object\u5206\u652f\\n\\n\u8fd9\u4e2a\u5206\u652f\u7528\u4e8e\u4ea7\u751fObjectness score map\uff0c\u4e3b\u8981\u7528\u4e8e\u5224\u522b\u67d0\u4e2a\u4f4d\u7f6e\u5b58\u5728\u4e00\u4e2a\u5b9e\u4f53\u7684\u53ef\u80fd\u6027\u3002\\n\\n![image-20210902090944392](./src/Instance-sensitive-Fully-Convolutional-Networks/image-20210902090944392.png)\\n\\n\u5982\u4e0a\u56fe\uff0c\u8fd9\u4e2a\u5206\u652f\u548cInstance\u5206\u652f\u662f\u5e76\u884c\u7684\u3002\u5728\u539f\u8bba\u6587\u7684\u63cf\u8ff0\u4e2d\uff0c\u8be5\u5206\u652f\u4f7f\u7528\u4e00\u4e2a$3\\\\times 3$\u5377\u79ef\u548c\u4e00\u4e2a$1\\\\times 1$\u5377\u79ef\u6784\u6210\u3002\u5176\u4e2d$1\\\\times 1$\u5377\u79ef\u662f\u4e00\u4e2a\u5bc6\u96c6\uff08\u9010\u50cf\u7d20\uff09\u7684logistic\u56de\u5f52\uff0c\u56de\u5f52\u4e3a\u4e24\u7c7b\uff0c\u4e00\u7c7b\u662f\u201c\u80cc\u666f\u201d\uff0c\u4e00\u7c7b\u662f\u201c\u5b9e\u4f53\u201d\u3002\\n\\n![image-20210831174047097](./src/Instance-sensitive-Fully-Convolutional-Networks/image-20210831174047097.png)\\n\\n\u63a5\u4e0b\u6765\u8fd9\u4e24\u4e2a\u5206\u652f\u4ea7\u751f\u7684\u7ed3\u679c\u76f4\u63a5\u76f8\u4e58\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002\u6ce8\u610f\uff0cobject\u5206\u652f\u7684\u8f93\u51fa\u5206\u8fa8\u7387\u8981\u548cinstace\u5206\u652f\u5339\u914d\uff0c\u5426\u5219\u6ca1\u6cd5\u6309\u4f4d\u76f8\u4e58\u3002\\n\\n## Loss\u8bbe\u8ba1\\n\\n$$\\n\\\\sum_i (L(p_i,p_i^*)+\\\\sum_j L(S_{i,j},S_{i,j}^*))\\n$$\\n\\n\u5176\u4e2d$p$\u7684\u90e8\u5206\u662f\u5728\u8ba1\u7b97object\u5206\u652f\u7684loss\uff0c$S$\u7684\u90e8\u5206\u662f\u5728\u8ba1\u7b97intance\u5206\u652f\u7684loss\u3002"},{"id":"/[40]Learning-in-the-Frequency-Domain","metadata":{"permalink":"/blog/[40]Learning-in-the-Frequency-Domain","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[40]Learning-in-the-Frequency-Domain.md","source":"@site/blog/[40]Learning-in-the-Frequency-Domain.md","title":"Learning in the Frequency Domain","description":"Kai Xu, Minghai Qin, Fei Sun, Yuhao Wang, Yen-Kuang Chen, Fengbo Ren","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"frequency-domain","permalink":"/blog/tags/frequency-domain"},{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"non-convolution","permalink":"/blog/tags/non-convolution"}],"readingTime":20.965,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"Learning in the Frequency Domain","authors":["visualdust"],"tags":["frequency-domain","attention-mechanism","non-convolution"]},"prevItem":{"title":"Instance-sensitive Fully Convolutional Networks","permalink":"/blog/[39]Instance-sensitive-Fully-Convolutional-Networks"},"nextItem":{"title":"CCNet - Criss-Cross Attention for Semantic Segmentation","permalink":"/blog/[42]CCNet-Criss-Cross-Attention-for-Semantic-Segmentation"}},"content":"[Kai Xu](https://arxiv.org/search/cs?searchtype=author&query=Xu%2C+K), [Minghai Qin](https://arxiv.org/search/cs?searchtype=author&query=Qin%2C+M), [Fei Sun](https://arxiv.org/search/cs?searchtype=author&query=Sun%2C+F), [Yuhao Wang](https://arxiv.org/search/cs?searchtype=author&query=Wang%2C+Y), [Yen-Kuang Chen](https://arxiv.org/search/cs?searchtype=author&query=Chen%2C+Y), [Fengbo Ren](https://arxiv.org/search/cs?searchtype=author&query=Ren%2C+F)\\n\\n>   Deep neural networks have achieved remarkable success in computer vision tasks. Existing neural networks mainly operate in the spatial domain with fixed input sizes. For practical applications, images are usually large and have to be downsampled to the predetermined input size of neural networks. Even though the downsampling operations reduce computation and the required communication bandwidth, it removes both redundant and salient information obliviously, which results in accuracy degradation. Inspired by digital signal processing theories, we analyze the spectral bias from the frequency perspective and propose a learning-based frequency selection method to identify the trivial frequency components which can be removed without accuracy loss. The proposed method of learning in the frequency domain leverages identical structures of the well-known neural networks, such as ResNet-50, MobileNetV2, and Mask R-CNN, while accepting the frequency-domain information as the input. Experiment results show that learning in the frequency domain with static channel selection can achieve higher accuracy than the conventional spatial downsampling approach and meanwhile further reduce the input data size. Specifically for ImageNet classification with the same inpu t size, the proposed method achieves 1.41% and 0.66% top-1 accuracy improvements on ResNet-50 and MobileNetV2, respectively. Even with half input size, the proposed method still improves the top-1 accuracy on ResNet-50 by 1%. In addition, we observe a 0.8% average precision improvement on Mask R-CNN for instance segmentation on the COCO dataset.\\n\\n`Comments`: Accepted to CVPR 2020\\n\\n\x3c!--truncate--\x3e\\n\\n---\\n\\n## \u6982\u89c8\\n\\n\u5728\u4f20\u7edf\u7684CNN\u7ed3\u6784\u4e2d\uff0c\u53d7\u9650\u4e8e\u8bbe\u5907\u7684\u8ba1\u7b97\u6027\u80fd\uff08\u4e5f\u6709\u7684\u65f6\u5019\u5355\u7eaf\u662f\u4e3a\u4e86\u4ea7\u751f\u56fa\u5b9a\u957f\u5ea6\u7684\u8f93\u51fa\u4ee5\u9002\u5e94\u9700\u8981\u56fa\u5b9a\u5927\u5c0f\u8f93\u5165\u7684\u5168\u8fde\u63a5\u5c42\uff09\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u56fe\u50cf\u4f5c\u4e3a\u8f93\u5165\uff08\u4f8b\u5982\uff1a224$\\\\times224$\uff09\uff0c\u56e0\u6b64\u901a\u5e38\u4f1a\u5148\u5c06\u56fe\u7247\u4e0b\u91c7\u6837\u5230\u67d0\u4e2a\u5927\u5c0f\u3002\u8fd9\u5df2\u7ecf\u4e0d\u80fd\u6ee1\u8db3\u73b0\u4ee3\u6444\u50cf\u673a\u5b9e\u9645\u80fd\u8fbe\u5230\u7684\u89c6\u89c9\u753b\u9762\u7cbe\u5ea6\u4e86\u3002\u52a0\u4e4b\u4f20\u7edfCNN\u901a\u5e38\u5728\u7a7a\u95f4\u4e0a\u5bf9\u56fe\u50cf\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u6837\u7684\u884c\u4e3a\u6709\u610f\u65e0\u610f\u4e2d\u5c06\u56fe\u50cf\u7684\u90e8\u5206\u9ad8\u9891\u4fe1\u606f\u4ee5\u53ca\u663e\u8457\u6027\u4fe1\u606f\u79fb\u9664\uff0c\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u5bfc\u81f4\u56fe\u50cf\u4fe1\u606f\u6216\u7cbe\u5ea6\u7684\u4e22\u5931\uff08\u53c2\u8003[Effects of Image Degradations to CNN-based Image Classification](https://arxiv.org/abs/1810.05552)\uff09\u3002\u8fd9\u7bc7\u6587\u7ae0\u5728Introduction\u4e2d\u63d0\u5230\u4ee5\u524d\u7684\u5de5\u4f5c\u901a\u8fc7\u5bf9\u7279\u5b9a\u7684\u89c6\u89c9\u4efb\u52a1\u63a7\u5236\u8fd9\u4e2adownsample\u7684\u8fc7\u7a0b\u6765\u964d\u4f4e\u4fe1\u606f\u635f\u5931\uff08\u4f8b\u5982 [Task-Aware Image Downscaling](https://openaccess.thecvf.com/content_ECCV_2018/papers/Heewon_Kim_Task-Aware_Image_Downscaling_ECCV_2018_paper.pdf)\uff09\u3002\\n\\n\u672c\u6587\u7684\u4f5c\u8005\u53d7\u5230HVS\uff08human visual system\uff0c\u4eba\u7c7b\u89c6\u89c9\u7cfb\u7edf\uff09\u4e2d\u7684\u4e00\u4e9b\u7814\u7a76\uff08[Deep Learning of Human Visual Sensitivity in Image Quality Assessment Framework](https://openaccess.thecvf.com/content_cvpr_2017/papers/Kim_Deep_Learning_of_CVPR_2017_paper.pdf)\uff09\u4ee5\u53ca\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u4e2d\u4e00\u4e9b\u65b9\u6cd5\u7684\u542f\u53d1\uff0c\u9996\u5148\u5c06\u56fe\u50cf\u901a\u8fc7\u67d0\u79cd\u65b9\u6cd5\u6620\u5c04\u5230\u9891\u57df\u5185\uff08\u4f8b\u5982\u79bb\u6563\u4f59\u5f26\u53d8\u6362\uff08discrete cosine transform\uff09\u6216\u5176\u4ed6\u65b9\u5f0f\uff09\uff0c\u83b7\u5f97\u9891\u57df\u4e0a\u7684\u7279\u5f81\u56fe\u540e\uff0c\u8bad\u7ec3\u4e00\u79cd\u201c\u9009\u62e9\u5668\u201d\uff0c\u5176\u529f\u80fd\u662f\u7b5b\u9009\u51fa\u5bf9\u6700\u7ec8\u7ed3\u679c\u5f71\u54cd\u8f83\u5927\u7684\u9891\u57df\u4fe1\u606f\uff0c\u5e76\u79fb\u9664\u65e0\u5173\u7d27\u8981\u7684\u90e8\u5206\uff0c\u4f5c\u4e3a\u8f93\u5165\u540e\u7eed\u7f51\u7edc\u7684\u6570\u636e\u7684\u4e00\u90e8\u5206\u3002\\n\\n![image-20211023123854207](./src/Learning-in-the-Frequency-Domain/image-20211023123854207.png)\\n\\n\u4e0a\u56fe(a)\uff1a\u4e00\u822cCNN\u6a21\u578b\u5904\u7406\u56fe\u7247\u7684\u6d41\u7a0b\uff1b\u4e0a\u56fe(b)\uff1a\u672c\u6587\u7684\u65b9\u6cd5\u5904\u7406\u56fe\u7247\u7684\u6d41\u7a0b\uff08\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8be5\u65b9\u6cd5\u4f5c\u4e3a\u524d\u5904\u7406\u52a0\u5165\u7f51\u7edc\u65f6\uff0c\u4e0d\u9700\u8981\u5bf9\u539f\u6765\u4f7f\u7528RGB\u56fe\u50cf\u4f5c\u4e3a\u8f93\u5165\u7684CNN\u7ed3\u6784\u505a\u51fa\u4ec0\u4e48\u66f4\u6539\uff09\u3002\u5b9e\u9a8c\u8bc1\u660e\uff0c\u5728\u76f8\u540c\u7684\u8f93\u5165\u56fe\u50cf\u7cbe\u5ea6\u4e0b\uff0c\u52a0\u5165\u8be5\u65b9\u6cd5\u7684\u795e\u7ecf\u7f51\u7edc\u6bd4\u76f4\u63a5\u5728\u7a7a\u95f4\u57df\u4e0a\u5377\u79ef\u5b8c\u6210\u7684\u9010\u5c42\u4e0b\u91c7\u6837\u7684\u65b9\u6cd5\u8fbe\u5230\u4e86\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u5e76\u4e14\u5728\u4e8c\u5206\u4e4b\u4e00\u8f93\u5165\u5927\u5c0f\u7684\u56fe\u50cf\u4e0a\u4f9d\u7136\u5982\u6b64\u3002\\t\\n\\n\u4ece\u4ee3\u7801\u4e0a\u770b\uff0c\u672c\u7bc7\u8bba\u6587\u7684\u8d21\u732e\u4e3b\u8981\u662f\u4e00\u4e2a\u9891\u57df\u7684\u524d\u5904\u7406\u8fc7\u7a0b\u3002\u4f5c\u8005\u5728\u8bba\u6587\u4e2d\u8bf4\u660e\u4e86\uff0c\u5c06\u8f93\u5165\u8f6c\u6362\u8fdb\u9891\u57df\u7684\u524d\u5904\u7406\u51e0\u4e4e\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u4efb\u4f55CNN\u6a21\u578b\u3002\\n\\n>   \u5173\u6ce8\u5230\u672c\u6587\uff0c\u662f\u56e0\u4e3a\u6700\u8fd1\u7814\u7a76\u5206\u5272\u6bd4\u8f83\u591a\uff0c\u5e76\u4e14\u6211\u89c9\u5f97\u5206\u5272\u4f5c\u4e3a\u4e00\u4e2a\u9010\u50cf\u7d20\u7684\u5bc6\u96c6\u9884\u6d4b\u95ee\u9898\uff0c\u5176\u6240\u9700\u7684\u7f16\u7801\u65b9\u5f0f\u548c\u7c7b\u522b\u6570\u91cf\u5de8\u5927\u7684\u5206\u7c7b\u95ee\u9898\u4ee5\u53ca\u76ee\u6807\u68c0\u6d4b\u95ee\u9898\u53ef\u4ee5\u5206\u5f00\u6765\u8bb2\u3002\u629b\u5f00\u5b9e\u4f8b\u5206\u5272\u8fd9\u79cd\u9664\u4e86\u5206\u7c7b\u8fd8\u9700\u8981\u533a\u5206\u5b9e\u4f53\u7684\u4eba\u7269\u4e0d\u8c08\uff0c\u5728\u5355\u7eaf\u7684\u8bed\u4e49\u5206\u5272\u4e2d\uff0c\u5206\u7c7b\u56fe\u50cf\u7684\u65b9\u5f0f\u57fa\u672c\u662f\u901a\u8fc7\u7f16\u7801\u540e\u7279\u5f81\u56fe\u6bcf\u4e2a\u50cf\u7d20\u5bf9\u5e94channel\u4e0a\u89e3\u7801\u51fa\u7684\u6982\u7387\u5206\u5e03\u3002\u5728\u5206\u7c7b\u6570\u91cf\u8f83\u5c11\u65f6\uff0c\u6211\u8ba4\u4e3a\u6240\u9700\u8981\u7684\u7f16\u7801\u590d\u6742\u5ea6\u5e76\u4e0d\u9700\u8981\u5f88\u9ad8\u3002\u964d\u4f4e\u7f16\u7801\u7684\u590d\u6742\u5ea6\uff0c\u4e00\u65b9\u9762\u80fd\u591f\u52a0\u5feb\u53c2\u6570\u6536\u655b\u7684\u901f\u5ea6\uff0c\u53e6\u4e00\u65b9\u9762\u80fd\u591f\u964d\u4f4e\u7f51\u7edc\u53c2\u6570\u4e24\u3002\u81ea\u4ece\u62dc\u8bfb\u4e86\u4e00\u4e9b\u901a\u9053\u6ce8\u610f\u529b\u76f8\u5173\u7684\u6587\u7ae0\uff08\u4f8b\u5982[Squeeze and Excitation Networks](./[23]Squeeze-and-Excitation-Networks)\uff09\uff0c\u6211\u5c31\u9690\u7ea6\u611f\u5230CNN\u5728\u8f83\u957f\u7684channel\u4e0a\u53ef\u80fd\u4f1a\u9690\u5f0f\u5730\u7f16\u7801\u4e00\u4e9b\u9891\u7387\u4fe1\u606f\uff0c\u53ea\u662f\u7531\u4e8e\u5728\u7f51\u7edc\u7684\u76d1\u7763\u4e0a\u6ca1\u6709\u9488\u5bf9\u8fd9\u4e00\u70b9\u8fdb\u884c\u4f18\u5316\uff0c\u6240\u4ee5\u8868\u73b0\u5f97\u5e76\u4e0d\u660e\u663e\u3002\u6b64\u7bc7\u6587\u7ae0\u63d0\u51fa\u5728\u9891\u57df\u4e0a\u9009\u62e9\u5fc5\u8981\u7684\u4fe1\u606f\uff0c\u5e76\u4e0d\u662f\u50cf\u6211\u60f3\u7684\u90a3\u6837\u5728\u76f4\u63a5\u5728\u76d1\u7763\u4e0a\u4f7f\u7f51\u7edc\u663e\u5f0f\u7f16\u7801\u9891\u7387\u4fe1\u606f\uff0c\u800c\u662f\u901a\u8fc7\u524d\u5904\u7406\u4f7f\u7f51\u7edc\u5728\u8f93\u5165\u4e0a\u5c31\u8868\u73b0\u51fa\u5bf9\u9891\u57df\u7684\u504f\u7f6e\u3002\u8fd9\u548c\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u6709\u4e9b\u51fa\u5165\uff0c\u975e\u5e38\u5177\u6709\u542f\u53d1\u610f\u4e49\u3002\\n\\n\u672c\u6587\u7684\u4e3b\u8981\u8d21\u732e\u5982\u4e0b\uff1a\\n\\n1.   \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u4e0d\u9700\u8981\u66f4\u6539\u539f\u6709CNN\u7f51\u7edc\u7ed3\u6784\u7684\u9891\u57df\u5b66\u4e60\u65b9\u6cd5\uff0c\u5176\u4e3b\u8981\u4f7f\u7528\u201c\u67d0\u79cd\u9891\u57df\u50cf\u5173\u7cfb\u6570\u201d\uff08DCT coefficients as input\uff09\u4f5c\u4e3a\u8f93\u5165\u800c\u4e0d\u662fRGB\u56fe\u50cf\u3002\u8be5\u65b9\u6cd5\u5728\u8bb8\u591a\u89c6\u89c9\u4efb\u52a1\u4e0a\u5177\u6709\u51fa\u8272\u8868\u73b0\u3002\\n2.   \u672c\u6587\u901a\u8fc7\u5b9e\u9a8c\u8bc1\u660e\uff0c\u4f7f\u7528\u5728\u9891\u57df\u4e0a\u7684\u524d\u5904\u7406\u6bd4\u76f4\u63a5\u4f7f\u7528\u5377\u79ef\u64cd\u4f5c\u8fdb\u884c\u4e0b\u91c7\u6837\u66f4\u80fd\u4fdd\u7559\u56fe\u50cf\u7684\u4fe1\u606f\u3002\\n3.   \u672c\u6587\u4ece\u9891\u57df\u7684\u89d2\u5ea6\u5bf9\u201c\u5149\u8c31\u504f\u7f6e\u201d\u8fdb\u884c\u4e86\u5206\u6790\u5e76\u8bc1\u660e\u4e86\u4f7f\u7528RGB\u56fe\u50cf\u4f5c\u4e3a\u8f93\u5165\u7684CNN\u6a21\u578b\u5bf9\u4f4e\u9891\u4fe1\u606f\u66f4\u52a0\u654f\u611f\uff0c\u8fd9\u548c\u4eba\u7c7b\u7684\u89c6\u89c9\u7cfb\u7edf\u8868\u73b0\u662f\u8d34\u5408\u7684\u3002\\n4.   \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u53ef\u5b66\u4e60\u7684\u52a8\u6001channel\u9009\u62e9\u5668\u3002\u8be5\u9009\u62e9\u5668\u901a\u8fc7\u5b66\u4e60\u5728\u63a8\u7406\u65f6\u9759\u6001\u5730\u79fb\u9664\u4e00\u90e8\u5206\u76f8\u5173\u6027\u4e0d\u5927\u7684\u9891\u7387\u5206\u91cf\uff08\u901a\u8fc7\u62e6\u622a\u90e8\u5206\u901a\u9053\uff09\u3002\\n\\n---\\n\\n## \u63d0\u51fa\u4e86\u9891\u57df\u7684\u6570\u636e\u524d\u5904\u7406\u8fc7\u7a0b\\n\\n\u5f88\u5c11\u6709CNN\u6a21\u578b\u4f1a\u76f4\u63a5\u5c06\u9ad8\u6e05\u56fe\u7247\u76f4\u63a5\u653e\u5165GPU\u6216\u4efb\u4f55\u8ba1\u7b97\u8bbe\u5907\u4e2d\u8fdb\u884c\u63a8\u7406\u3002\u8fd9\u4f1a\u5bfc\u81f4\u8bbe\u5907\u5185\u5b58\u3001\u5e26\u5bbd\u6216\u8ba1\u7b97\u74f6\u9888\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9ad8\u6e05\u56fe\u7247\u901a\u5e38\u88abCPU\u63d0\u524d\u5904\u7406\u6210\u8f83\u5c0f\u7684\u56fe\u7247\u8f93\u5165\u8fdb\u7f51\u7edc\u3002\u8fd9\u901a\u5e38\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u4fe1\u606f\u7684\u635f\u5931\u4ee5\u53ca\u7cbe\u5ea6\u4e0b\u964d\u3002\\n\\n\u672c\u6587\u4e2d\u7684\u65b9\u6cd5\u662f\u5c06RGB\u8272\u57df\u7684\u56fe\u50cf\u8f6c\u6362\u8fdbYCbCr\u989c\u8272\u7a7a\u95f4\uff0c\u518d\u8f6c\u6362\u8fdb\u9891\u57df\u7a7a\u95f4\u3002\\n\\n>   YCbCr\u6216Y\'CbCr\u6709\u7684\u65f6\u5019\u4f1a\u88ab\u5199\u4f5c\uff1aYCBCR\u6216\u662fY\'CBCR\uff0c\u662f[\u8272\u5f69\u7a7a\u95f4](https://zh.wikipedia.org/wiki/\u8272\u5f69\u7a7a\u9593)\u7684\u4e00\u79cd\uff0c\u901a\u5e38\u4f1a\u7528\u4e8e\u5f71\u7247\u4e2d\u7684\u5f71\u50cf\u8fde\u7eed\u5904\u7406\uff0c\u6216\u662f\u6570\u5b57\u6444\u5f71\u7cfb\u7edf\u4e2d\u3002Y\'\u548cY\u662f\u4e0d\u540c\u7684\uff0cY\u5c31\u662f\u6240\u8c13\u7684[\u6d41\u660e](https://zh.wikipedia.org/wiki/\u6d41\u660e)\uff08[luminance](https://zh.wikipedia.org/w/index.php?title=Luminance&action=edit&redlink=1)\uff09\uff0cY\'\u8868\u793a\u5149\u7684\u6d53\u5ea6\u4e14\u4e3a\u975e\u7ebf\u6027\uff0c\u4f7f\u7528[\u4f3d\u9a6c\u4fee\u6b63](https://zh.wikipedia.org/wiki/\u4f3d\u746a\u6821\u6b63)\uff08gamma correction\uff09\u7f16\u7801\u5904\u7406\uff0c\u800cCB\u548cCR\u5219\u4e3a\u84dd\u8272\u548c\u7ea2\u8272\u7684\u6d53\u5ea6\u504f\u79fb\u91cf\u6210\u5206\u3002\\n>\\n>   **YCbCr**\u4e0d\u662f\u4e00\u79cd[\u7edd\u5bf9\u8272\u5f69\u7a7a\u95f4](https://zh.wikipedia.org/wiki/\u7d55\u5c0d\u8272\u5f69\u7a7a\u9593)\uff0c\u662f[YUV](https://zh.wikipedia.org/wiki/YUV)\u538b\u7f29\u548c\u504f\u79fb\u7684\u7248\u672c\u3002YCbCr\u7684Y\u4e0eYUV\u4e2d\u7684Y\u542b\u4e49\u4e00\u81f4\uff0cCb\u548cCr\u4e0eUV\u540c\u6837\u90fd\u6307\u8272\u5f69\uff0cCb\u6307\u84dd\u8272\u8272\u5ea6\uff0cCr\u6307\u7ea2\u8272\u8272\u5ea6\uff0c\u5728\u5e94\u7528\u4e0a\u5f88\u5e7f\u6cdb\uff0cJPEG\u3001MPEG\u3001DVD\u3001[\u6444\u5f71\u673a](https://zh.wikipedia.org/wiki/\u651d\u5f71\u6a5f)\u3001[\u6570\u5b57\u7535\u89c6](https://zh.wikipedia.org/wiki/\u6578\u4f4d\u96fb\u8996)\u7b49\u7686\u91c7\u6b64\u4e00\u683c\u5f0f\u3002\u56e0\u6b64**\u4e00\u822c\u4fd7\u79f0\u7684YUV\u5927\u591a\u662f\u6307YCbCr**\u3002\\n>\\n>   **YUV**\uff0c\u662f\u4e00\u79cd[\u989c\u8272](https://zh.wikipedia.org/wiki/\u984f\u8272)[\u7f16\u7801](https://zh.wikipedia.org/wiki/\u7de8\u78bc)\u65b9\u6cd5\u3002\u5e38\u4f7f\u7528\u5728\u5404\u4e2a\u5f71\u50cf\u5904\u7406\u7ec4\u4ef6\u4e2d\u3002 YUV\u5728\u5bf9\u7167\u7247\u6216\u89c6\u9891\u7f16\u7801\u65f6\uff0c\u8003\u8651\u5230\u4eba\u7c7b\u7684\u611f\u77e5\u80fd\u529b\uff0c\u5141\u8bb8\u964d\u4f4e\u8272\u5ea6\u7684\u5e26\u5bbd\u3002YUV\u662f\u7f16\u8bd1true-color\u989c\u8272\u7a7a\u95f4\uff08color space\uff09\u7684\u79cd\u7c7b\uff0cY\'UV, YUV, [YCbCr](https://zh.wikipedia.org/wiki/YCbCr)\uff0c[YPbPr](https://zh.wikipedia.org/wiki/YPbPr)\u7b49\u4e13\u6709\u540d\u8bcd\u90fd\u53ef\u4ee5\u79f0\u4e3aYUV\uff0c\u5f7c\u6b64\u6709\u91cd\u53e0\u3002\u201cY\u201d\u8868\u793a**[\u660e\u4eae\u5ea6](https://zh.wikipedia.org/wiki/\u6d41\u660e)**\uff08Luminance\u3001Luma\uff09\uff0c\u201cU\u201d\u548c\u201cV\u201d\u5219\u662f**[\u8272\u5ea6](https://zh.wikipedia.org/wiki/\u8272\u5ea6_(\u8272\u5f69\u5b66))**\u3001**[\u6d53\u5ea6](https://zh.wikipedia.org/wiki/\u6fc3\u5ea6_(\u8272\u5f69\u5b78))**\uff08Chrominance\u3001Chroma\uff09\\n\\n\u4e0a\u8ff0\u5185\u5bb9\u6458\u81ea Wikipedia \u4e2d\u5173\u4e8e [YCbCr](https://zh.wikipedia.org/wiki/YCbCr) \u4ee5\u53ca [YUV ](https://zh.wikipedia.org/wiki/YUV)\u7684\u76f8\u5173\u5185\u5bb9\u3002\u672c\u7bc7\u8bba\u6587\u7684\u65b9\u6cd5\u4e2d\u6ca1\u6709\u76f4\u63a5\u5c06RGB\u8272\u57df\u7684\u56fe\u50cf\u8f6c\u5316\u8fdb\u9891\u57df\u7a7a\u95f4\uff0c\u800c\u662f\u5c06\u6570\u636e\u5148\u653e\u5165YCbCr\u989c\u8272\u7a7a\u95f4\u662f\u6709\u7406\u7531\u7684\u3002\u4e5f\u8bb8\u4f60\u4f1a\u5728\u591a\u5a92\u4f53\u6280\u672f\u6216\u8005\u6570\u5b57\u56fe\u50cf\u5904\u7406\u8bfe\u7a0b\u4e0a\u4e86\u89e3\u8fc7\u65e9\u671f\u7535\u89c6\u673a\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5728\u8be5\u989c\u8272\u7a7a\u95f4\u4e0b\u9ed1\u767d\u89c6\u9891\u662f\u53ea\u6709Y\uff08Luma\uff0cLuminance\uff09\u901a\u9053\u7684\u89c6\u9891\uff0c\u4e5f\u5c31\u662f\u7070\u9636\u503c\u3002\u5230\u4e86\u5f69\u8272\u7535\u89c6\u89c4\u683c\u7684\u5236\u5b9a\uff0c\u662f\u4ee5YUV/[YIQ](https://zh.wikipedia.org/wiki/YIQ)\u7684\u683c\u5f0f\u6765\u5904\u7406\u5f69\u8272\u7535\u89c6\u56fe\u50cf\uff0c\u628aUV\u89c6\u4f5c\u8868\u793a\u5f69\u5ea6\u7684C\uff08Chrominance\u6216Chroma\uff09\uff0c\u5982\u679c\u5ffd\u7565C\u4fe1\u53f7\uff0c\u90a3\u4e48\u5269\u4e0b\u7684Y\uff08Luma\uff09\u4fe1\u53f7\u5c31\u8ddf\u4e4b\u524d\u7684\u9ed1\u767d\u7535\u89c6\u9891\u53f7\u76f8\u540c\uff0c\u8fd9\u6837\u4e00\u6765\u4fbf\u89e3\u51b3\u5f69\u8272\u7535\u89c6\u673a\u4e0e\u9ed1\u767d\u7535\u89c6\u673a\u7684\u517c\u5bb9\u95ee\u9898\u3002Y\'UV\u6700\u5927\u7684\u4f18\u70b9\u5728\u4e8e\u53ea\u9700\u5360\u7528\u6781\u5c11\u7684\u5e26\u5bbd\u3002\\n\\n\u521a\u624d\u63d0\u5230\u201cHVS\u4e2d\u7684\u4e00\u4e9b\u7814\u7a76\u201d\uff0c\u4f5c\u8005\u5728\u9891\u57df\u4e2d\u5bf9CNN\u7684\u8f93\u5165\u8f93\u51fa\u8fdb\u884c\u6d4b\u8bd5\uff0c\u901a\u8fc7\u5b9e\u9a8c\u5206\u6790\u53d1\u73b0\uff0c\u5728\u5206\u7c7b\u3001\u68c0\u6d4b\u548c\u5206\u5272\u4efb\u52a1\u4e2d\uff0cCNN\u6a21\u578b\u5bf9\u4f4e\u9891\u7387\u7684channel\u66f4\u52a0\u654f\u611f\u3002\u8fd9\u548cHVS\u4e2d\u7684\u4e00\u4e9b\u7814\u7a76\u662f\u8d34\u5408\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4f7f\u7528\u73b0\u5728\u4e3b\u6d41\u7684\u6570\u636e\u96c6\u8fdb\u884c\u76d1\u7763\u65f6\uff0cCNN\u5728\u9891\u57df\u4e0a\u8868\u73b0\u51fa\u4e86\u548c\u4eba\u7c7b\u4e00\u6837\u7684\u201c\u4f4e\u9891\u654f\u611f\u6027\u201d\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8eRGB\u8272\u57df\u4e0a\u7684\u8f93\u5165\uff0c\u5e76\u4e0d\u662f\u6574\u4e2aRGB\u7a7a\u95f4\u5185\u7684\u6240\u6709\u503c\u5728CNN\u6a21\u578b\u4e2d\u90fd\u5177\u6709\u91cd\u8981\u7684\u4f5c\u7528\u3002\\n\\n![image-20211023123921777](./src/Learning-in-the-Frequency-Domain/image-20211023123921777.png)\\n\\n\u4e0a\u56fe\uff1a\u5728\u672c\u8bba\u6587\u63d0\u51fa\u7684\u65b9\u6cd5\u4e2d\u56fe\u50cf\u524d\u5904\u7406\u7684\u8fc7\u7a0b\u3002\u8be5\u8fc7\u7a0b\u5305\u542b\u5982\u4e0b\u6b65\u9aa4\uff1a\\n\\n1.   Spatial resize and crop\uff1a\u5c06\u56fe\u50cf\u8f6c\u4e3a\u8f93\u5165\u5927\u5c0f\u3002\\n2.   DCT transform\uff1a\u5c06\u56fe\u50cf\u4eceRGB\u8272\u57df\u8f6c\u5165YCbCr\u989c\u8272\u7a7a\u95f4\uff0c\u518d\u901a\u8fc7DCT\u53d8\u6362\u8f6c\u5165\u9891\u57df\u3002\\n3.   DCT channel select\uff1a\u4e00\u4e2a\u9009\u62e9\u5668\u9009\u62e9\u7684\u8fc7\u7a0b\uff0c\u9009\u51fa\u901a\u9053\u4e2d\u5bf9\u63a8\u7406\u5177\u6709\u66f4\u5927\u5f71\u54cd\u7684\u90e8\u5206\u3002\\n4.   DCT concatenate\uff1a\u5c06\u521a\u624d\u5728YCbCr\u7684\u4e09\u4e2a\u901a\u9053\u91cc\u505a\u51fa\u7684\u9891\u57df\u9009\u62e9\u7ed3\u679c\u62fc\u63a5\u6210\u4e00\u4e2a\u5f20\u91cf\u3002\\n5.   DCT normalize\uff1a\u5229\u7528\u8bad\u7ec3\u6570\u636e\u96c6\u8ba1\u7b97\u7684\u5747\u503c\u548c\u65b9\u5dee\u5bf9\u6bcf\u4e2a\u9891\u7387\u901a\u9053\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406\u3002\\n\\n## \u63d0\u51fa\u9891\u57df\u7684\u901a\u9053\u9009\u62e9\u5668\\n\\n\u5728\u804a\u9891\u57df\u901a\u9053\u7684\u9009\u62e9\uff08\u539f\u6587\uff1aFrequency Channel Selection\uff09\u4e4b\u524d\uff0c\u5148\u56de\u5fc6\u8d77 [Squeeze and Excitation Networks](./[23]Squeeze-and-Excitation-Networks) \u4e2d\u4f7f\u7528Excitation\u7684\u8fc7\u7a0b\u9009\u62e9channel\uff0c\u5728\u9891\u57df\u7684\u9009\u62e9\u95ee\u9898\u4e0a\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u4f7f\u7528\u76f8\u4f3c\u7684\u601d\u8def\u3002\u4f8b\u5982\uff0c\u5c06\u4e0d\u540c\u7684\u9891\u57df\u4fe1\u606f\u5806\u53e0\u5728channel\u4e2d\uff0c\u4f7f\u7528\u7c7b\u4f3cSqueeze\u7684\u8fc7\u7a0b\u4ea7\u751f\u4e00\u7ec4\u7b49\u4e8echannel\u957f\u5ea6\u7684\u9009\u62e9\u5668\uff0c\u51b3\u5b9a\u67d0\u4e2achannel\u662f\u5426\u8fdb\u5165\u8f93\u51fa\u3002\u5728CNN\u4e2d\u662f\u5b58\u5728\u5bf9\u5149\u8c31\u7684\u504f\u7f6e\u7684\uff08\u4e3b\u8981\u4f53\u73b0\u4e3a\u8f93\u5165\u4e3aRGB\u56fe\u50cf\uff09\uff0c\u56e0\u6b64\u5bf9\u4e8e\u7f16\u7801\u597d\u7684\u7279\u5f81\u56fe\uff0c\u53ef\u4ee5\u5728channel\u4e2d\u9009\u51fa\u201c\u6bd4\u8f83\u91cd\u8981\u7684\u90e8\u5206\u201d\u3002\\n\\n>   \u521a\u624d\u63d0\u5230\u201cHVS\u4e2d\u7684\u4e00\u4e9b\u7814\u7a76\u201d\uff0c\u4f5c\u8005\u5728\u9891\u57df\u4e2d\u5bf9CNN\u7684\u8f93\u5165\u8f93\u51fa\u8fdb\u884c\u6d4b\u8bd5\uff0c\u901a\u8fc7\u5b9e\u9a8c\u5206\u6790\u53d1\u73b0\uff0c\u5728\u5206\u7c7b\u3001\u68c0\u6d4b\u548c\u5206\u5272\u4efb\u52a1\u4e2d\uff0cCNN\u6a21\u578b\u5bf9\u4f4e\u9891\u7387\u7684channel\u66f4\u52a0\u654f\u611f\u3002\u8fd9\u548cHVS\u4e2d\u7684\u4e00\u4e9b\u7814\u7a76\u662f\u8d34\u5408\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4f7f\u7528\u73b0\u5728\u4e3b\u6d41\u7684\u6570\u636e\u96c6\u8fdb\u884c\u76d1\u7763\u65f6\uff0cCNN\u5728\u9891\u57df\u4e0a\u8868\u73b0\u51fa\u4e86\u548c\u4eba\u7c7b\u4e00\u6837\u7684\u201c\u4f4e\u9891\u654f\u611f\u6027\u201d\u3002\\n\\n\u57fa\u4e8e\u4e0a\u8ff0\u601d\u8003\uff0c\u6211\u731c\u5bf9\u4e8e\u9891\u57df\u4e0a\u7684\u7279\u5f81\u56fe\u8fd9\u6837\u505a\u7684\u7406\u7531\u4e5f\u662f\u76f8\u540c\u5b58\u5728\u7684\u3002\u8fd8\u771f\u731c\u5bf9\u4e86\uff0c\u5728\u7ecf\u8fc7\u524d\u5904\u7406\u540e\uff0c\u7279\u5f81\u56fe\u4e0a\u4e0d\u540c\u7684channel\u5806\u53e0\u4e86\u4e0d\u540c\u7684\u9891\u57df\u4fe1\u606f\u3002\u672c\u7bc7\u8bba\u6587\u4e2d\u63d0\u51fa\u901a\u8fc7\u5b66\u4e60\u7b5b\u9664\u4e00\u90e8\u5206\u5bf9\u6700\u7ec8\u7684\u7ed3\u679c\u53ca\u8bef\u5dee\u5f71\u54cd\u4e0d\u5927\u7684\u901a\u9053\u3002\u5728\u521a\u624d\u7684\u524d\u5904\u7406\u4e2d\uff0c\u56fe\u50cf\u53d8\u4e3a\u4e86$W\\\\times H\\\\times C$\uff08\u672c\u6587\u4e2d$C=192$\uff09\u7684\u9891\u57df\u7279\u5f81\u56fe\uff0c\u8f93\u5165\u9891\u7387\u9009\u62e9\u5668\u3002\u8fd9\u7bc7\u6587\u7ae0\u5728\u901a\u9053\u9009\u62e9\u4e0a\u76f4\u63a5\u4f7f\u7528\u4e86\u7c7b\u4f3cSE Block\u7684\u7ed3\u6784\uff1a\\n\\n![image-20211023123801381](./src/Learning-in-the-Frequency-Domain/image-20211023123801381.png)\\n\\n\u4e0a\u56fe\uff1a\u9009\u62e9\u5668\u7ed3\u6784\uff08\u4e0b\uff0c\u6587\u4e2d\u79f0\u4e4b\u4e3a $Gate\\\\ Module$\uff09\u548cSE Block\uff08\u4e0a\uff09\u7684\u7ed3\u6784\u5bf9\u6bd4\u56fe\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u9664\u4e86\u56fe\u4e2d\u6807\u53f71\u548c2\uff0c\u5176\u4f59\u90e8\u5206\u548c\u4e24\u8005\u7ed3\u6784\u57fa\u672c\u76f8\u540c\uff08\u6ce8\uff1a\u672c\u6587\u7684$F_{ex}(\\\\cdot,W)$\u8fc7\u7a0b\u662f$1\\\\times 1$\u5377\u79ef\uff0c\u800c\u4e0d\u662fSE Block\u4e2d\u5168\u8fde\u63a5\uff09\u3002\u5728Gate Module\u7684\u8f93\u51fa\u4e2d\u6807\u8bb0\u4e3a\u767d\u8272\u7684\u901a\u9053\u4ee3\u8868\u88ab\u8fc7\u6ee4\u7684\u901a\u9053\uff08\u67e5\u770b[Squeeze and Excitation Networks](./[23]Squeeze-and-Excitation-Networks) \u4ee5\u7406\u89e3 SE Block \uff09\u3002\\n\\n\u8bba\u6587\u7684\u4f5c\u8005\u5728\u6587\u4e2d\u8bf4\u660e\u4e86\u8be5\u7ed3\u6784\u4e0eSE Block\u7684\u4e0d\u540c\u4e4b\u5904\uff1a\u5728 SE Block \u4e2d\uff0c\u5bf9channel\u7684\u91c7\u6837\u662f\u6570\u503c\u7684\uff0c\u6bcf\u4e2achannel\u4f1a\u5f97\u5230\u4e00\u4e2a\u6570\u503c\u7684\u6743\u91cd\u3002\u800c\u672c\u6587\u7684Gate Module\u5219\u5bf9channel\u8fdb\u884c $0-1$ \u91c7\u6837\u3002\u91c7\u6837\u7684\u65b9\u5f0f\u662f $Tensor 3$ \u901a\u8fc7\u4e24\u5957\u53c2\u6570\u53d8\u4e3a $Tensor 4$\uff08shape\u4e3a$1\\\\times 1\\\\times C\\\\times 2$\uff09\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4f2f\u52aa\u5229\u5206\u5e03\u7684\u91c7\u6837\u3002\u539f\u6587\u4e2d\u662f\u8fd9\u6837\u63cf\u8ff0\u7684\uff1a\\n\\n>   The decision is obtained by sampling a Bernoulli distribution $Bern(p)$, where $p$ is calculated by the 2 numbers in the $1 \\\\times 1 \\\\times C \\\\times 2$ tensor mentioned above.\\n\\n\u5728\u539fSE Block\u7684\u8bbe\u8ba1\u4e2d\u7ecf\u8fc7\u201c$F_{ex}$\u201d\u8fc7\u7a0b\u5f97\u5230 $Tensor 3$ \u540e\u76f4\u63a5 $softmax$ \u3002\u4f46\u662f\u5728\u672c\u6587\u7ed9\u51fa\u7684Gate Module\u4e2d\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u4e0a\u9762\u63cf\u8ff0\u7684\u9009\u62e9\u65b9\u6cd5\u4e2d\u4f7f\u7528\u4e86\u4f2f\u52aa\u5229\u5206\u5e03\u91c7\u6837\uff0c\u8fd9\u4f1a\u4ea7\u751f\u79bb\u6563\u7684\u901a\u9053\u9009\u62e9\u51b3\u7b56\u3002\u5f53\u6211\u4eec\u91c7\u7528\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u65f6\uff0c\u80fd\u591f\u76f4\u63a5\u4f18\u5316\u7684\u662f\u8fde\u7eed\u91cf\u3002\u5bf9\u4e8e\u79bb\u6563\u91cf\u4ee5\u53ca\u5728\u4e2d\u95f4\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u79bb\u6563\u91cf\u7684\u7f51\u7edc\u662f\u96be\u4ee5\u76f4\u63a5\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7684\u3002\u56e0\u6b64\uff0c\u5728Gate Module\u4e2d\uff0c\u7136\u540e\u518d\u8fdb\u884c $Gumbel\\\\ softmax$\uff08 Gumbel softmax distribution \u53ef\u53c2\u8003\u8bba\u6587[Categorical Reparameterization with Gumbel-Softmax ](https://arxiv.org/abs/1611.01144)\uff09\u3002$Gumbel\\\\ softmax$ \u5141\u8bb8\u4e86\u5728\u5177\u6709\u79bb\u6563\u91c7\u6837\u7684\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\\n\\n![image-20211023123813633](./src/Learning-in-the-Frequency-Domain/image-20211023123813633.png)\\n\\n\u4e0a\u56fe\uff1a\u901a\u8fc7\u7c7b\u4f3c SE Block \u7684\u7ed3\u6784\u9009\u53d6\u91cd\u8981\u7684\u901a\u9053\u3002\\n\\n## \u63a2\u7a76\u54ea\u4e9b\u901a\u9053\u88ab\u9009\u62e9\u4e86\\n\\n\u4e3a\u4e86\u7814\u7a76\u901a\u9053\u9009\u62e9\u5668\u7684\u884c\u4e3a\uff0c\u4f5c\u8005\u4f7f\u7528\u76f8\u540c\u6570\u636e\u96c6\u5728\u56fe\u50cf\u5206\u7c7b\u548c\u8bed\u4e49\u5206\u5272\u4efb\u52a1\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u5bf9\u9891\u57df\u7684\u9009\u62e9\u5668\u9009\u51fa\u7684channel\u4fe1\u606f\u8fdb\u884c\u4e86\u53ef\u89c6\u5316\uff1a\\n\\n![image-20211023123725921](./src/Learning-in-the-Frequency-Domain/image-20211023123725921.png)\\n\\n\u4e0a\u56fe\uff1a\u5728 ImageNet\uff08validation set\uff09\u8fdb\u884c**\u5206\u7c7b**\u4efb\u52a1\u65f6\u5bf9\u9009\u51fa\u7684\u901a\u9053 YCbCr \u7ec4\u6210\u7ed8\u5236\u53ef\u89c6\u5316 heat map\u3002\\n\\n![image-20211023123729829](./src/Learning-in-the-Frequency-Domain/image-20211023123729829.png)\\n\\n\u4e0a\u56fe\uff1a\u5728 COCO\uff08validation set\uff09\u8fdb\u884c**\u5206\u5272**\u4efb\u52a1\u65f6\u5bf9\u9009\u51fa\u7684\u901a\u9053 YCbCr \u7ec4\u6210\u7ed8\u5236\u53ef\u89c6\u5316 heat map\u3002\\n\\n>   \u9605\u8bfb\u4e0a\u8ff0 heat map \u7684\u65b9\u6cd5\uff1a\u5728 heat map \u4e2d\u6bcf\u4e2a\u4ee3\u8868channel\u65b9\u5757\u4e0a\u5177\u6709\u7684index\u7f16\u53f7\u8868\u793a\u8be5\u901a\u9053\u5bf9\u5e94\u7684frequency index\u3002\u989c\u8272\u8d8a\u6df1\u8868\u793a\u5728\u524d\u5411\u4f20\u64ad\u65f6\u8be5channel\u8d8a\u5bb9\u6613\u88ab\u9009\u4e2d\u3002\\n\\n\u901a\u8fc7\u89c2\u5bdf\u4e0a\u8ff0\u53ef\u89c6\u5316\u7ed3\u679c\uff0c\u8bba\u6587\u7684\u4f5c\u8005\u63d0\u51fa\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u7ed3\u8bba\uff1a\\n\\n1.   \u4f4e\u9891\u7684\uff08index\u8f83\u5c0f\u7684\uff09\u901a\u9053\u6bd4\u9ad8\u9891\u7684\uff08index\u8f83\u5927\u7684\uff09\u901a\u9053\u66f4\u5bb9\u6613\u88ab\u9009\u62e9\u3002\u8fd9\u8bf4\u660e\u5728\u5e38\u89c1\u7684\u89c6\u89c9\u4efb\u52a1\u4e2d\u4f4e\u9891\u4fe1\u606f\u6bd4\u9ad8\u9891\u4fe1\u606f\u643a\u5e26\u4e86\u66f4\u591a\u5bf9\u63a8\u7406\u6709\u6548\u7684\u4fe1\u606f\u3002\\n2.   \u5728\u4eae\u5ea6\u5206\u91cfY\uff08luma component Y\uff09\u4e2d\u7684\u901a\u9053\u6bd4Cb\u548cCr\u4e2d\u7684\u901a\u9053\u66f4\u5bb9\u6613\u88ab\u9009\u62e9\u3002\u8fd9\u8bf4\u660eYCbCr\u7a7a\u95f4\u5185\u7684\u8f93\u5165\u5728\u63a8\u7406\u65f6\u56fe\u50cf\u7684\u4eae\u5ea6\u5206\u91cfY\u5305\u542b\u4e86\u66f4\u591a\u6709\u7528\u4fe1\u606f\u3002\\n3.   \u6839\u636eheat map\uff0c\u5728\u5206\u7c7b\u4efb\u52a1\u548c\u5206\u5272\u4efb\u52a1\u4e0a\uff0c\u4e0a\u8ff0\u4e24\u70b9\u540c\u65f6\u6210\u7acb\u3002\u8fd9\u8bc1\u660e\u4e86\u8fd9\u4e9b\u7ed3\u8bba\u5e76\u975etask-specific\uff0c\u5e76\u4e14\u53ef\u80fd\u540c\u6837\u9002\u7528\u4e8e\u66f4\u591a\u9ad8\u7ea7\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u3002\\n4.   \u4f4e\u9891\u7684\u901a\u9053\u5e76\u4e0d\u662f\u4e25\u683c\u5730\u6bd4\u9ad8\u9891\u7684\u901a\u9053\u5bb9\u6613\u88ab\u9009\u4e2d\u3002\u4f8b\u5982\uff0c\u5728Cb\u548cCr\u4e0a\uff0c\u80fd\u591f\u89c2\u5bdf\u5230$6,9$\u901a\u9053\u88ab\u9009\u4e2d\u800c$3,4,5$\u901a\u9053\u6ca1\u6709\u88ab\u9009\u4e2d\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u5728COCO\u6570\u636e\u96c6\u4e0a $index=0$\u5bf9\u5e94\u7684\u901a\u9053\u88ab\u9009\u62e9\u7684\u53ef\u80fd\u6027\u4f4e\u4e8e$index=1,2$\u7684\u901a\u9053\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0a\u8ff0\u7ed3\u8bba\u53ef\u80fd\u56e0\u4e3a\u6570\u636e\u96c6\u5206\u5e03\u7684\u4e0d\u540c\u5177\u6709\u5c11\u91cf\u5dee\u5f02\u3002\\n\\n\u8fd9\u4e9b\u7ed3\u8bba\u4e5f\u8bb8\u8bf4\u660e\u4e86\uff0cCNN\u6a21\u578b\u548c\u4eba\u7c7b\u7684\u89c6\u89c9\u4e00\u6837\u559c\u6b22\u4f4e\u5229\u7528\u4f4e\u9891\u4fe1\u606f\u3002JPEG\u6807\u51c6\u5728\u538b\u7f29\u56fe\u50cf\u65f6\u4f7f\u7528\u7684\u65f6\u76f8\u4f3c\u7684\u7b56\u7565\u3002\u5982\u679c\u4f60\u60f3\u4ed4\u7ec6\u7814\u7a76\u4ee5\u4e0bJPEG\u6807\u51c6\uff0c\u53ef\u4ee5\u79fb\u6b65\u7ef4\u57fa\u3002\\n\\n## \u4ec0\u4e48\u6570\u636e\u8f93\u5165\u4e86\u7f51\u7edc\\n\\n\u7ecf\u8fc7\u524d\u5904\u7406\u5f97\u5230\u9891\u57df\u7279\u5f81\u56fe\u4e5f\u5e76\u6ca1\u6709\u76f4\u63a5\u4f5c\u4e3a\u8f93\u5165\u7279\u5f81\u76f4\u63a5\u8f93\u5165\u7f51\u7edc\uff0c\u800c\u662f\u4e0e\u6765\u81easpatial-wise\u7684\u7279\u5f81\u56feconcatenate\u6210\u4e3a\u7ec4\u5408\u7279\u5f81\u5171\u540c\u8f93\u5165\u7f51\u7edc\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\n\\n![image-20211023124014543](./src/Learning-in-the-Frequency-Domain/image-20211023124014543.png)\\n\\n\u4e0a\u56fe\uff1a\u524d\u5904\u7406\u540e\u7684\u9891\u57df\u7279\u5f81\u4e0e\u76f4\u63a5\u6765\u81ea\u56fe\u50cf\u7684\u7279\u5f81\u56fe\u62fc\u63a5\u7684\u65b9\u5f0f\u3002\u7531\u4e8eCNN\u4e2d\u7684\u5377\u79ef\u5c42\u5bf9\u4e8espatial-wise\u7684\u56fe\u50cf\u6570\u636e\u5728\u8bbe\u8ba1\u4e0a\u5c31\u8868\u73b0\u51fa\u4f18\u5316\u504f\u7f6e\uff0c\u56e0\u6b64\u7a7a\u57df\u4e0a\u7684\u8f93\u5165\u662f\u5fc5\u8981\u7684\u3002\u4e0a\u56fe\u4e2dchannel\u6570\u91cf\u5199\u4e3a$64$\u4ec5\u4e3a\u4e3e\u4f8b\u3002\u6839\u636e\u8bba\u6587\u63cf\u8ff0\uff0c\u5b9e\u9645\u5728\u4ee3\u7801\u4e2d\u8fd9\u4e2a\u6570\u5b57\u4e00\u822c\u5c0f\u7b49\u4e8e$192$\u3002\u5728\u8fd9\u7247\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u4e00\u76f4\u5c06\u8fd9\u4e2a\u6570\u5b57\u5199\u4e3a$192$\u3002\\n\\n![image-20211023123829531](./src/Learning-in-the-Frequency-Domain/image-20211023123829531.png)\\n\\n\u4e0a\u56fe\uff1a\u771f\u6b63\u88ab\u8f93\u5165\u540e\u7eed\u7f51\u7edc\u4e2d\u7684\u6570\u636e\u3002\u5728concatenate\u64cd\u4f5c\u4e4b\u540e\uff0c\u7a7a\u95f4\u57df\u7684\u7279\u5f81\u56fe\u548c\u9891\u57df\u7684\u7279\u5f81\u56fe\u88ab\u62fc\u63a5\u3002\u7ecf\u8fc7\u8fd9\u6837\u7684\u524d\u5904\u7406\uff0c\u4f7f\u8f93\u5165\u7684\u7279\u5f81\u5305\u542b\u4e86\u9891\u57df\u4fe1\u606f\u4e30\u5bcc\u4e86\u7279\u5f81\u8868\u8fbe\uff0c\u5e76\u4e14\u964d\u4f4e\u4e86\u5360\u7528\u5927\u91cf\u5e26\u5bbd\u7684\u7a7a\u57df\u7279\u5f81\u56fe\u5927\u5c0f\u3002"},{"id":"/[42]CCNet-Criss-Cross-Attention-for-Semantic-Segmentation","metadata":{"permalink":"/blog/[42]CCNet-Criss-Cross-Attention-for-Semantic-Segmentation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[42]CCNet-Criss-Cross-Attention-for-Semantic-Segmentation.md","source":"@site/blog/[42]CCNet-Criss-Cross-Attention-for-Semantic-Segmentation.md","title":"CCNet - Criss-Cross Attention for Semantic Segmentation","description":"\u63d0\u51fa\u5341\u5b57\u4ea4\u53c9\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u4f7f\u7528\u5faa\u73af\u7a00\u758f\u8fde\u63a5\u4ee3\u66ff\u5bc6\u96c6\u8fde\u63a5\uff0c\u5b9e\u73b0\u6027\u80fdSOTA","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"segmentation","permalink":"/blog/tags/segmentation"}],"readingTime":11.03,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"CCNet - Criss-Cross Attention for Semantic Segmentation","authors":["asthestarsfall"],"tags":["attention-mechanism","segmentation"]},"prevItem":{"title":"Learning in the Frequency Domain","permalink":"/blog/[40]Learning-in-the-Frequency-Domain"},"nextItem":{"title":"RepVGG - Making VGG-style ConvNets Great Again","permalink":"/blog/[43]RepVGG-Making-VGG-style-ConvNets-Great-Again"}},"content":"\u63d0\u51fa\u5341\u5b57\u4ea4\u53c9\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u4f7f\u7528\u5faa\u73af\u7a00\u758f\u8fde\u63a5\u4ee3\u66ff\u5bc6\u96c6\u8fde\u63a5\uff0c\u5b9e\u73b0\u6027\u80fdSOTA\\n\\n> \u8bba\u6587\u540d\u79f0\uff1a[CCNet: Criss-Cross Attention for Semantic Segmentation](https://arxiv.org/pdf/1811.11721.pdf)\\n>\\n> \u4f5c\u8005\uff1aZilong Huang\uff0cXinggang Wang Yun\uff0cchao Wei\uff0cLichao Huang\uff0cWenyu Liu\uff0cThomas S. Huang\\n>\\n> Code\uff1ahttps://github.com/speedinghzl/CCNet\\n\\n## \u6458\u8981\\n\\n\u4e0a\u4e0b\u6587\u4fe1\u606f\u5728\u89c6\u89c9\u7406\u89e3\u95ee\u9898\u4e2d\u81f3\u5173\u91cd\u8981\uff0c\u8b6c\u5982\u8bed\u4e49\u5206\u5272\u548c\u76ee\u6807\u68c0\u6d4b\uff1b\\n\\n\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5341\u5b57\u4ea4\u53c9\u7684\u7f51\u7edc\uff08Criss-Cross Net\uff09\u4ee5\u975e\u5e38\u9ad8\u6548\u7684\u65b9\u5f0f\u83b7\u53d6\u5b8c\u6574\u7684\u56fe\u50cf\u4e0a\u4e0b\u6587\u4fe1\u606f\uff1a\\n\\n1. \u5bf9\u6bcf\u4e2a\u50cf\u7d20\u4f7f\u7528\u4e00\u4e2a\u5341\u5b57\u6ce8\u610f\u529b\u6a21\u5757\u805a\u96c6\u5176\u8def\u5f84\u4e0a\u6240\u6709\u50cf\u7d20\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff1b\\n2. \u901a\u8fc7\u5faa\u73af\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u50cf\u7d20\u6700\u7ec8\u90fd\u53ef\u4ee5\u6355\u83b7\u5b8c\u6574\u7684\u56fe\u50cf\u76f8\u5173\u6027\uff1b\\n3. \u63d0\u51fa\u4e86\u4e00\u79cd\u7c7b\u522b\u4e00\u81f4\u6027\u635f\u5931\u6765\u589e\u5f3a\u6a21\u5757\u7684\u8868\u73b0\u3002\\n\\nCCNet\u5177\u6709\u4e00\u4e0b\u4f18\u52bf\uff1a\\n\\n1. \u663e\u5b58\u53cb\u597d\uff1a\u76f8\u8f83\u4e8eNon-Local\u51cf\u5c11\u663e\u5b58\u5360\u752811\u500d\\n2. \u8ba1\u7b97\u9ad8\u6548\uff1a\u5faa\u73af\u5341\u5b57\u6ce8\u610f\u529b\u51cf\u5c11Non-Local\u7ea685%\u7684\u8ba1\u7b97\u91cf\\n3. SOTA\\n4. Achieve the **mIoU** scores of 81.9%, 45.76% and 55.47% on the **Cityscapes test set**, the **ADE20K validation set** and the **LIP validation set** respectively\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4ecb\u7ecd\\n\\n- \u5f53\u524dFCN\u5728\u8bed\u4e49\u5206\u5272\u4efb\u52a1\u53d6\u5f97\u4e86\u663e\u8457\u8fdb\u5c55\uff0c\u4f46\u662f\u7531\u4e8e\u56fa\u5b9a\u7684\u51e0\u4f55\u7ed3\u6784\uff0c\u5206\u5272\u7cbe\u5ea6\u5c40\u9650\u4e8eFCN**\u5c40\u90e8\u611f\u53d7\u91ce**\u6240\u80fd\u63d0\u4f9b\u7684**\u77ed\u7a0b\u611f\u53d7\u91ce**\uff0c\u76ee\u524d\u5df2\u6709\u76f8\u5f53\u591a\u7684\u5de5\u4f5c\u81f4\u529b\u4e8e\u5f25\u8865FCN\u7684\u4e0d\u8db3\uff0c\u76f8\u5173\u5de5\u4f5c\u770b\u8bba\u6587\u3002\\n- \u5bc6\u96c6\u9884\u6d4b\u4efb\u52a1\u5b9e\u9645\u4e0a\u9700\u8981\u9ad8\u5206\u8fa8\u7387\u7684\u7279\u5f81\u6620\u5c04\uff0c\u56e0\u6b64Non-Local\u7684\u65b9\u6cd5\u5f80\u5f80\u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8\uff0c\u5e76\u4e14\u5360\u7528\u5927\u91cf\u663e\u5b58\uff0c\u56e0\u6b64\u8bbe\u60f3\u4f7f\u7528\u51e0\u4e2a\u8fde\u7eed\u7684\u7a00\u758f\u8fde\u901a\u56fe\uff08sparsely-connected graphs\uff09\u6765\u66ff\u6362\u5e38\u89c1\u7684\u5355\u4e2a\u5bc6\u96c6\u8fde\u901a\u56fe\uff08 densely-connected graph\uff09\uff0c\u63d0\u51faCCNet\u4f7f\u7528\u7a00\u758f\u8fde\u63a5\u6765\u4ee3\u66ffNon-Local\u7684\u5bc6\u96c6\u8fde\u63a5\u3002\\n- \u4e3a\u4e86\u63a8\u52a8\u5faa\u73af\u5341\u5b57\u6ce8\u610f\u529b\u5b66\u4e60\u66f4\u591a\u7684\u7279\u5f81\uff0c\u5f15\u5165\u4e86\u7c7b\u522b\u4e00\u81f4\u635f\u5931\uff08category consistent loss\uff09\u6765\u589e\u5f3aCCNet\uff0c\u5176\u5f3a\u5236\u7f51\u7edc\u5c06\u6bcf\u4e2a\u50cf\u7d20\u6620\u5c04\u5230\u7279\u5f81\u7a7a\u95f4\u7684n\u7ef4\u5411\u91cf\uff0c\u4f7f\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\u7684\u50cf\u7d20\u7684\u7279\u5f81\u5411\u91cf\u9760\u5f97\u66f4\u8fd1\u3002\\n\\n## \u65b9\u6cd5\\n\\nCCNet\u53ef\u80fd\u662f\u53d7\u5230\u4e4b\u524d\u5c06\u5377\u79ef\u8fd0\u7b97\u5206\u89e3\u4e3a\u6c34\u5e73\u548c\u5782\u76f4\u7684GCN\u4ee5\u53ca\u5efa\u6a21\u5168\u5c40\u4f9d\u8d56\u6027\u7684Non-Local\uff0cCCNet\u4f7f\u7528\u7684\u5341\u5b57\u6ce8\u610f\u529b\u76f8\u8f83\u4e8e\u5206\u89e3\u66f4\u5177\u4f18\u52bf\uff0c\u62e5\u6709\u6bd4Non-Local\u5c0f\u7684\u591a\u5f97\u8ba1\u7b97\u91cf\u3002\\n\\n\u6587\u4e2d\u8ba4\u4e3aCCNet\u662f\u4e00\u79cd\u56fe\u795e\u7ecf\u7f51\u7edc\uff0c\u7279\u5f81\u56fe\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u53ef\u4ee5\u88ab\u89c6\u4f5c\u4e00\u4e2a\u8282\u70b9\uff0c\u5229\u7528\u8282\u70b9\u95f4\u7684\u5173\u7cfb\uff08\u4e0a\u4e0b\u6587\u4fe1\u606f\uff09\u6765\u751f\u6210\u66f4\u597d\u7684\u8282\u70b9\u7279\u5f81\u3002\\n\\n\u6700\u540e\uff0c\u63d0\u51fa\u4e86\u540c\u65f6\u5229\u7528\u65f6\u95f4\u548c\u7a7a\u95f4\u4e0a\u4e0b\u6587\u4fe1\u606f\u76843D\u5341\u5b57\u6ce8\u610f\u6a21\u5757\u3002\\n\\n### \u7f51\u7edc\u7ed3\u6784\\n\\n![image-20210816133242063](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816133242063.png)\\n\\n\u6574\u4f53\u6d41\u7a0b\u5982\u4e0b\uff1a\\n\\n1. \u5bf9\u4e8e\u7ed9\u5b9a\u7684$X$\uff0c\u4f7f\u7528\u5377\u79ef\u5c42\u83b7\u5f97\u964d\u7ef4\u7684\u7279\u5f81\u6620\u5c04$H$\uff1b\\n2. $H$\u4f1a\u8f93\u5165\u5341\u5b57\u6ce8\u610f\u529b\u6a21\u5757\u4ee5\u751f\u6210\u65b0\u7684\u7279\u5f81\u6620\u5c04$H\'$\u200b\uff0c\u5176\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u90fd\u805a\u96c6\u4e86\u5782\u76f4\u548c\u6c34\u5e73\u65b9\u5411\u7684\u4fe1\u606f\uff1b\\n3. \u8fdb\u884c\u4e00\u6b21\u5faa\u73af\uff0c\u5c06$H\'$\u8f93\u5165\u5341\u5b57\u6ce8\u610f\u529b\uff0c\u5f97\u5230$H\'\'$\uff0c\u5176\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u5b9e\u9645\u4e0a\u90fd\u805a\u96c6\u4e86\u6240\u6709\u50cf\u7d20\u7684\u4fe1\u606f\uff1b\\n4. \u5c06$H\'\'$\u4e0e\u5c40\u90e8\u7279\u5f81\u8868\u793a$X$\u8fdb\u884c$Concatenation$\u200b\u200b\uff1b\\n5. \u7531\u540e\u7eed\u7684\u7f51\u7edc\u8fdb\u884c\u5206\u5272\u3002\\n\\n### Criss-Cross Attention\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20210816135006656.png\\" alt=\\"image-20210816135006656\\"/>\\n\\n\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a\\n\\n1. \u4f7f\u7528$1\\\\times 1$\u200b\u5377\u79ef\u8fdb\u884c\u964d\u7ef4\u5f97\u5230$Q\uff0cK\\\\in\\\\mathbb{R}^{C\'\\\\times W\\\\times H}$\u200b\uff1b\\n\\n2. \u901a\u8fc7**Affinity**\u64cd\u4f5c\u751f\u6210\u6ce8\u610f\u529b\u56fe$A\\\\in\\\\mathbb{R}^{(H+W-1)\\\\times (H\\\\times W)}$\u200b\uff0c\u5176\u4e2d\uff1a\\n\\n   1. \u5bf9\u4e8e$Q$\u200b\u7a7a\u95f4\u7ef4\u5ea6\u4e0a\u7684\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e$u$\u200b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5411\u91cf$Q_u\\\\in\\\\mathbb{R}^{C\'}$\u200b\uff1b\u200b\u200b\u200b\\n\\n   2. \u540c\u65f6\uff0c\u6211\u4eec\u5728$K$\u200b\u4e0a\u5f97\u5230\u4e00\u4e2a\u96c6\u5408$\\\\Omega_u\\\\in \\\\mathbb{R}^{(H+W-1)\\\\times C\'}$\u200b\u200b\uff0c\u5176\u4ee3\u8868\u7740\u4f4d\u7f6e$u$\u200b\u200b\u200b\u7684\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\uff1b\\n\\n   3. \u4ee4$\\\\Omega_{i,u}$\u200b\u8868\u793a$\\\\Omega_{u}$\u200b\u7684\u7b2c$i$\u4e2a\u5143\u7d20\uff0c**Affinity**\u64cd\u4f5c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\n      $$\\n      d_{i,u}=Q_u\\\\Omega_{i,u}^T\\\\qquad i\\\\in [0,1,\\\\cdots,H+W-1],u\\\\in[0,1,\\\\cdots,H\\\\times W]\\n      $$\\n      \u5176\u7528\u6765\u8868\u793a\u4e24\u8005\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u6700\u7ec8\u6211\u4eec\u53ef\u4ee5\u5f97\u5230$D\\\\in\\\\mathbb{R}^{(H+W-1)\\\\times (H\\\\times W)}$\u200b\u200b\\n\\n   4. \u6700\u7ec8\u5728\u901a\u9053\u7ef4\u5ea6\u4e0a\u5bf9$D$\u200b\u4f7f\u7528$Softmax$\u200b\uff0c\u5373\u53ef\u5f97\u5230\u6ce8\u610f\u529b\u56fe$A$\u200b\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684**\u901a\u9053\u7ef4\u5ea6**\u4ee3\u8868\u7684\u662f$H+W-1$\u200b\u200b\u200b\u200b\u8fd9\u4e2a\u7ef4\u5ea6\uff0c\u5176\u8868\u793a\u67d0\u4e2a\u4f4d\u7f6e\u50cf\u7d20\u4e0e\u5176\u5782\u76f4\u6c34\u5e73\u65b9\u5411\u4e0a\u50cf\u7d20\u7684\u76f8\u5173\u6027\u3002\\n\\n3. \u53e6\u4e00\u65b9\u9762\uff0c\u4f9d\u65e7\u4f7f\u7528$1\\\\times 1$\u5377\u79ef\u751f\u6210$V\\\\in\\\\mathbb{R}^{C\\\\times W\\\\times H}$\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5411\u91cf$V_u\\\\in \\\\mathbb{R}^C$\u548c\u4e00\u4e2a\u96c6\u5408$\\\\Phi_u\\\\in \\\\mathbb{R}^{(H+W-1)\\\\times C}$\u200b\\n\\n4. \u6700\u540e\u4f7f\u7528**Aggregation**\u64cd\u4f5c\u5f97\u5230\u6700\u7ec8\u7684\u7279\u5f81\u56fe\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a\\n   $$\\n   H\'_u=\\\\sum_{i=0}^{H+W-1}A_{i,u}\\\\Phi_{i,u}+H_u\\n   $$\\n   \u5176\u4e2d$H\'_u\\\\in\\\\mathbb{R}^{C}$\u200b\u200b\u200b\u200b\u200b\u662f\u67d0\u4e2a\u4f4d\u7f6e\u7684\u7279\u5f81\u5411\u91cf\u3002\\n\\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u6355\u83b7\u67d0\u4e2a\u4f4d\u7f6e\u50cf\u7d20\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u4e0a\u7684\u4fe1\u606f\uff0c\u7136\u800c\uff0c\u8be5\u50cf\u7d20\u4e0e\u5468\u56f4\u7684\u5176\u4ed6\u50cf\u7d20\u4ecd\u7136\u4e0d\u5b58\u5728\u5173\u7cfb\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u5faa\u73af\u673a\u5236\u3002\\n\\n### Recurrent Criss-Cross Attention (RCCA)\\n\\n\u901a\u8fc7\u591a\u6b21\u4f7f\u7528CCA\u6765\u8fbe\u5230\u5bf9\u4e0a\u4e0b\u6587\u8fdb\u884c\u5efa\u6a21\uff0c\u5f53\u5faa\u73af\u6b21\u6570R=2\u65f6\uff0c\u7279\u5f81\u56fe\u4e2d\u4efb\u610f\u4e24\u4e2a\u7a7a\u95f4\u4f4d\u7f6e\u7684\u5173\u7cfb\u53ef\u4ee5\u5b9a\u4e49\u4e3a\uff1a\\n$$\\n\\\\exist i\\\\in\\\\mathbb{R}^{H+W+1},s.t.A_{i,u}=f(A,u_{x}^{CC},u^{CC}_y,u_x,u_y)\\n$$\\n\u65b9\u4fbf\u8d77\u89c1\uff0c\u5bf9\u4e8e\u7279\u5f81\u56fe\u4e0a\u7684\u4e24\u4e2a\u4f4d\u7f6e$(u_x,u_y)$\u548c$(\\\\theta_x,\\\\theta_y)$\uff0c\u5176\u4fe1\u606f\u4f20\u9012\u793a\u610f\u56fe\u5982\u4e0b\uff1a\\n\\n![image-20210816164356027](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816164356027.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u7ecf\u8fc7\u4e24\u6b21\u5faa\u73af\uff0c\u539f\u672c\u4e0d\u76f8\u5173\u7684\u4f4d\u7f6e\u4e5f\u80fd\u591f\u5efa\u7acb\u8054\u7cfb\u4e86\u3002\\n\\n### Learning Category Consistent Features\\n\\n\u5bf9\u4e8e\u8bed\u4e49\u5206\u5272\u4efb\u52a1\uff0c\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\u7684\u50cf\u7d20\u5e94\u8be5\u5177\u6709\u76f8\u4f3c\u7684\u7279\u5f81\uff0c\u800c\u6765\u81ea\u4e0d\u540c\u7c7b\u522b\u7684\u50cf\u7d20\u5e94\u8be5\u5177\u6709\u76f8\u8ddd\u5f88\u8fdc\u7684\u7279\u5f81\u3002\\n\\n\u7136\u800c\uff0c\u805a\u96c6\u7684\u7279\u5f81\u53ef\u80fd\u5b58\u5728\u8fc7\u5ea6\u5e73\u6ed1\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u56fe\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\uff0c\u4e3a\u6b64\uff0c\u63d0\u51fa\u4e86\u7c7b\u522b\u4e00\u81f4\u635f\u5931\u3002\\n$$\\nl_{var}=\\\\frac{1}{|C|}\\\\sum_{c\\\\in C}\\\\frac{1}{N_c}\\\\sum_{i=1}^{N_c}\\\\varphi_{var}(h_i,\\\\mu_i)\\n$$\\n\\n$$\\nl_{dis}=\\\\frac{1}{|C|(|C|-1)}\\\\sum_{c_a\\\\in C}\\\\sum_{c_b\\\\in C}\\\\varphi_{dis}(\\\\mu_{c_a},\\\\mu_{c_b})\\n$$\\n\\n$$\\nl_{reg}=\\\\frac{1}{|C|}\\\\sum_{c\\\\in C}||\\\\mu_c||\\n$$\\n\\n\u5176\u4e2d\u7684\u8ddd\u79bb\u51fd\u6570$\\\\varphi$\u8bbe\u8ba1\u4e3a\u5206\u6bb5\u5f62\u5f0f\uff0c\u516c\u5f0f\u5982\u4e0b\uff1a\\n$$\\n\\\\varphi_{var}=\\\\left\\\\{ \\\\begin{array}{l}\\n||\\\\mu_c-h_i||-\\\\delta{_d}+(\\\\delta{_d}-\\\\delta{_v})^2,&||\\\\mu_c-h_i||>\\\\delta{_d}\\\\\\\\\\n(||\\\\mu_c-h_i||-\\\\delta{_v})^2,&\\\\delta{_d}>||\\\\mu_c-h_i||\\\\geqslant\\\\delta{_v}\\\\\\\\\\n0 &||\\\\mu_c-h_i||\\\\leqslant\\\\delta{_d}\\n\\\\end{array}\\\\right.\\n$$\\n\\n$$\\n\\\\varphi_{dis}=\\\\left\\\\{\\\\begin{array}\\n{l}\\n(2\\\\delta{_d}-||\\\\mu_{c_a}-\\\\mu_{c_b}||)^2,&||\\\\mu_{c_a}-\\\\mu_{c_b}||\\\\leqslant2\\\\delta{_d}\\\\\\\\\\n0,&||\\\\mu_{c_a}-\\\\mu_{c_b}||>2\\\\delta{_d}\\n\\\\end{array}\\\\right.\\n$$\\n\\n\u672c\u6587\u4e2d\uff0c\u8ddd\u79bb\u9608\u503c\u7684\u8bbe\u7f6e\u4e3a$\\\\delta{_v}=0.5,\\\\delta{_d}=1.5$\u200b\\n\\n\u4e3a\u4e86\u52a0\u901f\u8ba1\u7b97\uff0c\u5bf9RCCA\u7684\u8f93\u5165\u8fdb\u884c\u964d\u7ef4\uff0c\u5176\u6bd4\u7387\u8bbe\u7f6e\u4e3a16\\n\\n\u603b\u7684\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a\\n$$\\nl=l_{seg}+\\\\alpha l_{var}+\\\\beta l_{dis}+\\\\gamma l_{reg}\\n$$\\n\u672c\u6587\u4e2d\uff0c$\\\\alpha,\\\\beta,\\\\gamma$\u200b\u200b\u7684\u503c\u5206\u522b\u4e3a1,1,0.001\uff0c\\n\\n### 3D Criss-Cross Attention\\n\\n\u57282D\u6ce8\u610f\u529b\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u63a8\u5e7f\uff0c\u63d0\u51fa3DCCA\uff0c\u5176\u53ef\u4ee5\u5728\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u6536\u96c6\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20210816184130138.png\\" alt=\\"image-20210816184130138\\"/>\\n\\n\u5176\u6d41\u7a0b\u4e0e2DCCA\u5927\u81f4\u76f8\u540c\uff0c\u5177\u4f53\u7ec6\u8282\u5dee\u5f02\u770b\u8bba\u6587\u3002\\n\\n## \u4ee3\u7801\u590d\u73b0\\n\\n### Criss-Cross Attention\\n\\n```python\\ndef INF(B,H,W):\\n    # tensor -> torch.size([H]) -> \u5bf9\u89d2\u77e9\u9635[H,H] -> [B*W,H,H] \\n    # \u6d88\u9664\u91cd\u590d\u8ba1\u7b97\u81ea\u8eab\u7684\u5f71\u54cd\\n    return -torch.diag(torch.tensor(float(\\"inf\\")).cuda().repeat(H),0).unsqueeze(0).repeat(B*W,1,1)\\n```\\n\\n```python\\nclass CrissCrossAttention(nn.Module):\\n    \\"\\"\\" Criss-Cross Attention Module\\"\\"\\"\\n    def __init__(self, in_ch,ratio=8):\\n        super(CrissCrossAttention,self).__init__()\\n        self.q = nn.Conv2d(in_ch, in_ch//ratio, 1)\\n        self.k = nn.Conv2d(in_ch, in_ch//ratio, 1)\\n        self.v = nn.Conv2d(in_ch, in_ch, 1)\\n        self.softmax = nn.Softmax(3)\\n        self.INF = INF\\n        self.gamma = nn.Parameter(torch.zeros(1)) # \u521d\u59cb\u5316\u4e3a0\\n\\n\\n    def forward(self, x):\\n        bs, _, h, w = x.size()\\n        # Q\\n        x_q = self.q(x)\\n        # b,c\',h,w -> b,w,c\',h -> b*w,c\',h -> b*w,h,c\'\\n        # \u540e\u4e24\u7ef4\u76f8\u5f53\u4e8e\u8bba\u6587\u4e2d\u7684Q_u\\n        x_q_H = x_q.permute(0,3,1,2).contiguous().view(bs*w,-1,h).permute(0, 2, 1)\\n        # b,c\',h,w -> b,h,c\',w -> b*h,c\',w -> b*h,w,c\'\\n        x_q_W = x_q.permute(0,2,1,3).contiguous().view(bs*h,-1,w).permute(0, 2, 1)\\n        # K\\n        x_k = self.k(x) # b,c\',h,w\\n        # b,c\',h,w -> b,w,c\',h -> b*w,c\',h\\n        x_k_H = x_k.permute(0,3,1,2).contiguous().view(bs*w,-1,h)\\n        # b,c\',h,w -> b,h,c\',w -> b*h,c\',w\\n        x_k_W = x_k.permute(0,2,1,3).contiguous().view(bs*h,-1,w)\\n        # V\\n        x_v = self.v(x)\\n        # b,c,h,w -> b,w,c,h -> b*w,c,h\\n        x_v_H = x_v.permute(0,3,1,2).contiguous().view(bs*w,-1,h) \\n        # b,c,h,w -> b,h,c,w -> b*h,c,w\\n        x_v_W = x_v.permute(0,2,1,3).contiguous().view(bs*h,-1,w)\\n        # torch.bmm\u8ba1\u7b97\u4e09\u7ef4\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u5982[bs,a,b][bs,b,c]\\n        # \u5148\u8ba1\u7b97\u6240\u6709Q_u\u548cK\u4e0a\u4e0e\u4f4d\u7f6eu\u540c\u4e00\u5217\u7684\\n        energy_H = (torch.bmm(x_q_H, x_k_H)+self.INF(bs, h, w)).view(bs,w,h,h).permute(0,2,1,3) # b,h,w,h\\n        # \u518d\u8ba1\u7b97\u884c\\n        energy_W = torch.bmm(x_q_W, x_k_W).view(bs,h,w,w)\\n        # \u5f97\u5230\u6ce8\u610f\u529b\u56fe\\n        concate = self.softmax(torch.cat([energy_H, energy_W], 3)) # b,h,w,h+w\\n\\n        # \u540e\u9762\u5f00\u59cb\u5408\u6210\u4e00\u5f20\u56fe\\n        att_H = concate[:,:,:,0:h].permute(0,2,1,3).contiguous().view(bs*w,h,h)\\n        #print(concate)\\n        #print(att_H) \\n        att_W = concate[:,:,:,h:h+w].contiguous().view(bs*h,w,w)\\n        # \u540c\u6837\u7684\u8ba1\u7b97\u65b9\u6cd5\\n        out_H = torch.bmm(x_v_H, att_H.permute(0, 2, 1)).view(bs,w,-1,h).permute(0,2,3,1) # b,c,h,w\\n        out_W = torch.bmm(x_v_W, att_W.permute(0, 2, 1)).view(bs,h,-1,w).permute(0,2,1,3) # b,c,h,w\\n        #print(out_H.size(),out_W.size())\\n        return self.gamma*(out_H + out_W) + x # \u4e58\u79ef\u4f7f\u5f97\u6574\u4f53\u53ef\u8bad\u7ec3\\n```\\n\\n### Category Consistent Loss\\n\\n\\n\\n## \u5b9e\u9a8c\\n\\n\u5728Cityscapes\u3001ADE20K\u3001COCO\u3001LIP\u548cCamVid\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u5728\u4e00\u4e9b\u6570\u636e\u96c6\u4e0a\u5b9e\u73b0\u4e86SOTA\uff0c\u5e76\u4e14\u5728Cityscapes\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e86\u6d88\u878d\u5b9e\u9a8c\u3002\\n\\n### \u5b9e\u9a8c\u7ed3\u679c\\n\\n\u5728Cityscapes\u4e0a\u7684\u7ed3\u679c\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20210816184546419.png\\" alt=\\"image-20210816184546419\\"/>\\n\\n### \u6d88\u878d\u5b9e\u9a8c\\n\\n#### RCCA\u6a21\u5757\\n\\n\u901a\u8fc7\u6539\u53d8\u5faa\u73af\u6b21\u6570\u8fdb\u884c\u4e86\u5982\u4e0b\u5b9e\u9a8c\uff1a\\n\\n![image-20210816185515867](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816185515867.png)\\n\\n\u53ef\u4ee5\u770b\u5230\uff0cRCCA\u6a21\u5757\u53ef\u4ee5\u6709\u6548\u7684\u805a\u96c6\u5168\u5c40\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u540c\u65f6\u4fdd\u6301\u8f83\u4f4e\u7684\u8ba1\u7b97\u91cf\u3002\\n\\n\u4e3a\u4e86\u8fdb\u4e00\u6b65\u9a8c\u8bc1CCA\u7684\u6709\u6548\u6027\uff0c\u8fdb\u884c\u4e86\u5b9a\u6027\u6bd4\u8f83\uff1a\\n\\n![image-20210816184752238](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816184752238.png)\\n\\n\u968f\u7740\u5faa\u73af\u6b21\u6570\u7684\u589e\u52a0\uff0c\u8fd9\u4e9b\u767d\u8272\u5708\u5708\u533a\u57df\u7684\u9884\u6d4b\u9010\u6e10\u5f97\u5230\u7ea0\u6b63\uff0c\u8fd9\u8bc1\u660e\u4e86\u5bc6\u96c6\u4e0a\u4e0b\u6587\u4fe1\u606f\u5728\u8bed\u4e49\u5206\u5272\u4e2d\u7684\u6709\u6548\u6027\u3002\\n\\n#### \u7c7b\u522b\u4e00\u81f4\u635f\u5931\\n\\n![image-20210816190815707](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816190815707.png)\\n\\n\u4e0a\u56fe\u4e2d\u7684CCL\u5373\u8868\u793a\u4f7f\u7528\u4e86\u7c7b\u522b\u4e00\u81f4\u635f\u5931\\n\\n![image-20210816190830125](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816190830125.png)\\n\\n\u4e0a\u8ff0\u7ed3\u679c\u8868\u660e\u4e86\u5206\u6bb5\u8ddd\u79bb\u548c\u7c7b\u522b\u4e00\u81f4\u635f\u5931\u7684\u6709\u6548\u6027\u3002\\n\\n#### \u5bf9\u6bd4\u5176\u4ed6\u805a\u96c6\u4e0a\u4e0b\u6587\u4fe1\u606f\u65b9\u6cd5\\n\\n![image-20210816190815707](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816190815707.png)\\n\\n\u540c\u65f6\uff0c\u5bf9Non Local\u4f7f\u7528\u4e86\u5faa\u73af\u64cd\u4f5c\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5faa\u73af\u64cd\u4f5c\u5e26\u6765\u4e86\u8d85\u8fc7\u4e00\u70b9\u7684\u589e\u76ca\uff0c\u7136\u800c\u5176\u5de8\u91cf\u7684\u8ba1\u7b97\u91cf\u548c\u663e\u5b58\u9700\u6c42\u9650\u5236\u6027\u80fd\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20210816214333065.png\\" alt=\\"image-20210816214333065\\"/>\\n\\n#### \u53ef\u89c6\u5316\u6ce8\u610f\u529b\u56fe\\n\\n![image-20210816215023367](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816215023367.png)\\n\\n\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u5faa\u73af\u64cd\u4f5c\u7684\u6709\u6548\u6027\u3002\\n\\n### \u66f4\u591a\u5b9e\u9a8c\\n\\n\u5728ADE20K\u4e0a\u7684\u5b9e\u9a8c\u9a8c\u8bc1\u4e86\u7c7b\u522b\u4e00\u81f4\u635f\u5931\uff08CCL\uff09\u7684\u6709\u6548\u6027\uff1a\\n\\n![image-20210816215139417](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816215139417.png)\\n\\n\u5728LIP\u6570\u636e\u96c6\u7684\u5b9e\u9a8c\u7ed3\u679c\uff1a\\n\\n![image-20210816215228469](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816215228469.png)\\n\\n\u5728COCO\u6570\u636e\u96c6\u7684\u5b9e\u9a8c\u7ed3\u679c\uff1a\\n\\n![image-20210816215624406](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816215624406.png)\\n\\n\u5728CamVid\u6570\u636e\u4e0a\u7684\u5b9e\u9a8c\u7ed3\u679c\uff1a\\n\\n![image-20210816215702601](https://gitee.com/Thedeadleaf/images/raw/master/image-20210816215702601.png)"},{"id":"/[43]RepVGG-Making-VGG-style-ConvNets-Great-Again","metadata":{"permalink":"/blog/[43]RepVGG-Making-VGG-style-ConvNets-Great-Again","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[43]RepVGG-Making-VGG-style-ConvNets-Great-Again.md","source":"@site/blog/[43]RepVGG-Making-VGG-style-ConvNets-Great-Again.md","title":"RepVGG - Making VGG-style ConvNets Great Again","description":"\u8fd9\u7bc7\u7b14\u8bb0\u7684\u5199\u4f5c\u8005\u662fAsTheStarsFall\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"backbone","permalink":"/blog/tags/backbone"}],"readingTime":8.975,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"RepVGG - Making VGG-style ConvNets Great Again","authors":["asthestarsfall"],"tags":["backbone"]},"prevItem":{"title":"CCNet - Criss-Cross Attention for Semantic Segmentation","permalink":"/blog/[42]CCNet-Criss-Cross-Attention-for-Semantic-Segmentation"},"nextItem":{"title":"PP-LCNet - A Lightweight CPU Convolutional Neural Network","permalink":"/blog/[44]PP-LCNet-A-Lightweight-CPU-Convolutional-Neural-Network"}},"content":"\u8fd9\u7bc7\u7b14\u8bb0\u7684\u5199\u4f5c\u8005\u662f[AsTheStarsFall](https://github.com/asthestarsfalll)\u3002\\n\\n> \u8bba\u6587\u540d\u79f0\uff1a[RepVGG: Making VGG-style ConvNets Great Again](https://arxiv.org/abs/2101.03697)\\n>\\n> \u4f5c\u8005\uff1aXiaohan Ding\uff0cXiangyu Zhang\uff0cNingning Ma\uff0cJungong Han\uff0cGuiguang Ding\uff0cJian Sun\\n>\\n> Code\uff1ahttps://github.com/DingXiaoH/RepVGG\\n\\n## \u6458\u8981\\n\\n1. \u63d0\u51fa\u4e86\u4e00\u79cd\u7b80\u5355\u5f3a\u5927\u7684CNN\uff0c\u63a8\u7406\u65f6\u5176\u62e5\u6709VGG\u7c7b\u4f3c\u7684plain\u7ed3\u6784\uff0c\u4ec5\u7531\u5377\u79ef\u548cReLU\u7ec4\u6210\uff1b\u8bad\u7ec3\u65f6\u62e5\u6709\u591a\u5206\u652f\u7684\u62d3\u6251\u7ed3\u6784\\n2. \u5f97\u76ca\u4e8e\u7ed3\u6784\u91cd\u53c2\u5316\uff08re-parameterization\uff09\u6280\u672f\uff0cRepVGG\u8fd0\u884c\u901f\u5ea6\u6bd4ResNet-50\u5feb83%\uff0c\u6bd4ResNet-101\u5feb101%\uff0c\u5e76\u4e14\u5177\u6709\u66f4\u9ad8\u7684\u7cbe\u5ea6\u3002\\n\\n<img src=\\"https://i.loli.net/2021/09/14/H4NT17LA635BQgK.png\\"/>\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4ecb\u7ecd\\n\\n\u968f\u7740CNN\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u7684\u6210\u529f\uff0c\u7f51\u7edc\u7ed3\u6784\u8d8a\u6765\u8d8a\u590d\u6742\u3002\u8fd9\u4e9b\u590d\u6742\u7684\u7ed3\u6784\u76f8\u8f83\u4e8eplain\u7684\u7f51\u7edc\u7ed3\u6784\u867d\u7136\u80fd\u591f\u63d0\u4f9b\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u7136\u662f\u5176\u7f3a\u70b9\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff1a\\n\\n1. \u590d\u6742\u7684\u591a\u5206\u652f\u7ed3\u6784\uff0c\u5404\u79cd\u5404\u6837\u7684\u6b8b\u5dee\u8fde\u63a5\u548cconcatenation\u589e\u52a0\u4e86\u7f51\u7edc\u5b9e\u73b0\u548c\u4fee\u6539\u96be\u5ea6\uff0c\u964d\u4f4e\u4e86\u63a8\u7406\u901f\u5ea6\u548c\u5185\u5b58\u5229\u7528\u6548\u7387\uff1b\\n2. \u67d0\u4e9b\u6a21\u5757\u5982\u6df1\u5ea6\u5377\u79ef\u3001channel shuffle\u7b49\u589e\u52a0\u4e86\u5185\u5b58\u8bbf\u95ee\u7684\u6210\u672c\uff1b\\n\\n\u63a8\u7406\u65f6\u95f4\u53d7\u5230\u5404\u79cd\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u6d6e\u70b9\u8fd0\u7b97\uff08FLOPs\uff09\u5e76\u4e0d\u80fd\u51c6\u786e\u53cd\u6620\u5b9e\u9645\u901f\u5ea6\uff0c\u5b9e\u9645\u4e0aVGG\u548cNesNet\u5728\u5de5\u4e1a\u754c\u8fd8\u5728\u5927\u91cf\u4f7f\u7528\u7740\u3002\u800c\u672c\u6587\u63d0\u51fa\u7684RepVGG\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a\\n\\n1. \u4e0eVGG\u76f8\u540c\u7684plain\u7ed3\u6784\uff0c\u6ca1\u6709\u4efb\u4f55\u5206\u652f\uff1b\\n2. \u53ea\u4f7f\u7528$3\\\\times 3$\u5377\u79ef\uff1b\\n3. \u5177\u4f53\u7684\u67b6\u6784\u6ca1\u6709\u4f7f\u7528\u81ea\u52a8\u641c\u7d22\u3001\u624b\u52a8\u4f18\u5316\u3001\u590d\u5408\u7f29\u653e\u7b49\u7e41\u91cd\u7684\u64cd\u4f5c\uff0c\u4ec5\u4ec5\u4f7f\u7528\u4e86\u91cd\u53c2\u5316\u3002\\n\\n## \u76f8\u5173\u5de5\u4f5c\\n\\n### From Single-path to Multi-branch\\n\\n\u4e3b\u8981\u662f\u4ecb\u7ecd\u5404\u79cd\u7f51\u7edc\u7ed3\u6784\u7684\u6f14\u53d8\u548c\u8fdb\u5316\uff0c\u6108\u6765\u6108\u591a\u7684\u590d\u6742\u7ed3\u6784\u548c\u7ed3\u6784\u641c\u7d22\u65b9\u6cd5\u867d\u7136\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u6a21\u578b\u6027\u80fd\uff0c\u4f46\u662f\u4ee3\u4ef7\u662f\u5de8\u5927\u7684\u8ba1\u7b97\u8d44\u6e90\u3002\\n\\n### Effective Training of Single-path Models\\n\\n\u5df2\u6709\u4e00\u4e9b\u5de5\u4f5c\u5c1d\u8bd5\u8bad\u7ec3\u6ca1\u6709\u5206\u652f\u7684\u7f51\u7edc\uff0c\u8fd9\u4e9b\u7f51\u7edc\u5f80\u5f80\u975e\u5e38\u6df1\uff0c\u4e0d\u80fd\u505a\u5230\u7cbe\u786e\u62df\u5408\uff0c\u6709\u5de5\u4f5c\u63d0\u51fa\u4e86\u4e00\u79cd\u521d\u59cb\u5316\u65b9\u6cd5\u7528\u6765\u8bad\u7ec310000\u5c42\u7684plain\u5377\u79ef\u7f51\u7edc\uff0c\u4f46\u662f\u8fd9\u4e9b\u7f51\u7edc\u65e2\u4e0d\u65b9\u4fbf\u4e5f\u4e0d\u5b9e\u7528\u3002\\n\\n### Model Re-parameterization\\n\\nDiracNet\u5c06\u5377\u79ef\u5c42\u7f16\u7801\u4e3a$\\\\hat W=diag(a)I+diag(b)W_{norm}$\uff0c $\\\\hat W$\u8868\u793a\u6700\u7ec8\u4f7f\u7528\u7684\u6743\u91cd\u77e9\u9635\uff0c$a,b$\u662f\u53ef\u5b66\u4e60\u7684\u5411\u91cf\uff0c$W_{norm}$\u662f\u53ef\u5b66\u4e60\u7684\u5f52\u4e00\u5316\u77e9\u9635\u3002\u4e0e\u5177\u6709\u540c\u7b49\u53c2\u6570\u91cf\u7684ResNet\u76f8\u6bd4\uff0c\u7cbe\u5ea6\u6709\u6240\u4e0b\u964d\u3002\\n\\n\u5b9e\u9645\u4e0a\uff0cDiracNet\u662f\u5c06\u5377\u79ef\u6838\u4ee5\u53e6\u4e00\u79cd\u6570\u5b66\u5f62\u5f0f\u8868\u8fbe\uff0c\u4f7f\u5176\u66f4\u5bb9\u6613\u4f18\u5316\u3002\\n\\n\u4e5f\u6709\u5176\u4ed6\u7684\u5de5\u4f5c\u4f7f\u7528\u4e0d\u540c\u7684\u91cd\u53c2\u5316\u65b9\u5f0f\uff0c\u4f46\u662fRepVGG\u7684\u65b9\u6cd5\u5bf9\u4e8e\u5b9e\u73b0plain\u7ed3\u6784\u66f4\u4e3a\u91cd\u8981\u3002\\n\\n###  Winograd Convolution\\n\\nWinogard \u662f\u4e00\u79cd\u52a0\u901f$3\\\\times 3$\u5377\u79ef\uff08stride=1\uff09\u7684\u7ecf\u5178\u7b97\u6cd5\uff0c\u5176\u4e58\u6cd5\u91cf\u51cf\u5c11\u5230\u539f\u6765\u76844/9\uff0c\u56e0\u6b64RepVGG\u91cd\u53c2\u5316\u4e4b\u540e\u4ec5\u4ec5\u4f7f\u7528$3\\\\times3$\u5377\u79ef\u6765\u52a0\u901f\u63a8\u7406\u3002\\n\\n![image-20210915133349387](https://gitee.com/Thedeadleaf/images/raw/master/image-20210915133349387.png)\\n\\n## Building RepVGG via Structural Re-param\\n\\n\u9009\u62e9plain\u7f51\u7edc\u7ed3\u6784\u7684\u539f\u56e0\\n\\n### Simple is Fast, Memory-economical, Flexible\\n\\n\u4f7f\u7528\u7b80\u5355\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08\u6bd4\u5982VGG\uff09\u662f\u56e0\u4e3a\u5176\u62e5\u6709\u81f3\u5c11\u4ee5\u4e0b\u4e09\u4e2a\u4f18\u70b9\uff1a\\n\\n1. **\u5feb\u901f**\\n\\n   \u5f88\u591a\u7f51\u7edc\u62e5\u6709\u7528\u6bd4VGG\u66f4\u5c0f\u7684\u7406\u8bba\u6d6e\u70b9\u8ba1\u7b97\u91cf\uff08FLOPs\uff09\uff0c\u4f46\u662f\u5176\u5b9e\u9645\u63a8\u7406\u901f\u5ea6\u5e76\u6ca1\u6709VGG\u5feb\u901f\uff0cFlOPs\u4e0d\u80fd\u4ee3\u8868\u7f51\u7edc\u7684\u8ba1\u7b97\u901f\u5ea6\u3002\\n\\n   \u8ba1\u7b97\u901f\u5ea6\u4e3b\u8981\u4e0e\u4e24\u4e2a\u91cd\u8981\u56e0\u7d20\u6709\u5173\uff1a\\n\\n   - **\u5185\u5b58\u8bbf\u95ee\u6210\u672c\uff08MAC\uff09**\uff1a\u867d\u7136\u6b8b\u5dee\u8fde\u63a5\u548cconcatenation\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff0c\u4f46\u662f\u5176\u63d0\u9ad8\u4e86\u5185\u5b58\u8bbf\u95ee\u6210\u672c\uff08\u6b8b\u5dee\u8fde\u63a5\u9700\u8981\u63d0\u9ad8\u4e00\u500d\u7684\u5185\u5b58\u5360\u7528\uff09\uff0c\u6b64\u5916\uff0c\u7ec4\u5377\u79ef\u4e5f\u4f1a\u63d0\u9ad8\u65f6\u95f4\uff1b\\n   - **\u5e76\u884c\u5ea6**\uff1a\u5e76\u884c\u5ea6\u662f\u53e6\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\uff0cInseption\u548c\u4e00\u4e9b\u81ea\u52a8\u641c\u7d22\u67b6\u6784\u4f7f\u7528\u4e86\u5f88\u591a\u5c0f\u64cd\u4f5c\uff08small\\n     operators\uff09\uff0c\u8fd9\u5927\u5927\u964d\u4f4e\u4e86\u7f51\u7edc\u7684\u5e76\u884c\u5ea6\u3002\\n\\n2. **\u5185\u5b58\u7ecf\u6d4e**\\n\\n   \u5bf9\u4e8e\u591a\u5206\u652f\u7684\u7f51\u7edc\u62d3\u6251\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5206\u652f\u7684\u8f93\u51fa\u90fd\u5fc5\u987b\u4fdd\u7559\uff0c\u76f4\u5230addition\u6216concatenation\u64cd\u4f5c\u5b8c\u6210\uff0c\u8fd9\u4f1a\u5927\u5927\u63d0\u9ad8\u5185\u5b58\u5360\u7528\uff0c\u5982\u4e0b\u56fe\uff1a\\n\\n   <img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20210915135344621.png\\" alt=\\"image-20210915135344621\\"/>\\n\\n   \u800cplain\u7684\u7f51\u7edc\u7ed3\u6784\u80fd\u591f\u53ca\u65f6\u91ca\u653e\u5185\u5b58\uff0c\u5e76\u4e14\u8bbe\u8ba1\u4e13\u95e8\u7684\u786c\u4ef6\u65f6\u53ef\u4ee5\u5c06\u66f4\u591a\u7684\u8ba1\u7b97\u5355\u5143\u96c6\u6210\u5230\u82af\u7247\u4e0a\u3002\\n\\n3. **\u7075\u6d3b**\\n\\n\u591a\u5206\u652f\u7684\u7f51\u7edc\u7ed3\u6784\u9650\u5236\u4e86\u672c\u8eab\u7684\u7075\u6d3b\u6027\uff0c\u5f88\u96be\u8fdb\u884c\u4fee\u6539\uff0c\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab\uff0c\u5e76\u4e14\u526a\u679d\u6280\u672f\u4e5f\u53d7\u5230\u5f88\u591a\u9650\u5236\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cplain\u7ed3\u6784\u5141\u8bb8\u6211\u4eec\u6839\u636e\u9700\u6c42\u81ea\u7531\u914d\u7f6e\u6b4c\u5c42\uff0c\u5e76\u8fdb\u884c\u4fee\u526a\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u6548\u7387\u6743\u8861\u3002\\n\\n### Training-time Multi-branch Architecture\\n\\nplain\u7684\u7f51\u7edc\u7ed3\u6784\u6709\u4e00\u4e2a\u81f4\u547d\u7684\u7f3a\u70b9\u2014\u2014\u6027\u80fd\u5dee\uff0c\u4f7f\u7528BN\u5c42\u7684\u60c5\u51b5\u4e0b\uff0cVGG-16\u4ec5\u4ec5\u80fd\u8fbe\u523072% top-1\u51c6\u786e\u7387\uff1b\\n\\n\u53d7\u5230ResNet\u7684\u542f\u53d1\uff0c\u4f7f\u7528\u4e00\u4e2a$y=x+f(x)$\uff0c\u5f53$x\u3001f(x)$\u4e0d\u5339\u914d\u65f6\uff0c\u4f7f\u7528$1\\\\times 1$\u7684\u5377\u79ef\u5c42\uff0c\u5219$y=g(x)+f(x)$\uff1b\\n\\nResNet\u6210\u529f\u7684\u4e00\u4e2a\u89e3\u91ca\u662f\uff0c\u8fd9\u79cd\u591a\u5206\u652f\u7684\u7ed3\u6784\u4f7f\u5f97\u7f51\u7edc\u6210\u4e3a\u5404\u4e2a\u6d45\u5c42\u6a21\u578b\u7684\u9690\u5f0f\u96c6\u6210\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u6709n\u4e2aBlock\u65f6\uff0c\u6a21\u578b\u53ef\u4ee5\u88ab\u89e3\u91ca\u4e3a$2^n$\u4e2a\u6a21\u578b\u7684\u96c6\u5408\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5757\u5c06\u6d41\u5206\u6210\u4e24\u6761\u8def\u5f84\u3002\\n\\n\u867d\u7136\u591a\u5206\u652f\u7ed3\u6784\u5728\u63a8\u7406\u65b9\u9762\u5b58\u5728\u7f3a\u9677\uff0c\u4f46\u662f\u5176\u5341\u5206\u6709\u5229\u4e8e\u8bad\u7ec3\uff1b\u4e8e\u662f\u6784\u5efa\u4e86\u4e00\u4e2a$y=x+g(x)+f(x)$\u7684\u7ed3\u6784\uff0c\u5806\u53e0\u4e86n\u5c42\uff0c\u4ece\u4e0a\u8ff0\u53ef\u77e5\uff0c\u8fd9\u610f\u5473\u7740$3^n$\u4e2a\u6a21\u578b\u7684\u96c6\u5408\u3002\\n\\n### Re-param for Plain Inference-time Model\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20210915185030692.png\\" alt=\\"image-20210915185030692\\"/>\\n\\n\\n\\n\u63a8\u7406\u4e4b\u524d\u4f1a\u8fdb\u884c\u91cd\u53c2\u6570\u5316\uff0cRepVGG\u7684\u6a21\u5757\u7ed3\u6784\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u7531$3\\\\times 3,1\\\\times 1,identity$\u7ec4\u6210\uff0c\u5c06\u8fd9\u4e9b\u5168\u90e8\u53d8\u4e3a$3\\\\times3$\u5377\u79ef\u76f8\u52a0\u5373\u53ef\u5b9e\u73b0ReP\u3002\\n\\n$1\\\\times1$\uff1a\u8d4b\u503c\u7ed9$3\\\\times3$\u77e9\u9635\u7684\u4e2d\u5fc3\uff0c\u5176\u4f59\u4e3a0\u5373\u53ef\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u4f7f\u7528zero-padding\\n\\n**identity**\uff1a\u5c06$3\\\\times3$\u77e9\u9635\u4e2d\u5fc3\u8d4b\u503c\u4e3a1\uff0c\u5176\u4f59\u4e3a0\\n\\npadding\u7684\u4ee3\u7801\u4e3a\\n\\n```python\\n    def _pad_1x1_to_3x3_tensor(self, kernel1x1):\\n        if kernel1x1 is None:\\n            return 0\\n        else:\\n            return torch.nn.functional.pad(kernel1x1, [1, 1, 1, 1])\\n```\\n\\n**BN**\uff1a\\n\\n\u8bbe\u5377\u79ef$Conv(x)=W(x)+b$\uff0cBN\u4e3a$BN(x)=\\\\gamma\\\\frac{(x-mean)}{\\\\sqrt{var}}+\\\\beta$\\n\\n \u5e26\u5165\u53ef\u5f97:\\n$$\\n\\\\begin{align}\\nBN(Conv(x))&=\\\\gamma\\\\frac{(W(x)+b-mean)}{\\\\sqrt{var}}+\\\\beta\\\\\\\\&=\\\\frac{\\\\gamma*W(x)}{\\\\sqrt{var}}+(\\\\frac{\\\\gamma*(b-mean)}{\\\\sqrt{var}}+\\\\beta)\\n\\\\end{align}\\n$$\\n\u6ce8\u610f\u540e\u9762\u4e3a\u5377\u79ef\u7684\u504f\u7f6e\u9879\\n\\n```python\\n    def _fuse_bn_tensor(self, branch):\\n        if branch is None:\\n            return 0, 0\\n        if isinstance(branch, nn.Sequential):\\n            kernel = branch.conv.weight\\n            running_mean = branch.bn.running_mean\\n            running_var = branch.bn.running_var\\n            gamma = branch.bn.weight\\n            beta = branch.bn.bias\\n            eps = branch.bn.eps\\n        else:\\n            assert isinstance(branch, nn.BatchNorm2d)\\n            if not hasattr(self, \'id_tensor\'):\\n                input_dim = self.in_channels // self.groups\\n                kernel_value = np.zeros(\\n                    (self.in_channels, input_dim, 3, 3), dtype=np.float32)\\n                for i in range(self.in_channels):\\n                    kernel_value[i, i % input_dim, 1, 1] = 1\\n                self.id_tensor = torch.from_numpy(\\n                    kernel_value).to(branch.weight.device)\\n            kernel = self.id_tensor\\n            running_mean = branch.running_mean\\n            running_var = branch.running_var\\n            gamma = branch.weight\\n            beta = branch.bias\\n            eps = branch.eps\\n        std = (running_var + eps).sqrt()\\n        t = (gamma / std).reshape(-1, 1, 1, 1)\\n        return kernel * t, beta - running_mean * gamma / std\\n```\\n\\n\u8fd9\u91ccBN\u7684`running_mean`\u548c`running_var`\u662f\u4ece\u5f00\u59cb\u8bad\u7ec3\u5c31\u4e00\u76f4\u8bb0\u5f55\u7684\uff0c\u5e76\u4e14\u5176\u8ba1\u7b97\u573a\u666f\u662f`online`\u7684\uff0c\u56e0\u4e3a\u4e8b\u5148\u4e0d\u77e5\u9053\u4f1a\u6709\u591a\u5c11\u6570\u636e\uff0c\u6240\u4ee5\u53ea\u80fd\u6bcf\u6b21\u589e\u91cf\u8ba1\u7b97\u3002\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a\\n$$\\nmean_{t}=\\\\frac{\\\\sum_{i=1}^{t}x_i}{N_t}=\\\\frac{mean_{t-1}\\\\cdot(N_{t-1}+x_t)}{N_t}=mean_{t-1}+\\\\frac{1}{N_t}(x_i-mean_{t-1})\\n$$\\n\u4ee3\u7801\u5982\u4e0b\\n\\n```python\\nclass RunningStats:\\n\\n    def __init__(self):\\n        self.n = 0\\n        self.old_m = 0\\n        self.new_m = 0\\n        self.old_s = 0\\n        self.new_s = 0\\n    \\n    def clear(self):\\n        self.n = 0\\n        \\n    def push(self, x):\\n        self.n += 1\\n        \\n        if self.n == 1:\\n            self.old_m = self.new_m = x\\n            self.old_s = 0\\n        else:\\n            self.new_m = self.old_m + (x - self.old_m) / self.n # \u66f4\u65b0\\n            self.new_s = self.old_s + (x - self.old_m) * (x - self.new_m)\\n            \\n            self.old_m = self.new_m\\n            self.old_s = self.new_s\\n\\n    def mean(self):\\n        return self.new_m if self.n else 0.0\\n    \\n    def variance(self):\\n        return self.new_s / (self.n - 1) if self.n > 1 else 0.0\\n```\\n\\n\\n\\n### Architectural Specification\\n\\n![image-20210915210000222](https://gitee.com/Thedeadleaf/images/raw/master/image-20210915210000222.png)\\n\\n\u4e0a\u56fe\u8868\u793aRepVGG\u5404\u4e2a\u9636\u6bb5\u7684\u8f93\u51fa\uff0c\u7b2c\u4e00\u4e2a\u9636\u6bb5\u4f7f\u7528Stride=2\u7684conv\u6765\u8fdb\u884c\u4e0b\u91c7\u6837\\n\\n\u7b2c\u4e00\u9636\u6bb5\u8f93\u5165\u5206\u8fa8\u7387\u9ad8\uff0c\u4ec5\u4f7f\u7528\u4e00\u4e2a\u5377\u79ef\u5c42\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\uff08$14\\\\times14$\uff09\u4f7f\u7528\u66f4\u591a\u7684\u5377\u79ef\u5c42\\n\\n\u4f7f\u7528Efficient neural networks\u4e2d\u7ecf\u5178\u7684multiplier\u6765\u63a7\u5236\u7f51\u7edc\u5927\u5c0f\u548c\u6027\u80fd\u7684\u5e73\u8861\uff0c\u5177\u4f53\u770b\u8bba\u6587"},{"id":"/[44]PP-LCNet-A-Lightweight-CPU-Convolutional-Neural-Network","metadata":{"permalink":"/blog/[44]PP-LCNet-A-Lightweight-CPU-Convolutional-Neural-Network","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[44]PP-LCNet-A-Lightweight-CPU-Convolutional-Neural-Network.md","source":"@site/blog/[44]PP-LCNet-A-Lightweight-CPU-Convolutional-Neural-Network.md","title":"PP-LCNet - A Lightweight CPU Convolutional Neural Network","description":"\u8f7b\u91cf\u7ea7Trick\u7684\u4f18\u5316\u7ec4\u5408\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"light-weight","permalink":"/blog/tags/light-weight"},{"label":"tricks","permalink":"/blog/tags/tricks"}],"readingTime":3.97,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"PP-LCNet - A Lightweight CPU Convolutional Neural Network","authors":["asthestarsfall"],"tags":["light-weight","tricks"]},"prevItem":{"title":"RepVGG - Making VGG-style ConvNets Great Again","permalink":"/blog/[43]RepVGG-Making-VGG-style-ConvNets-Great-Again"},"nextItem":{"title":"Swin Transformer - Hierarchical Vision Transformer using Shifted Windows","permalink":"/blog/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows"}},"content":"\u8f7b\u91cf\u7ea7Trick\u7684\u4f18\u5316\u7ec4\u5408\u3002\\n\\n> \u8bba\u6587\u540d\u79f0\uff1a[PP-LCNet: A Lightweight CPU Convolutional Neural Network](https://arxiv.org/pdf/2109.15099.pdf)\\n>\\n> \u4f5c\u8005\uff1aCheng Cui, Tingquan Gao, Shengyu Wei,Yuning Du...\\n>\\n> Code\uff1ahttps://github.com/PaddlePaddle/PaddleClas\\n\\n## \u6458\u8981\\n\\n1. \u603b\u7ed3\u4e86\u4e00\u4e9b\u5728\u5ef6\u8fdf\uff08latency\uff09\u51e0\u4e4e\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u7cbe\u5ea6\u63d0\u9ad8\u7684\u6280\u672f\uff1b\\n2. \u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eMKLDNN\u52a0\u901f\u7b56\u7565\u7684\u8f7b\u91cf\u7ea7CPU\u7f51\u7edc\uff0c\u5373PP-LCNet\u3002\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007133525281.png\\" alt=\\"image-20211007133525281\\"/>\\n\\n## \u4ecb\u7ecd\\n\\n\u76ee\u524d\u7684\u8f7b\u91cf\u7ea7\u7f51\u7edc\u5728\u542f\u7528[MKLDNN](https://github.com/oneapi-src/oneDNN)\u7684Intel CPU\u4e0a\u901f\u5ea6\u5e76\u4e0d\u7406\u60f3\uff0c\u8003\u8651\u4e86\u4e00\u4e0b\u4e09\u4e2a\u57fa\u672c\u95ee\u9898\uff1a\\n\\n1. \u5982\u4f55\u4fc3\u4f7f\u7f51\u7edc\u5b66\u4e60\u5230\u66f4\u5f3a\u7684\u7279\u5f81\uff0c\u4f46\u4e0d\u589e\u52a0\u5ef6\u8fdf\uff1f\\n2. \u5728CPU\u4e0a\u63d0\u9ad8\u8f7b\u91cf\u7ea7\u6a21\u578b\u7cbe\u5ea6\u7684\u8981\u7d20\u662f\u4ec0\u4e48\uff1f\\n3. \u5982\u4f55\u6709\u6548\u5730\u7ed3\u5408\u4e0d\u540c\u7684\u7b56\u7565\u6765\u8bbe\u8ba1CPU\u4e0a\u7684\u8f7b\u91cf\u7ea7\u6a21\u578b\uff1f\\n\\n\x3c!--truncate--\x3e\\n\\n## Method\\n\\nPP-LCNet\u4f7f\u7528\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\u4f5c\u4e3a\u57fa\u7840\u7ed3\u6784\uff0c\u6784\u5efa\u4e86\u4e00\u4e2a\u7c7b\u4f3cMobileNetV1\u7684BaseNet\uff0c\u5e76\u5728\u5176\u57fa\u7840\u4e0a\u7ed3\u5408\u73b0\u6709\u7684\u6280\u672f\uff0c\u4ece\u800c\u5f97\u5230\u4e86PP-LCNet\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007191050134.png\\" alt=\\"image-20211007191050134\\"/>\\n\\n\u53c2\u6570\u914d\u7f6e\uff1a\\n\\n<img src=\\"C:\\\\Users\\\\11864\\\\AppData\\\\Roaming\\\\Typora\\\\typora-user-images\\\\image-20211008131450331.png\\" alt=\\"image-20211008131450331\\"/>\\n\\n### Better activation function\\n\\n\u6fc0\u6d3b\u51fd\u6570\u662f\u795e\u7ecf\u7f51\u7edc\u4e2d\u975e\u7ebf\u6027\u7684\u6765\u6e90\uff0c\u56e0\u6b64\u5176\u8d28\u91cf\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51b3\u5b9a\u7740\u7f51\u7edc\u7684\u8868\u8fbe\u80fd\u529b\u3002\\n\\n\u5f53\u6fc0\u6d3b\u51fd\u6570\u7531Sigmoid\u53d8\u4e3aReLU\u65f6\uff0c\u7f51\u7edc\u7684\u6027\u80fd\u5f97\u5230\u4e86\u5f88\u5927\u7684\u63d0\u5347\uff0c\u8fd1\u6765\u51fa\u73b0\u4e86\u5f88\u591a\u8d85\u8d8aReLU\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u5982EfficientNet\u7684Swish\uff0cMobileNetV3\u4e2d\u5c06\u5176\u5347\u7ea7\u4e3aHSwish\uff0c\u907f\u514d\u4e86\u5927\u91cf\u7684\u6307\u6570\u8fd0\u7b97\uff1b\u56e0\u6b64\u672c\u7f51\u7edc\u4e2d\u4f7f\u7528HSwish\u6fc0\u6d3b\u51fd\u6570\u4ee3\u66ffReLU\u3002\\n\\n\u9996\u5148\u8ba9\u6211\u4eec\u770b\u4e00\u4e0bReLU\u51fd\u6570\u7684\u8fd1\u4f3c\u63a8\u5bfc\uff1a\\n$$\\n\\\\begin{align}\\nf(x)&=\\\\sum_{i=1}^{\\\\infin}\\\\sigma(x-i+0.5) &(stepped\\\\ sigmoid)\\\\\\\\\\n&\\\\approx log(1+e^x)  &(softplus\\\\ function)\\\\\\\\\\n&\\\\approx max(0,N(0,1)) &(ReLU\\\\ function)\\n\\\\end{align}\\n$$\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/606386-20180502160705206-923153087.png\\" alt=\\"softplus\\"/>\\n\\n\u51fa\u4e8e\u8ba1\u7b97\u91cf\u7684\u8003\u8651\u548c\u5b9e\u9a8c\u9a8c\u8bc1\u9009\u62e9\u4e86ReLU\\n\\nReLU6\uff1a\\n\\n\u589e\u52a0\u4e86\u4e0a\u754c\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007184950617.png\\" alt=\\"image-20211007184950617\\"/>\\n\\n[Swish](https://www.cnblogs.com/makefile/p/activation-function.html)\uff1a\\n$$\\nf(x)=x\\\\cdot sigmoid(\\\\beta x)\\n$$\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/606386-20171102101521763-698600913.png\\" alt=\\"swish\\"/>\\n\\n$\\\\beta$\u662f\u4e2a\u5e38\u6570\u6216\u53ef\u8bad\u7ec3\u7684\u53c2\u6570\u3002Swish \u5177\u5907\u65e0\u4e0a\u754c\u6709\u4e0b\u754c\u3001\u5e73\u6ed1\u3001\u975e\u5355\u8c03\u7684\u7279\u6027\u3002\\nSwish \u5728\u6df1\u5c42\u6a21\u578b\u4e0a\u7684\u6548\u679c\u7565\u4f18\u4e8e ReLU\u3002\u4ec5\u4ec5\u4f7f\u7528 Swish \u5355\u5143\u66ff\u6362 ReLU \u5c31\u80fd\u628a Mobile NASNetA \u5728 ImageNet \u4e0a\u7684 top-1 \u5206\u7c7b\u51c6\u786e\u7387\u63d0\u9ad8 0.9%\uff0cInception-ResNet-v \u7684\u5206\u7c7b\u51c6\u786e\u7387\u63d0\u9ad8 0.6%\u3002\\n\\n\u5bfc\u6570\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/606386-20171102101538013-1397340773.png\\" alt=\\"swish-derivation\\"/>\\n\\n\\n\\n\u5f53$\u03b2 = 0$\u65f6,Swish\u53d8\u4e3a\u7ebf\u6027\u51fd\u6570$f(x)=\\\\frac x 2$\\n\u5f53$\u03b2 \u2192 \u221e$, $\\\\sigma(x)=\\\\frac{1}{1+e^{\u2212x}}$\u4e3a0\u62161\uff0c\u8fd9\u65f6Swish\u53d8\u4e3a$ReLU(x)=max(0,x)$\\n\u56e0\u6b64Swish\u51fd\u6570\u53ef\u4ee5\u770b\u505a\u662f\u4ecb\u4e8e\u7ebf\u6027\u51fd\u6570\u4e0eReLU\u51fd\u6570\u4e4b\u95f4\u7684\u5e73\u6ed1\u51fd\u6570.\\n\\nHSwish\uff1a\\n\\nSwish\u51fd\u6570\u7684\u8ba1\u7b97\u91cf\u662f\u5f88\u5927\u7684\uff0c\u56e0\u6b64\u63d0\u51fa\u4e86HSwish\uff0cH\u8868\u793aHard\uff0c\u610f\u5473\u7740\u8d85\u8fc7\u67d0\u4e2a\u8303\u56f4\uff0c\u6fc0\u6d3b\u503c\u4e3a\u5e38\u6570\\n\\n\u5bf9ReLU6\u9664\u4ee56\u518d\u5411\u5de6\u5e73\u79fb\u4e09\u4e2a\u5355\u4f4d\u53ef\u4ee5\u5f97\u5230HSigmoid\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007185106870.png\\" alt=\\"image-20211007185106870\\"/>\\n\\nHSwish\u7684\u8fd1\u4f3c\u516c\u5f0f\u4e3a$x\\\\cdot h\\\\sigma(x)=\\\\frac{relu6(x+3)}{6}$\uff0c\u56fe\u50cf\u5982\u4e0b\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007185403938.png\\"/>\\n\\n### SE modules at appropriate positions\\n\\n\u6ce8\u610f\u529b\u6a21\u5757\u65e0\u7591\u662f\u8f7b\u91cf\u7ea7\u7f51\u7edc\u5b8c\u7f8e\u7684\u9009\u62e9\uff0c\u672c\u6587\u63a2\u7a76\u4e86SE\u6a21\u5757\u653e\u7f6e\u7684\u4f4d\u7f6e\uff0c\u53d1\u73b0\u5728\u7f51\u7edc\u6df1\u5c42\u7684\u6548\u679c\u8f83\u597d\u3002\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007190945690.png\\" alt=\\"image-20211007190945690\\"/>\\n\\n###  Larger convolution kernels\\n\\n\u4f7f\u7528\u66f4\u5927\u7684\u5377\u79ef\u6838\u5c3a\u5bf8\uff0c\u53d1\u73b0\u5728\u7f51\u7edc\u6df1\u5c42\u6548\u679c\u8f83\u597d\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007191200660.png\\" alt=\\"image-20211007191200660\\"/>\\n\\n### Larger dimensional1\xd71conv layer after GAP\\n\\n\u5728\u7f51\u7edc\u6700\u540e\u7684GAP\u4e4b\u540e\u4f7f\u7528Pointwise\u5377\u79ef\u8fdb\u884c\u5347\u7ef4\uff0c\u4ee5\u6b64\u63d0\u9ad8\u7f51\u7edc\u7684\u6027\u80fd\\n\\n### Drop out\\n\\n\u5b9e\u9a8c\u53d1\u73b0drop out\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007191715602.png\\" alt=\\"image-20211007191715602\\"/>\\n\\n## \u5b9e\u9a8c\u7ed3\u679c\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007192557037.png\\" alt=\\"image-20211007192557037\\"/>\\n\\n\u4e0e\u5176\u4ed6\u7f51\u7edc\u8fdb\u884c\u5bf9\u6bd4\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211007192635596.png\\" alt=\\"image-20211007192635596\\"/>"},{"id":"/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows","metadata":{"permalink":"/blog/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows.md","source":"@site/blog/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows.md","title":"Swin Transformer - Hierarchical Vision Transformer using Shifted Windows","description":"\u5206\u5c42Local Vision Transformer\uff0c\u901a\u7528\u4e3b\u5e72\u7f51\u7edc\uff0c\u5404\u7c7b\u4e0b\u6e38\u4efb\u52a1\u5b9e\u73b0SOTA\u3002Best Paper Award!","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"transformer","permalink":"/blog/tags/transformer"},{"label":"inductive-bias","permalink":"/blog/tags/inductive-bias"}],"readingTime":20.445,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"Swin Transformer - Hierarchical Vision Transformer using Shifted Windows","authors":["asthestarsfall"],"tags":["attention-mechanism","transformer","inductive-bias"]},"prevItem":{"title":"PP-LCNet - A Lightweight CPU Convolutional Neural Network","permalink":"/blog/[44]PP-LCNet-A-Lightweight-CPU-Convolutional-Neural-Network"},"nextItem":{"title":"Demystifying Local Vision Transformer","permalink":"/blog/[46]Demystifying-Local-Vision-Transformer"}},"content":"\u5206\u5c42Local Vision Transformer\uff0c\u901a\u7528\u4e3b\u5e72\u7f51\u7edc\uff0c\u5404\u7c7b\u4e0b\u6e38\u4efb\u52a1\u5b9e\u73b0SOTA\u3002Best Paper Award!\\n\\n> \u8bba\u6587\u540d\u79f0\uff1a[Swin Transformer: Hierarchical Vision Transformer using Shifted Windows](https://arxiv.org/abs/2103.14030)\\n>\\n> \u4f5c\u8005\uff1aZe Liu \uff0cYutong Lin\uff0cYue Cao\uff0cHan Hu\uff0cYixuan Wei\uff0cZheng Zhang\uff0cStephen Lin\uff0cBaining Guo\\n>\\n> Code\uff1ahttps://github.com/microsoft/Swin-Transformer\\n\\n## \u4ecb\u7ecd\\n\\n\u81eaAlexNet\u4ee5\u6765\uff0cCNN\u4f5c\u4e3a\u9aa8\u5e72\uff08backbone\uff09\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u5e94\u7528\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u7f51\u7edc\u7ed3\u6784\u7684\u6f14\u53d8\u5219\u8d70\u4e86\u4e00\u6761\u4e0d\u540c\u7684\u9053\u8def\uff0c\u73b0\u5728\u7684\u4e3b\u6d41\u7ed3\u6784\u662fTransformer\u3002\\n\\nTransformer\u662f\u4e3a\u5e8f\u5217\u5efa\u6a21\u548c\u8f6c\u6362\u4efb\u52a1\u800c\u8bbe\u8ba1\u7684\uff0c\u5b83\u4ee5\u5173\u6ce8\u6570\u636e\u4e2d\u7684\u957f\u671f\u4f9d\u8d56\u5173\u7cfb\u800c\u8457\u79f0\u3002\u5176\u5728NLP\u9886\u57df\u7684\u5de8\u5927\u6210\u529f\u5438\u5f15\u4e86\u4eba\u4eec\u7814\u7a76\u5b83\u5bf9CV\u7684\u9002\u5e94\u6027\uff0c\u6700\u8fd1\u7684\u5b9e\u9a8c\u663e\u793a\u5176\u5728\u56fe\u50cf\u5206\u7c7b\u548c\u8054\u5408\u89c6\u89c9\u8bed\u8a00\u5efa\u6a21\u65b9\u9762\u6709\u6240\u6210\u6548\u3002\\n\\n\u672c\u6587\u7684\u4e3b\u8981\u8d21\u732e\u6709\uff1a\\n\\n1. \u63d0\u51fa\u4e86\u4e00\u79cd\u5206\u5c42Transformer\uff0c\u5176\u53ef\u4ee5\u4f5c\u4e3a\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u901a\u7528\u4e3b\u5e72\u7f51\u7edc\uff0c\u5e76\u4e14\u5728\u5404\u7c7b\u4e0b\u6e38\u4efb\u52a1\u4e0a\u53d6\u5f97SOTA\uff1b\\n2. \u901a\u8fc7Shift Windows\u5b9e\u73b0\u4e86\u5bf9\u8f93\u5165\u56fe\u50cf\u5c3a\u5bf8\u7684\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u3002\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211020204110669.png\\" alt=\\"image-20211020204110669\\"/>\\n\\n\x3c!--truncate--\x3e\\n\\n## Method\\n\\n### \u6574\u4f53\u7ed3\u6784\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211018125415232.png\\" alt=\\"image-20211018125415232\\"/>\\n\\n\u4e0a\u56fe\u662fSwin Transformer\u4e2d\u6700\u5c0f\u7248\u672c\u7684\u53ef\u89c6\u5316\u7ed3\u6784\u56fe\uff0c\u5176\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a\\n\\n1. \u901a\u8fc7Patch Partition\u5c06\u8f93\u5165\u7684RGB\u56fe\u50cf\u5206\u5272\u6210\u4e0d\u91cd\u53e0\u7684Patch\uff0c\u5806\u53e0\u8fdbB\u7ef4\u5ea6\uff1b\\n2. \u4f7f\u7528Linear Embedding\u5c06\u901a\u9053\u6620\u5c04\u81f3C\uff1b\\n3. \u7d27\u63a5\u7740\u4f7f\u7528\u4e24\u4e2a\u8fde\u7eed\u7684Swin Transformer Block\uff0c\u5c06\u4e0a\u8ff0\u7ec4\u5408\u79f0\u4e3aStage 1\uff1b\\n4. \u4e3a\u4e86\u83b7\u5f97\u5206\u5c42\u8868\u793a\uff0c\u901a\u8fc7Patch Merging\u5bf9Stage 1\u7684\u8f93\u51fa\u7ee7\u7eed\u8fdb\u884c\u5206\u5757\uff0c\u5e76\u4e14\u540c\u6837\u4f1a\u4f7f\u7528Linear Layer\u8fdb\u884c\u901a\u9053\u964d\u7ef4\uff0c\u518d\u4f7f\u7528\u51e0\u4e2a\u8fde\u7eed\u7684Swin Transformer Block\uff1b\u5982\u6b64\uff0c\u4fbf\u80fd\u6784\u6210\u66f4\u591a\u7684Stage.\\n\\n###  Shifted Window based Self-Attention\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211018165411438.png\\" alt=\\"image-20211018165411438\\"/>\\n\\n\u8fde\u7eed\u7684Swin Transformer\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5176\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a\\n\\n1. \u5bf9\u4e8e\u7b2c\u4e00\u4e2aSwin Transfromer Block\uff0c\u4f1a\u5148\u5bf9\u8f93\u5165$Z^{l-1}$\u4f7f\u7528LayerNorm\uff0c\u7136\u540e\u4f7f\u7528W-MSA\uff08Window based Self-Attention\uff09\uff0c\u5e76\u4e14\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\u5f97\u5230$\\\\hat z^l$\uff0c\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a\\n   $$\\n   \\\\hat Z^l = W-MSA(LN(Z^{l-1}))+Z^{l-1}\\n   $$\\n\\n2. \u63a5\u4e0b\u6765\u4f7f\u7528LN\u3001MLP\uff08\u4e24\u5c42\u3001GELU\u6fc0\u6d3b\u51fd\u6570\uff09\u548c\u6b8b\u5dee\u8fde\u63a5\u7684\u5f97\u5230\u6700\u7ec8\u8f93\u51fa$Z^l$\uff0c\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a\\n   $$\\n   Z^l=MLP(LN(\\\\hat Z^l))+\\\\hat Z^l\\n   $$\\n\\n3. \u5bf9\u4e8e\u63a5\u4e0b\u6765\u7684Swin Transformer Block\uff0c\u4f1a\u5c06\u5176W-MSA\u66ff\u6362\u6210SW-MSA\uff08Shifted Window based Self-Attention\uff09\uff0c\u53ef\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a\\n   $$\\n   \\\\hat Z^{l+1} = SW-MSA(LN(Z^{l}))+Z^{l}\\\\\\\\\\n   Z^{l+1}=MLP(LN(\\\\hat Z^{l+1}))+\\\\hat Z^{l+1}\\n   $$\\n\\n\u81f3\u6b64\u4fbf\u5b8c\u6210\u4e86\u8fde\u7eed\u7684Swin Transformer Block\u7684\u6784\u5efa\uff0c\u7531\u4e8e\u9700\u8981\u5c06\u8fd9\u4e24\u79cd\u7ec4\u5408\u8d77\u6765\u8fbe\u5230\u4fe1\u606f\u4ea4\u6362\u7684\u76ee\u7684\uff0c\u56e0\u6b64\u5c42\u6570\u7684\u8bbe\u7f6e\u5e94\u4e3a\u5076\u6570\u3002\\n\\n#### Self-attention in non-overlapped windows\\n\\n\u4e3a\u4e86\u5b9e\u73b0\u7ebf\u6027\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u63d0\u51fa\u5728Window\uff08\u7a97\u53e3\uff09\u4e2d\u8fdb\u884c\u5efa\u6a21\uff0c\u7a97\u53e3\u4ee5\u975e\u91cd\u53e0\u7684\u65b9\u5f0f\u5747\u5300\u5730\u5212\u5206\u56fe\u50cf\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5728\u5c40\u90e8\u7a97\u53e3\u4e2d\u8fdb\u884cPatch\u7684\u5173\u7cfb\u5efa\u6a21\uff0c\u8ba1\u7b97\u6ce8\u610f\u529b\u65f6\uff0c\u4f1a\u5c06Patch\u5c55\u54c1\u4e0e\u6807\u51c6\u591a\u5934\u81ea\u6ce8\u610f\u529b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5bf9\u6bd4\u5982\u4e0b\uff1a\\n$$\\n\\\\Omega(MSA)=4hwC^2+2(hw)^2C\\\\\\\\\\n\\\\Omega(W-MSA)=4hwC^2+2M^2hwC\\n$$\\n\u5176\u4e2d\u8f93\u5165\u5305\u542b$M\\\\times M$\u4e2aPatch\u3002\\n\\n\u7531\u4e8eM\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u6709W-MSA\u5bf9\u8f93\u5165\u56fe\u50cf\u5c3a\u5bf8\u7684\u590d\u6742\u5ea6\u5448\u7ebf\u6027\u3002\\n\\n#### Shifted window partitioning in successive blocks\\n\\n\u867d\u7136W-MSA\u89e3\u51b3\u4e86MSA\u65f6\u95f4\u590d\u6742\u5ea6\u968f\u8f93\u5165\u4e8c\u6b21\u589e\u957f\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4e0d\u540c\u7a97\u53e3\u95f4\u6ca1\u6709\u4fe1\u606f\u4ea4\u6d41\uff0c\u8fd9\u663e\u7136\u4f1a\u9650\u5236\u6a21\u578b\u7684\u5efa\u6a21\u80fd\u529b\u3002\\n\\n\u4e3a\u4e86\u4fdd\u6301\u9ad8\u6548\u7684\u540c\u65f6\u8fdb\u884c\u6709\u6548\u5efa\u6a21\uff0c\u63d0\u51fa\u4e86Shifted Window\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211019210948129.png\\" alt=\\"image-20211019210948129\\"/>\\n\\n\u901a\u8fc7\u63a7\u5236\u4e0d\u540c\u6846\u7684\u5927\u5c0f\uff0c\u5b9e\u73b0\u4e0a\u4e00\u5c42\u4e0d\u540cWindow\u4e4b\u95f4\u7684\u4fe1\u606f\u4ea4\u6d41\uff0c\u4f46\u662f\u8fd9\u6837\u8f83\u96be\u5b9e\u73b0\uff0c\u5e76\u4e14Window\u7684\u6570\u91cf\u4f1a\u4ece$[\\\\frac hM]\\\\times[\\\\frac wM]$\u589e\u52a0\u5230$([\\\\frac hM]+1)\\\\times([\\\\frac wM]+1)$\uff0c\u5e76\u4e14\u67d0\u4e9bWindow\u7684\u5927\u5c0f\u4f1a\u5c0f\u4e8e$M\\\\times M$\uff0c\u56e0\u6b64\u63d0\u51fa\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211019230354019.png\\" alt=\\"image-20211019230354019\\"/>\\n\\n\u5c06\u539f\u6709\u7684\u7a97\u53e3\u4ee5M/2\u7684\u5927\u5c0f\u8fdb\u884c\u504f\u79fb\uff0c\u5c06\u591a\u51fa\u7684\u90e8\u5206\u79fb\u52a8\u5230\u76f8\u5bf9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u4e0d\u540cWindow\u4e4b\u524d\u7684\u4fe1\u606f\u4ea4\u6d41\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5b9e\u9645\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u4f7f\u7528Mask\uff0c\u5c06\u4e0a\u56fe\u53f3\u4fa7\u79fb\u52a8\u8fc7\u6765\u7684\u4f4d\u7f6e\u7ed9\u76d6\u4f4f\uff0c\u539f\u56e0\u662f\u8fd9\u90e8\u5206\u7684\u6ce8\u610f\u529b\u6ca1\u6709\u610f\u4e49\u3002\\n\\n#### Relative position bias\\n\\n\u6dfb\u52a0\u4e86\u76f8\u5bf9\u4f4d\u7f6e\u504f\u7f6e$B\\\\in \\\\mathbb R^{M^2\\\\times M^2}$\uff0c\u5176\u63cf\u8ff0\u6bcf\u4e2aWindow\u76f8\u5bf9\u4e8e\u5176\u5b83Window\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u6ce8\u610f\u529b\u516c\u5f0f\u53ef\u4ee5\u5199\u6210\uff1a\\n$$\\nAtten(Q,K,V)=SoftMax(QK^T/\\\\sqrt d +B)V\\n$$\\n\u8be5\u76f8\u5bf9\u4f4d\u7f6e\u504f\u7f6e\u76f8\u8f83\u4e8e\u7edd\u5bf9\u4f4d\u7f6e\u5d4c\u5165\u62e5\u6709\u66f4\u597d\u7684\u6027\u80fd\u3002\\n\\n\u7531\u4e8e\u6bcf\u4e2a\u8f74\u4e0a\u7684\u76f8\u5bf9\u4f4d\u7f6e\u7684\u53d6\u503c\u8303\u56f4\u90fd\u662f$[-M+1,M-1]$\uff0c\u4e8e\u662f\u751f\u6210\u4e00\u4e2a\u5c0f\u7684\u504f\u7f6e\u77e9\u9635$\\\\hat B\\\\in \\\\mathbb{R}^{(2M-1)\\\\times(2M-1)}$\uff0c\u76f8\u5bf9\u4f4d\u7f6e\u504f\u7f6e$B$\u4ece$\\\\hat B$\u4e2d\u91c7\u6837\u800c\u6765\u3002\\n\\n### Patch merging\\n\\nPatch merging\u8d77\u5230\u4e00\u4e2a\u201c\u4e0b\u91c7\u6837\u201d\u7684\u4f5c\u7528\uff0c\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u662fCNN\u4e2d\u7a7a\u95f4\u5230\u6df1\u5ea6\u7684\u53d8\u6362\uff0c\u5c06\u7a7a\u95f4\u4fe1\u606f\u5806\u53e0\u8fdb\u901a\u9053\u4e2d\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u53d8\u76f8\u6269\u5927\u4e86Window\u7684\u5927\u5c0f\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/image-20211020114206242.png\\" alt=\\"image-20211020114206242\\"/>\\n\\n## \u4ee3\u7801\u5206\u6790\\n\\n### Window operation\\n\\nwindow_partition\uff1a\\n\\n\u5c06\u8f93\u5165\u56fe\u50cf\u5206\u5272\u6210$window\\\\_size\\\\times window\\\\_size$\u5927\u5c0f\u7684patch\uff0c\u5e76\u5806\u53e0\u8fdbBatch\u7ef4\u5ea6\u3002\\n\\n```python\\ndef window_partition(x, window_size):\\n    \\"\\"\\"\\n    Args:\\n        x: (B, H, W, C)\\n        window_size (int): window size\\n\\n    Returns:\\n        windows: (num_windows*B, window_size, window_size, C)\\n    \\"\\"\\"\\n    B, H, W, C = x.shape\\n    x = x.view(B, H // window_size, window_size,\\n               W // window_size, window_size, C)\\n    windows = x.permute(0, 1, 3, 2, 4, 5).contiguous(\\n    ).view(-1, window_size, window_size, C)\\n    return windows\\n```\\n\\nwindow_reverse\uff1a\\n\\n\u6062\u590d\uff0c\u7528\u4e8e\u6b8b\u5dee\u8fde\u63a5\u4e4b\u524d\u3002\\n\\n```python\\ndef window_reverse(windows, window_size, H, W):\\n    \\"\\"\\"\\n    Args:\\n        windows: (num_windows*B, window_size, window_size, C)\\n        window_size (int): Window size\\n        H (int): Height of image\\n        W (int): Width of image\\n\\n    Returns:\\n        x: (B, H, W, C)\\n    \\"\\"\\"\\n    B = int(windows.shape[0] / (H * W / window_size / window_size))\\n    x = windows.view(B, H // window_size, W // window_size,\\n                     window_size, window_size, -1)\\n    x = x.permute(0, 1, 3, 2, 4, 5).contiguous().view(B, H, W, -1)\\n    return x\\n```\\n\\n\\n\\n### WindowAttention\\n\\n\u8be5\u90e8\u5206\u4ee3\u7801\u4e3aW-MSA\u548cSW-MSA\uff0c\u5177\u4f53\u5207\u6362\u4f9d\u8d56\u4e8e\u8f93\u5165\u6570\u636e\u548cmask\uff0c\u8be5\u6a21\u5757\u53ea\u8ba1\u7b97\u8d1f\u8d23Window\u5185\u7684\u81ea\u6ce8\u610f\u529b\u3002\\n\\n```python\\nclass WindowAttention(nn.Module):\\n    r\\"\\"\\" Window based multi-head self attention (W-MSA) module with relative position bias.\\n    It supports both of shifted and non-shifted window.\\n\\n    Args:\\n        dim (int): Number of input channels.\\n        window_size (tuple[int]): The height and width of the window.\\n        num_heads (int): Number of attention heads.\\n        qkv_bias (bool, optional):  If True, add a learnable bias to query, key, value. Default: True\\n        qk_scale (float | None, optional): Override default qk scale of head_dim ** -0.5 if set\\n        attn_drop (float, optional): Dropout ratio of attention weight. Default: 0.0\\n        proj_drop (float, optional): Dropout ratio of output. Default: 0.0\\n    \\"\\"\\"\\n\\n    def __init__(self, dim, window_size, num_heads, qkv_bias=True, qk_scale=None, attn_drop=0., proj_drop=0.):\\n\\n        super().__init__()\\n        self.dim = dim\\n        self.window_size = window_size  # Wh, Ww\\n        self.num_heads = num_heads\\n        head_dim = dim // num_heads\\n        self.scale = qk_scale or head_dim ** -0.5\\n\\n        # define a parameter table of relative position bias\\n        self.relative_position_bias_table = nn.Parameter(\\n            torch.zeros((2 * window_size[0] - 1) * (2 * window_size[1] - 1), num_heads))  # 2*Wh-1 * 2*Ww-1, nH\\n\\n        # get pair-wise relative position index for each token inside the window\\n        coords_h = torch.arange(self.window_size[0])\\n        coords_w = torch.arange(self.window_size[1])\\n        coords = torch.stack(torch.meshgrid([coords_h, coords_w]))  # 2, Wh, Ww\\n        coords_flatten = torch.flatten(coords, 1)  # 2, Wh*Ww\\n        relative_coords = coords_flatten[:, :, None] - \\\\\\n            coords_flatten[:, None, :]  # 2, Wh*Ww, Wh*Ww\\n        relative_coords = relative_coords.permute(\\n            1, 2, 0).contiguous()  # Wh*Ww, Wh*Ww, 2\\n        relative_coords[:, :, 0] += self.window_size[0] - \\\\\\n            1  # shift to start from 0\\n        relative_coords[:, :, 1] += self.window_size[1] - 1\\n        relative_coords[:, :, 0] *= 2 * self.window_size[1] - 1\\n        relative_position_index = relative_coords.sum(-1)  # Wh*Ww, Wh*Ww\\n        self.register_buffer(\\"relative_position_index\\",\\n                             relative_position_index)\\n\\n        self.qkv = nn.Linear(dim, dim * 3, bias=qkv_bias)#\u4f7f\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42\u751f\u6210QKV\uff0c\u4f7f\u7528\u5207\u7247\u5206\u5f00\\n        self.attn_drop = nn.Dropout(attn_drop)\\n        self.proj = nn.Linear(dim, dim)#\u5bf9\u8f93\u51fa\u8fdb\u884c\u6620\u5c04\\n        self.proj_drop = nn.Dropout(proj_drop)\\n\\n        trunc_normal_(self.relative_position_bias_table, std=.02)\\n        self.softmax = nn.Softmax(dim=-1)\\n\\n    def forward(self, x, mask=None):\\n        \\"\\"\\"\\n        Args:\\n            x: input features with shape of (num_windows*B, N, C)\\n            mask: (0/-inf) mask with shape of (num_windows, Wh*Ww, Wh*Ww) or None\\n        \\"\\"\\"\\n        B_, N, C = x.shape\\n        qkv = self.qkv(x).reshape(B_, N, 3, self.num_heads, C //\\n                                  self.num_heads).permute(2, 0, 3, 1, 4)\\n        # make torchscript happy (cannot use tensor as tuple)\\n        q, k, v = qkv[0], qkv[1], qkv[2]\\n\\n        q = q * self.scale #\u610f\u4e49\u4e0d\u660e\\n        attn = (q @ k.transpose(-2, -1))\\n\\n        relative_position_bias = self.relative_position_bias_table[self.relative_position_index.view(-1)].view(\\n            self.window_size[0] * self.window_size[1], self.window_size[0] * self.window_size[1], -1)  # Wh*Ww,Wh*Ww,nH\\n        relative_position_bias = relative_position_bias.permute(\\n            2, 0, 1).contiguous()  # nH, Wh*Ww, Wh*Ww\\n        attn = attn + relative_position_bias.unsqueeze(0)\\n\\n        if mask is not None: #\u5f53\u4f7f\u7528SW-MSA\u65f6\uff0c\u4f1a\u4f7f\u7528mask\\n            nW = mask.shape[0]\\n            attn = attn.view(B_ // nW, nW, self.num_heads, N,\\n                             N) + mask.unsqueeze(1).unsqueeze(0)\\n            attn = attn.view(-1, self.num_heads, N, N)\\n            attn = self.softmax(attn)\\n        else:\\n            attn = self.softmax(attn)\\n\\n        attn = self.attn_drop(attn)\\n\\n        x = (attn @ v).transpose(1, 2).reshape(B_, N, C)\\n        x = self.proj(x)\\n        x = self.proj_drop(x)\\n        return x\\n\\n    def extra_repr(self) -> str:\\n        return f\'dim={self.dim}, window_size={self.window_size}, num_heads={self.num_heads}\'\\n\\n    def flops(self, N):\\n        # calculate flops for 1 window with token length of N\\n        flops = 0\\n        # qkv = self.qkv(x)\\n        flops += N * self.dim * 3 * self.dim\\n        # attn = (q @ k.transpose(-2, -1))\\n        flops += self.num_heads * N * (self.dim // self.num_heads) * N\\n        #  x = (attn @ v)\\n        flops += self.num_heads * N * N * (self.dim // self.num_heads)\\n        # x = self.proj(x)\\n        flops += N * self.dim * self.dim\\n        return flops\\n\\n```\\n\\n### SwinTransformer\\n\\nSwinTransformerBlock\uff1a\\n\\n```python\\nclass SwinTransformerBlock(nn.Module):\\n    r\\"\\"\\" Swin Transformer Block.\\n\\n    Args:\\n        dim (int): Number of input channels.\\n        input_resolution (tuple[int]): Input resulotion.\\n        num_heads (int): Number of attention heads.\\n        window_size (int): Window size.\\n        shift_size (int): Shift size for SW-MSA.\\n        mlp_ratio (float): Ratio of mlp hidden dim to embedding dim.\\n        qkv_bias (bool, optional): If True, add a learnable bias to query, key, value. Default: True\\n        qk_scale (float | None, optional): Override default qk scale of head_dim ** -0.5 if set.\\n        drop (float, optional): Dropout rate. Default: 0.0\\n        attn_drop (float, optional): Attention dropout rate. Default: 0.0\\n        drop_path (float, optional): Stochastic depth rate. Default: 0.0\\n        act_layer (nn.Module, optional): Activation layer. Default: nn.GELU\\n        norm_layer (nn.Module, optional): Normalization layer.  Default: nn.LayerNorm\\n    \\"\\"\\"\\n\\n    def __init__(self, dim, input_resolution, num_heads, window_size=7, shift_size=0,\\n                 mlp_ratio=4., qkv_bias=True, qk_scale=None, drop=0., attn_drop=0., drop_path=0.,\\n                 act_layer=nn.GELU, norm_layer=nn.LayerNorm):\\n        super().__init__()\\n        self.dim = dim\\n        self.input_resolution = input_resolution\\n        self.num_heads = num_heads\\n        self.window_size = window_size\\n        self.shift_size = shift_size\\n        self.mlp_ratio = mlp_ratio\\n        if min(self.input_resolution) <= self.window_size:\\n            # if window size is larger than input resolution, we don\'t partition windows\\n            self.shift_size = 0\\n            self.window_size = min(self.input_resolution)\\n        assert 0 <= self.shift_size < self.window_size, \\"shift_size must in 0-window_size\\"\\n\\n        self.norm1 = norm_layer(dim)\\n        self.attn = WindowAttention(\\n            dim, window_size=to_2tuple(self.window_size), num_heads=num_heads,\\n            qkv_bias=qkv_bias, qk_scale=qk_scale, attn_drop=attn_drop, proj_drop=drop)\\n\\n        self.drop_path = DropPath(\\n            drop_path) if drop_path > 0. else nn.Identity()\\n        self.norm2 = norm_layer(dim)\\n        mlp_hidden_dim = int(dim * mlp_ratio)\\n        self.mlp = Mlp(in_features=dim, hidden_features=mlp_hidden_dim,\\n                       act_layer=act_layer, drop=drop)\\n\\n        if self.shift_size > 0:  # shift_size\u8868\u793a\u4f7f\u7528SW-MSA\\n            # calculate attention mask for SW-MSA\\n            H, W = self.input_resolution\\n            img_mask = torch.zeros((1, H, W, 1))  # 1 H W 1\\n            h_slices = (slice(0, -self.window_size),\\n                        slice(-self.window_size, -self.shift_size),\\n                        slice(-self.shift_size, None))\\n            w_slices = (slice(0, -self.window_size),\\n                        slice(-self.window_size, -self.shift_size),\\n                        slice(-self.shift_size, None))\\n            cnt = 0\\n            for h in h_slices:\\n                for w in w_slices:\\n                    img_mask[:, h, w, :] = cnt\\n                    cnt += 1\\n\\n            # nW, window_size, window_size, 1\\n            mask_windows = window_partition(img_mask, self.window_size)\\n            mask_windows = mask_windows.view(-1,\\n                                             self.window_size * self.window_size)\\n            attn_mask = mask_windows.unsqueeze(1) - mask_windows.unsqueeze(2)\\n            attn_mask = attn_mask.masked_fill(\\n                attn_mask != 0, float(-100.0)).masked_fill(attn_mask == 0, float(0.0))\\n        else:\\n            attn_mask = None\\n\\n        self.register_buffer(\\"attn_mask\\", attn_mask)\\n\\n    def forward(self, x):\\n        H, W = self.input_resolution\\n        B, L, C = x.shape\\n        assert L == H * W, \\"input feature has wrong size\\"\\n\\n        shortcut = x\\n        x = self.norm1(x)\\n        x = x.view(B, H, W, C)\\n\\n        # cyclic shift\\n        if self.shift_size > 0:\\n            shifted_x = torch.roll(\\n                x, shifts=(-self.shift_size, -self.shift_size), dims=(1, 2))\\n        else:\\n            shifted_x = x\\n\\n        # partition windows\\n        # nW*B, window_size, window_size, C\\n        x_windows = window_partition(shifted_x, self.window_size)\\n        # nW*B, window_size*window_size, C\\n        x_windows = x_windows.view(-1, self.window_size * self.window_size, C)\\n\\n        # W-MSA/SW-MSA\\n        # nW*B, window_size*window_size, C\\n        attn_windows = self.attn(x_windows, mask=self.attn_mask)\\n\\n        # merge windows\\n        attn_windows = attn_windows.view(-1,\\n                                         self.window_size, self.window_size, C)\\n        shifted_x = window_reverse(\\n            attn_windows, self.window_size, H, W)  # B H\' W\' C \uff0c\u8fd8\u539f\\n\\n        # reverse cyclic shift\\n        if self.shift_size > 0:\\n            x = torch.roll(shifted_x, shifts=(\\n                self.shift_size, self.shift_size), dims=(1, 2))  # \u4f7f\u7528torch.roll\u5b9e\u73b0shift\\n        else:\\n            x = shifted_x\\n        x = x.view(B, H * W, C)\\n\\n        # FFN\\n        x = shortcut + self.drop_path(x)\\n        x = x + self.drop_path(self.mlp(self.norm2(x)))\\n\\n        return x\\n```\\n\\nstage\uff1a\\n\\n\u4e0b\u9762\u7684\u4ee3\u7801\u7528\u6765\u5b9e\u73b0\u4e00\u4e2astage\uff0c\u6bcf\u4e2astage\u4e2d\u7684MSA\u90e8\u5206\u5305\u542b\u5076\u6570\u4e2aSwin Transformer Block\\n\\n```python\\nclass BasicLayer(nn.Module):\\n    \\"\\"\\" A basic Swin Transformer layer for one stage.\\n\\n    Args:\\n        dim (int): Number of input channels.\\n        input_resolution (tuple[int]): Input resolution.\\n        depth (int): Number of blocks.\\n        num_heads (int): Number of attention heads.\\n        window_size (int): Local window size.\\n        mlp_ratio (float): Ratio of mlp hidden dim to embedding dim.\\n        qkv_bias (bool, optional): If True, add a learnable bias to query, key, value. Default: True\\n        qk_scale (float | None, optional): Override default qk scale of head_dim ** -0.5 if set.\\n        drop (float, optional): Dropout rate. Default: 0.0\\n        attn_drop (float, optional): Attention dropout rate. Default: 0.0\\n        drop_path (float | tuple[float], optional): Stochastic depth rate. Default: 0.0\\n        norm_layer (nn.Module, optional): Normalization layer. Default: nn.LayerNorm\\n        downsample (nn.Module | None, optional): Downsample layer at the end of the layer. Default: None\\n        use_checkpoint (bool): Whether to use checkpointing to save memory. Default: False.\\n    \\"\\"\\"\\n\\n    def __init__(self, dim, input_resolution, depth, num_heads, window_size,\\n                 mlp_ratio=4., qkv_bias=True, qk_scale=None, drop=0., attn_drop=0.,\\n                 drop_path=0., norm_layer=nn.LayerNorm, downsample=None, use_checkpoint=False):\\n\\n        super().__init__()\\n        self.dim = dim\\n        self.input_resolution = input_resolution\\n        self.depth = depth\\n        self.use_checkpoint = use_checkpoint\\n\\n        # build blocks\\n        # \u5076\u6570\u5c42\u4f7f\u7528Shift\uff0c\u5947\u6570\u5c42\u4e0d\u7528\\n        self.blocks = nn.ModuleList([\\n            SwinTransformerBlock(dim=dim, input_resolution=input_resolution,\\n                                 num_heads=num_heads, window_size=window_size,\\n                                 shift_size=0 if (\\n                                     i % 2 == 0) else window_size // 2,\\n                                 mlp_ratio=mlp_ratio,\\n                                 qkv_bias=qkv_bias, qk_scale=qk_scale,\\n                                 drop=drop, attn_drop=attn_drop,\\n                                 drop_path=drop_path[i] if isinstance(\\n                                     drop_path, list) else drop_path,\\n                                 norm_layer=norm_layer)\\n            for i in range(depth)])\\n\\n        # patch merging layer\\n        if downsample is not None:\\n            self.downsample = downsample(\\n                input_resolution, dim=dim, norm_layer=norm_layer)\\n        else:\\n            self.downsample = None\\n\\n    def forward(self, x):\\n        for blk in self.blocks:\\n            if self.use_checkpoint:\\n                x = checkpoint.checkpoint(blk, x)\\n            else:\\n                x = blk(x)\\n        if self.downsample is not None:\\n            x = self.downsample(x)\\n        return x\\n```\\n\\nSwin Transformer\uff1a\\n\\n\u4e3b\u5e72\u4ee5\u53cahead\uff0c\u5c06\u591a\u4e2astage\u7ec4\u5408\u8d77\u6765\uff0c\u4f46\u662f\u5bf9\u5206\u5272\u4f3c\u4e4e\u4e0d\u592a\u53cb\u597d\uff0c\u56e0\u4e3aSwin Transformer\u53ea\u6709\u4e0b\u91c7\u6837\uff0c\u4e0a\u91c7\u6837\u8fc7\u7a0b\u9700\u8981\u4f7f\u7528CNN\u7684\u65b9\u6cd5\u81ea\u884c\u5b9e\u73b0\u3002\\n\\n```python\\nclass SwinTransformer(nn.Module):\\n    r\\"\\"\\" Swin Transformer\\n        A PyTorch impl of : `Swin Transformer: Hierarchical Vision Transformer using Shifted Windows`  -\\n          https://arxiv.org/pdf/2103.14030\\n\\n    Args:\\n        img_size (int | tuple(int)): Input image size. Default 224\\n        patch_size (int | tuple(int)): Patch size. Default: 4\\n        in_chans (int): Number of input image channels. Default: 3\\n        num_classes (int): Number of classes for classification head. Default: 1000\\n        embed_dim (int): Patch embedding dimension. Default: 96\\n        depths (tuple(int)): Depth of each Swin Transformer layer.\\n        num_heads (tuple(int)): Number of attention heads in different layers.\\n        window_size (int): Window size. Default: 7\\n        mlp_ratio (float): Ratio of mlp hidden dim to embedding dim. Default: 4\\n        qkv_bias (bool): If True, add a learnable bias to query, key, value. Default: True\\n        qk_scale (float): Override default qk scale of head_dim ** -0.5 if set. Default: None\\n        drop_rate (float): Dropout rate. Default: 0\\n        attn_drop_rate (float): Attention dropout rate. Default: 0\\n        drop_path_rate (float): Stochastic depth rate. Default: 0.1\\n        norm_layer (nn.Module): Normalization layer. Default: nn.LayerNorm.\\n        ape (bool): If True, add absolute position embedding to the patch embedding. Default: False\\n        patch_norm (bool): If True, add normalization after patch embedding. Default: True\\n        use_checkpoint (bool): Whether to use checkpointing to save memory. Default: False\\n    \\"\\"\\"\\n\\n    def __init__(self, img_size=224, patch_size=4, in_chans=3, num_classes=1000,\\n                 embed_dim=96, depths=[2, 2, 6, 2], num_heads=[3, 6, 12, 24],\\n                 window_size=7, mlp_ratio=4., qkv_bias=True, qk_scale=None,\\n                 drop_rate=0., attn_drop_rate=0., drop_path_rate=0.1,\\n                 norm_layer=nn.LayerNorm, ape=False, patch_norm=True,\\n                 use_checkpoint=False, **kwargs):\\n        super().__init__()\\n\\n        self.num_classes = num_classes\\n        self.num_layers = len(depths)\\n        self.embed_dim = embed_dim\\n        self.ape = ape\\n        self.patch_norm = patch_norm\\n        self.num_features = int(embed_dim * 2 ** (self.num_layers - 1))\\n        self.mlp_ratio = mlp_ratio\\n\\n        # split image into non-overlapping patches\\n        self.patch_embed = PatchEmbed(\\n            img_size=img_size, patch_size=4, in_chans=in_chans, embed_dim=embed_dim,\\n            norm_layer=norm_layer if self.patch_norm else None)\\n        num_patches = self.patch_embed.num_patches\\n        patches_resolution = self.patch_embed.patches_resolution\\n        self.patches_resolution = patches_resolution\\n\\n        # absolute position embedding\\n        if self.ape:\\n            self.absolute_pos_embed = nn.Parameter(\\n                torch.zeros(1, num_patches, embed_dim))\\n            trunc_normal_(self.absolute_pos_embed, std=.02)\\n\\n        self.pos_drop = nn.Dropout(p=drop_rate)\\n\\n        # stochastic depth\\n        dpr = [x.item() for x in torch.linspace(0, drop_path_rate,\\n                                                sum(depths))]  # stochastic depth decay rule\\n\\n        # build layers\\n        self.layers = nn.ModuleList()\\n        for i_layer in range(self.num_layers):\\n            layer = BasicLayer(dim=int(embed_dim * 2 ** i_layer),\\n                               input_resolution=(patches_resolution[0] // (2 ** i_layer),\\n                                                 patches_resolution[1] // (2 ** i_layer)),\\n                               depth=depths[i_layer],\\n                               num_heads=num_heads[i_layer],\\n                               window_size=window_size,\\n                               mlp_ratio=self.mlp_ratio,\\n                               qkv_bias=qkv_bias, qk_scale=qk_scale,\\n                               drop=drop_rate, attn_drop=attn_drop_rate,\\n                               drop_path=dpr[sum(depths[:i_layer]):sum(\\n                                   depths[:i_layer + 1])],\\n                               norm_layer=norm_layer,\\n                               downsample=PatchMerging if (\\n                                   i_layer < self.num_layers - 1) else None,\\n                               use_checkpoint=use_checkpoint)\\n            self.layers.append(layer)\\n\\n        self.norm = norm_layer(self.num_features)\\n        self.avgpool = nn.AdaptiveAvgPool1d(1)\\n        self.head = nn.Linear(\\n            self.num_features, num_classes) if num_classes > 0 else nn.Identity()\\n\\n        self.apply(self._init_weights)\\n\\n    def _init_weights(self, m):\\n        if isinstance(m, nn.Linear):\\n            trunc_normal_(m.weight, std=.02)\\n            if isinstance(m, nn.Linear) and m.bias is not None:\\n                nn.init.constant_(m.bias, 0)\\n        elif isinstance(m, nn.LayerNorm):\\n            nn.init.constant_(m.bias, 0)\\n            nn.init.constant_(m.weight, 1.0)\\n\\n    @torch.jit.ignore\\n    def no_weight_decay(self):\\n        return {\'absolute_pos_embed\'}\\n\\n    @torch.jit.ignore\\n    def no_weight_decay_keywords(self):\\n        return {\'relative_position_bias_table\'}\\n\\n    def forward_features(self, x):\\n        x = self.patch_embed(x)\\n        if self.ape:\\n            x = x + self.absolute_pos_embed\\n        x = self.pos_drop(x)\\n\\n        for layer in self.layers:\\n            x = layer(x)\\n\\n        x = self.norm(x)  # B L C\\n        x = self.avgpool(x.transpose(1, 2))  # B C 1\\n        x = torch.flatten(x, 1)\\n        return x\\n\\n    def forward(self, x):\\n        x = self.forward_features(x)\\n        x = self.head(x)\\n        return x\\n\\n```\\n\\n### downsample\\n\\n\u8fd9\u91cc\u7684\u4e0b\u91c7\u6837\u91c7\u7528\u7684\u662f\u7a7a\u95f4\u5230\u6df1\u5ea6\u7684\u8f6c\u6362\uff1a\\n\\n```python\\nclass PatchMerging(nn.Module):\\n    r\\"\\"\\" Patch Merging Layer.\\n\\n    Args:\\n        input_resolution (tuple[int]): Resolution of input feature.\\n        dim (int): Number of input channels.\\n        norm_layer (nn.Module, optional): Normalization layer.  Default: nn.LayerNorm\\n    \\"\\"\\"\\n\\n    def __init__(self, input_resolution, dim, norm_layer=nn.LayerNorm):\\n        super().__init__()\\n        self.input_resolution = input_resolution\\n        self.dim = dim\\n        self.reduction = nn.Linear(4 * dim, 2 * dim, bias=False)\\n        self.norm = norm_layer(4 * dim)\\n\\n    def forward(self, x):\\n        \\"\\"\\"\\n        x: B, H*W, C\\n        \\"\\"\\"\\n        H, W = self.input_resolution\\n        B, L, C = x.shape\\n        assert L == H * W, \\"input feature has wrong size\\"\\n        assert H % 2 == 0 and W % 2 == 0, f\\"x size ({H}*{W}) are not even.\\"\\n\\n        x = x.view(B, H, W, C)\\n\\n        x0 = x[:, 0::2, 0::2, :]  # B H/2 W/2 C\\n        x1 = x[:, 1::2, 0::2, :]  # B H/2 W/2 C\\n        x2 = x[:, 0::2, 1::2, :]  # B H/2 W/2 C\\n        x3 = x[:, 1::2, 1::2, :]  # B H/2 W/2 C\\n        x = torch.cat([x0, x1, x2, x3], -1)  # B H/2 W/2 4*C\\n        x = x.view(B, -1, 4 * C)  # B H/2*W/2 4*C\\n\\n        x = self.norm(x)\\n        x = self.reduction(x)\\n\\n        return x\\n```\\n\\n### \u5176\u4ed6\\n\\nPatchEmbed\uff1a\\n\\n\u5bf9\u8f93\u5165\u56fe\u50cf\u4f7f\u7528PatchEmbed\u751f\u6210token\u8868\u793a\uff1a\\n\\n```python\\nclass PatchEmbed(nn.Module):\\n    r\\"\\"\\" Image to Patch Embedding\\n\\n    Args:\\n        img_size (int): Image size.  Default: 224.\\n        patch_size (int): Patch token size. Default: 4.\\n        in_chans (int): Number of input image channels. Default: 3.\\n        embed_dim (int): Number of linear projection output channels. Default: 96.\\n        norm_layer (nn.Module, optional): Normalization layer. Default: None\\n    \\"\\"\\"\\n\\n    def __init__(self, img_size=224, patch_size=4, in_chans=3, embed_dim=96, norm_layer=None):\\n        super().__init__()\\n        img_size = to_2tuple(img_size)\\n        patch_size = to_2tuple(patch_size)\\n        patches_resolution = [img_size[0] //\\n                              patch_size[0], img_size[1] // patch_size[1]]\\n        self.img_size = img_size\\n        self.patch_size = patch_size\\n        self.patches_resolution = patches_resolution\\n        self.num_patches = patches_resolution[0] * patches_resolution[1]\\n\\n        self.in_chans = in_chans\\n        self.embed_dim = embed_dim\\n\\n        self.proj = nn.Conv2d(in_chans, embed_dim,\\n                              kernel_size=patch_size, stride=patch_size)\\n        if norm_layer is not None:\\n            self.norm = norm_layer(embed_dim)\\n        else:\\n            self.norm = None\\n\\n    def forward(self, x):\\n        B, C, H, W = x.shape\\n        # FIXME look at relaxing size constraints\\n        assert H == self.img_size[0] and W == self.img_size[1], \\\\\\n            f\\"Input image size ({H}*{W}) doesn\'t match model ({self.img_size[0]}*{self.img_size[1]}).\\"\\n        x = self.proj(x).flatten(2).transpose(1, 2)  # B Ph*Pw C\\n        if self.norm is not None:\\n            x = self.norm(x)\\n        return x\\n```\\n\\n## \u901a\u7528\u578b\u7684\u4e3b\u5e72\u7f51\u7edc\u9700\u8981\u4ec0\u4e48\uff1f\\n\\n\u672c\u6587\u65e8\u5728\u4f7f\u7528Transformer\u6784\u5efa\u4e00\u4e2a\u901a\u7528\u7684\u4e3b\u5e72\u7f51\u7edc\uff0c\u90a3\u4e48\u4e00\u4e2a\u901a\u7528\u7684\u4e3b\u5e72\u7f51\u7edc\u9700\u8981\u4ec0\u4e48\u5462\uff1f\\n\\n1. \u8f7b\u91cf\\n2. \u5f3a\u5927\u7684\u7279\u5f81\u63d0\u53d6\u80fd\u529b\\n3. \u591a\u5c3a\u5ea6\\n\\n## local vision transformer\\n\\n\u4f17\u6240\u5468\u77e5\uff0cTransformer\u662f\u4e00\u79cd\u81ea\u6ce8\u610f\u529b\uff0c\u800c\u81ea\u6ce8\u610f\u529b\u7684\u5173\u952e\u5c31\u662f\u8ba1\u7b97\u5168\u5c40\u4e2d\u6240\u6709token\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u4f3c\u4e4e\u4e0elocal\u6709\u5f88\u5927\u7684\u77db\u76fe\u3002\\n\\n\u6700\u8fd1\u8d8a\u6765\u8d8a\u591a\u7684\u5de5\u4f5c\u5bf9local vision transformer\u8fdb\u884c\u7814\u7a76\uff0c\u5176\u5b9e\u9645\u4e0a\u662f\u4e00\u79cdlocal attention\uff0c\u6bd4\u5982\u4e4b\u524d\u7684VOLO outlooker attention\uff0c\u5176\u4f18\u70b9\u4e3b\u8981\u5728\u4e8e\u8ba1\u7b97\u590d\u6742\u5ea6\u4f4e\uff0c\u76f8\u8f83\u4e8eTransformer\u7684\u5168\u5c40\u7c97\u7565\u5efa\u6a21\u80fd\u591f\u66f4\u7cbe\u7ec6\u5730\u5728\u5c40\u90e8\u8fdb\u884c\u5efa\u6a21\uff08VOLO\u7684\u89c2\u70b9\uff09\uff0c\u4f46\u662f\u5176\u5c40\u90e8\u7684\u5173\u6ce8\u4e0eTransformer\u662f\u76f8\u6096\u7684\uff0c\u56e0\u6b64\u63d0\u51fa\u4e86\u5404\u79cdCross Window\u7684\u4fe1\u606f\u4ea4\u6d41\u65b9\u5f0f\uff1a\\n\\n\u6bd4\u5982\u672c\u6587\u7684Shift Windows\uff0c\u7f8e\u56e2Twins\u7684local attention\u548cglobal attention\u7ed3\u5408\uff0c\u534e\u4e3aMSG-Transformer\u4f7f\u7528\u7684\u4fe1\u4f7ftoken\uff0c\u4ea4\u5927GG-Transformer\u4f7f\u7528\u7684AdaptivelyDilatedSplitting\u4f7f\u7528Dilate\u7684\u601d\u60f3\u6765\u4ece\u5168\u5c40\u91c7\u96c6Window\uff08\u7c7b\u4f3c\u4e8eshuffle\u52a0\u4e0a\u4ece\u6df1\u5ea6\u5230\u7a7a\u95f4\u7684\u8f6c\u6362\uff09\uff0c\u817e\u8baf\u7684Shuffle Transformer\uff08\u4e0eGG-Transformer\u7c7b\u4f3c\uff09\u7b49\uff0c\u4ee5\u53ca\u4e4b\u524d\u7684Recurrent Criss-Cross Attention\uff0c\u5176\u5229\u7528\u6a2a\u7eb5\u8f74\u4e0a\u4fe1\u606f\u8ba1\u7b97\u5168\u5c40\u6ce8\u610f\u529b\uff0c\u6216\u662f\u7c7b\u4f3c\u4e8eRCCA\u6a21\u5757\u7684CSWin Transformer\u3002\\n\\n\u8fd9\u4e9b\u90fd\u662flocal attention\uff0c\u4f46\u662f\u901a\u8fc7\u4e0d\u540c\u7684\u65b9\u6cd5\u589e\u5f3a\u4e86\u5176\u5168\u5c40\u5efa\u6a21\u7684\u80fd\u529b\uff0c\u5177\u4f53\u539f\u56e0\u53ef\u80fd\u662f\u56e0\u4e3alocal attention\u7684**\u7a00\u758f\u8fde\u63a5\u6027**\uff0c\u8fd9\u4e5f\u662fVOLO\u7684\u601d\u60f3\u6240\u5728\uff0c\u5e76\u4e14\u9664\u4e86\u4e0a\u8ff0\u7f51\u7edc\uff0c\u4e5f\u5728\u5f88\u591a\u7f51\u7edc\u4e2d\u5f97\u4ee5\u4f53\u73b0\uff0c\u6bd4\u5982ECANet\u9488\u5bf9SENet\u7684\u6539\u8fdb\uff0c\u5176\u4f7f\u7528\u4e00\u7ef4\u5377\u79ef\u83b7\u5f97\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u4f46\u662f\u53d6\u5f97\u4e86\u66f4\u597d\u7684\u6548\u679c\u3002\\n\\n\u5173\u4e8e\u8fd9\u70b9\u5c06\u5728[Demystifying Local Vision Transformer: Sparse Connectivity, Weight Sharing, and Dynamic Weight](file:///D:/UserData/Desktop/%E8%AE%BA%E6%96%87/Attention%20or%20Conv/2106.04263.pdf)\u8fdb\u884c\u8ba8\u8bba\u2014\u2014Local vision transformer work\u7684\u539f\u56e0\u7a76\u7adf\u662f\u4ec0\u4e48\uff1f"},{"id":"/[46]Demystifying-Local-Vision-Transformer","metadata":{"permalink":"/blog/[46]Demystifying-Local-Vision-Transformer","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[46]Demystifying-Local-Vision-Transformer.md","source":"@site/blog/[46]Demystifying-Local-Vision-Transformer.md","title":"Demystifying Local Vision Transformer","description":"\u4ece\u7a00\u758f\u8fde\u63a5\u6027\u3001\u6743\u91cd\u5171\u4eab\u3001\u52a8\u6001\u6743\u91cd\u8fdb\u4e00\u6b65\u63a2\u7a76Local Attention\u3002","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attention-mechanism","permalink":"/blog/tags/attention-mechanism"},{"label":"transformer","permalink":"/blog/tags/transformer"},{"label":"dynamic-neural-network","permalink":"/blog/tags/dynamic-neural-network"}],"readingTime":11.5,"hasTruncateMarker":true,"authors":[{"name":"AsTheStarsFall","title":"None","url":"https://github.com/AsTheStarsFalll","imageURL":"https://github.yuuza.net/AsTheStarsFalll.png","key":"asthestarsfall"}],"frontMatter":{"title":"Demystifying Local Vision Transformer","authors":["asthestarsfall"],"tags":["attention-mechanism","transformer","dynamic-neural-network"]},"prevItem":{"title":"Swin Transformer - Hierarchical Vision Transformer using Shifted Windows","permalink":"/blog/[45]Swin-Transformer-Hierarchical-Vision-Transformer-using-Shifted-Windows"},"nextItem":{"title":"DCT-Mask - Discrete Cosine Transform Mask Representation for Instance Segmentation","permalink":"/blog/[47]Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation"}},"content":"\u4ece\u7a00\u758f\u8fde\u63a5\u6027\u3001\u6743\u91cd\u5171\u4eab\u3001\u52a8\u6001\u6743\u91cd\u8fdb\u4e00\u6b65\u63a2\u7a76Local Attention\u3002\\n\\n> \u8bba\u6587\u540d\u79f0\uff1aDemystifying Local Vision Transformer: Sparse Connectivity, Weight Sharing, and Dynamic Weight\\n>\\n> \u4f5c\u8005\uff1aQi Han1\uff0cZejia Fan\uff0cQi Dai\uff0cLei Sun\uff0cMing-Ming Cheng\uff0cJiaying Liu\uff0cJingdong Wang\\n>\\n> Code\uff1ahttps://github.com/Atten4Vis/DemystifyLocalViT/\\n\\n## \u4ecb\u7ecd\\n\\n\u672c\u6587\u7684\u4e3b\u8981\u6210\u679c\u53d1\u73b0\uff08finding\uff09\u5982\u4e0b\uff1a\\n\\n1. Local Transformer\u91c7\u7528\u7684Local Attention\u5229\u7528\u4e86\u73b0\u6709\u7684\u6b63\u5219\u5316\u65b9\u6848\uff08regularization schemes\uff09\u3001\u7a00\u758f\u8fde\u63a5\uff08sparse connectivity \uff09\u3001\u6743\u91cd\u5171\u4eab\uff08weight sharing\uff09\u4ee5\u53ca\u52a8\u6001\u6743\u91cd\u9884\u6d4b\uff08dynamic weight prediction\uff09\uff0c\u5728\u4e0d\u9700\u8981\u989d\u5916\u589e\u52a0\u6a21\u578b\u590d\u6742\u5ea6\u548c\u8bad\u7ec3\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u589e\u52a0\u6027\u80fd\uff1b\\n\\n2. \u5c40\u90e8\u6ce8\u610f\u529b\uff08Local Attention\uff09\u4e0e\uff08\u52a8\u6001\uff09\u6df1\u5ea6\u5377\u79ef\uff08(dynamic )depth-wise convolution\uff09\u5728\u7a00\u758f\u8fde\u63a5\u6027\u4e0a**\u76f8\u4f3c**\uff0c\u5728\u6743\u91cd\u5171\u4eab\u548c\u52a8\u6001\u6743\u91cd\u9884\u6d4b\u4e0a\u4e0d\u540c\u3002\\n\\n   \u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u5c40\u90e8\u6ce8\u610f\u529b\u548c\uff08\u52a8\u6001\uff09\u6df1\u5ea6\u5377\u79ef\u6240\u91c7\u7528\u7684\u6b63\u5219\u5316\u5f62\u5f0f\u548c\u52a8\u6001\u6743\u91cd\u9884\u6d4b\u65b9\u6848\u5177\u6709**\u76f8\u4f3c**\u7684\u6027\u80fd\u3002\\n\\n3. \u6b64\u5916\uff0c\u63d0\u51fa\u4e86\u4e00\u4e2a\u5173\u7cfb\u56fe\u6765\u8054\u7cfb\u5377\u79ef\u548c\u6ce8\u610f\u529b\uff0c\u540c\u65f6\u5f00\u53d1\u4e86\u57fa\u4e8eMLP\u7684\u65b9\u6cd5\u3002\\n\\n   \u5173\u7cfb\u56fe\u8868\u660e\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u672c\u8d28\u4e0a\u5229\u7528\u4e86\u4e0d\u540c\u7684\u7a00\u758f\u8fde\u63a5\u548c\u6743\u91cd\u5171\u4eab\u6a21\u5f0f\uff0c\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u52a8\u6001\u6743\u91cd\u9884\u6d4b\u8fdb\u884c\u6a21\u578b\u6b63\u5219\u5316\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## Understanding Local Attention\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/202110241956165.png\\" alt=\\"image-20211024150706152\\"/>\\n\\n\u4e0a\u56fe\u5206\u522b\u8868\u793a\u4e86(a)convolution,(b) global attention and spatial mixing MLP,(c) local attention and depth-wise convolution, (d) point-wise MLP or $1\xd71$ convolution, (e) MLP (fully-connected layer)\u7684\u8fde\u63a5\u6a21\u5f0f\u3002\\n\\n\u63a5\u4e0b\u6765\u5c06\u5bf9\u5176\u8fdb\u884c\u4ecb\u7ecd\u2014\u2014\\n\\n### Sparse Connectivity, Weight Sharing, and Dynamic Weight\\n\\n\u672c\u8282\u5c06\u7b80\u8981\u4ecb\u7ecd\u4e24\u79cd\u6b63\u5219\u5316\u5f62\u5f0f\uff1a\u7a00\u758f\u8fde\u63a5\u548c\u6743\u91cd\u5171\u4eab\uff0c\u4ee5\u53ca\u52a8\u6001\u6743\u91cd\uff0c\u548c\u5b83\u4eec\u7684\u4f18\u70b9\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e09\u79cd\u5f62\u5f0f\u6765\u5206\u6790\u5c40\u90e8\u6ce8\u610f\u529b\uff0c\u5c06\u5176\u4e0e\u6df1\u5ea6\u5377\u79ef\u8054\u7cfb\u8d77\u6765\u3002\\n\\n**\u7a00\u758f\u8fde\u63a5**\uff1a\u7a00\u758f\u8fde\u63a5\u610f\u5473\u7740\u67d0\u4e9b\u8f93\u51fa\u548c\u67d0\u4e9b\u8f93\u5165\u4e4b\u95f4\u5e76\u6ca1\u6709\u8054\u7cfb\uff0c\u5b83\u5728\u4e0d\u51cf\u5c11\u795e\u7ecf\u5143\u7684\u60c5\u51b5\u4e0b\uff0c\u964d\u4f4e\u4e86\u6a21\u578b\u7684\u590d\u6742\u5ea6\u3002\\n\\n**\u6743\u91cd\u5171\u4eab**\uff1a\u6743\u91cd\u5171\u4eab\u8868\u793a\u67d0\u4e9b\u8fde\u63a5\u6743\u91cd\u76f8\u7b49\uff0c\u5b83\u51cf\u5c11\u4e86\u6a21\u578b\u7684\u53c2\u6570\u91cf\uff0c\u589e\u52a0\u4e86\u7f51\u7edc\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u589e\u52a0\u76f8\u5e94\u7684\u8bad\u7ec3\u6570\u636e\u3002\\n\\n**\u52a8\u6001\u6743\u91cd**\uff1a\u52a8\u6001\u6743\u91cd\u6307\u7684\u662f\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u5b66\u4e60\u7279\u5b9a\u7684\u8fde\u63a5\u6743\u91cd\uff0c\u5b83\u65e8\u5728\u589e\u52a0\u6a21\u578b\u8868\u8fbe\u80fd\u529b\uff0c\u5982\u679c\u5c06\u5b66\u4e60\u7684\u8fde\u63a5\u6743\u91cd\u89c6\u4e3a\u9690\u85cf\u53d8\u91cf\uff0c\u5219\u53ef\u4ee5\u5c06\u52a8\u6001\u6743\u91cd\u89c6\u4e3a\u5f15\u5165\u4e8c\u9636\u64cd\u4f5c\uff08\u8be5\u89c2\u70b9\u5728Involution\u548cVOLO\u4e2d\u90fd\u6709\u6240\u8868\u73b0\uff0c\u5c06\u5728\u540e\u9762\u8fdb\u884c\u8ba8\u8bba\uff09\uff0c\u4ece\u800c\u63d0\u9ad8\u7f51\u7edc\u7684\u80fd\u529b\u3002\\n\\n### Local Attention\\n\\nVision Transformer\u901a\u8fc7\u91cd\u590d\u6ce8\u610f\u529b\u5c42\u548c\u540e\u7eed\u7684\u524d\u9988\u5c42\u5f62\u6210\u4e00\u4e2a\u7f51\u7edc\uff0c\u800cLocal Vision Transformer\uff0c\u91c7\u7528\u5c40\u90e8\u6ce8\u610f\u529b\u5c42\uff0c\u5c06\u7a7a\u95f4\u5212\u5206\u4e3a\u4e00\u7ec4\u5c0f\u7a97\u53e3\uff0c\u5728\u6bcf\u4e2a\u7a97\u53e3\u5185\u540c\u65f6\u8ba1\u7b97\u81ea\u6ce8\u610f\u529b\uff0c\u4ee5\u63d0\u9ad8\u5185\u5b58\u548c\u8ba1\u7b97\u6548\u7387\u3002\\n\\n\u591a\u5934\u5c40\u90e8\u81ea\u6ce8\u610f\u529b\u6700\u7ec8\u53ef\u5199\u4f5c\u5982\u4e0b\u5f62\u5f0f\uff1a\\n$$\\ny_i =[y_{i1}^Ty_{i2}^Ty_{i3}^T\\\\cdots y_{iM}^T]^T\\n\\\\\\\\y_{im}=\\\\sum_{j=1}^{N_k}a_{ijm}X_{ijm}\\n$$\\n\u5176\u4e2di\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\uff0cj\u8868\u793a\u6574\u4e2a\u7a97\u53e3\u4e2d\u7684\u6240\u6709\u4f4d\u7f6e\uff0c$N_k$\u5373\u8868\u793a\u4e00\u4e2a\u7a97\u53e3\u4e2d\u50cf\u7d20\u7684\u603b\u6570\uff08\u4e0b\u540c\uff09\u3002\\n\\n### Properties\\n\\nLocal Attention\u662f\u4e00\u4e2a\u5177\u6709\u52a8\u6001\u6743\u91cd\u8ba1\u7b97\u7684channel-wise\u548cspatially-locally\u7684\u8fde\u63a5\u5c42\u3002\\n\\n\u5176\u805a\u96c6\u4fe1\u606f\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7b49\u4ef7\u5730\u5199\u6210\uff1a\\n$$\\ny_i=\\\\sum_{j=1}^{N_k}W_{ij}\\\\odot X_{ij}\\n$$\\n$\\\\odot$\u8868\u793a\u9010\u5143\u7d20\u76f8\u4e58\uff0c$W_{ij}$\u8868\u793a\u6743\u91cd\u5411\u91cf\uff0c\u4ece$a_{ij}$\u4e2d\u83b7\u5f97\u3002\\n\\n**\u7a00\u758f\u8fde\u63a5**\uff1a\\n\\nLocal Attention\u5728\u7a7a\u95f4\u4e0a\u662f\u7a00\u758f\u7684\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u4e0e\u4e00\u4e2a\u5c0f\u7a97\u53e3\u4e2d\u7684\u5176\u4ed6\u4f4d\u7f6e\u8fde\u63a5\uff0c**\u5e76\u4e14\u901a\u9053\u95f4\u4e0d\u5b58\u5728\u8fde\u63a5**\u3002\\n\\n\u4e0a\u5f0f\u4e2d\u7684$\\\\odot$\u8868\u793a\u7ed9\u5b9a\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u6bcf\u4e2a\u8f93\u51fa\u7684\u5143\u7d20\uff0c\u6bd4\u5982$y_{id}$\uff08\u7b2cd\u4e2a\u901a\u9053\u4e2d\u7684\u7b2ci\u4e2a\u4f4d\u7f6e\uff09\uff0c\u662f\u4f9d\u8d56\u4e8e\u540c\u4e2a\u901a\u9053\u540c\u4e00\u7a97\u53e3\u4e2d\u7684\u5176\u4ed6\u8f93\u5165\u5143\u7d20\uff0c\u800c\u4e0e\u5176\u4ed6\u901a\u9053\u4e0a\u7684\u5143\u7d20\u65e0\u5173\u3002\\n\\n**\u6743\u91cd\u5171\u4eab**\uff1a\\n\\n\u6743\u91cd\u5728\u6bcf\u4e2a\u901a\u9053\u95f4\u5171\u4eab\u3002\\n\\n\u5bf9\u4e8e\u5355\u5934\u6ce8\u610f\u529b\uff0c\u6240\u6709$W_{ijk}\\\\in W_{ij}$\u90fd\u662f\u76f8\u540c\u7684\uff0c$W_{ijk}=a_{ij},1\\\\leqslant k \\\\leqslant D$\uff1b\\n\\n\u5bf9\u4e8e\u591a\u5934\u6ce8\u610f\u529b\uff0c$W_{ij}$\u88ab\u5212\u5206\u4e3aM\u4e2a\u5b50\u5411\u91cf\uff0c\u6709$M_{ijm}=a_{ijm}$.\\n\\n**\u52a8\u6001\u6743\u91cd**\uff1a\\n\\n\u6743\u91cd$\\\\{W_{i1},W_{i2},\\\\cdots,W_{iN_k}\\\\}$\u662f\u52a8\u6001\u5730\u4ece\u67e5\u8be2\u5411\u91cf$q_i$\u548c\u7a97\u53e3\u4e2d\u7684\u952e\u5411\u91cf$\\\\{k_{i1},k_{i2},\\\\cdots,k_{iN_k}\\\\}$\u751f\u6210\u7684\uff08\u70b9\u79ef\u548cSoftmax\uff09\uff0c\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a\\n$$\\n\\\\{W_{i1},W_{i2},\\\\cdots,W_{iN_k}\\\\}=f(q_i;{k_{i1},k_{i2},\\\\cdots,k_{iN_k}})\\n$$\\n**\u6bcf\u4e2a\u6743\u91cd\u90fd\u53ef\u80fd\u5305\u542b\u6240\u6709\u901a\u9053\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u5145\u5f53\u8de8\u901a\u9053\u4fe1\u606f\u4ea4\u6d41\u7684\u6865\u6881**\uff0c\u56e0\u4e3a\u5176\u5728\u901a\u9053\u95f4\u5171\u4eab\u6743\u91cd\uff0c\u6240\u4ee5\u6bcf\u4e2a\u6743\u91cd\u90fd\u53ef\u80fd\u5b66\u4e60\u5230\u8fd9\u4e9b\u901a\u9053\u7684\u4fe1\u606f\uff0c\u8fd9\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8d77\u5230\u4e86\u8de8\u901a\u9053\u4ea4\u6d41\u7684\u4f5c\u7528\\n\\n**\u96c6\u5408\u8868\u793a\uff08Set representation\uff09**\uff1a\\n\\n\u6bcf\u4e2aquery\u5bf9\u5e94\u7684key\u548cvalue\u88ab\u8868\u793a\u4e3a\u4e00\u4e2a\u96c6\u5408\uff0c\u8fd9\u5c31\u5bfc\u81f4\u5176\u5b58\u5728\u7684\u4f4d\u7f6e\u5173\u7cfb\u6ca1\u6709\u88ab\u5229\u7528\uff0c\u4f46\u662f\u8fd9\u53ef\u4ee5\u88ab**\u4f4d\u7f6e\u5d4c\u5165**\uff0c\u6216\u662f**\u5b66\u4e60**\u4e00\u4e2a\u76f8\u5bf9\u4f4d\u7f6e\u5d4c\u5165\u6240\u5f25\u8865\u3002\\n\\n### Connection to Depth-Wise Convolution\\n\\n\u6df1\u5ea6\u5377\u79ef\u5bf9\u6bcf\u4e2a\u901a\u9053\u90fd\u4f7f\u7528\u4e00\u4e2a\u5355\u72ec\u7684\u5377\u79ef\u6838\uff0c\u8f93\u51fa\u65f6\u5e76\u4e0d\u4f1a\u6c42\u548c\uff0c\u662f\u5206\u7ec4\u5377\u79ef\u7684\u6781\u81f4\u8868\u793a\uff0c\u4f46\u662f\u8fd9\u610f\u5473\u7740\u901a\u9053\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u4fe1\u606f\u4ea4\u6d41\uff0c\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a\\n$$\\ny_i=\\\\sum_{j=1}^{N_k}W_{offset(i,j)}\\\\odot X_{ij}\\n$$\\n\u5c06Local Attention\u548c\u6df1\u5ea6\u5377\u79ef\u8fdb\u884c\u5bf9\u6bd4\uff1a\\n\\n**\u76f8\u4f3c\u6027**\uff1a\u4e8c\u8005\u5728\u7a00\u758f\u8fde\u63a5\u4e0a\u5177\u6709\u76f8\u4f3c\u6027\uff1aNo Connection Across Channels\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u4ec5\u4e0e\u540c\u901a\u9053\u4e0a\u7684\u7a97\u53e3\u5176\u4ed6\u4f4d\u7f6e\u76f8\u8fde\u63a5\u3002\\n\\n**\u5dee\u5f02\u6027**\uff1a\\n\\n1. \u6743\u91cd\u5171\u4eab\uff1a\u6df1\u5ea6\u5377\u79ef\u53ea\u5728\u7a7a\u95f4\u4e0a\u5171\u4eab\u6743\u91cd\uff0c\u800cLocal Attention\u8de8\u901a\u9053\u5171\u4eab\u6743\u91cd\uff1b\\n\\n2. \u8fde\u63a5\u6743\u91cd\u7684\u6027\u8d28\uff1a\u5bf9\u4e8e\u6df1\u5ea6\u5377\u79ef\u6765\u8bf4\uff0c\u8fde\u63a5\u6743\u91cd\u662f**\u9759\u6001**\u7684\uff0c\u88ab\u5b66\u4e60\u8868\u793a\u4e3a\u6a21\u578b\u7684\u53c2\u6570\uff0c\u800c\u5bf9\u4e8eLocal Attention\uff0c\u5176\u8fde\u63a5\u6743\u91cd\u662f**\u52a8\u6001**\u7684\uff0c\u5176\u4e3a\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\uff08\u50cf\u7d20\uff09\u5355\u72ec\u751f\u6210\uff1b\\n\\n   \u6df1\u5ea6\u5377\u79ef\u4e5f\u53ef\u4ee5\u4ece\u52a8\u6001\u6743\u91cd\u4e2d\u53d7\u76ca\u2014\u2014\u4e3b\u8981\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u662f\u5b66\u4e60\u4e00\u81f4\u7684\u52a8\u6001\u6743\u91cd\uff0c\u4e8c\u662f\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u52a8\u6001\u751f\u6210\u6743\u91cd\uff0c\u5c06\u5728\u540e\u9762\u8fdb\u884c\u4ecb\u7ecd\uff1b\\n\\n3. \u7a97\u53e3\u8868\u793a\uff1a\u6df1\u5ea6\u5377\u79ef\u5929\u7136\u5730\u4fdd\u7559\u4e86\u4f4d\u7f6e\u4fe1\u606f\uff0c\u800cLocal Attention\u5219\u9700\u8981\u4f7f\u7528\u4f4d\u7f6e\u5d4c\u5165\u6765\u5f25\u8865\u4f4d\u7f6e\u4fe1\u606f\u7684\u4e22\u5931\u3002\\n\\n### \u5173\u7cfb\u56fe\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/202110241956844.png\\" alt=\\"image-20211024150634894\\"/>\\n\\n\u63d0\u51fa\u4e86\u4e00\u4e2a\u5173\u7cfb\u56fe\uff0c\u5176\u5305\u542b\u4e86\u4e09\u79cd\u6b63\u5219\u5316\u65b9\u6cd5\u2014\u2014\u7a00\u758f\u8fde\u63a5\u3001\u52a8\u6001\u6743\u91cd\u548c\u4f4e\u79e9\u3002\\n\\n1. MLP\u5728\u7a7a\u95f4\u4e0a\u7a00\u758f\u8fde\u63a5\u4fbf\u5f97\u5230\u4e86\u6807\u51c6\u5377\u79ef\uff1a\\n   1. \u5728\u7a7a\u95f4\u4e0a\u4f4e\u79e9\u5316\u4fbf\u80fd\u5f97\u5230\u91d1\u5b57\u5854\u3001\u591a\u5c3a\u5ea6\u5377\u79ef\uff1b\\n   2. \u5728\u901a\u9053\u4e0a\u4f4e\u79e9\u5316\u4fbf\u5f97\u5230\u4e86Bottleneck\uff1b\\n   3. \u5728\u901a\u9053\u4e0a\u7a00\u758f\u8fde\u63a5\u53c8\u80fd\u5f97\u5230\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\uff1b\\n2. MLP\u5728\u7ef4\u5ea6\u4e0a\u7a00\u758f\u8fde\u63a5\u4fbf\u5f97\u5230\u4e86separable MLP\uff1a\\n   1. \u5728\u7a7a\u95f4\u4e0a\u7a00\u758f\u8fde\u63a5\u4fbf\u80fd\u5f97\u5230\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\uff1b\\n   2. \u5728\u7a7a\u95f4\u4e0a\u5b9e\u73b0\u52a8\u6001\u6743\u91cd\u5f97\u5230ViT\uff1a\\n      1. \u5728\u7a7a\u95f4\u4e0a\u7a00\u758f\u8fde\u63a5\u4fbf\u5f97\u5230Local ViT\uff1b\\n      2. \u5728\u7a7a\u95f4\u4e0a\u4f4e\u79e9\u5316\u4fbf\u5f97\u5230PVT\uff1b\\n\\n## Experimental Study\\n\\n\u4e0eSwin Transformer\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5728ImageNet\u56fe\u50cf\u5206\u7c7b\uff0cCOCO\u76ee\u6807\u68c0\u6d4b\u548cADE\u8bed\u4e49\u5206\u5272\u4e0a\u8fdb\u884c\u4e86\u5b9e\u9a8c\u3002\\n\\n### Architectures\\n\\n\u5c06Swin-T\u548cSwin-B\u4e2d\u7684Local Attention\u66ff\u6362\u4e3a\u4e86\u6df1\u5ea6\u5377\u79ef\uff0c\u6240\u6709\u7684\u7ebf\u6027\u6620\u5c04\u5c42\u90fd\u66ff\u6362\u4e3a$1\\\\times 1$\u5377\u79ef\u5c42\uff0c\u540c\u65f6\u5efa\u7acb\u4e86\u52a8\u6001\u6743\u91cd\u7248\u672c\u7684\u6df1\u5ea6\u5377\u79ef\uff0c\u8be5\u7248\u672c\u4f7f\u7528\u7c7b\u4f3c\u4e8eSENet\u7684\u6280\u672f\u751f\u6210\u4e00\u81f4\u52a8\u6001\u6743\u91cd\u3002\\n\\n### Datasets and Implementation Details\\n\\n\u770b\u8bba\u6587\\n\\n### Main Results\\n\\n**ImageNet classification**\uff1a\u6df1\u5ea6\u5377\u79ef\u7248\u672c\u7684\u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\u90fd\u4e0b\u964d\u4e86\u7ea615%\uff0c\u52a8\u6001\u7248\u672c\u7684\u53c2\u6570\u91cf\u5927\u91cf\u4e0a\u5347\uff0c\u4f46\u590d\u6742\u5ea6\u51e0\u4e4e\u76f8\u540c\uff0c\u6027\u80fd\u51e0\u4e4e\u6301\u5e73\uff0c\u540c\u65f6\u6bd4\u8f83\u4e86\u5176\u4ed6\u65b9\u6cd5\u7684\u6027\u80fd\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/202110241957911.png\\" alt=\\"image-20211024160713613\\"/>\\n\\n**COCO object detection**\u3001**ADE Semantic Segmentation**\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/202110241957276.png\\" alt=\\"image-20211024161120185\\"/>\\n\\n###  Additional Studies\\n\\n**Weight sharing**\uff1a\u7814\u7a76\u4e86\u5728\u901a\u9053\u95f4\u5171\u4eab\u6743\u91cd\u5bf9\u6df1\u5ea6\u5377\u79ef\u548cSwin Transformer\u7684\u5f71\u54cd\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/202110241957956.png\\" alt=\\"image-20211024162356897\\"/>\\n\\n**Dynamic weight**\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/202110241957433.png\\" alt=\\"image-20211024162523601\\"/>\\n\\n**Cooperating with SE**\uff1aSE\u662f\u4e00\u4e2a\u53c2\u6570\u548c\u8ba1\u7b97\u6548\u7387\u8f83\u9ad8\u7684\u52a8\u6001\u6a21\u5757\uff0cDW\u53ef\u4ee5\u4ece\u4e2d\u53d7\u76ca\uff0c\u4f46\u662f\u672c\u8eab\u5df2\u662f\u52a8\u6001\u6a21\u5757\u7684Swin\u51fa\u73b0\u4e86\u6389\u70b9\u7684\u60c5\u51b5\u3002\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/202110241957683.png\\" alt=\\"image-20211024162949608\\"/>\\n\\n\u66f4\u591a\u770b\u8bba\u6587\\n\\n## Dynamic Weight\\n\\n\u52a8\u6001\u6743\u91cd\u4e3b\u8981\u6709\u4e24\u79cd\u7c7b\u578b\u2014\u2014\u5b66\u4e60\u4e00\u81f4\u7684\u6743\u91cd\uff08homogeneous connection weight\uff09\uff0c\u4e3a\u6bcf\u4e2a\u4f4d\u7f6e\u6216\u8005\u533a\u57df\u751f\u6210\u4e0d\u540c\u7684\u6743\u91cd\u3002\\n\\n\u7b2c\u4e00\u79cd\u5b66\u4e60\u4e00\u81f4\u7684\u6743\u91cd\uff0c\u6bd4\u5982[Dynamic Convolution](https://asthestarsfalll.icu/2021/08/01/Dynamic-conv/)\uff0c\u6216\u8005\u6700\u7ecf\u5178\u7684SENet\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u79cd\u52a8\u6001\u6743\u91cd\u3002\\n\\n\u5176\u4e3b\u8981\u7279\u70b9\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u5165\uff08\u7279\u5f81\u56fe\uff09\u7ed9\u51fa\u552f\u4e00\u7684\u6743\u91cd\uff0c\u8be5\u6743\u91cd\u5728\u7a7a\u95f4\u4e0a\u5171\u4eab\u3002\\n\\n\u7b2c\u4e8c\u79cd\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\uff08\u4f4d\u7f6e\u3001\u533a\u57df\uff09\u751f\u6210\u4e0d\u540c\u7684\u6743\u91cd\uff0c\u6bd4\u5982GENet\u3001[Involution](https://asthestarsfalll.icu/2021/05/07/Involuiton/)\u3001[VOLO](https://asthestarsfalll.icu/2021/07/23/VOLO/)\u4ee5\u53caVision Transformer\u3002\\n\\n\u5176\u4e3b\u8981\u7279\u70b9\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u5165\uff08\u67d0\u4e2a\u4f4d\u7f6e\u6216\u8005\u533a\u57df\uff09\u751f\u6210\u552f\u4e00\u7684\u6743\u91cd\uff0c\u8be5\u6743\u91cd\u4ec5\u5728\u8be5\u4f4d\u7f6e\u6216\u8005\u533a\u57df\u751f\u6548\u3002\\n\\n\u672c\u6587\u91c7\u7528\u4e86\u7b2c\u4e00\u79cd\u6743\u91cd\u751f\u6210\u65b9\u6cd5\uff0c\\n\\n```python\\nclass DynamicDWConv(nn.Module):\\n    def __init__(self, dim, kernel_size, bias=True, stride=1, padding=1, groups=1, reduction=4):\\n        super().__init__()\\n        self.dim = dim\\n        self.kernel_size = kernel_size\\n        self.stride = stride \\n        self.padding = padding \\n        self.groups = groups \\n\\n        self.pool = nn.AdaptiveAvgPool2d((1, 1))\\n        self.conv1 = nn.Conv2d(dim, dim // reduction, 1, bias=False)\\n        self.bn = build_norm_layer(norm_cfg_global, dim // reduction)[1]\\n        self.relu = nn.ReLU(inplace=True)\\n        self.conv2 = nn.Conv2d(dim // reduction, dim * kernel_size * kernel_size, 1)\\n        if bias:\\n            self.bias = nn.Parameter(torch.zeros(dim))\\n        else:\\n            self.bias = None\\n\\n    def forward(self, x):\\n        b, c, h, w = x.shape\\n        weight = self.conv2(self.relu(self.bn(self.conv1(self.pool(x)))))\\n        weight = weight.view(b * self.dim, 1, self.kernel_size, self.kernel_size)\\n        x = F.conv2d(x.reshape(1, -1, h, w), weight, self.bias.repeat(b), stride=self.stride, padding=self.padding, groups=b * self.groups)\\n        x = x.view(b, c, x.shape[-2], x.shape[-1])\\n        return x\\n```\\n\\n## VOLO\uff1aOutLook Attention\\n\\nVOLO\u4e5f\u662f\u4e00\u79cdLocal Attention\uff0c\u5e76\u4e14\u6027\u80fd\u8868\u73b0\u4f18\u5f02\uff0c\u5c06\u5176\u4e2d\u7684Local Attention\u7684\u90e8\u5206\u5206\u522b\u66ff\u6362\u4e3aself attention\u548c\u6df1\u5ea6\u5377\u79ef\uff0c\u53ef\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a\\n\\n<img src=\\"https://gitee.com/Thedeadleaf/images/raw/master/202110242034232.png\\" alt=\\"image-20211024203433183\\"/>\\n\\n\u540c\u65f6\u66ff\u6362\u4e86\u4e86SVT\u4e2d\u7684Local Attention\u90e8\u5206\uff0c\u7ed3\u679c\u90fd\u662f\u6709\u6240\u589e\u52a0\u7684\u3002"},{"id":"/[47]Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation","metadata":{"permalink":"/blog/[47]Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[47]Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation.md","source":"@site/blog/[47]Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation.md","title":"DCT-Mask - Discrete Cosine Transform Mask Representation for Instance Segmentation","description":"\u8bba\u6587\u540d\u79f0\uff1aDCT-Mask: Discrete Cosine Transform Mask Representation for Instance Segmentation","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"frequency-domain","permalink":"/blog/tags/frequency-domain"},{"label":"inductive-bias","permalink":"/blog/tags/inductive-bias"},{"label":"segmentation","permalink":"/blog/tags/segmentation"}],"readingTime":9.575,"hasTruncateMarker":true,"authors":[{"name":"PuQing","title":"intro * new","url":"https://github.com/AndPuQing","imageURL":"https://github.com/AndPuQing.png","key":"puqing"}],"frontMatter":{"title":"DCT-Mask - Discrete Cosine Transform Mask Representation for Instance Segmentation","authors":["puqing"],"tags":["frequency-domain","inductive-bias","segmentation"]},"prevItem":{"title":"Demystifying Local Vision Transformer","permalink":"/blog/[46]Demystifying-Local-Vision-Transformer"},"nextItem":{"title":"Deep Retinex Decomposition for Low-Light Enhancement","permalink":"/blog/[48]Deep-Retinex-Decomposition-for-Low-Light-Enhancement"}},"content":"> \u8bba\u6587\u540d\u79f0\uff1a[DCT-Mask: Discrete Cosine Transform Mask Representation for Instance Segmentation](https://openaccess.thecvf.com/content/CVPR2021/papers/Shen_DCT-Mask_Discrete_Cosine_Transform_Mask_Representation_for_Instance_Segmentation_CVPR_2021_paper.pdf)\\n>\\n> \u4f5c\u8005\uff1aXing Shen, Jirui Yang, Chunbo Wei, Bing Deng, Jianqiang Huang, Xiansheng Hua, Xiaoliang Cheng, Kewei Liang\\n>\\n> \u4ed3\u5e93\u5730\u5740\uff1ahttps://github.com/calmevtime/DCTNet\\n\\n## \u6458\u8981\\n\\n$Binary\\\\; grid\\\\; mask$ \u5e7f\u6cdb\u7528\u4e8e\u5b9e\u4f8b\u5206\u5272\u3002\u5c31\u4f8b\u5982 $Mask\\\\ R-CNN$[<sup>1</sup>](#references)\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7f51\u7edc\u5728 $28\\\\times 28$ \u7684\u7f51\u683c\u4e2d\u9884\u6d4b $Mask$ \u3002\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/mask.jpg)\\n\\n\u4f46\u662f\u4e00\u822c\u6765\u8bf4\uff0c\u4f4e\u5206\u8fa8\u7387\u7684\u7f51\u683c\u4e0d\u8db3\u4ee5\u6355\u6349\u7ec6\u8282\uff0c\u800c\u9ad8\u5206\u8fa8\u7387\u4f1a\u5927\u5927\u589e\u52a0\u8bad\u7ec3\u7684\u590d\u6742\u6027\uff0c\u4e3a\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u4e00\u79cd\u65b0\u7684 $Mask$ \u8868\u8fbe\u65b9\u5f0f\uff0c\u5229\u7528\u79bb\u6563\u4f59\u5f26\u53d8\u6362\uff08$DCT$\uff09\u5c06\u9ad8\u5206\u8fa8\u7387\u7684$Binary\\\\; grid\\\\; mask$\u7f16\u7801\u6210\u4e00\u4e2a\u7d27\u51d1\u7684\u5411\u91cf\uff0c\u8fd9\u79cd\u65b9\u6cd5\u79f0\u4e3a $DCT-Mask$\u3002\\n\\n\u8be5\u65b9\u6cd5\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u96c6\u6210\u5230\u5927\u591a\u6570\u57fa\u4e8e\u50cf\u7d20\u7684\u5b9e\u4f8b\u5206\u5272\u4e0a\u3002\u5b83\u4e0d\u9700\u8981\u4efb\u4f55\u9884\u5904\u7406\u6216\u9884\u8bad\u7ec3\uff0c\u800c\u4e14\u51e0\u4e4e\u5bf9\u901f\u5ea6\u6ca1\u6709\u635f\u5bb3\u3002\\n\\n## \u4ecb\u7ecd\\n\\n\u5c31\u5982\u4e0a\u56fe\u6240\u793a\uff0c$Mask\\\\ R-CNN$ \u5c06 $GT$ \u91c7\u6837\u5230 $28\\\\times 28$ \uff0c\u7136\u540e\u4e0a\u91c7\u6837\u91cd\u6784\u5b83\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4f4e\u5206\u8fa8\u7387\u7684 $Binary\\\\; grid\\\\; mask$ \u4e0d\u8db3\u4ee5\u6355\u83b7\u7ec6\u8282\u7279\u5f81\uff0c\u5e76\u5728\u4e0a\u91c7\u6837\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u504f\u5dee\u3002\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/vs.jpg)\\n\\n\u5982\u4e0a\u56fe\u4e3a\u4f7f\u7528 $DCT$ \u548c\u672a\u4f7f\u7528 $DCT$ \u65b9\u6cd5\u7684\u6bd4\u8f83\uff0c\u5de6\u8fb9\u4e3a $GT$ \uff1b\u4e4b\u540e\u662f $Resize$ \u540e\u7684 $GT$ \uff1b\u518d\u662f\u57fa\u4e8e $Resize$ \u540e\u7684\u91cd\u5efa\u56fe\uff1b\u6700\u540e\u662f\u91cd\u5efa\u56fe\u4e0e\u539f\u6765\u7684$GT$\u56fe\u7684\u8bef\u5dee\u503c\u3002\\n\\n\u6240\u4ee5\u5c31\u7b97\u9884\u6d4b $Mask$ \u662f\u6b63\u786e\u7684\uff0c\u91cd\u5efa\u7684 $Mask$ \u4e5f\u6709\u4e00\u5b9a\u7684\u7cfb\u7edf\u8bef\u5dee\u3002\u89e3\u51b3\u65b9\u5f0f\u4e4b\u4e00\u662f\u63d0\u9ad8 $Binary\\\\; grid\\\\; mask$ \u7684\u5206\u8fa8\u7387\uff0c\u4f46\u662f\u5b9e\u9a8c\u663e\u793a\u63d0\u9ad8\u5206\u8fa8\u7387\u540e\u5e73\u5747\u7cbe\u5ea6\uff08$AP$\uff09\u6bd4 $28\\\\times 28$ \u8981\u5dee\uff0c\u5177\u4f53\u89c1\u4e0b\u56fe\u3002\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/mask_size.jpg)\\n\\n\x3c!--truncate--\x3e\\n\\n## Method\\n\\n\u4f5c\u8005\u7ed9\u51fa\u7684\u65b9\u6cd5\u662f $DCT\\\\ mask$ \uff0c\u5982\u4e0b\u56fe\u662f\u8be5 $DCT\\\\ mask$ \u7684 $pipline$\u3002\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/pipline.jpg)\\n\\n\u8be5\u5904\u7406\u65b9\u5f0f\u662f\u53d7 $JPEG$ \u6807\u51c6\u7684\u542f\u53d1\uff0c$pipline$ \u5c06\u4e8c\u8fdb\u5236\u63a9\u7801\u8f6c\u5316\u4e3a\u7d27\u51d1\u7684\u5411\u91cf\u3002\u9996\u5148\u5c06 $GT\\\\ Resize$\u5230 $K\\\\times K$ \u5927\u5c0f\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u4e8c\u7ef4 $DCT-II$ (\u5047\u88c5\u662f\u7f57\u9a6c 2)\u53d8\u6362\uff0c\u5728\u91cd\u6784\u65f6\u5229\u7528\u4e8c\u7ef4\u9006 $DCT$ \u53d8\u6362\uff0c\u6700\u540e\u5229\u7528\u53cc\u7ebf\u6027\u63d2\u503c $Resize$ \u5230 $H\\\\times W$\u3002\u6570\u5b66\u8868\u8fbe\u5982\u4e0b\uff08\u5148\u770b[\u79bb\u6563\u4f59\u5f26\u53d8\u6362](#\u79bb\u6563\u4f59\u5f26\u53d8\u6362dct)\uff09\uff1a\\n\\n\u8bbe $Binary\\\\; grid\\\\; mask\\\\; M_{gt}\\\\in\\\\ R^{H\\\\times W}$\u3002$Resize$ \u5230$M_{K\\\\times K}\\\\in\\\\ R^{K\\\\times K}$\u3002\u6587\u4e2d$K=128$\u3002\u4e8c\u7ef4$DCT$\u53d8\u6362$M_{DCT}\\\\in\\\\ R^{K\\\\times K}$ \u9891\u7387\u4fe1\u53f7\u7531\u5982\u4e0b\u516c\u5f0f\u5f97\u5230\uff1a\\n\\n$$\\nM_{DCT}(u, v)=\\\\frac{2}{K}C(u)C(v)\\\\sum_{x=0}^{K-1} \\\\sum_{y=0}^{K-1} M_{K \\\\times K}(x, y) \\\\cos \\\\frac{(2 x+1) u \\\\pi}{2 K} \\\\cos \\\\frac{(2 y+1) v \\\\pi}{2 K}\\n$$\\n\\n\u8fd9\u91cc $C(\\\\omega)=1/\\\\sqrt{2}$ \u5f53 $\\\\omega=0$ \u65f6\u5f53 $\\\\omega$ \u7b49\u4e8e\u5176\u4ed6\u503c\u65f6 $C(\\\\omega)=1$\\n\\n\u56e0\u4e3a $DCT$ \u5177\u6709\u5f88\u5f3a\u7684\u80fd\u91cf\u805a\u96c6\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ece $M_{DCT}$ \u7ecf\u8fc7 $zig-zag$ \u7f16\u7801\u540e\u5f97\u5230\u5411\u91cf\u9009\u62e9\u7b2c\u4e00\u4e2a $N$ \u7ef4\u5ea6\u7684\u5411\u91cf $V\\\\in\\\\ R^{N}$ (\u4e3a\u4ec0\u4e48\u662f$select\\\\; the\\\\; first\\\\; N-dimensional\\\\; vector?$)\\n\\n\u4e4b\u540e\u5bf9\u8be5\u5411\u91cf\u8865\u96f6\u91cd\u6784\u5f97\u5230 $\\\\bar{M}_{DCT}\\\\in\\\\ R^{K\\\\times K}$\uff0c\u4e0b\u4e00\u6b65\u5229\u7528\u4e8c\u7ef4\u9006 $DCT$ \u53d8\u6362\\n\\n$$\\n\\\\bar{M}_{K \\\\times K}(x, y)=\\\\frac{2}{K} \\\\sum_{u=0}^{K-1} \\\\sum_{v=0}^{K-1} C(u) C(v) \\\\bar{M}_{D C T}(u, v) \\\\cos \\\\frac{(2 x+1) u \\\\pi}{2 K} \\\\cos \\\\frac{(2 y+1) v \\\\pi}{2 K}\\n$$\\n\\n## DCT-Mask in Mask R-CNN\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/net.jpg)\\n\\n\u5982\u4e0a\u56fe $DCT-Mask$ \u5728$Mask\\\\ R-CNN$ \u7684\u5e94\u7528\uff0c\u5728$Mask\\\\; head$ \u4e2d\u4f7f\u7528 4 \u4e2a\u5377\u79ef\u5c42\uff0c\u63d0\u53d6$Mask$ \u7279\u5f81\uff0c\u7136\u540e\u7528\u4e09\u4e2a\u7ebf\u6027\u5f52\u56de\u5c42\u56de\u5f52$DCT$\u5411\u91cf\\n\\n\u5219\u5b9e\u9645\u4e0a\u53d8\u4e3a\u56de\u5f52\u95ee\u9898\uff0c\u635f\u5931\u51fd\u6570\u53ef\u6784\u5efa\u4e3a\\n\\n$$\\n\\\\mathcal{L}_{mask}=1^{obj}\\\\sum_{i}^{N}D(\\\\hat{V}_{i},V_{i})\\n$$\\n\\n\u8fd9\u91cc $V_{i},\\\\hat{V}_{i}$ \u5206\u522b\u8868\u793a\u4e3a\u7b2c$i$\u4e2a\u5143\u7d20\u7684$GT$\u4e0e\u9884\u6d4b\u503c\u3002$1^{obj}$ \u662f\u6837\u672c\u4e2d\u6b63\u6837\u672c\u6307\u793a\u51fd\u6570\uff0c$D$ \u662f\u7b2c\u4e00\u8303\u6570\u8ddd\u79bb\u77e9\u9635\u3002\\n\\n\u5982\u4e0b\u56fe\u4e3a\u5bf9$N$\u7684\u53d6\u503c\u7684\u63a2\u7a76\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/exc.jpg)\\n\\n\u5176\u4e2d$None$\u8868\u793a\u4e3a\u4f7f\u7528\u7684\u4e8c\u8fdb\u5236\u63a9\u7801\u3002\\n\\n## \u6548\u679c\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/than.jpg)\\n\\n## Zig-Zag \u7f16\u7801\\n\\n\u4e0b\u56fe\u4e3a$Zig-Zag$ \u7f16\u7801\u65b9\u5f0f\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/zig-zag.jpg)\\n\\n## \u79bb\u6563\u4f59\u5f26\u53d8\u6362 DCT\\n\\n$DCT$ \u53d8\u6362\u7684\u5168\u79f0\u662f\u79bb\u6563\u4f59\u5f26\u53d8\u6362\uff08$Discrete\\\\; Cosine\\\\; Transform$\uff09\uff0c\u4e3b\u8981\u7528\u4e8e\u5c06\u6570\u636e\u6216\u56fe\u50cf\u7684\u538b\u7f29\uff0c\u80fd\u591f\u5c06\u7a7a\u57df\u7684\u4fe1\u53f7\u8f6c\u6362\u5230\u9891\u57df\u4e0a\uff0c\u5177\u6709\u826f\u597d\u7684\u53bb\u76f8\u5173\u6027\u7684\u6027\u80fd\u3002\\n\\n\u5728\u8be6\u7ec6\u8bf4\u660e $DCT$ \u516c\u5f0f\u4e4b\u524d\u9700\u8981\u5bf9 $DFT$ \u6709\u6240\u4e86\u89e3\u3002\\n\\n$$\\nX[k] = \\\\sum_{n=0}^{N-1}x[n] \\\\left(cos \\\\left( \\\\frac{2\\\\pi k n}{N}\\\\right)-jsin \\\\left( \\\\frac{2\\\\pi k n}{N}\\\\right)\\\\right)\\n$$\\n\\n\u5c06\u4e0a\u9762\u5f0f\u5b50\u62c6\u5f00\u6765\\n\\n$$\\nX[k]=\\\\sum_{n=0}^{N-1} x[n]\\\\left(\\\\cos \\\\frac{2 \\\\pi \\\\mathrm{kn}}{N}\\\\right)-j \\\\sum_{n=0}^{N-1} x[n] \\\\sin \\\\left(\\\\frac{2 \\\\pi k n}{N}\\\\right)\\n$$\\n\\n\u53ef\u4ee5\u770b\u5230 $DFT$ \u53d8\u5316\u7ed3\u679c\uff0c\u5b9e\u6570\u90e8\u5206\u7531$\\\\displaystyle\\\\sum_{n=0}^{N-1} x[n]\\\\left(\\\\cos \\\\frac{2 \\\\pi \\\\mathrm{kn}}{N}\\\\right)$ \u7ec4\u6210\uff0c\u800c\u865a\u6570\u90e8\u5206\u7531$\\\\displaystyle j\\\\sum_{n=0}^{N-1} x[n] \\\\sin \\\\left(\\\\frac{2 \\\\pi k n}{N}\\\\right)$\u7ec4\u6210\uff0c\u8bbe$\\\\displaystyle\\\\cos \\\\left(\\\\frac{2 \\\\pi \\\\mathrm{kn}}{N}\\\\right)=\\\\cos(kt)$\uff0c\u90a3 $DFT$ \u516c\u5f0f\u53ef\u4ee5\u5199\u4e3a\uff1a\\n\\n\u5b9e\u6570\u90e8\u5206:\\n\\n$$\\nRe[k]=\\\\sum_{n=0}^{N-1} x[n]\\\\cos(kt)\\n$$\\n\\n\u865a\u6570\u90e8\u5206:\\n\\n$$\\nIm[k]=\\\\sum_{n=0}^{N-1} x[n]\\\\sin(kt)\\n$$\\n\\n\u663e\u7136\uff0c$\\\\cos$ \u662f\u4e00\u4e2a\u5076\u51fd\u6570\uff0c$\\\\sin$ \u662f\u4e00\u4e2a\u5947\u51fd\u6570\uff0c\u56e0\u6b64\\n\\n$$\\nRe[k]=Re[-k],Im[k]=-Im[k]\\n$$\\n\\n\u6240\u4ee5\u5f53 $x[n]$ \u662f\u4e00\u4e2a\u5b9e\u6570\u51fd\u6570\u65f6\uff0c\u5176\u9891\u7387\u7684\u5b9e\u90e8\u662f\u5076\u51fd\u6570\uff0c\u865a\u90e8\u662f\u4e00\u4e2a\u5947\u51fd\u6570\u3002\\n\\n\u90a3\u5f53\u539f\u4fe1\u53f7 $x[n]$ \u662f\u4e00\u4e2a\u5168\u662f\u5b9e\u6570\u7684\u5076\u51fd\u6570\u4fe1\u53f7\uff0c$x[n]\\\\sin{kt}$ \u5c31\u53d8\u6210\u4e00\u4e2a\u5947\u51fd\u6570\uff0c\u5947\u51fd\u6570\u90a3\u4e48\u81ea\u7136\\n\\n$$\\nIm[k]=\\\\sum_{n=0}^{N-1} x[n]\\\\sin(kt)=0\\n$$\\n\\n\u56e0\u6b64\uff0c\u5f53\u539f\u65f6\u57df\u4fe1\u53f7\u662f\u4e00\u4e2a\u5b9e\u5076\u4fe1\u53f7\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a $DFT$ \u5199\u6210\\n\\n$$\\nX[k]=\\\\sum_{n=0}^{N-1} x[n]\\\\left(\\\\cos \\\\frac{2 \\\\pi \\\\mathrm{kn}}{N}\\\\right)\\n$$\\n\\n\u4ee5\u4e0a\u5c31\u662f $DCT$ \u53d8\u6362\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u5f53\u7136\u8fd9\u4e0e\u5b9e\u9645\u7684 $DCT$ \u516c\u5f0f\u8fd8\u662f\u6709\u5dee\u8ddd\u7684\u3002\\n\\n\u5148\u6765\u770b\u6700\u5e38\u7528\u7684 $DCT$ \u53d8\u6362\u516c\u5f0f\\n\\n$$\\nF(u)=c(u) \\\\sum_{x=0}^{N-1} f(x) \\\\cos \\\\left[\\\\frac{(x+0.5) \\\\pi}{N} u\\\\right]\\n$$\\n\\n\u5176\u4e2d\u5f53 $u=0$ \u65f6 $c(0)=\\\\displaystyle\\\\sqrt{\\\\frac{1}{N}}$ \u5426\u5219 $c(u)=\\\\displaystyle\\\\sqrt{\\\\frac{2}{N}}$\\n\\n\u53ef\u4ee5\u770b\u5230\u4e0e\u6211\u4eec\u4e0a\u9762\u63a8\u5bfc\u7684\u5185\u5bb9\u8fd8\u662f\u6709\u5f88\u5927\u4e0d\u4e00\u6837\u7684\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u6ca1\u6709\u521a\u521a\u597d\u7684\u5b9e\u5076\u51fd\u6570\u4fe1\u53f7\u7ed9\u6211\u4eec\uff0c\u65e2\u7136\u6ca1\u6709\uff0c\u6211\u4eec\u5c31\u6784\u9020\u4e00\u4e2a\u5b9e\u4fe1\u53f7\u3002\\n\\n\u8bbe\u4e00\u957f\u5ea6\u4e3a $N$ \u7684\u5b9e\u6570\u79bb\u6563\u4fe1\u53f7 ${x[0],x[1],\\\\cdots,x[N-1]}$ \u3002\u9996\u5148\uff0c\u6211\u4eec\u5148\u5c06\u8fd9\u4e2a\u4fe1\u53f7\u957f\u5ea6\u6269\u5927\u6210\u539f\u6765\u7684\u4e24\u500d\uff0c\u5e76\u53d8\u6210 $2N$ \uff0c\u5b9a\u4e49\u65b0\u4fe1\u53f7 $x\'[m]$ \u4e3a\\n\\n$$\\n\\\\begin{aligned}\\nx\'[m]=x[m](0\\\\le m \\\\le N-1)\\\\\\\\\\nx\'[m]=x[-m-1](-N\\\\le m\\\\le -1)\\n\\\\end{aligned}\\n$$\\n\\n\u53ef\u89c6\u5316\u4e00\u4e0b\uff1a\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/th.jpg)\\n\\n\u5176\u4e2d\u7ea2\u8272\u4e3a\u539f\u59cb\u4fe1\u53f7\uff0c\u7ea2\u8272\u4e3a\u5ef6\u62d3\u540e\u7684\u4fe1\u53f7\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5c06\u4e00\u4e2a\u5b9e\u4fe1\u53f7\u53d8\u6210\u4e86\u4e00\u4e2a\u5b9e\u5076\u4fe1\u53f7\uff0c\u663e\u7136\u4fe1\u53f7\u7684\u533a\u95f4\u5df2\u7ecf\u53d8\u5316\u4e3a $[-N,N-1]$\\n\\n\u4f46\u662f\u8fd9\u6837\u63d2\u503c\u4e4b\u540e\u4e5f\u968f\u4e4b\u5e26\u6765\u95ee\u9898\uff0c\u8fd9\u4e2a\u4fe1\u53f7\u5e76\u4e0d\u5173\u4e8e $m=0$ \u5076\u5bf9\u79f0\uff0c\u6240\u4ee5\u4e3a\u4e86\u8ba9\u4fe1\u53f7\u5173\u4e8e\u539f\u70b9\u5bf9\u79f0\uff0c\u628a\u6574\u4e2a\u5ef6\u62d3\u4fe1\u53f7\u5411\u53f3\u5e73\u79fb $\\\\frac{1}{2}$ \u4e2a\u5355\u4f4d\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/0.5.png)\\n\\n\u56e0\u6b64\u4e0a\u9762 $DFT$ \u516c\u5f0f\u53d8\u5316\u4e3a\\n\\n$$\\nX[k]=\\\\sum_{m=-N+\\\\frac{1}{2}}^{N-\\\\frac{1}{2}} x^{\\\\prime}\\\\left[m-\\\\frac{1}{2}\\\\right] e^{\\\\frac{-j 2 \\\\pi m k}{2 N}}\\n$$\\n\\n\u6839\u636e\u6b27\u62c9\u516c\u5f0f\u5bf9\u4e0a\u5f0f\u5c55\u5f00\uff0c\u5c55\u5f00\u65f6\u6211\u4eec\u53ea\u8981\u5b9e\u6570\u90e8\u5206\u5c31\u884c\u4e86\\n\\n$$\\nX[k]=\\\\sum_{m=-N+\\\\frac{1}{2}}^{N-\\\\frac{1}{2}} x^{\\\\prime}\\\\left[m-\\\\frac{1}{2}\\\\right] e^{\\\\frac{-j 2 \\\\pi m k}{2 N}}=\\\\sum_{m=-N+\\\\frac{1}{2}}^{N-\\\\frac{1}{2}} x^{\\\\prime}\\\\left[m-\\\\frac{1}{2}\\\\right] \\\\cos \\\\left(\\\\frac{2 \\\\pi m k}{2 N}\\\\right)\\n$$\\n\\n\u4f46\u662f\u8fd9\u6837\u662f\u4e0d\u79d1\u5b66\u7684\uff0c\u56e0\u4e3a$m$\u662f\u5e26\u5c0f\u6570\u751a\u81f3\u8d1f\u6570\u7684\uff0c\u56e0\u4e3a\u5728\u79bb\u6563\u4fe1\u53f7\u4e2d\u627e\u4e0d\u5230\u8fd9\u6837\u7684\u4fe1\u53f7\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u53d8\u5f62\uff0c\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u5e8f\u5217\u662f\u5076\u5bf9\u79f0\u5e8f\u5217\uff0c\u56e0\u6b64\\n\\n$$\\n\\\\sum_{m=-N+\\\\frac{1}{2}}^{N-\\\\frac{1}{2}} x^{\\\\prime}\\\\left[m-\\\\frac{1}{2}\\\\right] \\\\cos \\\\left(\\\\frac{2 \\\\pi m k}{2 N}\\\\right)=2 \\\\times  \\\\sum_{m=\\\\frac{1}{2}}^{N-\\\\frac{1}{2}} x^{\\\\prime}\\\\left[m-\\\\frac{1}{2}\\\\right] \\\\cos \\\\left(\\\\frac{2 \\\\pi m k}{2 N}\\\\right)\\n$$\\n\\n\u4e8e\u662f\u8bbe$\\\\displaystyle n=m-\\\\frac{1}{2}$\uff0c\u4ee3\u5165\u4e0a\u5f0f\\n\\n$$\\n2 \\\\times  \\\\sum_{n=0}^{N-1} x^{\\\\prime}[n] \\\\cos \\\\left(\\\\frac{2 \\\\pi\\\\left(n+\\\\frac{1}{2}\\\\right) k}{2 N}\\\\right)=2 \\\\times  \\\\sum_{n=0}^{N-1} x^{\\\\prime}[n] \\\\cos \\\\left(\\\\frac{\\\\left(n+\\\\frac{1}{2}\\\\right) \\\\pi k}{N}\\\\right)\\n$$\\n\\n\u5173\u4e8e $DCT$ \u4e2d $c(u)$ \u662f\u600e\u4e48\u6765\u7684\uff0c$c(u)$ \u5728\u51fd\u6570\u8ba1\u7b97\u4e2d\uff0c\u52a0\u4e0d\u52a0\u90fd\u65e0\u6240\u8c13\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u503c\u56e0\u4e3a\u4e00\u4e9b\u5de5\u7a0b\u4e0a\u7684\u610f\u4e49\uff0c\u5728 $DFT$ \u4e2d\u4e5f\u5e38\u5e38\u51fa\u73b0$\\\\frac{1}{N}$ \u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u5728 $DFT$ \u53d8\u6362\u53d8\u6210\u77e9\u9635\u8fd0\u7b97\u7684\u5f62\u5f0f\u65f6\uff0c\u5c06\u8be5\u77e9\u9635\u6b63\u4ea4\u5316\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684$c(u)$\u4e5f\u540c\u6837\u3002$c(u)=\\\\displaystyle \\\\sqrt{\\\\frac{1}{2N}}$ \u5c06\u8be5\u7cfb\u6570\u4e58\u5165\u4e0a\u9762\u5f0f\u5b50\\n\\n$$\\n\\\\sqrt{\\\\frac{1}{2 N}} \\\\times  2 \\\\times  \\\\sum_{n=0}^{N-1} x^{\\\\prime}[n] \\\\cos \\\\left(\\\\frac{\\\\left(n+\\\\frac{1}{2}\\\\right) \\\\pi k}{N}\\\\right)=\\\\sqrt{\\\\frac{2}{N}} \\\\times  \\\\sum_{n=0}^{N-1} x^{\\\\prime}[n] \\\\cos \\\\left(\\\\frac{\\\\left(n+\\\\frac{1}{2}\\\\right) \\\\pi k}{N}\\\\right)\\n$$\\n\\n\u4e8e\u662f\u6211\u4eec\u4fbf\u5f97\u5230 $DCT$ \u5f0f\u5b50\\n\\n## \u5206\u6790\u80fd\u91cf\u805a\u96c6\u6027\\n\\n\u4e0a\u9762\u63a8\u5bfc\u4e86 $DCT$ \u516c\u5f0f\uff0c\u8fd9\u91cc\u5c1d\u8bd5\u5bf9\u5176\u80fd\u91cf\u805a\u96c6\u6027\u8fdb\u884c\u89e3\u91ca\u3002\\n\\n![](./src/Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation/dct.jpg)\\n\\n\u56de\u60f3\u6211\u4eec\u5982\u4f55\u5f97\u5230\u5085\u91cc\u53f6\u53d8\u6362\u516c\u5f0f\uff0c\u6211\u4eec\u5148\u5bf9\u539f\u4fe1\u53f7\u8fdb\u884c**\u5468\u671f**\u5ef6\u62d3\uff0c\u800c\u5728$DCT$\u4e2d\u6211\u4eec\u5148\u5bf9\u4fe1\u53f7\u8fdb\u884c**\u955c\u50cf**\u5ef6\u62d3\uff0c\u5982\u4e0a\u9762\u7684\u56fe\u53ef\u4ee5\u770b\u51fa$DFT$\u76f4\u63a5\u8fdb\u884c\u5468\u671f\u53d8\u6362\u4f1a\u9020\u6210\u8df3\u53d8\uff0c\u5bf9\u5e94\u4e0e\u9891\u7387\u91cc\u7684\u9ad8\u9891\u3002\u800c$DCT$\u5bf9\u4fe1\u53f7\u8fdb\u884c\u955c\u50cf\uff0c\u5176\u8fc7\u5ea6\u66f4\u52a0\u5e73\u6ed1\uff0c\u540c\u65f6\u4f1a\u5f31\u5316\u9ad8\u9891\u4fe1\u53f7\uff08\u9ad8\u9891\u51b3\u5b9a\u7ec6\u8282\uff0c\u4f4e\u9891\u51b3\u5b9a\u8f6e\u5ed3\uff09\u3002\u800c\u6839\u672c\u539f\u56e0\u662f\u5bf9\u4e00\u822c\u7684\u5468\u671f\u51fd\u6570\u5c55\u5f00\u6210 fourier \u7ea7\u6570\u7684\u6027\u8d28\u95ee\u9898\uff0c\u8fd9\u91cc\u4e0d\u5728\u6df1\u5165\u63a2\u7a76\u3002\\n\\n## References\\n\\n- [1] [mask r-cnn](https://arxiv.org/pdf/1703.06870.pdf)"},{"id":"/[48]Deep-Retinex-Decomposition-for-Low-Light-Enhancement","metadata":{"permalink":"/blog/[48]Deep-Retinex-Decomposition-for-Low-Light-Enhancement","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[48]Deep-Retinex-Decomposition-for-Low-Light-Enhancement.md","source":"@site/blog/[48]Deep-Retinex-Decomposition-for-Low-Light-Enhancement.md","title":"Deep Retinex Decomposition for Low-Light Enhancement","description":"\u8be5\u8bba\u6587\u63d0\u51fa\u65f6\u95f42018.7.20","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"low-light","permalink":"/blog/tags/low-light"}],"readingTime":14.42,"hasTruncateMarker":true,"authors":[{"name":"RuoMengAwA","title":"\u4e00\u4e2a\u559c\u6b22\u6478\u9c7c\u7684\u83dc\u72d7\uff0c\u76ee\u524d\u4e3b\u8981\u505a\u4f4e\u7167\u5ea6\u589e\u5f3a\u65b9\u5411\u7684\u7814\u7a76","url":"https://github.com/RuoMengAwA","imageURL":"https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220116171846.jpg","key":"ruomeng"}],"frontMatter":{"title":"Deep Retinex Decomposition for Low-Light Enhancement","authors":["ruomeng"],"tags":["low-light"]},"prevItem":{"title":"DCT-Mask - Discrete Cosine Transform Mask Representation for Instance Segmentation","permalink":"/blog/[47]Discrete-Cosine-Transform-Mask-Representation-for-Instance-Segmentation"},"nextItem":{"title":"GhostNet - More Features from Cheap Operations","permalink":"/blog/[49]GhostNet-More-Features-from-Cheap-Operations"}},"content":"> \u8be5\u8bba\u6587\u63d0\u51fa\u65f6\u95f42018.7.20\\n\\n## \u5927\u7eb2\\n\\n> \u5bf9\u4e8eRetinex\u65b9\u6cd5\uff0c\u5176\u4e3a\u4e00\u79cd\u6709\u6548\u7684\u4f4e\u7167\u5ea6\u589e\u5f3a\u65b9\u6cd5\uff0c\u5b83\u5c06\u89c2\u5bdf\u5230\u7684\u56fe\u50cf\u5206\u89e3\u4e3a\u53cd\u5c04\u7387\u548c\u7167\u5ea6\\n\\n\u5927\u591a\u6570\u73b0\u6709\u7684Retinex\u65b9\u6cd5\u90fd\u9700\u8981\u82b1\u8d39\u5927\u91cf\u7cbe\u529b\u53bb\u8bbe\u7f6e\u5206\u89e3\u7684\u53c2\u6570\uff0c\u4ee5\u8fbe\u5230\u8f83\u597d\u7684\u6548\u679c\uff0c\u4f46\u662f\u8fd9\u6837\u5728\u5b9e\u9645\u573a\u666f\u4e2d\u6548\u679c\u8f83\u5dee\uff0c\u800c\u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u6536\u96c6\u4e86\u4e00\u4e2a\u4f4e\u7167\u5ea6\u4e0e\u6b63\u5e38\u5149\u5bf9\u6bd4\u7684\u4f4e\u5149\u6570\u636e\u96c6\u5e76\u57fa\u4e8e\u8be5\u6570\u636e\u96c6\u7684\u5b66\u4e60\u63d0\u51fa\u4e86\u4e00\u4e2aDeep Retinex-net \\n\\n> Deep Retinex-net\u5176\u4e2d\u5305\u62ec\u4e86\u4e00\u4e2a Decom-Net \u7528\u4e8e\u5206\u89e3 \u4ee5\u53ca\u4e00\u4e2a Enhance-Net\u7528\u4e8e\u7167\u5ea6\u8c03\u8282\\n\\n> Decom-Net\uff1a\uff08\u5206\u89e3\uff09\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d**\u4e0d\u8003\u8651**\u5206\u89e3\u540e\u53cd\u5c04\u7387\u548c\u5149\u7167\u7684\u57fa\u672c\u4e8b\u5b9e\uff0c\u800c\u662f\u53ea\u5b66\u4e60\u4e24\u4e2a\u5173\u952e\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u4f4e\u7167\u5ea6\u5230\u6b63\u5e38\u56fe\u50cf\u5171\u4eab\u7684**\u4e00\u81f4\u53cd\u5c04\u7387**\u4ee5\u53ca\u7167\u660e\u7684**\u5e73\u6ed1\u5ea6**\\n\\n> Enhance-Net\uff1a\uff08\u589e\u5f3a\uff09\u57fa\u4e8e\u5206\u89e3\u7684\u57fa\u7840\uff0c\u8fdb\u884c\u4eae\u5ea6\u589e\u5f3a\\n\\n\u5bf9\u4e8e\u8054\u5408\u53bb\u566a\uff0c\u5b58\u5728\u5bf9\u4e8e\u53cd\u5c04\u7387\u7684\u53bb\u566a\u64cd\u4f5c\uff0c\u800c\u5728Retinex-net\u4e2d\u662f\u7aef\u5230\u7aef\u53ef\u8bad\u7ec3\u7684\uff0c\u56e0\u6b64\uff0c\u5bf9\u4e8e\u5206\u89e3\u7684\u5b66\u4e60\u8fc7\u7a0b\u6709\u52a9\u4e8e\u4eae\u5ea6\u8c03\u6574\u3002\\n\\n\u7ecf\u8fc7\u5927\u91cf\u5b9e\u9a8c\u8868\u660e\uff0c\u4f5c\u8005\u7684\u65b9\u6cd5\u5728\u89c6\u89c9\u4e0a\u7684\u5f31\u5149\u589e\u5f3a\u83b7\u5f97\u4e86\u4ee4\u4eba\u6ee1\u610f\u7684\u6548\u679c\uff0c\u5e76\u4e14\u62e5\u6709\u56fe\u50cf\u5206\u89e3\u7684\u826f\u597d\u8868\u73b0\\n\\n\x3c!--truncate--\x3e\\n\\n## \u6b63\u6587\\n\\n### 1.\u4f4e\u7167\u5ea6\u56fe\u50cf\u7684\u5f71\u54cd\\n\\n\u200b    \u4f4e\u7167\u5ea6\u56fe\u7247\u4e0b\uff0c\u4f1a\u663e\u8457\u964d\u4f4e\u56fe\u50cf\u7684\u53ef\u89c1\u6027\uff0c\u4e22\u5931\u7684\u7ec6\u8282\u548c\u4ee5\u53ca\u4f4e\u5bf9\u6bd4\u5ea6\u9996\u5148\u4f1a\u5bf9\u6211\u4eec\u9020\u6210\u4e0d\u6109\u5feb\u7684\u89c6\u89c9\u5f71\u54cd\uff0c\u800c\u5bf9\u4e8e\u6b63\u5e38\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u7cfb\u7edf\u7684\uff0c\u7167\u660e\u4e0d\u8db3\u7684\u56fe\u7247\u672c\u8eab\u5c31\u4e0d\u9002\u7528\u4e8e\u6b63\u5e38\u7684\u89c6\u89c9\u7cfb\u7edf\uff0c\u6700\u7ec8\u5bfc\u81f4\u5927\u91cf\u7684\u6027\u80fd\u635f\u5931\u3002\\n\\n### 2.\u5f15\u5165\u4f4e\u7167\u5ea6\u56fe\u50cf\u589e\u5f3a\\n\\n\u200b    \u4e3a\u4e86\u4f7f\u9690\u85cf\u7684\u7ec6\u8282\u53ef\u89c1\uff0c\u51fa\u73b0\u4e86\u5927\u91cf\u7684\u56fe\u50cf\u589e\u5f3a\u65b9\u6cd5\uff0c\u4ee5\u63d0\u9ad8\u4f4e\u7167\u5ea6\u56fe\u7247\u7684\u4e3b\u89c2\u53ca\u5ba2\u89c2\u8d28\u91cf\u3002\u5982\u76f4\u65b9\u56fe\u5747\u8861\u5316\uff08HE\uff09\u4ee5\u53ca\u5b83\u7684\u53d8\u4f53\u7ea6\u675f\u8f93\u51fa\u56fe\u50cf\u7684\u76f4\u65b9\u56fe\u4ee5\u6ee1\u8db3\u67d0\u4e9b\u7ea6\u675f\uff0c\u8fd8\u6709\u5229\u7528\u4f4e\u7167\u5ea6\u56fe\u7247\u548c\u6726\u80e7\u73af\u5883\u4e2d\u7684\u56fe\u50cf\u4e4b\u95f4\u9006\u8fde\u63a5\u7684De-hazing\u65b9\u6cd5\\n\\n> \u53e6\u5916\u4e00\u90e8\u5206\u7684\u4f4e\u7167\u5ea6\u589e\u5f3a\u65b9\u6cd5\u662f\u57fa\u4e8eRetinex\u7684\u7406\u8bba\u57fa\u7840\u800c\u63d0\u51fa\u7684\uff0c\u5176\u5047\u8bbe\u89c2\u5bdf\u5230\u7684\u5f69\u8272\u56fe\u50cf\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u53cd\u5c04\u7387\u548c\u7167\u5ea6\uff0c\u5e76\u4ee5\u6b64\u6269\u5c55\u63d0\u51fa\u4e4b\u540e\u7684\u5404\u7c7b\u7ecf\u5178\u65b9\u6cd5\u3002\uff081\uff09SSR \u4f5c\u4e3a\u4e00\u79cd\u65e9\u671f\u7684\u5c1d\u8bd5\uff0c\u4f7f\u7528\u4e86\u9ad8\u65af\u6ee4\u6ce2\u5668\u5c06\u5149\u7167\u56fe\u9650\u5236\u4e3a\u5e73\u6ed1\u7684\u3002\uff082\uff09MSRCR \u901a\u8fc7\u591a\u5c3a\u5ea6\u9ad8\u65af\u6ee4\u6ce2\u5668\u548c\u989c\u8272\u6062\u590d\u6269\u5c55\u4e86SSR\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u79cd\u5229\u7528\u4eae\u5ea6\u7ea7\u8bef\u5dee\u6d4b\u91cf\u6765\u4fdd\u6301\u7167\u660e\u81ea\u7136\u6027\u7684\u65b9\u6cd5\u3002\uff083\uff09SRIE \u4f7f\u7528\u52a0\u6743\u53d8\u5206\u6a21\u578b\u540c\u65f6\u4f30\u8ba1\u53cd\u5c04\u7387\u548c\u7167\u5ea6\u3002\u624b\u52a8\u6539\u53d8\u7167\u5ea6\u540e\uff0c\u53ef\u4ee5\u6062\u590d\u76ee\u6807\u7ed3\u679c\u3002\uff084\uff09LIME \u53ea\u5728\u7ed3\u6784\u5148\u9a8c\u4e0b\u4f30\u8ba1\u5149\u7167\uff0c\u5e76\u4f7f\u7528\u53cd\u5c04\u4f5c\u4e3a\u6700\u7ec8\u7684\u589e\u5f3a\u7ed3\u679c\u3002\u4e5f\u6709\u57fa\u4e8eretinx\u7684\u8054\u5408\u5fae\u5149\u589e\u5f3a\u548c\u566a\u58f0\u53bb\u9664\u8fd9\u4e24\u79cd\u65b9\u6cd5\u3002\\n>\\n> \u968f\u7740\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7684\u5feb\u901f\u53d1\u5c55\uff0cCNN\u5728\u4f4e\u7ea7\u522b\u56fe\u50cf\u5904\u7406\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u5305\u62ecsuper-resolution\uff0crain removal\u7b49\u3002Lore\u7b49\u4eba\u7684\u4f7f\u7528\u5806\u53e0\u7a00\u758f\u53bb\u566a\u81ea\u52a8\u7f16\u7801\u5668\u6765\u540c\u65f6\u8fdb\u884c\u5fae\u5149\u589e\u5f3a\u548c\u964d\u566a(LLNet)\u3002\\n\\n### 3.Retinex-Net\u7684\u9884\u8ba1\u7f51\u7edc\u6846\u67b6\\n\\n![image-20210720205844362](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210720205844.png)\\n\\n> \u589e\u5f3a\u8fc7\u7a0b\u5206\u4e3a\u4e09\u6b65:\u5206\u89e3\u3001\u8c03\u6574\u548c\u91cd\u6784\u3002\u5728\u5206\u89e3\u6b65\u9aa4\u4e2d\uff0c\u5b50\u7f51Decom-Net\u5c06\u8f93\u5165\u56fe\u50cf\u5206\u89e3\u4e3a\u53cd\u5c04\u7387\u548c\u7167\u5ea6\u3002\u5728\u63a5\u4e0b\\n>\\n> \u6765\u7684\u8c03\u6574\u6b65\u9aa4\u4e2d\uff0c\u4e00\u4e2a\u57fa\u4e8e\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7684\u589e\u5f3a\u7f51\u7edc\u5c06\u7167\u660e\u53d8\u4eae\u3002\u5f15\u5165\u591a\u5c3a\u5ea6\u62fc\u63a5\uff0c\u4ece\u591a\u5c3a\u5ea6\u89d2\u5ea6\u8c03\u6574\u5149\u7167\u3002\u5728\u8fd9\u4e2a\u6b65\u9aa4\u4e2d\uff0c\u53cd\u5c04\u7387\u4e0a\u7684\u566a\u58f0\u4e5f\u88ab\u53bb\u9664\u3002\u6700\u540e\uff0c\u6211\u4eec\u91cd\u5efa\u8c03\u6574\u540e\u7684\u7167\u660e\u548c\u53cd\u5c04\u7387\uff0c\u4ee5\u83b7\u5f97\u589e\u5f3a\u7684\u7ed3\u679c\\n\\n### 4. Retinex-Net for Low-Light Enhancement\\n\\n$$\\nS = R\\\\circ I\\n$$\\n\\nS\u662f\u6e90\u56fe\u50cf\uff0cR\u4e3a\u53cd\u5c04\u7387\uff0cI\u4e3a\u7167\u5ea6\uff0c$ \\\\circ$\u4e3a\u9010\u5143\u7d20\u76f8\u4e58\uff0c\u5176\u4e2dR\uff08\u53cd\u5c04\u7387\uff09\u63cf\u8ff0\u4e86\u88ab\u6355\u83b7\u7269\u4f53\u7684\u5185\u5728\u5c5e\u6027\uff0c\u5b83\u88ab\u8ba4\u4e3a\u5728\u4efb\u4f55\u4eae\u5ea6\u6761\u4ef6\u4e0b\u90fd\u662f\u4e00\u81f4\u7684\u3002\u7167\u5ea6\u8868\u793a\u7269\u4f53\u4e0a\u7684\u5404\u79cd\u4eae\u5ea6\u3002\u5728\u5f31\u5149\u56fe\u50cf\u4e0a\uff0c\u5b83\u901a\u5e38\u53d7\u5230\u9ed1\u6697\u548c\u4e0d\u5e73\u8861\u7167\u660e\u5206\u5e03\u7684\u5f71\u54cd\u3002\uff08\u6240\u4ee5\u53ef\u4ee5\u5728\u7ed3\u6784\u56fe\u4e2d\u53d1\u73b0R\u7684normal\u548clow\u7684\u56fe\u7247\u662f\u4e00\u6837\u7684\uff09\\n\\n> \u7f51\u7edc\u7531\u4e09\u4e2a\u6b65\u9aa4\u7ec4\u6210:\u5206\u89e3\u3001\u8c03\u6574\u548c\u91cd\u5efa\u3002\u5728\u5206\u89e3\u6b65\u9aa4\u4e2d\uff0c\u89c6\u7f51\u819c\u795e\u7ecf\u7f51\u7edc\u901a\u8fc7\u5206\u89e3\u795e\u7ecf\u7f51\u7edc\u5c06\u8f93\u5165\u56fe\u50cf\u5206\u89e3\u6210\u56fe\u50cf\u3002\u5b83\u5728\u8bad\u7ec3\u9636\u6bb5\u63a5\u6536\u6210\u5bf9\u7684\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\uff0c\u800c\u5728\u6d4b\u8bd5\u9636\u6bb5\u53ea\u63a5\u6536\u5f31\u5149\u56fe\u50cf\u4f5c\u4e3a\u8f93\u5165\u3002\u5728\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\u5177\u6709\u76f8\u540c\u7684\u53cd\u5c04\u7387\u548c\u5149\u7167\u5e73\u6ed1\u5ea6\u7684\u7ea6\u675f\u4e0b\uff0cDecom-Net\u5b66\u4e60\u4ee5\u6570\u636e\u9a71\u52a8\u7684\u65b9\u5f0f\u63d0\u53d6\u4e0d\u540c\u5149\u7167\u56fe\u50cf\u4e4b\u95f4\u7684\u4e00\u81f4R\u3002\u5728\u8c03\u6574\u6b65\u9aa4\u4e2d\uff0c\u4f7f\u7528\u589e\u5f3a\u7f51\u6765\u7167\u4eae\u5149\u7167\u56fe\u3002\u589e\u5f3a\u7f51\u7edc\u91c7\u7528\u4e00\u4e2a\u6574\u4f53\u7684\u7f16\u7801\u5668-\u89e3\u7801\u5668\u6846\u67b6\u3002\u4f7f\u7528\u591a\u5c3a\u5ea6\u62fc\u63a5\u6765\u4fdd\u6301\u5927\u533a\u57df\u4e2d\u7167\u660e\u4e0e\u4e0a\u4e0b\u6587\u4fe1\u606f\u7684\u5168\u5c40\u4e00\u81f4\u6027\uff0c\u540c\u65f6\u96c6\u4e2d\u6ce8\u610f\u529b\u8c03\u6574\u5c40\u90e8\u5206\u5e03\u3002\u6b64\u5916\uff0c\u5982\u679c\u9700\u8981\uff0c\u901a\u5e38\u5728\u5f31\u5149\u6761\u4ef6\u4e0b\u51fa\u73b0\u7684\u653e\u5927\u566a\u58f0\u5c06\u4ece\u53cd\u5c04\u7387\u4e2d\u53bb\u9664\u3002\u7136\u540e\uff0c\u6211\u4eec\u5728\u91cd\u5efa\u9636\u6bb5\u901a\u8fc7\u9010\u5143\u7d20\u4e58\u6cd5\u6765\u7ec4\u5408\u8c03\u6574\u540e\u7684\u7167\u5ea6\u548c\u53cd\u5c04\u7387\u3002\\n\\n### 5.Data-Driven Image Decomposition\\n\\n\u5bf9\u4e8e\u5206\u89e3\u4e00\u5f20\u56fe\u7247\uff0c\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u81ea\u5df1\u4eba\u5de5\u8bbe\u7f6e\u7684\u9650\u5236\u6761\u4ef6\u76f4\u63a5\u5728\u5f31\u5149\u8f93\u5165\u56fe\u50cf\u4e0a\u4f30\u8ba1\u53cd\u5c04\u7387\u548c\u7167\u5ea6\uff0c\u4f46\u662f\uff01\u56e0\u4e3a\u573a\u666f\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u6240\u4ee5\u4e0d\u5bb9\u6613\u8bbe\u8ba1\u9002\u5408\u5404\u79cd\u573a\u666f\u7684\u7ea6\u675f\u51fd\u6570\uff0c\u6240\u4ee5\u6700\u7ec8\u4f5c\u8005\u9009\u62e9\u4f7f\u7528\u4e86data-driven \u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u5206\u89e3\u95ee\u9898\u3002\\n\\n\u4e8e\u662f\uff0cDecom-Net \u51fa\u73b0\u4e86\uff0c**\u5176\u6bcf\u6b21\u63a5\u6536\u6210\u5bf9\u7684\u5f31\u5149/\u6b63\u5e38\u5149\u56fe\u50cf\uff0c\u5e76\u4e14\u5728\u4f4e\u7167\u5ea6\u4e0e\u6b63\u5e38\u56fe\u7247\u5171\u4eab\u76f8\u540c\u7684\u53cd\u5c04\u7387\u524d\u63d0\u4e0b\u5b66\u4e60\u5982\u4f55\u5206\u89e3\u4e24\u8005**\uff0c\u4e14\u867d\u7136\u5206\u89e3\u662f\u7528\u6210\u5bf9\u6570\u636e\u8bad\u7ec3\u7684\uff0c\u4f46\u5b83\u53ef\u4ee5\u5728\u6d4b\u8bd5\u9636\u6bb5\u5355\u72ec\u5206\u89e3\u4f4e\u7167\u5ea6\u8f93\u5165\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u9700\u8981\u63d0\u4f9b\u53cd\u5c04\u7387\u548c\u7167\u5ea6\u7684\u5e38\u7406\u6761\u4ef6\u3002\u53ea\u6709\u5fc5\u8981\u7684\u77e5\u8bc6\uff0c\u5305\u62ec\u53cd\u5c04\u7387\u7684\u4e00\u81f4\u6027\u548c\u5149\u7167\u56fe\u7684\u5e73\u6ed1\u5ea6\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u5d4c\u5165\u5230\u7f51\u7edc\u4e2d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u7f51\u7edc\u7684\u5206\u89e3\u662f\u4ece\u6210\u5bf9\u7684\u4f4e/\u6b63\u5e38\u5149\u56fe\u50cf\u4e2d\u81ea\u52a8\u5b66\u4e60\u7684\uff0c\u5e76\u4e14\u672c\u8d28\u4e0a\u9002\u5408\u4e8e\u63cf\u8ff0\u4e0d\u540c\u5149\u6761\u4ef6\u4e0b\u56fe\u50cf\u4e4b\u95f4\u7684\u5149\u53d8\u5316\u3002\\n\\n\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\uff1a\u867d\u7136\u5b83\u548c\u5206\u89e3\u5185\u5728\u56fe\u50cf\u5f88\u76f8\u4f3c\uff0c\u4f46\u662f\u672c\u8d28\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u5728\u8be5\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u7684\u4e0d\u5e94\u8be5\u662f\u7cbe\u786e\u7684\u83b7\u5f97\u5b9e\u9645\u7684\u5185\u5728\u56fe\u50cf\uff0c\u800c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5149\u7ebf\u8c03\u8282\u8868\u793a\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u8ba9\u7f51\u7edc\u5b66\u4e60\u5f31\u5149\u56fe\u50cf\u4e0e\u5176\u589e\u5f3a\u56fe\u50cf\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u6210\u5206\\n\\n\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4f5c\u8005\u5148\u4f7f\u7528\u4e00\u4e2a3 x 3\u5377\u79ef\u63d0\u53d6\u56fe\u50cf\u7279\u5f81\uff0c\u800c\u540e\u518d\u4f7f\u7528\u591a\u4e2a3 x 3\u5377\u79ef\u52a0\u4e0aReLU\u6fc0\u6d3b\u51fd\u6570\u5c06RGB\u56fe\u50cf\u6620\u5c04\u4e3a\u53cd\u5c04\u548c\u7167\u660e\uff0c\u800c3 x 3\u5377\u79ef\u90fd\u662f\u4ece\u7279\u5f81\u7a7a\u95f4\u6295\u5f71R\u548cI\uff0c\u5e76\u4e14\u4f7f\u7528sigmoid\u51fd\u6570\u5c06 R \u548c I \u90fd\u6295\u5f71\u5728\u30100 , 1\u3011\u7684\u8303\u56f4\u4e2d\\n\\n\u635f\u5931 $L$ \u88ab\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206: Reconstruction loss(\u91cd\u5efa\u635f\u5931) $L_{recon}$ \uff0cInvariable reflectance loss\uff08\u6052\u5b9a\u53cd\u5c04\u635f\u5931\uff09$L_{ir}$ , illumination smoothness loss(\u7167\u660e\u5e73\u6ed1\u5ea6\u635f\u5931) $L_{is}$\u200b :\\n$$\\nL = L_{recon} + \\\\lambda_{ir}L_{ir} +\\\\lambda_{is}L_{is}\\n$$\\n\\n> \u5176\u4e2d$\\\\lambda_{is}\u548c$$\\\\lambda_{it}$\u200b\u200b\u662f\u5e73\u8861\u53cd\u5c04\u7387\u4e00\u81f4\u6027\u548c\u7167\u5ea6\u5e73\u6ed1\u5ea6\u7684\u7cfb\u6570\\n\\n\u57fa\u4e8eReflectance \u56fe\u50cf\u90fd\u53ef\u4ee5\u7528\u76f8\u5e94\u7167\u5ea6\u6620\u5c04\u6765\u91cd\u5efa\u56fe\u50cf\u7684\u5047\u8bbe\uff0cReconstruction loss\uff08\u91cd\u5efa\u635f\u5931\uff09$L_{recon}$\u200b\u88ab\u8868\u8ff0\u4e3a\uff1a\\n$$\\nL_{recon}=\\\\sum_{i=low,normal}\\\\sum_{j=low,normal}\\\\lambda_{i,j}||R_i\\\\circ I_j-S_j||_1\\n$$\\n![image-20210722153835257](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210722153835.png)\\n\\nInvariable reflectance loss(\u6052\u5b9a\u53cd\u5c04\u635f\u5931) $L_{ir}$ \u88ab\u5f15\u5165\u6765\u9650\u5236\u53cd\u5c04\u7387\u7684\u4e00\u81f4\u6027:\\n$$\\nL_{ir}=||R_{low}-R_{normal}||_1\\n$$\\n\\n### 6.Structure-Aware Smoothness Loss\\n\\n\u5bf9\u4e8e\u7167\u5ea6\u6620\u5c04\u6709\u4e00\u4e2a\u57fa\u672c\u5047\u8bbe\u662f\u5c40\u90e8\u4e00\u81f4\u6027\u548c\u7ed3\u6784\u611f\u77e5\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u597d\u7684\u7167\u5ea6\u6620\u5c04\u7684\u89e3\u51b3\u65b9\u6848\u5e94\u8be5\u662f\u7eb9\u7406\u7ec6\u8282\u5e73\u6ed1\uff0c\u540c\u65f6\u4ecd\u7136\u53ef\u4ee5\u4fdd\u7559\u6574\u4f53\u7ed3\u6784\u8fb9\u754c\u3002\\n\\nTotal variation minimization (TV) \u53d8\u5dee\u5316\u6700\u5c0f\u5316\uff0c\u5176\u5e38\u5e38\u88ab\u7528\u4e8e\u6700\u5c0f\u5316\u6574\u4e2a\u56fe\u50cf\u7684\u68af\u5ea6\uff0c\u7ecf\u5e38\u88ab\u7528\u4f5c\u5404\u79cd\u56fe\u50cf\u6062\u590d\u4efb\u52a1\u7684\u5e73\u6ed1\u5ea6\u5148\u9a8c\uff0c\u7136\u800c\uff0c\u76f4\u63a5\u4f7f\u7528 TV \u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u5728\u56fe\u50cf\u5177\u6709\u5f3a\u7ed3\u6784\u6216\u4eae\u5ea6\u5267\u70c8\u53d8\u5316\u7684\u533a\u57df\u4f1a\u5931\u8d25\u3002\u8fd9\u662f\u7531\u4e8e\u65e0\u8bba\u8be5\u533a\u57df\u662f\u6587\u672c\u7ec6\u8282\u533a\u57df\u8fd8\u662f\u5f3a\u8fb9\u754c\u533a\u57df\uff0c\u5149\u7167\u56fe\u7684\u68af\u5ea6\u90fd\u662f\u5747\u5300\u51cf\u5c11\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7535\u89c6\u635f\u5931\u5c31\u662f\u7ed3\u6784\u76f2\u533a\u5316\u3002\u7167\u5ea6\u6a21\u7cca\u5316\uff0c\u4e14\u4f1a\u5c06\u987d\u56fa\u7684\u9ed1\u8272\u8fb9\u7f18\u7559\u5728\u53cd\u5c04\u56fe\u4e2d\\n\\n\u4e3a\u4e86\u4f7f\u5f97\u635f\u5931\u4e86\u89e3\u5230\u56fe\u50cf\u7ed3\u6784\uff0c\u539f\u59cb\u7684TV\u51fd\u6570\u5e94\u8be5\u88ab\u53cd\u5c04\u56fe\u6620\u5c04\u52a0\u6743\uff0c\u4e14\u6700\u7ec8\u7684$L_{is}$\u5e94\u8be5\u88ab\u8868\u8ff0\u4e3a\\n\\n$$\\nL_{is}=\\\\sum_{i=low,normal}||\\\\nabla I_i\\\\circ exp(-\\\\lambda_g\\\\nabla R_i)||\\n$$\\n\u9650\u5236\u7531\u521d\u59cb\u7684\u7167\u5ea6\u6620\u5c04\u52a0\u6743\uff0c\u521d\u59cb\u5149\u7167\u56fe\u662fR\uff0cG\uff0cB\u901a\u9053\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u6700\u5927\u503c\uff0c\u5728\u8bad\u7ec3\u9636\u6bb5\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u66f4\u65b0\u7167\u5ea6\u548c\u6743\u91cd\uff08\u53cd\u5c04\u7387\uff09\\n\\n### 7.Multi-Scale Illumination Adjustment\\n\\n> \u7167\u660e\u589e\u5f3a\u7f51\u7edc\u91c7\u7528\u7f16\u7801\u5668-\u89e3\u7801\u5668\u67b6\u6784\u7684\u6574\u4f53\u6846\u67b6\u3002\u4e3a\u4e86\u4ece\u5206\u5c42\u7684\u89d2\u5ea6\u8c03\u6574\u7167\u660e\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u591a\u5c3a\u5ea6\u8fde\u63a5\uff0c\u7f16\u7801\u5668-\u89e3\u7801\u5668\u4f53\u7cfb\u7ed3\u6784\u5728\u5927\u533a\u57df\u4e2d\u83b7\u5f97\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u8f93\u5165\u56fe\u50cf\u88ab\u8fde\u7eed\u4e0b\u91c7\u6837\u5230\u5c0f\u5c3a\u5ea6\uff0c\u5728\u8be5\u5c3a\u5ea6\u4e0b\u7f51\u7edc\u53ef\u4ee5\u83b7\u5f97\u5927\u5c3a\u5ea6\u7167\u660e\u5206\u5e03\u7684\u89c6\u89d2\u3002\u8fd9\u7ed9\u7f51\u7edc\u5e26\u6765\u4e86\u81ea\u9002\u5e94\u8c03\u6574\u7684\u80fd\u529b\uff0c\u800c\u540e\uff0c\u800c\u540e\u5229\u7528\u5927\u5c3a\u5ea6\u4e0b\u7684\u5149\u7167\u5b66\u4e60\uff0c\u4e0a\u91c7\u6837\u91cd\u5efa\u5c40\u90e8\u5149\u7167\u7279\u5f81\u3002\u901a\u8fc7\u5143\u7d20\u6c42\u548c\uff0c\u4ece\u4e0b\u91c7\u6837\u5757\u5230\u5176\u5bf9\u5e94\u7684\u955c\u50cf\u4e0a\u91c7\u6837\u5757\u5f15\u5165\u8df3\u8dc3\u8fde\u63a5\uff0c\u5f3a\u5236\u7f51\u7edc\u5b66\u4e60\u6b8b\u5dee\u3002\\n\\n\u4e3a\u4e86\u5206\u5c42\u8c03\u6574\u5149\u7167\uff0c\u5373\u4fdd\u6301\u5168\u5c40\u5149\u7167\u7684\u4e00\u81f4\u6027\uff0c\u540c\u65f6\u9002\u5e94\u4e0d\u540c\u7684\u5c40\u90e8\u5149\u7167\u5206\u5e03\uff0c\u5f15\u5165\u7684\u591a\u5c3a\u5ea6\u62fc\u63a5\uff0c\u5982\u679c\u6709 M \u4e2a\u9012\u589e\u7684\u4e0a\u91c7\u6837\u5757\uff0c\u6bcf\u4e2a\u4e0a\u91c7\u6837\u5757\u63d0\u53d6\u4e00\u4e2a\u62e5\u6709 C \u4e2a\u901a\u9053\u7684\u7279\u5f81\u56fe\uff0c\u6211\u4eec\u901a\u8fc7\u6700\u8fd1\u90bb\u63d2\u503c\u8c03\u6574\u8fd9\u4e9b\u4e0d\u540c\u6bd4\u4f8b\u7684\u7279\u5f81\u5230\u6700\u7ec8\u6bd4\u4f8b\uff0c\u5e76\u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u4e00\u4e2a\u62e5\u6709 C\xd7M \u901a\u9053\u7684\u7279\u5f81\u56fe\u3002\u7136\u540e\uff0c\u901a\u8fc71\xd71\u5377\u79ef\u5c42\uff0c\u7ea7\u8054\u7279\u5f81\u88ab\u7b80\u5316\u4e3a C \u4fe1\u9053\u3002\u9075\u5faa3\xd73\u5377\u79ef\u5c42\u6765\u91cd\u5efa\u7167\u5ea6\u56fe\\n\\n\u4e0b\u91c7\u6837\u5757\u7531\u6b65\u957f\u4e3a2\u7684\u5377\u79ef\u5c42\u548cReLU\u7ec4\u6210\u3002\u5728\u4e0a\u91c7\u6837\u5757\u4e2d\uff0c\u4f7f\u7528\u4e86\u5927\u5c0f\u8c03\u6574\u5377\u79ef\u5c42\u3002\u5b83\u53ef\u4ee5\u907f\u514d\u5f62\u6210\u68cb\u76d8\u6a21\u5f0f\u5316\u7684\u4eba\u5de5\u4ea7\u7269\u3002\u8c03\u6574\u5927\u5c0f\u5377\u79ef\u5c42\u7531\u6700\u8fd1\u90bb\u63d2\u503c\u64cd\u4f5c\u3001\u6b65\u957f\u4e3a1\u7684\u5377\u79ef\u5c42\u548cReLU\u7ec4\u6210\u3002\\n\\n\u589e\u5f3a\u51fd\u6570\u4e2d\u7684\u635f\u5931 $L$ \u7531\u91cd\u5efa\u635f\u5931 $L_{recon}$ \u548c\u7167\u660e\u5e73\u6ed1\u5ea6\u635f\u5931 $L_{is}$ \u7ec4\u6210\uff0c $L_{recon}$\u200b \u76ee\u7684\u662f\u5236\u9020\u6b63\u5e38\u5149 $\\\\hat{S}$ \u5176\u516c\u5f0f\u4e3a\\n$$\\nL_{recon}=||R_{low}\\\\circ\\\\hat{I}-S_{normal}||_1\\n$$\\n\\n### 8.Denoising on Reflectance\\n\\n\u5728\u5206\u89e3\u8fc7\u7a0b\u4e2d\uff0c\u4f5c\u8005\u5bf9\u7f51\u7edc\u65bd\u52a0\u4e86\u82e5\u5e72\u7ea6\u675f\uff0c\u5176\u4e2d\u4e4b\u4e00\u5c31\u662f\u7167\u5ea6\u56fe\u7684\u7ed3\u6784\u611f\u77e5\u5e73\u6ed1\u6027\uff0c\u5f53\u4f30\u8ba1\u7684\u7167\u5ea6\u56fe\u5e73\u6ed1\u65f6\uff0c\u56fe\u50cf\u7ec6\u8282\u5c06\u4fdd\u7559\u5728\u53cd\u5c04\u56fe\u4e2d\uff0c\u5305\u62ec\u589e\u5f3a\u540e\u7684\u566a\u58f0\uff0c\u6240\u4ee5\u5728\u7f51\u7edc\u4e2d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u53cd\u5c04\u56fe\u8fdb\u884c\u53bb\u566a\u64cd\u4f5c\uff0c\u9274\u4e8e\u6697\u5904\u566a\u58f0\u5728\u5206\u89e3\u8fc7\u7a0b\u4e2d\u4f1a\u6839\u636e\u4eae\u5ea6\u5f3a\u5ea6\u88ab\u653e\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u4e0e\u5149\u7167\u76f8\u5173\u7684\u53bb\u566a\u65b9\u6cd5\u3002"},{"id":"/[49]GhostNet-More-Features-from-Cheap-Operations","metadata":{"permalink":"/blog/[49]GhostNet-More-Features-from-Cheap-Operations","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[49]GhostNet-More-Features-from-Cheap-Operations.md","source":"@site/blog/[49]GhostNet-More-Features-from-Cheap-Operations.md","title":"GhostNet - More Features from Cheap Operations","description":"\u9b3c\u7f51\uff01","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"low-light","permalink":"/blog/tags/low-light"}],"readingTime":18.675,"hasTruncateMarker":true,"authors":[{"name":"RuoMengAwA","title":"\u4e00\u4e2a\u559c\u6b22\u6478\u9c7c\u7684\u83dc\u72d7\uff0c\u76ee\u524d\u4e3b\u8981\u505a\u4f4e\u7167\u5ea6\u589e\u5f3a\u65b9\u5411\u7684\u7814\u7a76","url":"https://github.com/RuoMengAwA","imageURL":"https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220116171846.jpg","key":"ruomeng"}],"frontMatter":{"title":"GhostNet - More Features from Cheap Operations","authors":["ruomeng"],"tags":["low-light"]},"prevItem":{"title":"Deep Retinex Decomposition for Low-Light Enhancement","permalink":"/blog/[48]Deep-Retinex-Decomposition-for-Low-Light-Enhancement"},"nextItem":{"title":"Kindling the Darkness - A Practical Low-light Image Enhancer","permalink":"/blog/[50]Kindling-the-Darkness-A-Practical-Low-light-Image-Enhancer"}},"content":"> *\u9b3c\u7f51\uff01*\\n>\\n> ![image-20210510203042875](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212350.png)\\n\\n---\\n\\n# GhostNet\u4ea7\u751f\u539f\u56e0\\n\\n> *mobileNet\u6216\u8005\u662fshuffleNet\u63d0\u51fa\u4e86\u4f7f\u7528depthwise\u6216\u8005\u662fshuffle\u7b49\u64cd\u4f5c\uff0c\u4f46\u662f\u5f15\u5165\u76841x1\u5377\u79ef\u4f9d\u7136\u4f1a\u4ea7\u751f\u4e00\u5b9a\u7684\u8ba1\u7b97\u91cf*\\n>\\n> \u4e3a\u4ec0\u4e481x1\u5377\u79ef\u4f9d\u7136\u4f1a\u4ea7\u751f\u8f83\u5927\u7684\u8ba1\u7b97\u91cf?\u770b\u5377\u79ef\u8ba1\u7b97\u91cf\u7684\u8ba1\u7b97\u516c\u5f0f$n \u2217 h \u2217 w \u2217 c \u2217 k \u2217 k $,\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8ec\u548cn\u90fd\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u6240\u4ee5\u4f1a\u5bfc\u81f4\u8fd9\u4e2a\u8ba1\u7b97\u91cf\u4e5f\u662f\u6bd4\u8f83\u5927\u7684\uff08\u540e\u6587\u5177\u4f53\u7ed3\u6784\u590d\u73b0\u65f6\u8fd8\u4f1a\u89e3\u91ca\uff09\\n>\\n> \u6240\u4ee5\uff0c\u6211\u4eec\u5982\u4f55\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u518d\u51cf\u5c11\u53c2\u6570\uff0c\u4f18\u5316\u7f51\u7edc\u901f\u5ea6\u5462\uff0c\u4f5c\u8005\u4ece\u4e00\u4e2a\u72ec\u7279\u7684\u89d2\u5ea6\uff0c\u89c2\u5bdf\u4e86ResNet50\u7b2c\u4e00\u4e2a\u6b8b\u5dee\u5757\u8f93\u51fa\u7684\u7279\u5f81\u56fe\uff0c\u53d1\u73b0\u6709\u8bb8\u591a\u8f93\u51fa\u7279\u5f81\u5f88\u76f8\u4f3c\uff0c\u57fa\u672c\u53ea\u8981\u8fdb\u884c\u7b80\u5355\u7684\u7ebf\u6027\u53d8\u6362\u5c31\u80fd\u5f97\u5230\uff0c\u800c\u4e0d\u9700\u8981\u8fdb\u884c\u590d\u6742\u7684\u975e\u7ebf\u6027\u53d8\u6362\u5f97\u5230\u3002\\n>\\n> \u5982\u56fe\uff1a\\n>\\n> ![image-20210510184255116](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212347.png)\\n>\\n> \u4ee5\u4e0a\u56fe\u7247\u4e2d\u540c\u8272\u56fe\u7247\u53ef\u4ee5\u4f7f\u7528cheap operations\u8fdb\u884c\u751f\u6210\\n>\\n> \u6240\u4ee5\u53ef\u4ee5\u5148\u901a\u8fc7\u4e00\u4e2a\u975e\u7ebf\u6027\u53d8\u5316\u5f97\u5230\u5176\u4e2d\u4e00\u4e2a\u7279\u5f81\u56fe\uff0c\u9488\u5bf9\u8fd9\u4e2a\u7279\u5f81\u56fe\u505a\u7ebf\u6027\u53d8\u5316\uff0c\u5f97\u5230\u539f\u7279\u5f81\u56fe\u7684\u5e7d\u7075\u7279\u5f81\u56fe\u3002\\n>\\n> *ps:\u8fd9\u91cc\u8bf4\u7684\u975e\u7ebf\u6027\u5377\u79ef\u64cd\u4f5c\u662f\u5377\u79ef-\u6279\u5f52\u4e00\u5316-\u975e\u7ebf\u6027\u6fc0\u6d3b\u5168\u5957\u7ec4\u5408\uff0c\u800c\u6240\u8c13\u7684\u7ebf\u6027\u53d8\u6362\u6216\u8005\u5ec9\u4ef7\u64cd\u4f5c\u5747\u6307\u666e\u901a\u5377\u79ef\uff0c\u4e0d\u542b\u6279\u5f52\u4e00\u5316\u548c\u975e\u7ebf\u6027\u6fc0\u6d3b*\\n\\n\u200b\\t\\t \u6240\u4ee5\uff0c\u603b\u7ed3\u5176**\u6838\u5fc3\u601d\u60f3**\u5c31\u662f\uff1a\u8bbe\u8ba1\u4e00\u79cd\u5206\u9636\u6bb5\u7684\u5377\u79ef\u8ba1\u7b97\u6a21\u5757\uff0c\u5728\u5c11\u91cf\u7684\u975e\u7ebf\u6027\u7684\u5377\u79ef\u5f97\u5230\u7684\u7279\u5f81\u56fe\u57fa\u7840\u4e0a\uff0c\u518d\u8fdb\u884c\u4e00\u6b21\u7ebf\u6027\u5377\u79ef\uff0c\u4ece\u800c\u83b7\u53d6\u66f4\u591a\u7684\u7279\u5f81\u56fe\uff0c\u800c\u65b0\u5f97\u5230\u7684\u7279\u5f81\u56fe\uff0c\u5c31\u88ab\u53eb\u505a\u4e4b\u524d\u7279\u5f81\u56fe\u7684\u2018ghost\u2019\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0\u6d88\u9664\u5197\u4f59\u7279\u5f81\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e0d\u907f\u514d\u5197\u4f59\u7684\u7279\u5f81\u6620\u5c04\uff0c\u800c\u662f\u4f7f\u7528\u4e00\u79cd\u66f4\u4f4e\u6210\u672c\u6548\u76ca\u7684\u65b9\u5f0f\u63a5\u53d7\u5b83\uff09\uff0c\u4f7f\u5f97\u5728\u4fdd\u6301\u76f8\u4f3c\u7684\u8bc6\u522b\u6027\u80fd\u7684\u540c\u65f6\uff0c\u964d\u4f4e\u901a\u7528\u5377\u79ef\u5c42\u7684\u8ba1\u7b97\u4ee3\u4ef7\uff0c\u4ee5\u83b7\u53d6\u66f4\u52a0\u8f7b\u91cf\u7684\u6a21\u578b\uff08\u975e\u7ebf\u6027\u7684\u64cd\u4f5c\u662f *\u6602\u8d35\u7684*\uff0c\u7ebf\u6027\u64cd\u4f5c\u662f *\u5ec9\u4ef7\u7684*\uff09\uff08\u8fd9\u64cd\u4f5c\u9b3c\u60f3\u5f97\u5230\u3002\u3002\u3002\uff09\\n\\n\x3c!--truncate--\x3e\\n\\n***\\n\\n# Ghost module\\n\\n> *\u9b3c\u6a21\u5757\uff01*\\n>\\n> ![image-20210511143636786](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210511143636.png)\\n\\n***\\n\\n## \u529f\u80fd\u5b9e\u73b0\\n\\n\u56fe\u4f8b\uff1a\uff08\u89e3\u91caGhost module\u7684\u5927\u81f4\u529f\u80fd\uff09\\n\\n![image-20210510210934894](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212343.png)\\n\\n> **\u5982\u56fe\u6240\u793a\uff0c\u76f8\u8f83\u4e8e\u4f20\u7edf\u5377\u79ef\uff0c\u76f4\u63a5\u5bf9input\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c\uff08\u6602\u8d35\u7684\u975e\u7ebf\u6027\u8fd0\u7b97\uff09\uff0cGhostnet\u5219\u5148\u8fdb\u884c\u90e8\u5206\u5377\u79ef\uff0c\u5f97\u5230channel\u8f83\u5c11\u7684\u7279\u5f81\u56fe\uff0c\u4e4b\u540e\u518d\u4f7f\u7528\u8fd9\u4e9b\u7279\u5f81\u56fecheap operation\u8fdb\u884c\u5ec9\u4ef7\u7684\u7ebf\u6027\u8fd0\u7b97\uff0c\u5f97\u5230\u66f4\u591a\u7684\u7279\u5f81\u56fe\uff0c\u6700\u540e\u5c06\u4e0d\u540c\u7684\u7279\u5f81\u56feconcat\u5230\u4e00\u8d77\uff0c\u7ec4\u5408\u5f62\u6210\u65b0\u7684output**\\n\\n***\\n\\n## \u8ba1\u7b97\\n\\n> \u9996\u5148\uff0c\u5047\u8bbe\u6211\u4eec\u8f93\u5165\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u662f $h * w * c$ ,\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u662f $h\u2019 * w\u2019 * n$ ,\u5377\u79ef\u6838\u5927\u5c0f\u4e3a $k * k$\\n>\\n> \u5728cheap operation\u53d8\u6362\u4e2d\uff0c\u6211\u4eec\u5047\u8bbe\u7279\u5f81\u56fe\u7684channel\u662f **m**\uff0c\u53d8\u6362\u7684\u6570\u91cf **s** \u4ee3\u8868\u8fd9**m**\u4e2a\u901a\u9053\u5206\u522b\u88ab\u7ebf\u6027\u6620\u5c04\u51e0\u6b21\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u65b0\u7684\u7279\u5f81\u56fe\u7684\u6570\u91cf\u662f**n**,\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b49\u5f0f\uff1a\\n>\\n> $$\\n> n = m \\\\times s = output_{total}\\n> $$\\n> \u7531\u4e8eGhost\u7684\u53d8\u6362\u8fc7\u7a0b\u4e2d\u6700\u540e\u5b58\u5728\u4e00\u4e2a\u6052\u7b49\u53d8\u6362\uff08**Identity\u2014\u2014\u76f4\u63a5\u5c06\u7b2c\u4e00\u6b65conv\u751f\u6210\u7684\u7279\u5f81\u56fe\u4f5c\u4e3aoutput\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u8fc7\u7a0b\u4e5f\u5c5e\u4e8e\u7ebf\u6027\u6620\u5c04**\uff09\uff0c\u6240\u4ee5\u5b9e\u9645\u6709\u6548\uff0c\u751f\u6210\u65b0\u7279\u5f81\u56fe\u7684\u53d8\u6362\u6570\u91cf\u662f**s-1**,\u6240\u4ee5\u4e0a\u5f0f\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u516c\u5f0f\uff1a\\n>\\n> $$\\n> m \\\\times ( s \u2212 1 ) = \\\\frac{n}{s\\\\times(s-1)}= output_{new}\\n> $$\\n>\\n> \u53ef\u4ee5\u770b\u51fa\uff0cghostnet\u5bf9m\u4e2a\u901a\u9053\u8fdb\u884c\u5206\u522b\u7684\u5377\u79ef\uff0c\u6240\u4ee5\u4f7f\u5f97Ghost\u6a21\u5757\u4e2d\u7684\u7ebf\u6027\u6620\u5c04\u5177\u6709\u5f88\u5927\u7684\u591a\u6837\u6027\\n\\n---\\n\\n## \u4ee5\u8bba\u6587\u4e2d\u7684\u516c\u5f0f\u590d\u73b0ghostnet module\u5b9e\u73b0\u8fc7\u7a0b\\n\\n$$\\nY = X*f+b\\n$$\\n\\n\u5bf9\u4e8e\u8f93\u5165\u6570\u636e\\t$Y\\\\in R^{c \\\\times h\\\\times w}$  \uff0c\u5377\u79ef\u5c42\u64cd\u4f5c\u5982\u516c\u5f0f1\uff0c\\t$\\\\cal{Y\\\\in R^{h\u2019\\\\times w\u2019\\\\times n}}$ ,\u4e3a\u8f93\u51fa\u7684n\u7ef4\u7279\u5f81\u56fe\uff0c\\t$\\\\cal{f \\\\in R^{c\\\\times k\\\\times k \\\\times n}}$\u4e3a\u8be5\u5c42\u7684\u5377\u79ef\u6838 \uff0c\u6240\u4ee5\u8be5\u5c42\u7684\u8ba1\u7b97\u91cf\u4e3a$n \\\\cdot h\' \\\\cdot w\' \\\\cdot c\\\\cdot k \\\\cdot k$ \u8fd9\u4e2a\u6570\u636e\u91cf\u901a\u5e38\u6210\u5343\u4e0a\u4e07\uff0c\u56e0\u4e3ac\uff08\u8f93\u5165\u56fe\u7247\u6570\uff09\u548cn\uff08\u8f93\u51fa\u7279\u5f81\u56fe\u6570\uff09\u901a\u5e38\u4f1a\u5f88\u5927 \u3002\u516c\u5f0f1\u7684\u53c2\u6570\u91cf\u4e0e\u8f93\u5165\u548c\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u6570\u606f\u606f\u76f8\u5173\uff0c\u800c\u4ece\u56fe1\u53ef\u4ee5\u770b\u51fa\u4e2d\u95f4\u7279\u5f81\u56fe\u5b58\u5728\u5927\u91cf\u5197\u4f59\uff0c\u4e14\u5b58\u5728\u76f8\u4f3c\u7684\u7279\u5f81(Ghost)\uff0c\u6240\u4ee5\u5b8c\u5168\u6ca1\u5fc5\u8981\u5360\u7528\u5927\u91cf\u8ba1\u7b97\u91cf\u6765\u8ba1\u7b97\u8fd9\u4e9bGhost\\n\\n---\\n\\n$$\\nY^{\\\\prime}=X*f\\n$$\\n\\n\u5047\u8bbe\u539f\u8f93\u51fa\u7684\u7279\u5f81\u4e3a\u67d0\u4e9b\u5185\u5728\u7279\u5f81\u8fdb\u884c\u7b80\u5355\u7684\u53d8\u6362\u5f97\u5230Ghost\uff0c\u901a\u5e38\u8fd9\u4e9b\u5185\u5728\u7279\u5f81\u6570\u91cf\u90fd\u5f88\u5c11\uff0c\u5e76\u4e14\u80fd\u901a\u8fc7\u539f\u59cb\u5377\u79ef\u64cd\u4f5c\u516c\u5f0f2\u83b7\u5f97\uff0c\\t$\\\\cal{Y\'\\\\in R^{h\u2019\\\\times w\u2019\\\\times m}}$\u4e3a\u539f\u59cb\u5377\u79ef\u8f93\u51fa\uff0c$\\\\cal{Y\\\\in R^{c\\\\times k\\\\times k \\\\times m}}$ \u4e3a\u4f7f\u7528\u7684\u5377\u79ef\u6838\uff0c$m\\\\leq n$  ,baise\u76f4\u63a5\u7b80\u5316\u6389\\n\\n$$\\ny_{i j}=\\\\Phi_{i, j}\\\\left(y_{i}^{\\\\prime}\\\\right), \\\\quad \\\\forall i=1, \\\\ldots, m, \\\\quad j=1, \\\\ldots, s\\n$$\\n\u4e3a\u4e86\u83b7\u5f97\u539f\u6765\u7684$n$\u7ef4\u7279\u5f81\uff0c\u5bf9$Y \u2032$ \u7684\u5185\u5728\u7279\u5f81\u5206\u522b\u4f7f\u7528\u4e00\u7cfb\u5217\u7b80\u5355\u7ebf\u6027\u64cd\u4f5c\u6765\u4ea7\u751f$s$\u7ef4 ghost \u7279\u5f81\uff0c$\u03a6_{i,j}$\u4e3a\u751f\u6210$Y\u2019_i$\u7684$j-th$ ghost\u7279\u5f81\u56fe\u7684\u7ebf\u6027\u53d8\u5316\u51fd\u6570\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5377\u79ef\u6838\uff08\u7279\u5f81\u56fe\uff09\u8fdb\u884cs-1\u6b21\u7684\u7ebf\u6027\u53d8\u6362\uff0c\u6700\u540e\u751f\u6210s-1 + 1\u4e2a\u7279\u5f81\u56fe\uff08\u539f\u7279\u5f81\u56fe\u52a0ghost\u7279\u5f81\u56fe\uff09\\n\\n---\\n\\n## \u4e0e\u4e3b\u6d41\u5377\u79ef\u64cd\u4f5c\u5bf9\u6bd4\\n\\n> 1. \u5bf9\u6bd4**Mobilenet\u3001Squeezenet\u548cShufflenet**\u4e2d\u5927\u91cf\u4f7f\u7528**1 \xd7 1 pointwise**\u5377\u79ef\uff0c**Ghost**\u6a21\u5757\u7684\u539f\u59cb\u5377\u79ef\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5377\u79ef\u6838\u6570\u91cf\\n> 2. \u76ee\u524d\u5927\u591a\u6570\u65b9\u6cd5\u90fd\u662f\u5148\u505a**pointwise**\u5377\u79ef\u964d\u7ef4\uff0c\u518d\u7528**depthwise**\u5377\u79ef\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u800c**Ghost**\u5219\u662f\u5148\u505a\u539f\u59cb\u5377\u79ef\uff0c\u518d\u7528\u7b80\u5355\u7684\u7ebf\u6027\u53d8\u6362\u6765\u83b7\u53d6\u66f4\u591a\u7279\u5f81\\n> 3. \u76ee\u524d\u7684\u65b9\u6cd5\u4e2d\u5904\u7406\u6bcf\u4e2a\u7279\u5f81\u56fe\u5927\u90fd\u4f7f\u7528**depthwise**\u5377\u79ef\u6216shift\u64cd\u4f5c\uff0c\u800cGhost\u6a21\u5757\u4f7f\u7528\u7ebf\u6027\u53d8\u6362\uff0c\u53ef\u4ee5\u6709\u5f88\u5927\u7684\u591a\u6837\u6027\\n> 4. **Ghost**\u6a21\u5757\u540c\u65f6\u4f7f\u7528**identity mapping**\u6765\u4fdd\u6301\u539f\u6709\u7279\u5f81\\n\\n---\\n\\n## \u590d\u6742\u5ea6\u5206\u6790\\n\\n> \u5728\u7406\u60f3\u60c5\u51b5\u4e0b $n\\\\cdot (s-1)$ \u6b21\u7ebf\u6027\u8fd0\u7b97\u4e4b\u95f4\u53ef\u4ee5\u62e5\u6709\u4e0d\u540c\u7684\u5f62\u72b6\u548c\u53c2\u6570\uff0c\u4f46\u662f\u5728\u7ebf\u63a8\u7406\u4f1a\u53d7\u963b\uff0c\u7279\u522b\u662f\u8003\u8651\u5230cpu\u548cgpu\u7684\u4f7f\u7528\uff0c\u6240\u4ee5\uff0c\u5728\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u5efa\u8bae\u6211\u4eec\u5728\u4e00\u4e2aghostnet\u6a21\u5757\u4e2d\u4f7f\u7528\u76f8\u540c\u5927\u5c0f\u7ebf\u6027\u64cd\u4f5c\uff08\u59823x3\uff0c5x5\uff09\u4ee5\u4fbf\u66f4\u52a0\u6709\u6548\u7684\u5b9e\u73b0\\n>\\n> \u5047\u8bbeGhost\u6a21\u5757\u5305\u542b1\u4e2a**identity mapping**\u548c $m\\\\cdot(s-1)$ \u4e2a\u7ebf\u6027\u53d8\u6362\uff0c\u6bcf\u4e2a\u7ebf\u6027\u64cd\u4f5c\u6838\u7684\u5927\u5c0f\u4e3a $d\\\\times d$ \\n>\\n> \u4ee5\u4e0b\u662fghostnet\u6a21\u5757\u8ba1\u7b97\u91cf\u7684\u538b\u7f29\u6bd4\u4f8b\u548c\u53c2\u6570\u91cf\u7684\u538b\u7f29\u6bd4\u4f8b\uff1a\uff08\u5728\u6b64\u5904\uff0c$d\\\\cdot d$ \u4e0e $k\\\\cdot k$ \u6709\u7740\u76f8\u4f3c\u7684\u5927\u5c0f\uff0c$n/s$\u662f\u7b2c\u4e00\u6b21\u53d8\u5316\u65f6\u7684\u8f93\u51fa\u901a\u9053\u6570\u76ee\uff09\\n>\\n> $$\\n> \\\\begin{aligned}\\n> r_{s} &=\\\\frac{n \\\\cdot h^{\\\\prime} \\\\cdot w^{\\\\prime} \\\\cdot c \\\\cdot k \\\\cdot k}{\\\\frac{n}{s} \\\\cdot h^{\\\\prime} \\\\cdot w^{\\\\prime} \\\\cdot c \\\\cdot k \\\\cdot k+(s-1) \\\\cdot \\\\frac{n}{s} \\\\cdot h^{\\\\prime} \\\\cdot w^{\\\\prime} \\\\cdot d \\\\cdot d} \\\\\\\\\\n> &=\\\\frac{c \\\\cdot k \\\\cdot k}{\\\\frac{1}{s} \\\\cdot c \\\\cdot k \\\\cdot k+\\\\frac{s-1}{s} \\\\cdot d \\\\cdot d} \\\\approx \\\\frac{s \\\\cdot c}{s+c-1} \\\\approx s\\n> \\\\end{aligned}\\n> $$\\n> **where $d \\\\times d$ has the similar magnitude as that of $k \\\\times k$, and $s \\\\ll c$. Similarly, the compression ratio can be calculated as**\\n> $$\\n> r_{c}=\\\\frac{n \\\\cdot c \\\\cdot k \\\\cdot k}{\\\\frac{n}{s} \\\\cdot c \\\\cdot k \\\\cdot k+(s-1) \\\\cdot \\\\frac{n}{s} \\\\cdot d \\\\cdot d} \\\\approx \\\\frac{s \\\\cdot c}{s+c-1} \\\\approx s,\\n> $$\\n> \u5f0f\u5b504\u4e3a\u7406\u8bba\u7684\u52a0\u901f\u6bd4\u516c\u5f0f \uff0c\u53ef\u4ee5\u770b\u51fa\u76f8\u8f83\u4e8e\u666e\u901a\u7684\u5377\u79ef\uff0cghostnet\u7684\u538b\u7f29\u6bd4\u4f8b\u90fd\u662fs\uff0c\u4e14$s<< c $  \u6240\u4ee5\uff0c\u53ef\u4ee5\u770b\u51faghostnet\u7684\u8ba1\u7b97\u91cf\u7f29\u51cf\u57fa\u4e8e\u81ea\u5df1\u5b9a\u4e49\u7684s\u53c2\u6570\uff0c\u4e14\u81ea\u5b9a\u4e49\u7684**s\u4e00\u822c\u8fdc\u5c0f\u4e8ec**\\n>\\n> \u5f0f\u5b505\u4e3a\u7406\u8bba\u7684\u538b\u7f29\u6bd4\u516c\u5f0f\uff0c\u8be5\u5f0f\u5b50\u662f\u5229\u7528\u521a\u521a\u63d0\u51fa\u7684Ghost module\u52a0\u901f\u6bd4\u800c\u751f\u6210\u7684\\n\\n---\\n\\n# Ghost Bottlenecks\\n\\n> *\u9b3c\u8116\u5b50\uff01*\\n>\\n> ![image-20210511144002644](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212338.png)\\n\\n---\\n\\n## \u529f\u80fd\u5b9e\u73b0\\n\\n![image-20210511144840545](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212317.png)\\n\\n> Ghost Bottleneck(G-bneck)\u4e0eresidual block\u7c7b\u4f3c\uff0c\u4e3b\u8981\u662f\u4e24\u4e2aGhost\u6a21\u5757\u5806\u53e0\u4e8c\u6b21\u5f62\u6210\uff0c**\u5148\u5347\u7ef4\u540e\u964d\u7ef4**\u800c\u4e0d\u662f\u5e38\u89c1\u7684\u5148\u964d\u7ef4\u540e\u5347\u7ef4\\n>\\n> \u7b2c\u4e00\u4e2a\u6a21\u5757\u4f5c\u4e3a\u4e00\u4e2a\u6269\u5c55\u5c42\uff0c\u589e\u52a0\u4e86\u901a\u9053\u7684\u6570\u91cf(\u589e\u52a0\u7279\u5f81\u7ef4\u5ea6)\uff0c\u6211\u4eec\u5c06\u8f93\u51fa\u901a\u9053\u6570\u4e0e\u8f93\u5165\u901a\u9053\u6570\u7684\u6bd4\u503c(\u589e\u5927\u7684\u6bd4\u4f8b)\u79f0\u4e3a**\u6269\u5c55\u6bd4 / expansion ration**\uff0c\\n>\\n> \u800c\u7b2c\u4e8c\u4e2a\u6a21\u5757\u51cf\u5c11\u4e86\u4e0e\u5feb\u6377\u8def\u5f84\u5339\u914d\u7684\u901a\u9053\u6570\u91cf(\u51cf\u5c11\u7279\u5f81\u7ef4\u5ea6 / \u901a\u9053\u6570)\uff0c\u4f7f\u5176\u4e0eshortcut\u4e00\u81f4\uff0c\u7136\u540e\u4e0e\u8f93\u5165\u76f8\u52a0\uff0c\\n>\\n> \u4e4b\u540e\u5728\u8fd9\u4e24\u4e2aGhost\u6a21\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u8fde\u63a5\u5feb\u6377\u65b9\u5f0f\u3002\u6bcf\u4e00\u5c42\u540e\u5e94\u7528\u6279\u5904\u7406\u6807\u51c6\u5316(BN)\u548cReLU\u975e\u7ebf\u6027\u5904\u7406\uff0c\u9664\u4e86\u6ca1\u6709\u5728\u7b2c\u4e8c\u4e2aGhost\u6a21\u5757\u540e\u4f7f\u7528ReLU\u5176\u4ed6\u90fd\u4f7f\u7528\u4e86Relu\u5904\u7406\uff0c\\n>\\n> G-bneck\u5305\u542bstride=1\u548cstride=2\u7248\u672c\uff0c\u5bf9\u4e8estride=2\uff0cshortcut\u8def\u5f84\u4f7f\u7528\u4e0b\u91c7\u6837\u5c42\uff0c\u5e76\u5728Ghost\u6a21\u5757\u4e2d\u95f4\u63d2\u5165stride=2\u7684\u6df1\u5ea6\uff08depthwise\uff09\u5377\u79ef\\n>\\n> \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e3a\u4e86\u52a0\u901f\u63d0\u9ad8\u6548\u7387\uff0c\u4e24\u4e2aGhost\u6a21\u5757\u4e4b\u95f4\u63d2\u5165\u7684\u662f\u70b9\uff08pointwise\uff09\u5377\u79ef\\n\\n---\\n\\n## GhostNet \u7ec4\u6210\\n\\n> G-bneck\u8868\u793aGhost Bottleneck\u3002#exp\u8868\u793a\u6269\u5c55\u5927\u5c0f\u3002#out\u8868\u793a\u8f93\u51fa\u901a\u9053\u7684\u6570\u91cf\u3002SE\u8868\u793a\u662f\u5426\u4f7f\u7528SE\u6a21\u5757\\n\\n![image-20210511151351577](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212315.png)\\n\\n* \u5206\u6790\uff1a\\n\\n  \u57fa\u4e8eMobileNetV3\u7684\u67b6\u6784\u4f18\u52bf\uff0c\u4f7f\u7528Ghost Bottleneck\u53d6\u4ee3\u4e86MobileNetV3\u4e2d\u7684Bottleneck\u3002GhostNet\u4e3b\u8981\u7531Ghost Bottleneck\u7ec4\u6210\uff0c\u4ee5Ghost module\u4f5c\u4e3a\u6784\u5efa\u5757\u3002\u7b2c\u4e00\u5c42\u662f\u6807\u51c6\u7684\u5377\u79ef\u5c42\uff0c\u670916\u4e2a\u6ee4\u6ce2\u5668\uff0c\u7136\u540e\u662f\u4e00\u7cfb\u5217Ghost\u74f6\u9888\uff0c\u901a\u9053\u9010\u6e10\u589e\u52a0\u3002\u6839\u636e\u8f93\u5165\u7279\u6027\u6620\u5c04\u7684\u5927\u5c0f\uff0c\u8fd9\u4e9bGhost Bottleneck\u88ab\u5206\u4e3a\u4e0d\u540c\u7684\u9636\u6bb5\u3002\u6240\u6709Ghost Bottleneck\u90fd\u662f\u5728stride=1\u7684\u60c5\u51b5\u4e0b\u5e94\u7528\u7684\uff0c\u9664\u4e86\u6bcf\u4e2a\u9636\u6bb5\u7684\u6700\u540e\u4e00\u4e2aBottleneck\u662fstride=2\u3002\u6700\u540e\u5229\u7528\u5168\u5c40\u5e73\u5747\u6c60\u5316\u548c\u5377\u79ef\u5c42\u5c06\u7279\u5f81\u6620\u5c04\u8f6c\u6362\u4e3a1280\u7ef4\u7684\u7279\u5f81\u5411\u91cf\u8fdb\u884c\u6700\u7ec8\u5206\u7c7b\u3002\u6324\u538b\u548c\u6fc0\u52b1(SE)\u6a21\u5757\u4e5f\u5e94\u7528\u4e8e\u4e00\u4e9b\u91cd\u5f71\u74f6\u9888\u4e2d\u7684\u6b8b\u4f59\u5c42\uff0c\u5982\u56fe\uff0c\u76f8\u5bf9\u4e8eMobileNetV3\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528hard-swish \u51fd\u6570\uff08\u56e0\u4e3a\u5176\u9ad8\u5ef6\u8fdf\uff09\u3002\u8be5\u4f53\u7cfb\u7ed3\u6784\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u672c\u7684\u8bbe\u8ba1\u53c2\u8003\uff0c\u4f46\u8fdb\u4e00\u6b65\u7684\u8d85\u53c2\u6570\u8c03\u6574\u6216\u57fa\u4e8eGhost module\u7684\u81ea\u52a8\u4f53\u7cfb\u7ed3\u6784\u641c\u7d22\uff0c\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6027\u80fd\u3002\\t\\n\\n---\\n\\n* Width Multiplier\\n\\n  \u5373\u4f7f\u4e0a\u56fe\u4e2d\u7684GhostNet\u7ed3\u6784\u5df2\u7ecf\u5f88\u9ad8\u6548\uff0c\u4f46\u5728\u67d0\u4e9b\u7279\u5b9a\u573a\u666f\u4e0b\u4ecd\u7136\u9700\u8981\u9700\u8981\u5bf9\u6a21\u578b\u8fdb\u884c\u8c03\u6574\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u03b1\u5bf9\u6bcf\u5c42\u7684\u7ef4\u5ea6\u8fdb\u884c\u6269\u7f29\uff08\u5728\u6bcf\u4e00\u5c42\u7684\u901a\u9053\u4e0a\u90fd\u4e58\u4e00\u4e2a\u56e0\u5b50$\u03b1$\uff09\uff0c$\u03b1$\u88ab\u79f0\u4e3a**width multiplier**\uff0c\u4f7f\u7528\u03b1\u7684GhostNet\u8868\u793a\u4e3aGhostNet-\u03b1\xd7\u3002\u6a21\u578b\u5927\u5c0f\u4e0e\u8ba1\u7b97\u91cf\u5927\u7ea6\u4e3a$a^2$\u500d\uff0c\u901a\u5e38\uff0c\u8f83\u5c0f\u7684\u03b1\u5bfc\u81f4\u8f83\u4f4e\u7684\u5ef6\u8fdf\u548c\u8f83\u4f4e\u7684\u6027\u80fd\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\\n\\n* \u6211\u7684\u60f3\u6cd5\uff1a\\n\\n  GhostNet\u51cf\u5c11\u4e86\u53c2\u6570\u91cf\uff0c\u4f1a\u751f\u6210\u7684\u76f8\u4f3c\u7279\u5f81\u56fe\uff0c\uff08\u6216\u8bb8\uff09\u53ef\u4ee5\u8fbe\u5230\u66f4\u5f3a\u7684\u6cdb\u5316\u6027\uff0c\u4f46\u662f\u7cbe\u5ea6\u8fd8\u662f\u4f1a\u6709\u6240\u4e0b\u964d\\n\\n  \u65e2\u7136\u5728ghostnet\u4e2d\u7cbe\u5ea6\u4f1a\u4e0b\u964d\uff0c\u90a3\u5982\u679c\u4f7f\u7528\u81ea\u5e26\u7684\u03b1\uff08\u5bbd\u5ea6\u56e0\u5b50\uff09\u4e14\uff08\u03b1>1\uff09\u662f\u5426\u53ef\u4ee5\u505a\u5230\u4fdd\u6301\u751a\u81f3\u63d0\u9ad8\u6027\u80fd\u7684\u540c\u65f6\u964d\u4f4e\u5ef6\u8fdf\\n\\n  \u672c\u8eabGhostNet\u662f\u4f1a\u964d\u4f4e\u5ef6\u8fdf\u7684\uff0c\u800c\u653e\u5f03\u4e00\u70b9\u964d\u4f4e\u6548\u679c\uff0c\u4e4b\u540e\u8c03\u5927\u5bbd\u5ea6\u56e0\u5b50\uff0c\u6216\u8bb8\u53ef\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u6548\u679c\u5462\\n\\n---\\n\\n## GhostNet\u2014\u2014Experiments\\n\\n**\u8d85\u53c2\u6570\u5206\u6790**\\n\\n  Ghost\u6a21\u5757\u6709\u4e24\u4e2a\u8d85\u53c2\u6570\uff0c\u5206\u522b\u662f\u4e0a\u9762\u8bf4\u7684\uff53\uff0c\u4ea7\u751f\uff4d\uff1d\uff4e\uff0f\uff53\u56fa\u6709\u7279\u5f81\u56fe\u4ee5\u53ca\u53c2\u6570d\uff0c\u7ebf\u6027\u6620\u5c04\u4e2d\u7684\u5377\u79ef\u6838\uff44\uff58\uff44\u7684\u5927\u5c0f\u3002\\n\\n  \u8fd9\u4e24\u4e2a\u53c2\u6570\u7684\u5f71\u54cd\uff0c\u662f\u5728VGG\uff11\uff16\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u5b9e\u9a8c\u7684\u3002\\n\\n  \u9996\u5148\u56fa\u5b9a\uff53\uff1d\uff12\uff0c\u7136\u540e\u6d4b\u8bd5\uff44\uff1d\uff5b\uff11\uff0c\uff13\uff0c\uff15\uff0c\uff17\uff5d\uff0c\u56fe6\u88683\u7684\u7ed3\u679c\u662f\u7f51\u7edc\u5728CIFAR-\uff11\uff10\u4e0a\u7684\u8868\u73b0\uff0c\u53ef\u4ee5\u770b\u51fa\uff44\uff1d\uff13\u7684\u8868\u73b0\u6700\u597d\uff0c\u8fd9\u662f\u56e0\u4e3a\uff11\uff58\uff11\u7684\u5377\u79ef\u6838\u65e0\u6cd5\u5728\u7279\u5f81\u56fe\u4e0a\u5f15\u5165\u7a7a\u95f4\u4fe1\u606f\uff0c\u800c\uff44\u4e3a\uff15\u6216\u8005\u662f\uff17\u5bfc\u81f4\u4e86\u8fc7\u62df\u5408\u6838\u66f4\u5927\u7684\u8ba1\u7b97\u91cf\uff0c\u56e0\u6b64\uff0c\u4f5c\u8005\u91c7\u53d6\uff44\uff1d\uff13\u6765\u8fdb\u884c\u63a5\u4e0b\u6765\u7684\u6709\u6548\u6027\u548c\u6548\u7387\u7684\u5b9e\u9a8c\u3002\\n\\n  \u63a5\u4e0b\u6765\u662f\u56fa\u5b9a\uff44\uff1d\uff13\uff0c\u7136\u540e\u6d4b\u8bd5\uff53\uff1d\uff5b\uff12\uff0c\uff13\uff0c\uff14\uff0c\uff15\uff5d\u3002\u5b9e\u9645\u4e0a\uff0c\uff53\u76f4\u63a5\u5173\u7cfb\u5230\u8ba1\u7b97\u91cf\u548c\u7f51\u7edc\u7684\u8868\u73b0\uff0c\u56e0\u4e3a\u5927\u7684\uff53\u5bfc\u81f4\u4e86\u66f4\u5927\u7684\u538b\u7f29\u548c\u52a0\u901f\u6bd4\u4f8b\uff0c\u7ed3\u679c\u663e\u793a\uff0c\u5f53\u589e\u52a0\uff53\u65f6\uff0c\u65e0\u8bba\u662f\u901f\u5ea6\u8fd8\u662f\u51c6\u786e\u7387\u90fd\u51fa\u73b0\u4e0b\u964d\uff0c\u5f53\uff53\u4e3a\uff12\u65f6\uff0c\u4ee3\u8868\u7740VGG\uff11\uff16\u88ab\u538b\u7f29\u4e86\u4e24\u500d\uff0c\u4f5c\u8005\u63d0\u51fa\u7684\u65b9\u6cd5\u8868\u73b0\u6bd4VGG\uff11\uff16\u8fd8\u8981\u597d\u4e00\u70b9\uff0c\u4f53\u73b0\u51faGhost\u6a21\u5757\u7684\u4f18\u8d8a\u6027\u3002\\n\\n---\\n\\n**\u4e0eSOTA\u5bf9\u6bd4**\\n\\n  ![image-20210511155841426](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212312.png)\\n\\n  \u4f5c\u8005\u5c06VGG16\u548cResNet56\u4e0eSOTA\u7684\u538b\u7f29\u6a21\u578b\u5728CIFAR10\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4f5c\u8005\u7684\u6a21\u578b\u53ef\u4ee5\u5728\u8fbe\u5230\u66f4\u9ad8\u7684\u51c6\u786e\u7387\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u7f51\u7edc\u7684\u63a8\u7406\u901f\u5ea6\\n\\n---\\n\\n**\u5c06Ghost\u751f\u6210\u7684\u7279\u5f81\u56fe\u53ef\u89c6\u5316**\\n\\n  ![image-20210511160945341](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210511160945.png)\\n\\n  \u5c3d\u7ba1\u751f\u6210\u7684\u7279\u5f81\u56fe\u90fd\u662f\u57fa\u4e8e\u540c\u4e00\u4e2a\u7279\u5f81\u56fe\u4ea7\u751f\u7684\uff0c\u4f46\u662f\u5b83\u4eec\u4e4b\u95f4\u786e\u5b9e\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u5982\u56fe\u3002\u8fd9\u610f\u5473\u7740\u751f\u6210\u7684\u7279\u5f81\u66f4\u52a0\u7684\u7075\u6d3b\u591a\u53d8\uff0c\u53ef\u4ee5\u6ee1\u8db3\u7279\u5b9a\u4efb\u52a1\u7684\u9700\u6c42\u3002\uff08**\u8fd9\u91cc\u53ef\u4ee5\u770b\u51faGhost\u5176\u5b9e\u4f7f\u5f97\u540c\u4e00\u4e2a\u7279\u5f81\u56fe\u4e2d\u4e0d\u540c\u901a\u9053\u5305\u542b\u4e86\u4e0d\u540c\u7684\u7279\u5f81\u4fe1\u606f\uff0c\u589e\u5f3a\u4e86\u6a21\u578b\u7684\u8868\u73b0\u529b**\uff09\u3002\\n\\n---\\n\\n## ImageNet\u4e0a\u7684\u5206\u7c7b\u8868\u73b0\\n\\n![image-20210511163851455](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212256.png)\\n\\n![image-20210511163941831](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212404.png)\\n\\n![image-20210511162523436](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210511162523.png)\\n\\n> \u4f7f\u7528k = 1\uff0cs = 2 \uff0cd = 3 \u7684GhostNet\uff0c\u4e0d\u540c\u7684\u6a21\u578b\u5927\u5c0f\u4f7f\u7528\u4e0d\u540c\u7684*\u03b1*\u503c\u8fdb\u884c\u8c03\u6574\\n\\n\u4f5c\u8005\u6309\u7167FLOPs\u7684\u6570\u91cf\u7ea7\u5c06\u56fe7\u4e2d\u7684\u8868\u683c\u5206\u4e3a\u4e86\u56db\u7c7b\uff0c\u4f8b\u5982~50\uff0c~150\uff0c200-300\u7b49\u3002\u4ece\u7ed3\u679c\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u5e38\u8f83\u5927\u7684FLOP\u5728\u8fd9\u4e9b\u5c0f\u578b\u7f51\u7edc\u4e2d\u4f1a\u5bfc\u81f4\u66f4\u9ad8\u7684\u51c6\u786e\u6027\uff0c\u8fd9\u8868\u660e\u4e86\u5b83\u4eec\u7684\u6709\u6548\u6027\u3002\u6574\u4f53\u800c\u8a00\uff0cGhostNet\u6700\u8f7b\u91cf\u4e14\u51c6\u786e\u7387\u6700\u9ad8\uff0c\u5728\u5404\u79cd\u8ba1\u7b97\u590d\u6742\u5ea6\u7ea7\u522b\u4e0a\u59cb\u7ec8\u4f18\u4e8e\u5176\u4ed6\u7684\u5bf9\u6bd4\u7f51\u7edc\uff0c\u56e0\u4e3aGhostNet\u5728\u5229\u7528\u8ba1\u7b97\u8d44\u6e90\u751f\u6210\u7279\u5f81\u56fe\u65b9\u9762\u66f4\u52a0\u6709\u6548\u3002\\n\\n---\\n\\n## \u76ee\u6807\u68c0\u6d4b\\n\\n![image-20210511163620621](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212407.png)\\n\\n>  \u5728one-stage\u548ctwo-stage\u68c0\u6d4b\u7b97\u6cd5\u4e0a\uff0cGhostNet\u80fd\u964d\u4f4e\u5927\u90e8\u5206\u8ba1\u7b97\u91cf\uff0c\u800cmAP\u4e0e\u5176\u5b83\u4e3b\u5e72\u7f51\u7edc\u5dee\u4e0d\u591a\\t\\t\\n\\n\u200b\\t\u4e3a\u4e86\u8fdb\u4e00\u6b65\u8bc4\u4f30GhostNet\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u4f5c\u8005\u5728MS COCO\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e86\u76ee\u6807\u68c0\u6d4b\u5b9e\u9a8c\u3002 \u4f5c\u8005\u5c06\u62c6\u5206\u51fa\u6765\u7684trainval35k\u4f5c\u4e3a\u8bad\u7ec3\u6570\u636e\uff0c\u4ee5mAP\u4f5c\u4e3a\u8bc4\u4ef7\u7684\u6307\u6807\u3002\u4f5c\u8005\u91c7\u7528\u4e86 \u5177\u6709\u7279\u5f81\u91d1\u5b57\u5854\u7f51\u7edc\uff08FPN\uff09\u7684\u4e24\u9636\u6bb5Faster R-CNN \u548c\u4e00\u9636\u6bb5\u7684RetinaNet \u6765\u4f5c\u4e3a\u5b9e\u9a8c\u7684\u6846\u67b6\uff0c\u800cGhostNet\u88ab\u7528\u6765\u4f5c\u4e3a\u7279\u5f81\u63d0\u53d6\u5668\u3002 \u4f5c\u8005\u4f7f\u7528\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u662f\u5728ImageNet\u4e0a\u4f7f\u7528SGD\u8bad\u7ec312\u4e2aepochs\u7684\u6a21\u578b\uff0c\u5c06\u8f93\u5165\u56fe\u50cf\u7684\u5927\u5c0f\u8c03\u6574\u4e3a800\u7684\u77ed\u8fb9\u548c\u4e0d\u8d85\u8fc71333\u7684\u957f\u8fb9\u3002 \u4e0a\u56fe\u5c55\u793a\u4e86\u68c0\u6d4b\u7ed3\u679c\uff0c\u5176\u4e2dFLOP\u662f\u4f7f\u7528224\xd7224\u5c3a\u5bf8\u7684\u8f93\u5165\u56fe\u50cf\u8ba1\u7b97\u51fa\u6765\u7684\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660eGhostNet\u5927\u5927\u964d\u4f4e\u4e86\u8ba1\u7b97\u6210\u672c\uff0c\u65e0\u8bba\u5728RetinaNet\u8fd8\u662f\u5728Faster R-CNN\u6846\u67b6\u4e0a\uff0c\u90fd\u53ef\u4ee5\u8fbe\u5230\u4e0eMobileNetV2\u548cMobileNetV3\u76f8\u540c\u6c34\u51c6\u7684mAP\\n\\n---\\n\\n# Conclusion\\n\\n\u4e3a\u4e86\u51cf\u5c11\u795e\u7ecf\u7f51\u7edc\u7684\u8ba1\u7b97\u6d88\u8017\uff0c\u8bba\u6587\u63d0\u51faGhost\u6a21\u5757\u6765\u6784\u5efa\u9ad8\u6548\u7684\u7f51\u7edc\u7ed3\u679c\u3002\u8be5\u6a21\u5757\u5c06\u539f\u59cb\u7684\u5377\u79ef\u5c42\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5148\u4f7f\u7528\u66f4\u5c11\u7684\u5377\u79ef\u6838\u6765\u751f\u6210\u5c11\u91cf\u5185\u5728\u7279\u5f81\u56fe\uff0c\u7136\u540e\u901a\u8fc7\u7b80\u5355\u7684\u7ebf\u6027\u53d8\u5316\u64cd\u4f5c\u6765\u8fdb\u4e00\u6b65\u9ad8\u6548\u5730\u751f\u6210ghost\u7279\u5f81\u56fe\u3002\u4ece\u5b9e\u9a8c\u6765\u770b\uff0c\u5bf9\u6bd4\u5176\u5b83\u6a21\u578b\uff0cGhostNet\u7684\u538b\u7f29\u6548\u679c\u6700\u597d\uff0c\u4e14\u51c6\u786e\u7387\u4fdd\u6301\u4e5f\u5f88\u4e0d\u9519\uff0c\u503c\u5f97\u5b66\u4e60\u3002\\n\\n---\\n\\n# \u9644\u8a00\\n\\n> \u8fd8\u6709\u4e00\u4e2a\u5f88\u5f3a\u5927\u7684\u8f7b\u91cf\u7ea7\u4e3b\u5e72\u7f51\u7edc\uff0c\u5176\u6548\u679c\u6781\u5f3a\uff0c\u6bd4ghostnet\u5f3a\uff0c\u53ea\u662f\u6ca1\u6709\u5f00\u6e90\uff0c\u540d\u4e3aMicroNet\\n>\\n> ![image-20210511164928585](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212409.png)\\n\\n# \u9b3c\u9b3c\uff01\\n\\n> *\u9b3c\u9b3c\uff01*\\n>\\n> ![image-20210511145048076](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210511145048.png)"},{"id":"/[50]Kindling-the-Darkness-A-Practical-Low-light-Image-Enhancer","metadata":{"permalink":"/blog/[50]Kindling-the-Darkness-A-Practical-Low-light-Image-Enhancer","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[50]Kindling-the-Darkness-A-Practical-Low-light-Image-Enhancer.md","source":"@site/blog/[50]Kindling-the-Darkness-A-Practical-Low-light-Image-Enhancer.md","title":"Kindling the Darkness - A Practical Low-light Image Enhancer","description":"\u7814\u7a76\u80cc\u666f\uff1a","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"low-light","permalink":"/blog/tags/low-light"}],"readingTime":11.1,"hasTruncateMarker":true,"authors":[{"name":"RuoMengAwA","title":"\u4e00\u4e2a\u559c\u6b22\u6478\u9c7c\u7684\u83dc\u72d7\uff0c\u76ee\u524d\u4e3b\u8981\u505a\u4f4e\u7167\u5ea6\u589e\u5f3a\u65b9\u5411\u7684\u7814\u7a76","url":"https://github.com/RuoMengAwA","imageURL":"https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220116171846.jpg","key":"ruomeng"}],"frontMatter":{"title":"Kindling the Darkness - A Practical Low-light Image Enhancer","authors":["ruomeng"],"tags":["low-light"]},"prevItem":{"title":"GhostNet - More Features from Cheap Operations","permalink":"/blog/[49]GhostNet-More-Features-from-Cheap-Operations"},"nextItem":{"title":"How much Position Information Do Convolutional Neural Networks Encode?","permalink":"/blog/[51]How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode"}},"content":"## \u7814\u7a76\u80cc\u666f\uff1a\\n\\n\u5bf9\u4e8e\u4e00\u5f20\u4f4e\u5149\u56fe\u50cf\uff0c\u4e0d\u4ec5\u662f\u6697\uff0c\u800c\u4e14\u4e5f\u4f1a\u4f34\u968f\u7740\u566a\u58f0\u548c\u989c\u8272\u5931\u771f\u7b49\u591a\u65b9\u9762\u7684\u56fe\u50cf\u529f\u80fd\u9000\u5316\uff0c\u6240\u4ee5\u4ec5\u4ec5\u63d0\u9ad8\u4eae\u5ea6\u5c06\u65e0\u53ef\u907f\u514d\u7684\u63d0\u9ad8\u4eba\u5de5\u4ea7\u751f\u7684\u5f71\u54cd\uff0c\u5fc5\u7136\u4f1a\u653e\u5927\u9690\u85cf\u7684\u4f2a\u5f71\\n\\n***\\n\\n## \u7279\u70b9\uff1a\\n\\n\u8fd8\u662f\u4eceretinex\u7406\u8bba\u4e2d\u5f97\u5230\u7684\u542f\u53d1\uff0c\u7ee7\u800c\u5c06\u5f31\u5149\u56fe\u50cf\u5206\u89e3\u4e3a\u5149\u7167\uff08**illumination**\uff09\u548c \u53cd\u5c04\u7387\uff08**reflectance**\uff09\uff1b\u524d\u8005\u8d1f\u8d23\u4eae\u5ea6\u8c03\u6574\uff0c\u540e\u8005\u7528\u4e8e\u53bb\u9664\u964d\u8d28\uff08\u566a\u58f0\uff0c\u989c\u8272\u5931\u771f\uff09\u3002\u8fd9\u6837\u56fe\u50cf\u5206\u89e3\u7684\u597d\u5904\u662f\u8ba9\u6bcf\u4e00\u4e2a\u6a21\u5757\u53ef\u4ee5\u66f4\u597d\u5730\u88ab\u6b63\u89c4\u5316/\u5b66\u4e60\\n\\n\u800c\u5bf9\u4e8e\u8f93\u5165\u56fe\u50cf\uff0c\u8be5\u7f51\u7edc\u53ea\u9700\u8981\u4f7f\u7528\u4e24\u5f20\u4e0d\u540c\u66dd\u5149\u6761\u4ef6\u4e0b\u7684\u56fe\u50cf\uff08\u5373\u4f7f\u4ed6\u4eec\u662f\u4e24\u5f20\u5f31\u5149\u56fe\u50cf\u4e5f\u53ef\u4ee5\uff09\uff0c\u800c\u4e0d\u662f\u5f31\u5149\u56fe\u50cf\u548c\u771f\u5b9e\u56fe\u50cf\uff08\u8fd9\u6837\u7684\u597d\u5904\u662f\uff0c\u5f88\u96be\u5b9a\u4e49\u591a\u4eae\u7684\u56fe\u50cf\u7b97\u662f\u771f\u5b9e\u56fe\u50cf\uff09\\n\\n\u5bf9\u4e8e\u4e25\u91cd\u7684\u89c6\u89c9\u7f3a\u9677\u56fe\u7247\u4e5f\u4f9d\u65e7\u62e5\u6709\u5f88\u5f3a\u7684\u9c81\u68d2\u6027\\n\\n***\\n\\n## \u6548\u679c\uff1a\\n\\n\u6a21\u578b\u57282080Ti\u4e0b\u7684\u8bad\u7ec3\u901f\u5ea6\u4e3a\uff0c\u5904\u7406\u4e00\u5f20VGA\u5206\u8fa8\u7387\u56fe\u7247\u82b1\u8d39\u7684\u65f6\u95f4\u4e0d\u523050ms\\n\\n\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u7684\u8c03\u8282\u5149\u7167\u6c34\u5e73\uff08\u6682\u65f6\u6ca1\u770b\u5230\u5728\u54ea\u4f53\u73b0\uff09\\n\\n\u5177\u4f53\u6548\u679c\u5c55\u793a\uff08\u5b9e\u673a\u6d4b\u8bd5\uff09\uff1a\\n\\n\u4e0d\u540c\u566a\u5ea6\uff1a\\n\\n> \u9ad8\u5149\u56fe\u50cf\u548c\u4f4e\u5149\u56fe\u50cf\u5bf9\u7167\uff08\u4e0d\u540c\u7684\uff09\\n\\n![image-20210802180913986](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212643.png)\\n\\n\\n\\n\u53ef\u4ee5\u5f97\u51fa\uff0cKinD\u5728\u591a\u6761\u4ef6\u4e0b\uff0c\u6548\u679c\u6682\u65f6\u90fd\u4f18\u4e8e\u5176\u4ed6\u4f4e\u7167\u5ea6\u4f18\u5316\u7b97\u6cd5\uff08\u6700\u4e3b\u8981\u7684\u662f\u6548\u679c\u771f\u5b9e\uff0c\u76f8\u8f83\u4e8e\u5176\u4f59\u7b97\u6cd5\uff0c\u5931\u771f\u7684\u60c5\u51b5\u4f1a\u5927\u5927\u51cf\u5c11\uff08\u4e0d\u8fc7\u73b0\u5728\u8fd8\u6709\u4e00\u4e2aKinD++\uff09\uff09\\n\\n\x3c!--truncate--\x3e\\n\\n***\\n\\n## \u89e3\u51b3\u95ee\u9898\\n\\n* How to effectively estimate the illumination component\\n  from a single image, and flexibly adjust light levels?\\n\\n> \u5982\u4f55\u4ece\u5355\u4e2a\u56fe\u50cf\u4e2d\u6709\u6548\u5730\u4f30\u8ba1\u7167\u660e\u5206\u91cf\uff0c\u5e76\u7075\u6d3b\u5730\u8c03\u6574\u4eae\u5ea6\uff1f\\n\\n* How to remove the degradations like noise and color dis-\\n  tortion previously hidden in the darkness after lightening\\n  up dark regions?\\n\\n> \u5982\u4f55\u6d88\u9664\u9ed1\u6697\u548c\u56e0\u4e3a\u9ed1\u6697\u800c\u9690\u85cf\u7684\u8272\u5f69\u5931\u771f\uff1f\\n\\n* How to train a model without well-defined ground-truth\\n  light conditions for low-light image enhancement by only\\n  looking at two/several different examples?\\n\\n> \u5982\u4f55\u4ec5\u901a\u8fc7\u67e5\u770b\u4e24\u4e2a/\u591a\u4e2a\u4e0d\u540c\u7684\u793a\u4f8b\uff0c\u5728\u6ca1\u6709\u660e\u786e\u7684ground-truth\u5149\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u8bad\u7ec3\u6a21\u578b\u4ee5\u8fdb\u884c\u5fae\u5149\u56fe\u50cf\u589e\u5f3a\uff1f \\n\\n***\\n\\n## \u5dee\u5f02 \\n\\n\u76f8\u8f83\u4e8e\u4e4b\u524d\u6211\u4eec\u6240\u89c1\u5230\u7684Retinex-net\uff0c\u5176\u5728\u5206\u89e3\u56fe\u4e0a\u7684\u89c2\u70b9\u6709\u6240\u4e0d\u540c\uff0cRetinex-net\u8ba4\u4e3a\u5728\u4e0d\u540c\u7167\u5ea6\u4e0b\uff0c\u5171\u4eab\u4e00\u81f4\u7684\u53cd\u5c04\u7387\uff0c\u800cKinD\u7684\u7406\u8bba\u8ba4\u4e3a\uff0c\u5728\u4e0d\u540c\u7167\u5ea6\u6761\u4ef6\u4e0b\uff0c\u53cd\u5c04\u56fe\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u5f31\u5149\u56fe\u50cf\u4f1a\u5728\u9ed1\u6697\u4e2d\u9000\u5316\uff08\u6216\u8005\u8bf4\u8d8a\u662f\u9ed1\u6697\u9000\u5316\u8d8a\u4e25\u91cd\uff09\u8fd9\u79cd\u9000\u5316\u88ab\u8f6c\u79fb\u5230\u4e86\u53cd\u5c04\u56fe\u4e2d\uff0c\u5c31\u9020\u6210\u4e86\u4fe1\u606f\u7684\u4e22\u5931\uff0c\u800c\u5728\uff08\u76f8\u5bf9\uff09\u660e\u4eae\u7684\u56fe\u4e2d\u7684\u53cd\u5c04\u7387\u53ef\u4ee5\u4f5c\u4e3a\u9000\u5316\u5f31\u5149\u56fe\u50cf\u7684\u53c2\u8003\uff08ground-truth\uff09\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\uff0c\u8be5\u7f51\u7edc\u8fd8\u5b66\u4e60\u4e86\u53cd\u5c04\u56fe\u7684\u9000\u5316\uff08\u4f18\u5316\u70b9\uff09\\n\\n***\\n\\n## \u7f51\u7edc\u7ed3\u6784\\n\\n ![image-20210730100054384](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212649.png)\\n\\n***\\n\\n## Illumination Guided Reflectance Restoration\uff08\u5149\u7167\u5f15\u5bfc\u53cd\u5c04\u6062\u590d\uff09\\n\\n\u4ece\u6570\u5b66\u4e0a\u6765\u8bb2\uff0c\u5bf9\u4e8e\u4e00\u5f20\u56fe\u7247\u5e94\u8be5\u88ab\u8868\u73b0\u4e3a\uff1a\\n\\n$$\\n\\\\mathbf{I}=\\\\mathbf{R} \\\\circ \\\\mathbf{L}+\\\\mathbf{E}\\n$$\\n\\n> \u5176\u4e2d E \u88ab\u8868\u73b0\u4e3a\u9000\u5316\u7684\u90e8\u5206\\n\\n\u7ecf\u8fc7\u4e00\u4e9b\u6570\u5b66\u7684\u4ee3\u6570\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\n\\n$$\\n\\\\mathbf{I}=\\\\mathbf{R} \\\\circ \\\\mathbf{L}+\\\\mathbf{E}=\\\\tilde{\\\\mathbf{R}} \\\\circ \\\\mathbf{L}=(\\\\mathbf{R}+\\\\tilde{\\\\mathbf{E}}) \\\\circ \\\\mathbf{L}=\\\\mathbf{R} \\\\circ \\\\mathbf{L}+\\\\tilde{\\\\mathbf{E}} \\\\circ \\\\mathbf{L}\\n$$\\n\u5176\u4e2d$ \\\\tilde{\\\\mathbf{R}}$\u8868\u793a\u4e3a\u88ab\u6c61\u67d3\uff08\u9000\u5316\uff09\u7684\u53cd\u5c04\u7387\uff0c$ \\\\tilde{\\\\mathbf{E}}$\u8868\u793a\u5149\u7167\u89e3\u8026\u7684\u9000\u5316\\n\\n> **PS**\uff1a\u53cd\u5c04\u7387 **reflectance** \u7684\u6062\u590d\u4e0d\u80fd\u5728\u6574\u4e2a\u56fe\u50cf\u4e0a\u8fdb\u884c\u5747\u5300\u5904\u7406\uff0c\u800c\u5149\u7167\u56fe **illumination** \u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5f88\u597d\u7684\u5411\u5bfc\u8d77\u5230\u6307\u5f15\u4f5c\u7528\\n>\\n> \u4e0d\u4ece\u5f31\u5149\u56fe\u50cf$I$\u4e2d\u76f4\u63a5\u53bb\u9664\u566a\u58f0$E$\u7684\u539f\u56e0\uff1a1.\u5931\u8861\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u56fe\u50cf\u4e2d\u7684\u7ec6\u8282\u548c\u566a\u58f0\u6df7\u5728\u4e00\u8d77  2.\u53bb\u566a\u6ca1\u6709\u5408\u9002\u7684\u53c2\u8003\u56fe\u50cf\\n\\n\\n\\n***\\n\\n## Arbitrary Illumination Manipulation\uff08\u83b7\u5f97\u4efb\u610f\u5149\u7167\u6761\u4ef6\u4e0b\u7684\u56fe\uff09\\n\\n\u4e0d\u540c\u7684\u60c5\u51b5\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684\u56fe\uff0c\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u4e3a\u4efb\u610f\u7167\u660e\u64cd\u4f5c\u63d0\u4f9b\u63a5\u53e3\uff0c\u5728\u5404\u4e2a\u6587\u732e\u4e2d\uff0c\u589e\u5f3a\u5149\u7167\u6761\u4ef6\u7684\u4e09\u79cd\u4e3b\u8981\u65b9\u6cd5\u662f**\u805a\u53d8**\u3001**\u5149\u7ea7\u6307\u5b9a**\u548c**\u4f3d\u9a6c\u6821\u6b63**\u3002\u7531\u4e8e\u56fa\u5b9a\u7684\u878d\u5408\u6a21\u5f0f\uff0c\u57fa\u4e8e\u878d\u5408\u7684\u65b9\u6cd5\u7f3a\u4e4f\u5149\u7ebf\u8c03\u8282\u529f\u80fd\u3002\u5982\u679c\u91c7\u7528**\u5149\u7ea7\u6307\u5b9a**\uff0c\u8bad\u7ec3\u6570\u636e\u96c6\u5fc5\u987b\u5305\u542b\u5177\u6709\u76ee\u6807\u7ea7\u522b\u7684\u56fe\u50cf\uff0c\u8fd9\u9650\u5236\u4e86\u5176\u7075\u6d3b\u6027\u3002\u5bf9\u4e8e**\u4f3d\u9a6c\u6821\u6b63**\uff0c\u867d\u7136\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u7684\u4f3d\u9a6c\u503c\u6765\u5b9e\u73b0\u76ee\u6807\uff0c\u4f46\u5b83\u53ef\u80fd\u65e0\u6cd5\u53cd\u6620\u4e0d\u540c\u5149\u7ebf\uff08\u66dd\u5149\uff09\u6c34\u5e73\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u672c\u6587\u63d0\u5021\u4ece**\u771f\u5b9e\u6570\u636e\u4e2d\u5b66\u4e60\u7075\u6d3b\u7684\u6620\u5c04\u51fd\u6570**\uff0c\u8be5\u51fd\u6570\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u4efb\u610f\u7ea7\u522b\u7684\u5149\u7167/\u66dd\u5149\u3002\\n\\n***\\n\\n## \u7f51\u7edc\u5185\u90e8\\n\\n### Layer Decomposition Net\\n\\n![image-20210802194606413](https://xiaomai-aliyunoss.oss-cn-shenzhen.aliyuncs.com/img/20220117212656.png)\\n\\n\u635f\u5931\u51fd\u6570\u7684\u5b9a\u4e49\uff08[\u501f\u9274\u535a\u5ba2](https://blog.csdn.net/u014546828/article/details/106833284/)\uff09\uff1a\\n\\n* **reflectance similarity** \uff1a\u5bf9\u4e8e\u5f3a\u5149\u56fe\u50cf\u548c\u5f31\u5149\u56fe\u50cf\uff0c\u4e8c\u8005\u7684\u53cd\u5c04\u7387\u662f\u8fd1\u4f3c\u76f8\u540c\u7684\uff08\u5982\u679c\u4e0d\u8003\u8651\u9000\u5316\u7684\u8bdd\uff09\uff0c\u56e0\u6b64\u5c06\u53cd\u5c04\u7387\u6b63\u5219\u5316\u7684\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1a\\n\\n$$\\n\\\\mathcal{L}_{r s}^{L D}:=\\\\left\\\\|\\\\mathbf{R}_{l}-\\\\mathbf{R}_{h}\\\\right\\\\|_{2}^{2}\\n$$\\n\\n* **illumination smoothness** \uff1a\u524d\u9762\u5206\u6790\u8fc7\uff0c\u5149\u7167\u56fe\u50cf\u53ef\u4ee5\u7528\u8f93\u5165\u56fe\u50cf\u8fdb\u884c\u5f15\u5bfc\uff0c\u5728\u8f93\u5165\u56fe\u50cf\u5f3a\u8fb9\u7f18\u533a\uff0c\u5149\u7167\u53d1\u751f\u8f83\u5927\u53d8\u5316\uff1b\u5728\u5f31\u8fb9\u7f18\u533a\uff0c\u5149\u7167\u53ef\u4ee5\u8ba4\u4e3a\u4e5f\u662f\u5e73\u6ed1\u7684\uff0c\u56e0\u6b64\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e3a:\\n\\n$$\\n\\\\mathcal{L}_{i s}^{L D}:=\\\\left\\\\|\\\\frac{\\\\nabla \\\\mathbf{L}_{l}}{\\\\max \\\\left(\\\\left|\\\\nabla \\\\mathbf{I}_{l}\\\\right|, \\\\epsilon\\\\right)}\\\\right\\\\|_{1}+\\\\left\\\\|\\\\frac{\\\\nabla \\\\mathbf{L}_{h}}{\\\\max \\\\left(\\\\left|\\\\nabla \\\\mathbf{I}_{h}\\\\right|, \\\\epsilon\\\\right)}\\\\right\\\\|_{1}\\n$$\\n\\n* \u6ce8\u610f\u5230\uff0c\u5f53$\\\\nabla I$\u5927\u65f6\uff08\u8fb9\u7f18\uff09\uff0c\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u503c\u5f88\u5c0f\uff0c\u6b64\u65f6\u5bf9$\\\\nabla L$ \u7684\u7ea6\u675f\u8f83\u8f7b\uff1b\u5f53$\\\\nabla I$\u8f83\u5c0f\u65f6\uff08\u5e73\u6ed1)\uff0c\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u503c\u589e\u5927\uff0c\u6b64\u65f6\u8981\u6c42$\\\\nabla L$\u5fc5\u987b\u5f88\u5c0f\uff0c\u624d\u80fd\u51cf\u5c0f\u635f\u5931\u51fd\u6570\u503c\u3002\u8fd9\u6837\uff0c\u5149\u7167\u56fe\u50cf$L$\u5c31\u548c\u8f93\u5165\u56fe\u50cf$I$  \u6709\u4e00\u4e2a\u76f8\u5173\u7684\u7ed3\u6784\\n\\n* **mutual consistency** \uff1a\u5b9a\u4e49\u4e3a\\n\\n$$\\n\\\\mathcal{L}_{m c}^{L D}:=\\\\|\\\\mathbf{M} \\\\circ \\\\exp (-c \\\\cdot \\\\mathbf{M})\\\\|_{1}\\n$$\\n\\n$$\\n\\\\mathbf{M}:=\\\\left|\\\\nabla \\\\mathbf{L}_{l}\\\\right|+\\\\left|\\\\nabla \\\\mathbf{L}_{h}\\\\right|\\n$$\\n\\n  \uff08\u8fd9\u91cc\u6709\u70b9\u4e0d\u7406\u89e3\u539f\u7406\uff0c\u771f\u7684\u4e0d\u592a\u660e\u767d\u5b83\u7684\u610f\u601d,\u5927\u6982\u5c31\u662f\u8feb\u4f7f\u8feb\u4f7f$[L_l,L_h]$\u5176\u4e2d\u4e00\u4e2a\u548c\u53e6\u4e00\u4e2a\u76f8\u8fd1)\\n\\n* **reconstruction error** \uff1a\u5373\u751f\u6210\u7684$[R_l,R_h]\u548c[L_l,L_h]$\u53cd\u8fc7\u6765\u5408\u6210\u7684\u4e24\u4e2a\u65b0\u56fe\uff0c\u5e94\u5206\u522b \u4e0e$[I_l,I_h]$\u200b\u76f8\u4f3c\uff0c\u5373 \\n\\n* $$\\n  \\\\mathcal{L}_{\\\\text {rec }}^{L D}:=\\\\left\\\\|\\\\mathbf{I}_{l}-\\\\mathbf{R}_{l} \\\\circ \\\\mathbf{L}_{l}\\\\right\\\\|_{1}+\\\\left\\\\|\\\\mathbf{I}_{h}-\\\\mathbf{R}_{h} \\\\circ \\\\mathbf{L}_{h}\\\\right\\\\|_{1}\\n  $$\\n\\n\u56fe\u5c42\u5206\u89e3\u7f51\u7edc\u7684\u7ed3\u6784\uff1a\\n\\n1. **reflectance branch** \uff1a5-layer U-Net + a conv layer + Sigmoid \uff1b\\n\\n2. **illumination branch** \uff1atwo \uff08conv+ReLU layers\uff09 + a conv layer\uff08\u7ea7\u8054\u4ece reflectance branch \u6765\u7684\u7279\u5f81\u56fe\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u4ece\u5149\u7167\u4e2d\u6392\u9664\u7eb9\u7406\uff09+ Sigmoid\uff1b\\n\\n***\\n\\n### Reflectance Restoration Net\\n\\n![image-20210802205648721](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210802205648.png)\\n\\n1. **\u7f51\u7edc\u7684\u539f\u5219\u662f**\uff1a\u91c7\u7528\u8f83\u6e05\u6670\u7684\u53cd\u5c04\u7387\u4f5c\u4e3a\u8f83\u6742\u4e71\u7684\u53cd\u5c04\u7387\u7684\u53c2\u8003\u3002\\n\\n2. **\u635f\u5931\u51fd\u6570**\uff1a\\n\\n$$\\n\\\\mathcal{L}^{R R}:=\\\\left\\\\|\\\\hat{\\\\mathbf{R}}-\\\\mathbf{R}_{h}\\\\right\\\\|_{2}^{2}-\\\\operatorname{SSIM}\\\\left(\\\\hat{\\\\mathbf{R}}, \\\\mathbf{R}_{h}\\\\right)+\\\\left\\\\|\\\\nabla \\\\hat{\\\\mathbf{R}}-\\\\nabla \\\\mathbf{R}_{h}\\\\right\\\\|_{2}^{2}\\n$$\\n\\n3. **\u7f51\u7edc\u7ed3\u6784**\uff1aU-Net \uff08\u66f4\u591a\u5c42\uff09\\n\\n4. \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4ec0\u4e48\u53cd\u5c04\u7387\u6062\u590d\u7f51\u7edc\u8fd8\u8981\u5f15\u5165\u4eae\u5ea6\u56fe\u50cf\uff0c\u8fd9\u662f\u56e0\u4e3a\uff0c\u524d\u9762\u8bf4\u8fc7\uff0c\u566a\u58f0\u548c\u989c\u8272\u5931\u771f\u6700\u4e3b\u8981\u51fa\u73b0\u5728\u5f31\u5149\u7167\u7684\u533a\u57df\uff0c\u5373\u8870\u51cf\u7684\u5206\u5e03\u4f9d\u8d56\u4e8e\u7167\u660e\u5206\u5e03\u3002\u56e0\u6b64\uff0c\u5c06\u5149\u7167\u4fe1\u606f\u4e0e\u53cd\u5c04\u7cfb\u6570\u964d\u4f4e\u4e00\u8d77\u5e26\u5165\u6062\u590d\u7f51\u4e2d\\n\\n5. \u4f20\u7edf\u7684 BM3D \u4f1a\u4f7f\u56fe\u50cf\u51fa\u73b0\u6a21\u7cca\u73b0\u8c61\u3002\u800c\u672c\u6587\u4e2d\u6062\u590d\u7684\u65b9\u6cd5\uff0c\u53ef\u4fdd\u6301\u56fe\u50cf\u7684\u6e05\u6670\u548c\u9510\u5316\u3002\\n\\n***\\n\\n###  Illumination Adjustment Net\\n\\n![image-20210802210223832](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210802210223.png)\\n\\n1. **\u53c2\u6570$\\\\alpha$\u200b**\uff1a\u7531\u4e8e\u7ed9\u5b9a\u7684\u4e24\u4e2a\u56fe\u50cf\u662f\u76f8\u5bf9\u5f3a\u5f31\u7684\u3002\u90a3\u4e48\uff0c\u8f93\u51fa\u7684\u56fe\u50cf\uff0c\u662f\u4ee5\u5f3a\u5149\u56fe\u50cf\u4e3a\u76ee\u6807\u5462\uff0c\u8fd8\u662f\u4ee5\u5f31\u5149\u56fe\u50cf\u4e3a\u76ee\u6807\u5462\uff1f\u5982\u679c\u7528\u6237\u662f\u60f3\u5c06\u5f31\u5149\u56fe\u50cf\u5f3a\u5316\uff0c\u5c31\u8bbe\u7f6e\u5f3a\u5149\u56fe\u50cf\u4e3a\u76ee\u6807\uff0c\u53cd\u4e4b\uff0c\u4ee5\u5f31\u5149\u56fe\u50cf\u4e3a\u76ee\u6807\u3002\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u6839\u636e\u7528\u6237\u9700\u6c42\u800c\u81ea\u5df1\u8bbe\u7f6e\u3002\u600e\u4e48\u8bbe\u7f6e\u5462\uff1f\u5c31\u662f\u901a\u8fc7\u53c2\u6570$\\\\alpha = mean(L_t/L_s)$\u200b\u6765\u5b9e\u73b0\u3002\u5176\u4e2d\uff0c$L_t$\u8868\u793a\u76ee\u6807\u56fe\u50cf,$L_s$\u8868\u793a\u539f\u56fe\u50cf\uff08\u4f8b\u5982\uff0c\u82e5\u5bf9\u5f31\u5149\u56fe\u50cf\u5f3a\u5316,\u5219$L_t = L_h,L_s=L_t$\uff09\u3002\\n\\n2. **\u4eae\u5ea6\u8c03\u5242\u7f51\u7edc\u7ed3\u6784**\uff1a **two \uff08conv+ReLu \uff09+ one conv + Sigmoid** \u3002\u6ce8\u610f\u5230  \u88ab\u6269\u5c55\u4e3a\u4e00\u4e2a\u7279\u5f81\u56fe\uff0c\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u7684\u4e00\u90e8\u5206\u3002\\n\\n3. **\u4eae\u5ea6\u8c03\u5242\u635f\u5931\u51fd\u6570**\uff1a\\n\\n$$\\n\\\\mathcal{L}^{I A}:=\\\\left\\\\|\\\\hat{\\\\mathbf{L}}-\\\\mathbf{L}_{t}\\\\right\\\\|_{2}^{2}+\\\\left\\\\||\\\\nabla \\\\hat{\\\\mathbf{L}}|-\\\\left|\\\\nabla \\\\mathbf{L}_{t}\\\\right|\\\\right\\\\|_{2}^{2}\\n$$\\n\\n\u200b\\t\u5373\u8f93\u51fa\u56fe\u50cf$\\\\hat{L}$\u5e94\u548c\u76ee\u6807\u56fe\u50cf\u76f8\u4f3c\uff0c\u4e14\u8fb9\u7f18\u4e5f\u76f8\u4f3c\u3002\\n\\n4. **\u4e0e$\\\\gamma$\u200b\u53d8\u6362\u7684\u5bf9\u6bd4**\uff1a\u5bf9\u6bd4\u5b9e\u9a8c\u5305\u62ec\u4eae\u5ea6\u964d\u4f4e\uff08\u4ee5\u5f31\u5149\u56fe\u50cf\u4e3a\u76ee\u6807\uff09\u548c\u4eae\u5ea6\u63d0\u5347\uff08\u4ee5\u5f3a\u5149\u56fe\u50cf\u4e3a\u76ee\u6807\uff09\u4e24\u4e2a\u65b9\u9762\u3002\u4e3a\u4e86\u66f4\u6e05\u6670\u8bf4\u660e\u60c5\u51b5\uff0c(f)-(k) \u7684\u66f2\u7ebf\u56fe\u7ed9\u51fa\u4e86\u5404\u4e2a\u56fe\u50cf\u4e2d\u8fd9\u4e09\u5217\u50cf\u7d20\u7684\u66f2\u7ebf\u5bf9\u6bd4\u3002\\n\\n![image-20210802212401964](https://gitee.com/ruomengawa/pic-go/raw/master/img/20210802212402.png)\\n\\n\u4ece (f)-(h) \u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8e\u4eae\u5ea6\u964d\u4f4e\u60c5\u51b5\u4e2d\uff0c\u5728\u76f8\u5bf9\u660e\u4eae\u7684\u533a\u57df\uff0cKinD \u5b66\u4e60\u7684\u65b9\u5f0f\u5728\u5f3a\u5ea6\u4e0a\u6bd4  \u53d8\u6362\u51cf\u5c11\u66f4\u591a\uff0c\u800c\u5728\u9ed1\u6697\u7684\u533a\u57df\u51cf\u5c11\u8f83\u5c0f\u6216\u4e0e  \u53d8\u6362\u5dee\u4e0d\u591a\u76f8\u540c\u3002\\n\\n\u4ece (i)-(k) \u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8e\u4eae\u5ea6\u63d0\u5347\u60c5\u51b5\u4e2d\uff0cKinD \u65b9\u6cd5\u5728\u76f8\u5bf9\u6697\u7684\u533a\u57df\u5bf9\u5149\u7684\u589e\u5f3a\u5c0f\u4e8e  \u53d8\u6362\uff0c\u800c\u5728\u660e\u4eae\u7684\u533a\u57df\u7684\u5149\u5f3a\u8c03\u6574\u6bd4  \u53d8\u6362\u589e\u52a0\u66f4\u591a\u6216\u5dee\u4e0d\u591a\u76f8\u540c\u3002\\n\\n\u603b\u4e4b\uff0cKinD \u7684\u65b9\u6cd5\u5728\u4eae\u5ea6\u8c03\u8282\u4e0a\uff0c\u6bd4$\\\\gamma$\u53d8\u6362\u5f97\u5230\u7684\u4eae\u5ea6\u5bf9\u6bd4\u5ea6\u66f4\u9ad8\u3002\\n\\n5. \u4f5c\u8005\u6700\u540e\u6307\u51fa\uff0c\u4eae\u5ea6\u8c03\u8282\u53ef\u4ee5\u901a\u8fc7\u8c03\u8282$\\\\alpha$\u5b9e\u73b0,$\\\\alpha$\u662f\u53c2\u4e0e\u7f51\u7edc\u8bad\u7ec3\u7684,$\\\\alpha$\u88ab\u6269\u5c55\u4e3a\u4e00\u4e2a\u7279\u5f81\u56fe\uff0c\u4f5c\u4e3a\u7f51\u7edc\u8f93\u5165\u7684\u4e00\u90e8\u5206\u3002\u4f8b\u5982\uff0c\u5f53$L_t=L_h,L_s=L_t$ \u8bbe\u7f6e$\\\\alpha = 2$ \uff0c\u8868\u793a\u56fe\u50cf\u7684\u4eae\u5ea6\u589e\u52a0 2 \u500d\u3002"},{"id":"/[51]How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode","metadata":{"permalink":"/blog/[51]How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[51]How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode.md","source":"@site/blog/[51]How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode.md","title":"How much Position Information Do Convolutional Neural Networks Encode?","description":"Md Amirul Islam, Sen Jia, Neil D. B. Bruce","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"inductive-bias","permalink":"/blog/tags/inductive-bias"},{"label":"positional-encoding","permalink":"/blog/tags/positional-encoding"}],"readingTime":18.02,"hasTruncateMarker":true,"authors":[{"name":"Gavin Gong","title":"Rubbish CVer | Poor LaTex speaker | Half stack developer | \u952e\u5708\u8eba\u5c38\u7816\u5bb6","url":"https://gong.host","email":"gavin@gong.host","imageURL":"https://github.yuuza.net/visualDust.png","key":"visualdust"}],"frontMatter":{"title":"How much Position Information Do Convolutional Neural Networks Encode?","authors":["visualdust"],"tags":["inductive-bias","positional-encoding"]},"prevItem":{"title":"Kindling the Darkness - A Practical Low-light Image Enhancer","permalink":"/blog/[50]Kindling-the-Darkness-A-Practical-Low-light-Image-Enhancer"},"nextItem":{"title":"Axiomatic Attribution for Deep Networks","permalink":"/blog/[52]Axiomatic-Attribution-for-Deep-Networks"}},"content":"[Md Amirul Islam](https://arxiv.org/search/cs?searchtype=author&query=Islam%2C+M+A), [Sen Jia](https://arxiv.org/search/cs?searchtype=author&query=Jia%2C+S), [Neil D. B. Bruce](https://arxiv.org/search/cs?searchtype=author&query=Bruce%2C+N+D+B)\\n\\n> In contrast to fully connected networks, Convolutional Neural Networks (CNNs) achieve efficiency by learning weights associated with local filters with a finite spatial extent. An implication of this is that a filter may know what it is looking at, but not where it is positioned in the image. Information concerning absolute position is inherently useful, and it is reasonable to assume that deep CNNs may implicitly learn to encode this information if there is a means to do so. In this paper, we test this hypothesis revealing the surprising degree of absolute position information that is encoded in commonly used neural networks. A comprehensive set of experiments show the validity of this hypothesis and shed light on how and where this information is represented while offering clues to where positional information is derived from in deep CNNs.\\n\\n`Comments`: Accepted to ICLR 2020\\n\\n## \u5f15\u8a00\\n\u7ecf\u5178CNN\u6a21\u578b\u88ab\u8ba4\u4e3a\u662f`spatially-agnostic`\u7684\uff0c\u56e0\u6b64\u80f6\u56ca\u7f51\u7edc\u6216\u5faa\u73af\u7f51\u7edc\u5df2\u88ab\u7528\u4e8e\u5efa\u6a21\u5b66\u4e60\u7279\u5f81\u5c42\u5185\u7684\u76f8\u5bf9\u7a7a\u95f4\u5173\u7cfb\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695aCNN\u662f\u5426\u6355\u83b7\u4e86\u5728\u4f4d\u7f6e\u76f8\u5173\u4efb\u52a1\u4e2d\u91cd\u8981\u7684\u7edd\u5bf9\u7a7a\u95f4\u4fe1\u606f\uff08\u4f8b\u5982\u8bed\u4e49\u5206\u5272\u548c\u663e\u8457\u5bf9\u8c61\u68c0\u6d4b\uff09\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u88ab\u786e\u5b9a\u4e3a\u6700\u663e\u8457\u7684\u533a\u57df\u503e\u5411\u4e8e\u9760\u8fd1\u56fe\u50cf\u4e2d\u5fc3\u3002\u5728\u88c1\u526a\u8fc7\u56fe\u50cf\u4e0a\u505a\u663e\u8457\u6027\u68c0\u6d4b\u65f6\uff0c\u5373\u4f7f\u89c6\u89c9\u7279\u5f81\u6ca1\u6709\u6539\u53d8\uff0c\u6700\u663e\u8457\u7684\u533a\u57df\u4e5f\u4f1a\u79fb\u52a8\u3002\\n\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220215235439.png)\\n\\n\u5728\u8fd9\u7bc7\u6587\u4e2d\uff0c\u7814\u7a76\u4e86\u7edd\u5bf9\u4f4d\u7f6e\u7684\u4f5c\u7528\u901a\u8fc7\u6267\u884c\u4e00\u7cfb\u5217\u968f\u673a\u5316\u6d4b\u8bd5\uff0c\u5047\u8bbeCNN\u786e\u5b9e\u53ef\u4ee5\u5b66\u4e60\u5230\u7f16\u7801\u4f4d\u7f6e\u4fe1\u606f\u4f5c\u4e3a\u51b3\u7b56\u7ebf\u7d22\uff0c\u4ece\u800c\u83b7\u5f97\u4f4d\u7f6e\u4fe1\u606f\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u4f4d\u7f6e\u4fe1\u606f\u662f\u901a\u8fc7\u5e38\u7528\u7684\u586b\u5145\u64cd\u4f5c\uff08\u96f6\u586b\u5145\uff09\u9690\u5f0f\u5b66\u4e60\u7684\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## CNN\u4e2d\u7684\u4f4d\u7f6e\u4fe1\u606f\\n\\nCNN\u4f1a\u5728\u65e9\u671f\u5377\u79ef\u9636\u6bb5\u5c1d\u8bd5\u63d0\u53d6\u7cbe\u7ec6\u7684\u9ad8\u7a7a\u95f4\u9891\u7387\u7ec6\u8282\uff08\u4f8b\u5982\u8fb9\u7f18\u3001\u7eb9\u7406\u3001\u7ebf\u6761\uff09\uff0c\u800c\u5728\u7f16\u7801\u7684\u6700\u6df1\u5c42\uff0c\u7f51\u7edc\u4ea7\u751f\u6700\u4e30\u5bcc\u7684\u7c7b\u522b\u7279\u5b9a\u7279\u5f81\u8868\u793a\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u4e2a\u5047\u8bbe\uff0c\u5373\u4f4d\u7f6e\u4fe1\u606f\u9690\u5f0f\u7f16\u7801\u5728\u63d0\u53d6\u7684\u7279\u5f81\u6620\u5c04\u4e2d\uff0c\u5e76\u5728\u4ece\u89c6\u89c9\u573a\u666f\u4e2d\u5206\u7c7b\u3001\u68c0\u6d4b\u6216\u5206\u5272\u5bf9\u8c61\u65f6\u8d77\u7740\u91cd\u8981\u4f5c\u7528\u3002\u4e0b\u9762\u7ed9\u51fa\u7814\u7a76\u95ee\u9898\u7684\u6570\u5b66\u5b9a\u4e49\u3002\\n\\n**\u95ee\u9898\u8868\u8ff0\uff1a** \u7ed9\u5b9a\u4e00\u4e2a\u8f93\u5165\u56fe\u50cf$I_m\\\\in R^{h\\\\times w\\\\times 3}$\uff0c\u76ee\u6807\u662f\u9884\u6d4b\u4e00\u4e2a\u7c7b\u4f3c\u68af\u5ea6\u7684\u4f4d\u7f6e\u4fe1\u606f\u63a9\u6a21${\\\\hat{f}}_p\\\\in R^{h\\\\times w}$\uff0c\u5176\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u503c\u5b9a\u4e49\u4e86\u7edd\u5bf9\u5750\u6807\uff0c\u50cf\u7d20\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u4e0a\u5230\u4e0b\u3002\u6211\u4eec\u751f\u6210\u7c7b\u4f3c\u68af\u5ea6\u7684\u63a9\u6a21$G_{pos}\\\\in R^{h\\\\times w}$\u7528\u4e8e\u5b9e\u9a8c\u4e2d\u7684\u76d1\u7763\uff0c\u57fa\u672cCNN\u539f\u578b\u7f51\u7edc\u7684\u6743\u91cd\u662f\u56fa\u5b9a\u7684\u3002\\n\\n### \u4f4d\u7f6e\u7f16\u7801\u7f51\u7edc\\n\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216001140.png)\\n\\n\u4f4d\u7f6e\u7f16\u7801\u7f51\u7edc\uff08`PosENet`\uff09\u7531\u4e24\u4e2a\u5173\u952e\u7ec4\u4ef6\u7ec4\u6210\uff1a\u4e00\u4e2a\u524d\u9988\u5377\u79ef\u7f16\u7801\u5668\u7f51\u7edc$f_{enc}$\u548c\u4e00\u4e2a\u7b80\u5355\u7684\u4f4d\u7f6e\u7f16\u7801\u6a21\u5757$f_{pem}$\u3002\u7f16\u7801\u5668\u7f51\u7edc\u4ece\u8f83\u6d45\u5c42\u5230\u8f83\u6df1\u5c42\u63d0\u53d6\u4e0d\u540c\u62bd\u8c61\u7ea7\u522b\u7684\u7279\u5f81\u3002\u4f4d\u7f6e\u7f16\u7801\u6a21\u5757\u5c06\u6765\u81ea\u7f16\u7801\u5668\u7f51\u7edc\u7684\u591a\u5c3a\u5ea6\u7279\u5f81\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u5728\u6700\u540e\u9884\u6d4b\u7edd\u5bf9\u4f4d\u7f6e\u4fe1\u606f\u3002\\n\\n**\u7f16\u7801\u5668\uff1a** \u4f7f\u7528\u57fa\u4e8e`ResNet`\u548c`VGG`\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u901a\u8fc7**\u5220\u9664\u5e73\u5747\u6c60\u5c42**\u548c\u5206\u914d\u7c7b\u522b\u7684\u5c42\u6765\u6784\u5efa\u7f16\u7801\u5668\u7f51\u7edc$f_{enc}$\uff0c\u5373\u4e0a\u9762\u7070\u8272\u7684\u90e8\u5206\uff0c\u7f16\u7801\u5668\u6a21\u5757\u7531\u4e94\u4e2a\u7279\u5f81\u63d0\u53d6\u5757\u7ec4\u6210\uff0c\u7528\uff08$f^1\\\\vartheta$\u3001$f^2\\\\vartheta$\u3001$f^3\\\\vartheta$\u3001$f^4\\\\vartheta$\u3001$f^5\\\\vartheta$\uff09\u8868\u793a\u3002\u4ece\u6807\u51c6\u7f51\u7edc\u7684\u5e95\u5c42\u5230\u9876\u5c42\u63d0\u53d6\u7684\u591a\u5c3a\u5ea6\u7279\u5f81\u7528\uff08$f^1pos$\u3001$f^2pos$\u3001$f^3pos$\u3001$f^4pos$\u3001$f^5pos$\uff09\u8868\u793a\u3002\u603b\u7ed3\u5982\u4e0b\uff1a\\n\\n$$\\nf^ipos=f^i\\\\vartheta(\\\\mathbf{W}_{a}*\\\\mathcal{I}_{m})\\n$$\\n\\n\u5176\u4e2d$\\\\mathbf{W}_{a}$\u8868\u793a\u88ab\u51bb\u7ed3\u7684\u6743\u91cd\uff0c$*$\u8868\u793a\u5377\u79ef\u8fd0\u7b97\u3002\u6ce8\u610f\uff0c\u5728\u7f16\u7801\u7f51\u7edc\u65f6\uff0c\u53ea\u6709\u4f4d\u7f6e\u7f16\u7801\u6a21\u5757$f_{pem}$\u88ab\u8bad\u7ec3\u6210\u4e13\u6ce8\u4e8e\u63d0\u53d6\u4f4d\u7f6e\u4fe1\u606f\uff0c\u800c\u7f16\u7801\u5668\u7f51\u7edc\u88ab\u5f3a\u5236\u4fdd\u6301\u5176\u73b0\u6709\u6743\u91cd\u3002\\n\\n**\u4f4d\u7f6e\u7f16\u7801\u6a21\u5757\uff1a** \u4f4d\u7f6e\u7f16\u7801\u6a21\u5757\u5c06$f_{enc}$\u7684\u591a\u5c3a\u5ea6\u7279\u5f81\uff08$f^1pos$\u3001$f^2pos$\u3001$f^3pos$\u3001$f^4pos$\u3001$f^5pos$\uff09\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u901a\u8fc7\u8f6c\u6362\u51fd\u6570$\\\\mathcal{T}_{pos}$\u751f\u6210\u6240\u9700\u7684\u4f4d\u7f6e\u6620\u5c04${\\\\hat{f}}_p$\u3002\u8f6c\u6362\u51fd\u6570$\\\\mathcal{T}_{pos}$\u9996\u5148\u5728\u7279\u5f81\u56fe\u4e0a\u5e94\u7528\u53cc\u7ebf\u6027\u63d2\u503c\u64cd\u4f5c\uff0c\u4f7f\u5176\u5177\u6709\u76f8\u540c\u7684\u7a7a\u95f4\u7ef4\u5ea6\uff0c\u4ece\u800c\u751f\u6210\u7279\u5f81\u56fe$f^c_{pos}$\u3002\u7136\u540e\u8fdb\u884c\u4e00\u7cfb\u5217$k\\\\times k$\u5377\u79ef\u64cd\u4f5c\u3002\u5728\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5728$\\\\{1,3,5,7\\\\}$\u4e4b\u95f4\u6539\u53d8$k$\u7684\u503c\uff0c\u5e76\u4e14\u5927\u591a\u6570\u5b9e\u9a8c\u662f\u5728\u4f4d\u7f6e\u7f16\u7801\u6a21\u5757$f_{pem}$\u4e2d\u4f7f\u7528\u5355\u4e2a\u5377\u79ef\u5c42\u8fdb\u884c\u7684\u3002\u5173\u952e\u64cd\u4f5c\u53ef\u6982\u62ec\u5982\u4e0b\uff1a\\n\\n$$\\nf^cpos=(f^1pos\\\\oplus \\\\cdots \\\\oplus f^5pos ) \\\\qquad \\\\hat{f}_{p}=(\\\\mathbf{W}^cpos*f^cpos)\\n$$\\n\\n\u5f0f\u4e2d\uff0c$W^c_{pos}$\u662f\u4e0e\u8f6c\u6362\u51fd\u6570$\\\\mathcal{T}_{pos}$\u76f8\u5173\u7684\u53ef\u8bad\u7ec3\u6743\u91cd\u3002\\n\\n\u7f16\u7801\u6a21\u5757\u7684\u4e3b\u8981\u76ee\u6807\u662f\u9a8c\u8bc1\u5728\u5206\u7c7b\u6807\u7b7e\u4e0a\u8bad\u7ec3\u65f6\u662f\u5426\u9690\u5f0f\u5b66\u4e60\u4f4d\u7f6e\u4fe1\u606f\u3002\u6b64\u5916\uff0c\u4f4d\u7f6e\u7f16\u7801\u6a21\u5757\u5bf9\u9690\u542b\u7684\u4f4d\u7f6e\u4fe1\u606f\u548c\u68af\u5ea6\u72b6\u771f\u503c\u63a9\u6a21\u4e4b\u95f4\u7684\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21\u3002**\u5982\u679c\u7279\u5f81\u56fe\u4e2d\u6ca1\u6709\u7f16\u7801\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5219\u8f93\u51fa\u9884\u8ba1\u4e3a\u968f\u673a\u8f93\u51fa\uff0c\u53cd\u4e4b\u4ea6\u7136\uff08\u5ffd\u7565\u56fe\u50cf\u5185\u5bb9\u7684\u4efb\u4f55\u6307\u5bfc\uff09\u3002**\\n\\n### \u5408\u6210\u6570\u636e\u548c\u771f\u503c\u751f\u6210\\n\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216003321.png)\\n\\n\u4e3a\u4e86\u9a8c\u8bc1\u7f51\u7edc\u4e2d\u4f4d\u7f6e\u4fe1\u606f\u7684\u5b58\u5728\u6027\uff0c\u6211\u4eec\u901a\u8fc7\u6307\u5b9a\u4e00\u4e2a\u6807\u51c6\u5316\u68af\u5ea6\u4f4d\u7f6e\u56fe\u4f5c\u4e3a\u771f\u503c\u6765\u6267\u884c\u968f\u673a\u5316\u6d4b\u8bd5\uff08**\u68af\u5ea6\u4e00\u8bcd\u6765\u8868\u793a\u50cf\u7d20\u5f3a\u5ea6\uff0c\u800c\u4e0d\u662f\u53cd\u5411\u4f20\u64ad\u4e2d\u7684\u68af\u5ea6**\uff09\u3002\u6211\u4eec\u9996\u5148\u5728\u6c34\u5e73\uff08**H**\uff09\u548c\u5782\u76f4\uff08**V**\uff09\u65b9\u5411\u751f\u6210\u7c7b\u4f3c\u68af\u5ea6\u7684\u906e\u7f69\u3002\u540c\u6837\uff0c\u6211\u4eec\u5e94\u7528\u9ad8\u65af\u6ee4\u6ce2\u5668\u6765\u8bbe\u8ba1\u53e6\u4e00\u79cd\u771f\u503c\u56fe\uff0c\u9ad8\u65af\u5206\u5e03\uff08**G**\uff09\u3002\u751f\u6210\u8fd9\u4e09\u79cd\u6a21\u5f0f\u7684\u5173\u952e\u52a8\u673a\u662f\u9a8c\u8bc1\u6a21\u578b\u662f\u5426\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e2a\u6216\u4e24\u4e2a\u8f74\u4e0a\u7684\u7edd\u5bf9\u4f4d\u7f6e\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u521b\u5efa\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u91cd\u590d\u6a21\u5f0f\uff0c\u6c34\u5e73\u548c\u5782\u76f4\u6761\u7eb9\uff08**HS**\uff0c**VS**\uff09\u3002\u65e0\u8bba\u5176\u65b9\u5411\u5982\u4f55\uff0c\u591a\u7ea7\u7279\u5f81\u4e2d\u7684\u4f4d\u7f6e\u4fe1\u606f\u90fd\u53ef\u80fd\u901a\u8fc7\u7f16\u7801\u6a21\u5757$f_{pem}$\u7684\u8f6c\u6362\u8fdb\u884c\u5efa\u6a21\u3002\u6ce8\u610f\u8fd9\u91cc\u8bbe\u8ba1\u7684\u68af\u5ea6\u771f\u503c\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u968f\u673a\u6807\u7b7e\uff0c\u56e0\u4e3a\u8f93\u5165\u56fe\u50cf\u548c\u771f\u503c\u4e4b\u95f4\u6ca1\u6709\u4f4d\u7f6e\u76f8\u5173\u6027\u3002\u7531\u4e8e\u4f4d\u7f6e\u4fe1\u606f\u7684\u63d0\u53d6\u4e0e\u56fe\u50cf\u5185\u5bb9\u65e0\u5173\uff0c\u56e0\u6b64\u53ef\u4ee5\u9009\u62e9\u4efb\u4f55\u56fe\u50cf\u6570\u636e\u96c6\u3002\\n\\n### \u8bad\u7ec3\u7f51\u7edc\\n\\n\u901a\u8fc7\u5747\u65b9\u5dee\u635f\u5931\uff0c\u8fdb\u884c\u76d1\u7763\\n\\n$$\\n\\\\Delta_{\\\\hat{f}_p}=\\\\frac{1}{2n}(x_{i}-y_{i})^2\\n$$\\n\u5176\u4e2d$x\\\\in R^n$\u548c$y\\\\in R^n$\uff08n\u8868\u793a\u7a7a\u95f4\u5206\u8fa8\u7387\uff09\u5206\u522b\u662f\u77e2\u91cf\u5316\u7684\u9884\u6d4b\u4f4d\u7f6e\u56fe\u548c\u771f\u503c\u56fe\u3002$x_{i}$\u548c$y_{i}$\u5206\u522b\u662f${\\\\hat{f}}_p$\u548c$G^h_{pos}$\u7684\u4e00\u4e2a\u50cf\u7d20\u3002\\n\\n## \u7ed3\u8bba\\n\\n### \u4f4d\u7f6e\u4fe1\u606f\u5b58\u5728\\n\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216003952.png)\\n\\n\u4e0a\u88681\u6240\u793a\uff0c`PosENet\uff08VGG\u548cResNet\uff09`\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4ece\u9884\u8bad\u7ec3\u7684CNN\u6a21\u578b\u4e2d\u63d0\u53d6\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5c24\u5176\u662f\u57fa\u4e8e`ResNet`\u7684`PosENet`\u6a21\u578b\u3002\u7136\u800c\uff0c\u5355\u72ec\u8bad\u7ec3`PosENet\uff08PosENet\uff09`\u5728\u4e0d\u540c\u7684\u6a21\u5f0f\u548c\u6e90\u56fe\u50cf\u4e2d\u83b7\u5f97\u66f4\u4f4e\u7684\u5206\u6570\u3002**\u8fd9\u4e00\u7ed3\u679c\u610f\u5473\u7740\u5f88\u96be\u5355\u72ec\u4ece\u8f93\u5165\u56fe\u50cf\u4e2d\u63d0\u53d6\u4f4d\u7f6e\u4fe1\u606f\u3002PosENet\u4ec5\u5728\u4e0e\u6df1\u5ea6\u7f16\u7801\u5668\u7f51\u7edc\u8026\u5408\u65f6\u624d\u80fd\u63d0\u53d6\u4e0e\u771f\u503c\u4f4d\u7f6e\u56fe\u4e00\u81f4\u7684\u4f4d\u7f6e\u4fe1\u606f**\u3002\\n\u5982\u524d\u6240\u8ff0\uff0c\u9274\u4e8e\u4e0e\u8f93\u5165\u7684\u76f8\u5173\u6027\u5df2\u88ab\u5ffd\u7565\uff0c\u751f\u6210\u7684\u771f\u503c\u56fe\u53ef\u88ab\u89c6\u4e3a\u4e00\u79cd\u968f\u673a\u5316\u6d4b\u8bd5\u3002\u7136\u800c\uff0c\u6d4b\u8bd5\u96c6\u5728\u4e0d\u540c\u7684\u771f\u503c\u6a21\u5f0f\u4e0a\u7684\u9ad8\u6027\u80fd\u8868\u660e\uff0c\u8be5\u6a21\u578b\u4e0d\u662f\u76f2\u76ee\u5730\u8fc7\u5ea6\u62df\u5408\u566a\u58f0\uff0c\u800c\u662f\u63d0\u53d6\u771f\u5b9e\u4f4d\u7f6e\u4fe1\u606f\u3002\u7136\u800c\uff0c\u4e0e\u5176\u4ed6\u6a21\u5f0f\u76f8\u6bd4\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\u91cd\u590d\u6a21\u5f0f\uff08HS\u548cVS\uff09\u7684\u6027\u80fd\u8f83\u4f4e\uff0c\u8fd9\u662f\u7531\u4e8e\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0c\u7279\u522b\u662f\u771f\u503c\u548c\u7edd\u5bf9\u4f4d\u7f6e\u4e4b\u95f4\u7f3a\u4e4f\u76f8\u5173\u6027\uff08\u88681\u7684\u6700\u540e\u4e24\u884c\uff09\u3002H\u6a21\u5f0f\u53ef\u89c6\u4e3a\u6b63\u5f26\u6ce2\u7684\u56db\u5206\u4e4b\u4e00\uff0c\u800c\u6761\u7eb9\u6a21\u5f0f\uff08HS\u548cVS\uff09\u53ef\u89c6\u4e3a\u6b63\u5f26\u6ce2\u7684\u91cd\u590d\u5468\u671f\uff0c\u8fd9\u9700\u8981\u66f4\u6df1\u5165\u7684\u8ba8\u8bba\u3002\\n\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216004257.png)\\n\\n\u4e0a\u56fe\u663e\u793a\u4e86\u8de8\u4e0d\u540c\u6a21\u5f0f\u7684\u51e0\u79cd\u4f53\u7cfb\u7ed3\u6784\u7684\u5b9a\u6027\u7ed3\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0eH\u3001G\u548cHS\u6a21\u5f0f\u5bf9\u5e94\u7684\u9884\u6d4b\u548c\u771f\u503c\u4f4d\u7f6e\u56fe\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u8fd9\u8fdb\u4e00\u6b65\u63ed\u793a\u4e86\u8fd9\u4e9b\u7f51\u7edc\u4e2d\u4f4d\u7f6e\u4fe1\u606f\u7684\u5b58\u5728\u3002\u5b9a\u91cf\u548c\u5b9a\u6027\u7ed3\u679c\u6709\u529b\u5730\u9a8c\u8bc1\u4e86\u5047\u8bbe\uff0c\u5373\u4f4d\u7f6e\u4fe1\u606f\u9690\u5f0f\u7f16\u7801\u5728\u6bcf\u4e2a\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u6ca1\u6709\u4efb\u4f55\u660e\u786e\u7684\u76d1\u7763\u3002\\n\\n\u6b64\u5916\u8fd9\u91cc\u4e5f\u5c55\u793a\u4e86\u4e0d\u540c\u67b6\u6784\u7684\u7f51\u7edc\u5bf9\u4e8e\u4f4d\u7f6e\u7684\u7f16\u7801\u80fd\u529b\u4e0d\u540c\u6216\u8005\u8bed\u4e49\u5185\u5bb9\u7684\u5148\u9a8c\u77e5\u8bc6\u7a0b\u5ea6\u4e0d\u540c\u3002\\n\\n### \u5206\u6790POSENET\\n\\n\u5728\u4e0a\u8ff0\u4e2d\uff0c\u4f4d\u7f6e\u7f16\u7801\u7f51\u7edc\u53ea\u7528\u4e86\u4e00\u5c42\u4e0d\u540c\u5927\u5c0f\u7684\u5377\u79ef\u5c42\u8fdb\u884c\u5b9e\u9a8c\u3002\u4ec0\u4e48\u80fd\u5f71\u54cd\u4f4d\u7f6e\u7f16\u7801\u7f51\u7edc\u7684\u6027\u80fd\u5462\uff1f\\n\uff081\uff09\u6539\u53d8\u5185\u6838\u5927\u5c0f\u5728\u4f4d\u7f6e\u7f16\u7801\u6a21\u5757\u4e2d\\n\uff082\uff09\u6dfb\u52a0\u5377\u79ef\u5c42\u7684\u5806\u6808\u957f\u5ea6\uff0c\u4ee5\u4ece\u591a\u7ea7\u7279\u5f81\u4e2d\u63d0\u53d6\u4f4d\u7f6e\u4fe1\u606f\u3002\\n\\n**\u5806\u53e0\u5c42\u7684\u5f71\u54cd\uff1a**\xa0 \xa0 \u88681\u4e2d\u7684\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\u5b58\u5728\u4ece\u5bf9\u8c61\u5206\u7c7b\u4efb\u52a1\u4e2d\u5b66\u4e60\u5230\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0c\u6539\u53d8\u4e86PosENet\u7684\u8bbe\u8ba1\uff0c\u4ee5\u68c0\u9a8c\u662f\u5426\u6709\u53ef\u80fd\u66f4\u51c6\u786e\u5730\u63d0\u53d6\u9690\u85cf\u4f4d\u7f6e\u4fe1\u606f\u3002\u5148\u524d\u5b9e\u9a8c\uff08\u88681\uff09\u4e2d\u4f7f\u7528\u7684PosENet\u53ea\u6709\u4e00\u4e2a\u5377\u79ef\u5c42\uff0c\u5176\u5185\u6838\u5927\u5c0f\u4e3a3\xd73\u3002\\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4e00\u7ec4\u4e0d\u540c\u957f\u5ea6\u7684\u5377\u79ef\u5c42\u5e94\u7528\u4e8ePosENet\uff0c\u5e76\u5728\u88682\uff08a\uff09\u4e2d\u62a5\u544a\u5b9e\u9a8c\u7ed3\u679c\u3002\\n\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216005333.png)\\n\\n\u5982\u88682\u6240\u793a\uff0c\u6211\u4eec\u5728\u5806\u53e0\u591a\u5c42\u65f6\u5c06\u5185\u6838\u5927\u5c0f\u56fa\u5b9a\u57283\xd73\u3002\u5728PosENet\u4e2d\u5e94\u7528\u66f4\u591a\u5c42\u53ef\u4ee5\u6539\u5584\u6240\u6709\u7f51\u7edc\u4f4d\u7f6e\u4fe1\u606f\u7684\u8bfb\u51fa\u3002\u4e00\u4e2a\u539f\u56e0\u53ef\u80fd\u662f\u5806\u53e0\u591a\u4e2a\u5377\u79ef\u6ee4\u6ce2\u5668\u5141\u8bb8\u7f51\u7edc\u5177\u6709\u66f4\u5927\u7684\u6709\u6548\u611f\u53d7\u91ce\uff0c\u4f8b\u5982\uff0c\u4e24\u4e2a3\xd73\u5377\u79ef\u5c42\u5728\u7a7a\u95f4\u4e0a\u7b49\u4e8e\u4e00\u4e2a5\xd75\u5377\u79ef\u5c42\u3002\u53e6\u4e00\u79cd\u53ef\u80fd\u6027\u662f\uff0c\u4f4d\u7f6e\u4fe1\u606f\u7684\u8868\u793a\u65b9\u5f0f\u53ef\u80fd\u9700\u8981\u4e00\u9636\u4ee5\u4e0a\u7684\u63a8\u65ad\uff08\uff1f\uff09\u3002\\n\\n**\u4e0d\u540c\u6838\u5927\u5c0f\u7684\u5f71\u54cd\uff1a** \u6211\u4eec\u4ec5\u4f7f\u7528\u4e00\u4e2a\u5177\u6709\u4e0d\u540c\u5185\u6838\u5927\u5c0f\u7684\u5377\u79ef\u5c42\u6765\u8fdb\u4e00\u6b65\u9a8c\u8bc1PosENet\uff0c\u5e76\u5728\u88682\uff08b\uff09\u4e2d\u62a5\u544a\u4e86\u5b9e\u9a8c\u7ed3\u679c\u3002\u4ece\u88682\uff08b\uff09\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u4e0e\u8f83\u5c0f\u7684\u5185\u6838\u5927\u5c0f\u76f8\u6bd4\uff0c\u8f83\u5927\u7684\u5185\u6838\u5927\u5c0f\u53ef\u80fd\u6355\u83b7\u66f4\u591a\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002\u8fd9\u4e00\u53d1\u73b0\u610f\u5473\u7740\u4f4d\u7f6e\u4fe1\u606f\u53ef\u80fd\u5728\u7a7a\u95f4\u4e0a\u5206\u5e03\u5728\u5c42\u5185\u548c\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u56e0\u4e3a\u66f4\u5927\u7684\u611f\u53d7\u91ce\u53ef\u4ee5\u66f4\u597d\u5730\u89e3\u6790\u4f4d\u7f6e\u4fe1\u606f\u3002(This finding implies that the position information may be distributed spatially within layers and in feature space as a larger receptive field can better resolve position information.)\\n\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216005525.png)\\n\\n### \u4f4d\u7f6e\u4fe1\u606f\u50a8\u5b58\u5728\u54ea\u91cc\\n\\n\u4e0a\u8ff0\u5b9e\u9a8c\u8868\u660e\uff0c\u4f4d\u7f6e\u4fe1\u606f\u662f\u5728\u9884\u8bad\u7ec3\u7684CNN\u6a21\u578b\u4e2d\u7f16\u7801\u7684\u3002\u89c2\u5bdf\u4f4d\u7f6e\u4fe1\u606f\u5728\u5404\u5c42\u4e2d\u7684\u5206\u5e03\u4e5f\u540c\u6837\u6709\u610f\u601d\u3002\\n\u4e0b\u9762\u5b9e\u9a8c\u5206\u522b\u5bf9\u63d0\u53d6\u7684\u7279\u5f81$f_1pos$\u3001$f^2pos$\u3001$f^3pos$\u3001$f^4pos$\u3001$f^5pos$\u8fdb\u884cPosENet\u8bad\u7ec3\uff0c\u4ee5\u68c0\u67e5\u54ea\u4e00\u5c42\u7f16\u7801\u4e86\u66f4\u591a\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002\\n\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216005951.png)\\n\\n\u5982\u4e0a\u8868\u6240\u793a\uff0c\u4e0e$f^1pos$\u76f8\u6bd4\uff0c\u4f7f\u7528$f^5pos$\u53d6\u5f97\u6700\u4f73\u7684\u6027\u80fd\u3002\u8fd9\u53ef\u80fd\u90e8\u5206\u662f\u7531\u4e8e\u4ece\u8f83\u6df1\u7684\u5c42\u76f8\u6bd4\u66f4\u6d45\u7684\u5c42\u63d0\u53d6\u4e86\u66f4\u591a\u7684\u7279\u5f81\u56fe\uff08\u5206\u522b\u4e3a512\u548c64\u5c42\uff09\u3002\u7136\u800c\uff0c\u8fd9\u5f88\u53ef\u80fd\u8868\u660e\u5728\u7f51\u7edc\u7684\u6700\u6df1\u5c42\u4e2d\u4f4d\u7f6e\u4fe1\u606f\u7684\u7f16\u7801\u66f4\u5f3a\uff0c\u5176\u4e2d\u8be5\u4fe1\u606f\u7531\u9ad8\u7ea7\u8bed\u4e49\u5171\u4eab\u3002\u540c\u65f6\u8fdb\u4e00\u6b65\u7814\u7a76\u4e86VGG16\u7684\u8fd9\u79cd\u6548\u5e94\uff0c\u5176\u4e2d\u6700\u4e0a\u9762\u7684\u4e24\u5c42\uff08$f^4pos$\u548c$f^5pos$\uff09\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u7279\u5f81\u3002\u66f4\u6709\u8da3\u7684\u662f\uff0c$f^5pos$\u6bd4$f^4pos$\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002\u8fd9\u4e00\u6bd4\u8f83\u8868\u660e\uff0c\u66f4\u6df1\u5c42\u6b21\u7684\u7279\u5f81\u5305\u542b\u66f4\u591a\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u8fd9\u9a8c\u8bc1\u4e86\u9876\u5c42\u89c6\u89c9\u7279\u5f81\u4e0e\u5168\u5c40\u7279\u5f81\u76f8\u5173\u8054\u7684\u666e\u904d\u89c2\u70b9(top level visual featuresare associated with global features.)\u3002\\n\\n## \u4f4d\u7f6e\u4fe1\u606f\u6765\u81ea\u54ea\u91cc\\n\\n\u96f6\u586b\u5145\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5377\u79ef\u5c42\uff0c\u4ee5\u4fdd\u6301\u8f93\u5165\u548c\u8f93\u51fa\u7684\u76f8\u540c\u7a7a\u95f4\u5c3a\u5bf8\uff0c\u5728\u6c34\u5e73\u548c\u5782\u76f4\u4e24\u4e2a\u8f74\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5904\u6dfb\u52a0\u8bb8\u591a\u96f6\u3002\u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u4e00\u70b9\uff0c\u4f5c\u8005\u505a\u4e86\u5982\u4e0b\u5b9e\u9a8c\u3002\\n\u5220\u9664\u4e86VGG16\u4e2d\u5b9e\u73b0\u7684\u6240\u6709\u586b\u5145\u673a\u5236\uff0c\u4f46\u4ecd\u7136\u4f7f\u7528ImageNet\u9884\u8bad\u7ec3\u6743\u91cd\u521d\u59cb\u5316\u6a21\u578b\u3002\u8bf7\u6ce8\u610f\uff0c\u4ec5\u4f7f\u7528\u57fa\u4e8eVGG\u7684PosENet\u6267\u884c\u6b64\u5b9e\u9a8c\uff0c\u56e0\u4e3a\u5220\u9664ResNet\u6a21\u578b\u4e0a\u7684\u586b\u5145\u5c06\u5bfc\u81f4\u8df3\u8fde\u7684\u5927\u5c0f\u4e0d\u4e00\u81f4\u3002\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216010613.png)\\n\\n\u5728PosENet\u4e2d\u4e0d\u4f7f\u7528\u586b\u5145\u7684\u6548\u679c\u3002**\u4ece\u88684\u53ef\u4ee5\u770b\u51fa\uff0c\u6ca1\u6709\u96f6\u586b\u5145\u7684VGG16\u6a21\u578b\u5728\u81ea\u7136\u56fe\u50cf\u4e0a\u5b9e\u73b0\u7684\u6027\u80fd\u8fdc\u8fdc\u4f4e\u4e8e\u9ed8\u8ba4\u8bbe\u7f6e\uff08padding=1\uff09**\u3002\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u901a\u8fc7\u5e94\u7528\u96f6\u586b\u5145\u5411PosENet\u5f15\u5165\u4f4d\u7f6e\u4fe1\u606f\u3002padding=1\u7684PosENet\uff08\u5728\u5e27\u5468\u56f4\u8fde\u63a5\u4e00\u4e2a\u96f6\uff09\u6bd4\u539f\u59cb\uff08padding=0\uff09\u5b9e\u73b0\u66f4\u9ad8\u7684\u6027\u80fd\u3002\u5f53\u6211\u4eec\u8bbe\u7f6epadding=2\u65f6\uff0c\u4f4d\u7f6e\u4fe1\u606f\u7684\u4f5c\u7528\u66f4\u52a0\u660e\u663e\u3002**\u8fd9\u4e5f\u9a8c\u8bc1\u4e86\u4e4b\u524d\u7684\u5b9e\u9a8c\uff0c\u8be5\u5b9e\u9a8c\u8868\u660ePosENet\u65e0\u6cd5\u63d0\u53d6\u660e\u663e\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u56e0\u4e3a\u6ca1\u6709\u5e94\u7528\u586b\u5145\uff0c\u5e76\u4e14\u4fe1\u606f\u662f\u4ece\u9884\u8bad\u7ec3\u7684CNN\u6a21\u578b\u7f16\u7801\u7684**\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5728\u4e4b\u524d\u7684\u5b9e\u9a8c\u4e2d\u6ca1\u6709\u5728PosENet\u4e2d\u5e94\u7528\u96f6\u586b\u5145\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u63a2\u7d22\u5728\u9884\u8bad\u7ec3\u6a21\u578b\u4e2d\u7f16\u7801\u4e86\u591a\u5c11\u4f4d\u7f6e\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4e0ePosENet\u7ed3\u5408\u3002\u56fe6\u793a\u51fa\u4e86\uff0c\u4f7f\u7528\u9ad8\u65af\u6a21\u5f0f\uff0c\u96f6\u586b\u5145\u7f16\u7801\u4f4d\u7f6e\u4fe1\u606f\u7684\u5f71\u54cd\u3002(Fig. 6 illustrates the impact of zero-padding on encoding position information subject to padding using a Gaussian pattern.)\\n\\n### one more thing\\n\\n\u56de\u60f3\u4e00\u4e0b\uff0c\u4f4d\u7f6e\u4fe1\u606f\u5e94\u8be5\u662f\u72ec\u7acb\u4e8e\u5185\u5bb9\u7684\u4e00\u79cd\u4fe1\u606f\uff0c\u5373\u4e0d\u7ba1\u8f93\u5165\u7684\u56fe\u7247\u8bed\u4e49\u5982\u4f55\uff0c\u5176\u4f4d\u7f6e\u4fe1\u606f\u90fd\u5e94\u5dee\u4e0d\u591a\u3002\u4f46\u662f\u5728\u8868\u4e00\u4e2d\u8868\u660e\uff0c\u56fe\u50cf\u4e2d\u7684\u8bed\u4e49\u4f1a\u5f71\u54cd\u4f4d\u7f6e\u6620\u5c04\u3002\u4e3a\u4e86\u53ef\u89c6\u5316\u8bed\u4e49\u7684\u5f71\u54cd\uff0c\u4f7f\u7528\u4ee5\u4e0b\u7b49\u5f0f\u8ba1\u7b97\u5185\u5bb9\u635f\u5931\u70ed\u56fe\uff1a\\n\\n$$\\n\\\\mathcal{L}=\\\\frac{|\\\\mathcal{G}^hpos-\\\\hat{f}^h_p|+|\\\\mathcal{G}^vpos-\\\\hat{f}^v_p|+|\\\\mathcal{G}^gpos-\\\\hat{f}^g_p|}{3}\\n$$\\n\u5176\u4e2d$\\\\hat{f}^h_p$\uff0c$\\\\hat{f}^v_p$\uff0c$\\\\hat{f}^g_p$\uff0c\u5206\u522b\u662f\u6c34\u5e73\u3001\u5782\u76f4\u548c\u9ad8\u65af\u6a21\u5f0f\u7684\u9884\u6d4b\u4f4d\u7f6e\u56fe\u3002\\n![](./src/How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode/Pasted-image-20220216013335.png)\\n\u5982\u56fe\u6240\u793a\uff0cPosENet\u7684\u70ed\u56fe\u5728\u5404\u4e2a\u89d2\u843d\u90fd\u6709\u8f83\u5927\u7684\u5185\u5bb9\u635f\u5931\u3002\u800cVGG\u548cResNet\u7684\u635f\u5931\u56fe\u66f4\u591a\u5730\u4e0e\u8bed\u4e49\u5185\u5bb9\u76f8\u5173\u3002\u7279\u522b\u662f\u5bf9\u4e8eResNet\uff0c\u5bf9\u8bed\u4e49\u5185\u5bb9\u7684\u6df1\u5165\u7406\u89e3\u4f1a\u5bfc\u81f4\u5728\u751f\u6210\u5e73\u6ed1\u68af\u5ea6\u65f6\u4ea7\u751f\u66f4\u5f3a\u7684\u5e72\u6270\u3002\u635f\u5931\u6700\u5927\u7684\u5206\u522b\u662f\u8138\u3001\u4eba\u3001\u732b\u3001\u98de\u673a\u548c\u82b1\u74f6\uff08\u4ece\u5de6\u5230\u53f3\uff09\u3002\u8fd9\u79cd\u53ef\u89c6\u5316\u53ef\u4ee5\u4f5c\u4e3a\u663e\u793a\u6a21\u578b\u5173\u6ce8\u54ea\u4e9b\u533a\u57df\u7684\u66ff\u4ee3\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5728ResNet\u7684\u60c5\u51b5\u4e0b\u3002\\n\\n## \u603b\u7ed3\\n\\n\u672c\u6587\u63a2\u8ba8\u4e86\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u7edd\u5bf9\u4f4d\u7f6e\u4fe1\u606f\u9690\u5f0f\u7f16\u7801\u7684\u5047\u8bbe\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u4f4d\u7f6e\u4fe1\u606f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u53ef\u7528\u7684\u3002\u800c\u66f4\u5927\u7684\u611f\u53d7\u91ce\u6216\u4f4d\u7f6e\u4fe1\u606f\u7684\u975e\u7ebf\u6027\u8bfb\u51fa\u8fdb\u4e00\u6b65\u589e\u5f3a\u4e86\u7edd\u5bf9\u4f4d\u7f6e\u7684\u8bfb\u51fa\u3002\u5b9e\u9a8c\u8fd8\u8868\u660e\uff0c\u5f53\u4e0d\u5b58\u5728\u8bed\u4e49\u7ebf\u7d22\u65f6\uff0c\u6839\u636e\u6765\u81ea\u8bed\u4e49\u4fe1\u606f\u7684\u5e72\u6270\u7684\u5b9e\u9a8c\u8868\u660e\u5bf9what\uff08\u8bed\u4e49\u7279\u5f81\uff09\u548cwhere\uff08\u7edd\u5bf9\u4f4d\u7f6e\uff09\u8fdb\u884c\u8054\u5408\u7f16\u7801\uff0c\u6062\u590d\u4f4d\u7f6e\u4fe1\u606f\u4e5f\u662f\u53ef\u80fd\u7684\uff08Experiments also reveal that this recovery is possible when no semantic cues are present and interference from semantic information suggests joint encoding of what (semantic features) and where (absolute position\uff0c`\u4e0d\u592a\u660e\u767d`\uff09\u3002**\u7ed3\u679c\u8868\u660e\uff0c\u96f6\u586b\u5145\u548c\u8fb9\u754c\u4f5c\u4e3a\u951a\u5b9a\uff0c\u7a7a\u95f4\u4fe1\u606f\u4ece\u4e2d\u884d\u751f\u51fa\u6765\uff0c\u5e76\u968f\u7740\u7a7a\u95f4\u7279\u5f81\u63d0\u53d6\u7684\u53d1\u751f\u6700\u7ec8\u4f20\u64ad\u5230\u6574\u4e2a\u56fe\u50cf**(zero padding and borders as an anchor from which spatial information is derived and eventually propagated over the whole image as spatial abstraction occurs )\u3002"},{"id":"/[52]Axiomatic-Attribution-for-Deep-Networks","metadata":{"permalink":"/blog/[52]Axiomatic-Attribution-for-Deep-Networks","editUrl":"https://github.dev/neet-cv/ml.akasaki.space/blob/master/blog/[52]Axiomatic-Attribution-for-Deep-Networks.md","source":"@site/blog/[52]Axiomatic-Attribution-for-Deep-Networks.md","title":"Axiomatic Attribution for Deep Networks","description":"Mukund Sundararajan, Ankur Taly, Qiqi Yan","date":"2023-12-31T09:31:53.000Z","formattedDate":"2023\u5e7412\u670831\u65e5","tags":[{"label":"attribution","permalink":"/blog/tags/attribution"},{"label":"visualization","permalink":"/blog/tags/visualization"}],"readingTime":9.88,"hasTruncateMarker":true,"authors":[{"name":"PuQing","title":"intro * new","url":"https://github.com/AndPuQing","imageURL":"https://github.com/AndPuQing.png","key":"puqing"}],"frontMatter":{"title":"Axiomatic Attribution for Deep Networks","authors":["puqing"],"tags":["attribution","visualization"]},"prevItem":{"title":"How much Position Information Do Convolutional Neural Networks Encode?","permalink":"/blog/[51]How-much-Position-Information-Do-Convolutional-Neural-Networks-Encode"}},"content":"[Mukund Sundararajan](https://arxiv.org/search/cs?searchtype=author&query=Sundararajan%2C+M), [Ankur Taly](https://arxiv.org/search/cs?searchtype=author&query=Taly%2C+A), [Qiqi Yan](https://arxiv.org/search/cs?searchtype=author&query=Yan%2C+Q)\\n\\n> We study the problem of attributing the prediction of a deep network to its input features, a problem previously studied by several other works. We identify two fundamental axioms---Sensitivity and Implementation Invariance that attribution methods ought to satisfy. We show that they are not satisfied by most known attribution methods, which we consider to be a fundamental weakness of those methods. We use the axioms to guide the design of a new attribution method called Integrated Gradients. Our method requires no modification to the original network and is extremely simple to implement; it just needs a few calls to the standard gradient operator. We apply this method to a couple of image models, a couple of text models and a chemistry model, demonstrating its ability to debug networks, to extract rules from a network, and to enable users to engage with models better.\\n\\n## \u7b80\u4ecb\\n\\n\u672c\u6587\u4ecb\u7ecd\u4e86\u4e00\u79cd\u795e\u7ecf\u7f51\u7edc\u7684\u53ef\u89c6\u5316\u65b9\u6cd5\uff1a`\u79ef\u5206\u68af\u5ea6\uff08Integrated Gradients\uff09`\uff0c\u662f\u4e00\u7bc7 2016-2017 \u5e74\u95f4\u7684\u5de5\u4f5c\u3002\\n\\n\u6240\u8c13\u53ef\u89c6\u5316\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8f93\u5165 $x$ \u4ee5\u53ca\u6a21\u578b $F(x)$\uff0c\u60f3\u529e\u6cd5\u6307\u51fa $x$ \u7684\u54ea\u4e9b\u5206\u91cf\u5bf9\u6a21\u578b\u7684\u9884\u6d4b\u6709\u8f83\u5927\u7684\u5f71\u54cd\uff0c\u6216\u8005\u8bf4 $x$ \u5404\u4e2a\u5206\u91cf\u7684\u91cd\u8981\u6027\u505a\u4e2a\u6392\u5e8f\uff0c\u800c\u4e13\u4e1a\u7684\u8bdd\u672f\u5c31\u662f`\u5f52\u56e0`(Attribution)\u3002\u4e00\u4e2a\u6734\u7d20\u7684\u601d\u8def\u662f\u76f4\u63a5\u4f7f\u7528\u68af\u5ea6 $\\\\nabla _{x}F(x)$ \u6765\u4f5c\u4e3a $x$\u5404\u4e2a\u5206\u91cf\u7684\u91cd\u8981\u6027\u6307\u6807\uff0c\u800c\u79ef\u5206\u68af\u5ea6\u662f\u5bf9\u5b83\u7684\u6539\u8fdb\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u6734\u7d20\u68af\u5ea6\\n\\n\u8003\u8651\u4e00\u4e2a\u56fe\u7247\u5206\u7c7b\u7cfb\u7edf\uff0c\u5c06\u8f93\u5165\u56fe $x$ \u5206\u4e3a$C$\u4e2a\u7c7b\u522b\u4e2d\u7684\u4e00\u4e2a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7c7b$c\\\\in C$\uff0c\u90fd\u6709\u4e00\u4e2a\u51fd\u6570$S_c(x)$\u5c06\u8f93\u5165$x$\u6620\u5c04\u5230\u7c7b\u522b\u7a7a\u95f4\u7684\u5f97\u5206\uff0c\u5206\u7c7b\u7ed3\u679c\u5219\u53d6\u51b3\u4e8e\u54ea\u4e2a\u6620\u5c04\u503c\u6700\u5927\uff0c\u5373\\n\\n$$\\nclass(x)=\\\\argmax_{c\\\\in C} S_c(x)\\n$$\\n\\n\u5982\u679c$S_c(x)$\u672c\u4e8b\u5c31\u662f\u53ef\u5bfc\u7684\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u76f4\u63a5\u5bf9$S_c(x)$\u6c42\u5bfc\uff0c\u5373\\n\\n$$\\nM_c(x)=\\\\nabla_x S_c(x)\\n$$\\n\\n\u8fd9\u91cc\u7684$M_c(x)$\u8868\u793a$x$\u4e0a\u7684\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u7684\u5fae\u7b11\u6270\u52a8\u5bf9\u7c7b\u522b$c$\u5f97\u5206\u7684\u5f71\u54cd\u3002\\n\\n\u8fd9\u79cd\u65b9\u6cd5\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\u786e\u5b9e\u80fd\u663e\u793a\u51fa\u4e0e\u5206\u7c7b\u7ed3\u679c\u76f8\u5173\u7684\u533a\u57df\uff0c\u4f46\u6c42\u5f97\u7684 saliency maps \u901a\u5e38\u5728\u89c6\u89c9\u4e0a\u6709\u5f88\u591a\u7684\u566a\u70b9(\u5bf9\u8fd9\u4e9b\u566a\u70b9\u4f5c\u7528\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\uff0c\u6709\u53ef\u80fd\u8fd9\u4e9b\u566a\u70b9\u770b\u4f3c\u968f\u673a\uff0c\u5b9e\u9645\u4e0a\u5bf9\u7f51\u7edc\u7684\u8fd0\u4f5c\u6709\u5f88\u5927\u7684\u5f71\u54cd\uff0c\u4e5f\u6709\u53ef\u80fd\u8fd9\u4e9b\u566a\u70b9\u672c\u8eab\u5c31\u4e0d\u91cd\u8981)\uff0c\u4f46\u6b63\u662f\u56e0\u4e3a\u8fd9\u4e9b\u566a\u70b9\u7684\u5b58\u5728\uff0c\u5bfc\u81f4\u53ea\u80fd\u5927\u81f4\u786e\u5b9a\u76f8\u5173\u533a\u57df\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u80fd\u7ed9\u51fa\u7b26\u5408\u4eba\u7c7b\u7406\u89e3\u7684\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\uff1a\\n\\n![image](./src/Axiomatic-Attribution-for-Deep-Networks/grad.png)\\n\\n\u4ea7\u751f\u566a\u70b9\u7684\u53ef\u80fd\u539f\u56e0\u5728\u4e8e$S_c$\u51fd\u6570\u7684\u5bfc\u6570\u5728\u5c0f\u8303\u56f4\u5185\u6709\u5f88\u5927\u7684\u6ce2\u52a8\uff0c\u6bd5\u7adf\u6ca1\u6709\u4efb\u4f55\u7406\u7531\u8981\u6c42\u8be5\u51fd\u6570\u662f\u5e73\u6ed1\u7684\uff0c\u800c\u4e14\u7f51\u7edc\u901a\u5e38\u91c7\u7528$ReLU$\u4f5c\u4e3a\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\\n\u6570\uff0c\u6240\u4ee5$S_x$\u751a\u81f3\u4e0d\u662f\u8fde\u7eed\u53ef\u5bfc\u7684\u3002\\n\\n\u4e0b\u9762\u7ed9\u4e00\u7279\u5b9a\u56fe\u7247\u52a0\u4e00\u5fae\u5c0f\u7684\u6270\u52a8\uff0c\u89c2\u5bdf\u5176\u4e2d\u4e00\u4e2a\u50cf\u7d20\u7684\u504f\u5bfc\u6570\u7684\u53d8\u5316\u60c5\u51b5\uff1a\\n\\n![image](https://upload-images.jianshu.io/upload_images/13184001-16a9f43eefa626d9.png?imageMogr2/auto-orient/strip|imageView2/2/w/610/format/webp)\\n\\n\u4ece\u6570\u5b66\u5c42\u9762\u63a8\u5bfc\uff0c\u5b83\u5c31\u662f\u57fa\u4e8e\u6cf0\u52d2\u5c55\u5f00\\n\\n$$\\n\\\\begin{align}\\nF(x+\\\\Delta x)-F(x)&\\\\approx \\\\left \\\\langle \\\\nabla_xF(x),\\\\Delta x \\\\right \\\\rangle =\\\\sum_i[\\\\nabla_xF(x)]_i\\\\Delta x_i\\n\\\\end{align}\\n$$\\n\\n\u5176\u4e2d$\\\\Delta x_i$\u662f\u4e00\u4e2a\u5fae\u5c0f\u7684\u6270\u52a8\uff0c$\\\\Delta x_i=\\\\epsilon_i$\uff0c$\\\\epsilon_i$\u662f\u4e00\u4e2a\u5fae\u5c0f\u7684\u968f\u673a\u566a\u58f0\u3002\\n\\n$\\\\nabla_xF(x)$\u662f\u5927\u5c0f\u8ddf$x$\u4e00\u6837\u7684\u5411\u91cf\uff0c\u8fd9\u91cc$[\\\\nabla_xF(x)]_i$\u4e3a\u5b83\u7684\u7b2c$i$\u4e2a\u5206\u91cf\uff0c\u90a3\u4e48\u5bf9\u4e8e\u540c\u6837\u5927\u5c0f\u7684$\\\\Delta x_i$\uff0c$[\\\\nabla_xF(x)]_i$\u7684\u7edd\u5bf9\u503c\u8d8a\u5927\uff0c\u90a3\u4e48$F(x+\\\\Delta x_i)$\u76f8\u5bf9$F(x)$\u7684\u5f71\u54cd\u8d8a\u5927\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\\n\\n> $[\\\\nabla_xF(x)]_i$\u8861\u91cf\u4e86\u6a21\u578b\u5bf9\u8f93\u5165\u7684\u7b2c$i$\u4e2a\u5206\u91cf\u7684\u654f\u611f\u7a0b\u5ea6\uff0c\u6240\u4ee5\u7528$|[\\\\nabla_xF(x)]_i|$\u4f5c\u4e3a\u7b2c$i$\u4e2a\u5206\u91cf\u7684\u91cd\u8981\u6027\u6307\u6807\u3002\\n\\n\u8fd9\u79cd\u601d\u8def\u6bd4\u8f83\u7b80\u5355\uff0c\u5f88\u591a\u65f6\u5019\u5b83\u786e\u5b9e\u53ef\u4ee5\u6210\u529f\u89e3\u91ca\u4e00\u4e9b\u6a21\u578b\uff0c\u4f46\u662f\u5b83\u4e5f\u6709\u660e\u663e\u7684\u7f3a\u70b9\u3002\u4e00\u65e6\u8fdb\u5165\u5230\u4e86\u9971\u548c\u533a(\u5178\u578b\u7684\u5c31\u662f ReLU \u7684\u8d1f\u534a\u8f74)\uff0c\u68af\u5ea6\u5c31\u4e3a 0 \u4e86\uff0c\u90a3\u5c31\u63ed\u793a\u4e0d\u51fa\u4ec0\u4e48\u6709\u6548\u4fe1\u606f\u4e86\u3002\\n\\n\u6309\u7167\u8bba\u6587\u4e2d\u7684\u63cf\u8ff0\u5c31\u662f\u8bf4\u8fdd\u53cd\u4e86$Sensitivity$\u516c\u7406\u3002\\n\\n\u516c\u7406: $Sensitivity$\\n\\n> \u5b9a\u4e49\uff1a\u5982\u679c\u5bf9\u4e8e\u6240\u6709\u4ec5\u5728\u4e00\u4e2a\u7279\u5f81\u4e0a\u5177\u6709\u4e0d\u540c\u53d6\u503c\u7684\u8f93\u5165 ($input$) \u548c\u57fa\u7ebf $(baseline)$ \uff0c\u5e76\u4e14\u6a21\u578b\u4e3a\u4e24\u8005\u7ed9\u51fa\u4e86\u4e0d\u540c\u7684\u9884\u6d4b\u3002\u90a3\u4e48\uff0c\u90a3\u4e2a\u4e0d\u540c\u53d6\u503c\u7684\u7279\u5f81\u5e94\u8be5\u88ab\u8d4b\u4e88\u4e00\u4e2a\u975e 0 \u5f52\u56e0\u3002\u82e5\u4e00\u4e2a\u5f52\u56e0\u65b9\u6cd5\u6ee1\u8db3\u4e0a\u9762\u7684\u8981\u6c42\uff0c\u5219\u79f0\u8be5\u5f52\u56e0\u65b9\u6cd5\u6ee1\u8db3 $Sensitivity$\u3002\\n\\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u5355\u53d8\u91cf$ReLU$\u7f51\u7edc\\n\\n$$\\nf(x)=1-ReLU(1-x)=\\\\left\\\\{\\\\begin{matrix}\\nx,x<1\\\\\\\\\\n1,x\\\\geq 1\\n\\\\end{matrix}\\\\right.\\n$$\\n\\n\u5047\u8bbe\u57fa\u7ebf$(baseline)$\u4e3a$x=0$\u5e76\u4e14\u8f93\u5165$x=2$\uff0c\u90a3\u4e48\u663e\u7136$f(0)=0,f(2)=1$\u3002\u4e0b\u9762\u68c0\u6d4b\u662f\u5426\u6ee1$Sensitivity$\u516c\u7406\uff1a\\n\\n\u9996\u5148\uff0c\u8f93\u5165$x=2$\u548c\u57fa\u7ebf$x=0$\u4e0d\u540c\uff1b\u5176\u6b21\uff0c\u8f93\u5165$f(x=2)=1$\u4e0e\u57fa\u7ebf$f(x=0)=0$\u4e5f\u4e0d\u540c\uff1b\u4e0d\u8fdd\u6cd5$Sensitivity$\u516c\u7406\u7684\u5f52\u56e0\u65b9\u6cd5\u5e94\u8be5\u4e3a\u8f93\u5165$x$\u5f52\u56e0\u4e00\u4e2a\u975e 0 \u503c\uff0c\u4f46\u662f\u68af\u5ea6\u5728$x=2$\u65f6\u4e3a 0\uff0c\u6240\u4ee5\u4e0d\u6ee1\u8db3$Sensitivity$\u516c\u7406\u3002\\n\\n## \u79ef\u5206\u68af\u5ea6\\n\\n### \u53c2\u7167\u80cc\u666f\\n\\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u6362\u4e2a\u89d2\u5ea6\u6765\u7406\u89e3\u539f\u59cb\u95ee\u9898\uff1a\u6211\u4eec\u7684\u76ee\u7684\u662f\u627e\u51fa\u6bd4\u8f83\u91cd\u8981\u7684\u5206\u91cf\uff0c\u4f46\u662f\u8fd9\u4e2a\u91cd\u8981\u6027\u4e0d\u5e94\u8be5\u662f\u7edd\u5bf9\u7684\uff0c\u800c\u5e94\u8be5\u662f\u76f8\u5bf9\u7684\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u8981\u627e\u51fa\u8fd1\u6765\u6bd4\u8f83\u70ed\u95e8\u7684\u6d41\u884c\u8bcd\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u5355\u6839\u636e\u8bcd\u9891\u6765\u627e\uff0c\u4e0d\u7136\u627e\u51fa\u6765\u80af\u5b9a\u662f\u201c\u7684\u201d\u3001\u201c\u4e86\u201d\u4e4b\u7c7b\u7684\u505c\u7528\u8bcd\uff0c\u6211\u4eec\u5e94\u5f53\u51c6\u5907\u4e00\u4e2a\u5e73\u8861\u8bed\u6599\u7edf\u8ba1\u51fa\u6765\u7684\u201c\u53c2\u7167\u201d\u8bcd\u9891\u8868\uff0c\u7136\u540e\u5bf9\u6bd4\u8bcd\u9891\u5dee\u5f02\u800c\u4e0d\u662f\u7edd\u5bf9\u503c\u3002\u8fd9\u5c31\u544a\u8bc9\u6211\u4eec\uff0c\u4e3a\u4e86\u8861\u91cf $x$ \u5404\u4e2a\u5206\u91cf\u7684\u91cd\u8981\u6027\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u6709\u4e00\u4e2a\u201c\u53c2\u7167\u80cc\u666f\u201d$\\\\bar{x}$\u3002\\n\\n\u5f88\u591a\u573a\u666f\u4e0b\u53ef\u4ee5\u7b80\u5355\u5730\u8ba9$\\\\bar{x}=0$\uff0c\u4f46\u8fd9\u672a\u5fc5\u662f\u6700\u4f18\u7684\uff0c\u6bd4\u5982\u8fd8\u53ef\u4ee5\u9009\u62e9$\\\\bar{x}$\u4e3a\u6240\u6709\u8bad\u7ec3\u6837\u672c\u7684\u5747\u503c\u3002\u6211\u4eec\u671f\u671b $F(\\\\bar{x})$\u5e94\u5f53\u7ed9\u4e00\u4e2a\u6bd4\u8f83\u5e73\u51e1\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u6bd4\u5982\u5206\u7c7b\u6a21\u578b\u7684\u8bdd\uff0c$\\\\bar{x}$\u7684\u9884\u6d4b\u7ed3\u679c\u5e94\u8be5\u662f\u6bcf\u4e2a\u7c7b\u7684\u6982\u7387\u90fd\u5f88\u5747\u8861\u3002\u4e8e\u662f\u6211\u4eec\u53bb\u8003\u8651 $F(\\\\bar{x})\u2212F(x)$\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u4e3a\u8fd9\u662f\u4ece $x$ \u79fb\u52a8\u5230 $\\\\bar{x}$ \u7684\u6210\u672c\u3002\\n\\n\u5982\u679c\u8fd8\u662f\u7528\u8fd1\u4f3c\u5c55\u5f00\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\\n\\n$$\\n\\\\begin{align}\\nF(\\\\bar{x})-F(x)\\\\approx\\\\sum_i[\\\\nabla_x F(x)]_i[\\\\bar{x}-x]_i\\n\\\\end{align}\\n$$\\n\\n\u5bf9\u4e8e\u4e0a\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6709\u4e00\u79cd\u65b0\u7684\u7406\u89e3\\n\\n> \u4ece $x$ \u79fb\u52a8\u5230 $\\\\bar{x}$ \u7684\u603b\u6210\u672c\u4e3a$F(\\\\bar{x})-F(x)$\uff0c\u5b83\u662f\u6bcf\u4e2a\u5206\u91cf\u7684\u6210\u672c\u4e4b\u548c\uff0c\u800c\u6bcf\u4e2a\u5206\u91cf\u7684\u6210\u672c\u8fd1\u4f3c\u4e3a$[\\\\nabla_x F(x)]_i[\\\\bar{x}-x]$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528$|[\\\\nabla_xF(x)]_i[\\\\bar{x}-x]_i|$\u4f5c\u4e3a\u6bcf\u4e2a$i$\u5206\u91cf\u7684\u91cd\u8981\u6027\u6307\u6807\u3002\\n\\n\u5f53\u7136\uff0c\u4e0d\u7ba1\u662f$[\\\\nabla_xF(x)]_i$\u8fd8\u662f$|[\\\\nabla_xF(x)]_i[\\\\bar{x}-x]_i|$\uff0c\u5b83\u4eec\u7684\u7f3a\u9677\u5728\u6570\u5b66\u4e0a\u90fd\u662f\u4e00\u6837\u7684\uff08\u68af\u5ea6\u6d88\u5931\uff09\uff0c\u4f46\u662f\u5bf9\u5e94\u7684\u89e3\u91ca\u7f3a\u5e76\u4e0d\u4e00\u6837\u3002\\n\\n### \u79ef\u5206\u6052\u7b49\\n\\n\u524d\u9762$|[\\\\nabla_xF(x)]_i[\\\\bar{x}-x]_i|$\u4e0d\u591f\u597d\u662f\u56e0\u4e3a\u516c\u5f0f$(2)$\u4e0d\u591f\u7cbe\u786e\uff0c\u90a3\u5982\u679c\u80fd\u627e\u5230\u4e00\u4e2a\u7cbe\u5ea6\u76f8\u7b49\u7684\u7c7b\u4f3c\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\u79ef\u5206\u68af\u5ea6\u6b63\u662f\u627e\u5230\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1a\\n\\n\u8bbe$\\\\gamma(a),a\\\\in[0,1]$\u4ee3\u8868\u8fde\u63a5$x$\u548c$\\\\bar{x}$\u7684\u4e00\u6761\u53c2\u6570\u66f2\u7ebf\uff0c\u5176\u4e2d$\\\\gamma(0)=x,\\\\gamma(1)=\\\\bar{x}$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6709\\n\\n$$\\n\\\\begin{aligned}\\nF(\\\\bar{x})-F(x) &=F(\\\\gamma(1))-F(\\\\gamma(0)) \\\\\\\\\\n&=\\\\int_{0}^{1} \\\\frac{d F(\\\\gamma(\\\\alpha))}{d \\\\alpha} d \\\\alpha \\\\\\\\\\n&=\\\\int_{0}^{1}\\\\left\\\\langle\\\\nabla_{\\\\gamma} F(\\\\gamma(\\\\alpha)), \\\\gamma^{\\\\prime}(\\\\alpha)\\\\right\\\\rangle d \\\\alpha \\\\\\\\\\n&=\\\\sum_{i} \\\\int_{0}^{1}\\\\left[\\\\nabla_{\\\\gamma} F(\\\\gamma(\\\\alpha))\\\\right]_{i}\\\\left[\\\\gamma^{\\\\prime}(\\\\alpha)\\\\right]_{i} d \\\\alpha\\n\\\\end{aligned}\\n$$\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u5f0f\u5b50(3)\u5177\u6709\u8ddf\u5f0f(2)\u76f8\u540c\u7684\u5f62\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u5c06$[\\\\nabla_xF(x)]_i[\\\\bar{x}-x]_i$\u6362\u6210\u4e86$\\\\int_{0}^{1}\\\\left[\\\\nabla_{\\\\gamma} F(\\\\gamma(\\\\alpha))\\\\right]_{i}\\\\left[\\\\gamma^{\\\\prime}(\\\\alpha)\\\\right]_{i} d \\\\alpha$\uff0c\u4f46\u5f0f\u5b50(3)\u7684\u662f\u7cbe\u786e\u7684\u79ef\u5206\u6052\u7b49\u5f0f\uff0c\u6240\u4ee5\u79ef\u5206\u68af\u5ea6\u5c31\u63d0\u51fa\u4f7f\u7528\\n\\n$$\\n\\\\begin{align}\\n\\\\left|\\\\int_{0}^{1}\\\\left[\\\\nabla_{\\\\gamma} F(\\\\gamma(\\\\alpha))\\\\right]_{i}\\\\left[\\\\gamma^{\\\\prime}(\\\\alpha)\\\\right]_{i} d \\\\alpha\\\\right|\\n\\\\end{align}\\n$$\\n\\n\u4f5c\u4e3a\u7b2c$i$\u4e2a\u5206\u91cf\u7684\u91cd\u8981\u6027\u5ea6\u91cf\u3002\u4f46\u662f\u8fd9\u4e24\u70b9\u95f4\u6709\u65e0\u6570\u8def\u5f84\uff0c\u5982\u56fe\\n\\n![image](./src/Axiomatic-Attribution-for-Deep-Networks/Snipaste_2022-06-23_18-36-00.png)\\n\\n\u4f5c\u4e3a\u6700\u7b80\u5355\u7684\u65b9\u6848\uff0c\u5c31\u662f\u5c06$\\\\gamma(a)$\u53d6\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u76f4\u7ebf\uff0c\u5373\\n\\n$$\\n\\\\gamma(a)=(1-a)x+a\\\\bar{x}\\n$$\\n\\n\u8fd9\u65f6\u5019\u79ef\u5206\u68af\u5ea6\u5177\u4f53\u5316\u4e3a\\n\\n$$\\n\\\\left|\\\\left[\\\\left.\\\\int_{0}^{1} \\\\nabla_{\\\\gamma} F(\\\\gamma(\\\\alpha))\\\\right|_{\\\\gamma(\\\\alpha)=(1-\\\\alpha) x+\\\\alpha \\\\bar{x}} d \\\\alpha\\\\right]_{i}[\\\\bar{x}-x]_{i}\\\\right|\\n$$\\n\\n\u6240\u4ee5\u76f8\u6bd4\u4e8e$|[\\\\nabla_xF(x)]_i[\\\\bar{x}-x]_i|$\uff0c\u7528\u68af\u5ea6\u7684\u79ef\u5206$\\\\int_{0}^{1}\\\\left[\\\\nabla_{\\\\gamma} F(\\\\gamma(\\\\alpha))\\\\right]_{i}\\\\left[\\\\gamma^{\\\\prime}(\\\\alpha)\\\\right]_{i} d \\\\alpha$\u66ff\u6362$\\\\nabla_xF(x)$\uff0c\u4e5f\u5c31\u662f\u4ece$x$\u5230$\\\\bar{x}$\u7684\u76f4\u7ebf\u4e0a\u6bcf\u4e00\u70b9\u7684\u68af\u5ea6\u7684\u5e73\u5747\u7ed3\u679c\u3002\u76f4\u89c2\u4e0a\u6765\u770b\uff0c\u7531\u4e8e\u8003\u8651\u4e86\u6574\u6761\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u7684\u68af\u5ea6\uff0c\u56e0\u6b64\u5c31\u4e0d\u518d\u67d0\u4e00\u70b9\u7684\u68af\u5ea6\u4e3a 0 \u7684\u9650\u5236\u4e86\u3002\\n\\n### \u79bb\u6563\u8fd1\u4f3c\\n\\n\u6700\u540e\u8fd9\u4e2a\u79ef\u5206\u7740\u5b9e\u6709\u70b9\u6050\u6016\u3002\u79ef\u5206\u68af\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6c42\u548c\u6765\u9ad8\u6548\u5730\u505a\u8fd1\u4f3c\u8ba1\u7b97\uff0c\u53ea\u9700\u8981\u5c06\u57fa\u7ebf$\\\\bar{x}$\u81f3$x$\u76f4\u7ebf\u4e0a\u8db3\u591f\u95f4\u9694\u70b9\u7684\u68af\u5ea6\u76f8\u8fd1\u5373\u53ef\u3002\\n\\n$$\\n\\\\left|\\\\left[\\\\frac{1}{n} \\\\sum_{k=1}^{n}\\\\left(\\\\left.\\\\nabla_{\\\\gamma} F(\\\\gamma(\\\\alpha))\\\\right|_{\\\\gamma(\\\\alpha)=(1-\\\\alpha) x+\\\\alpha \\\\bar{x}, \\\\alpha=k / n}\\\\right)\\\\right]_{i}[\\\\bar{x}-x]_{i}\\\\right|\\n$$\\n\\n## \u5b9e\u9a8c\u6548\u679c\\n\\n\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\u7684\u6548\u679c\\n\\n![image](./src/Axiomatic-Attribution-for-Deep-Networks//Snipaste_2022-06-23_18-37-52.png)\\n\\n\u5728\u81ea\u7136\u8bed\u8a00\u4e2d\u7684\u6548\u679c\\n\\n![image](./src/Axiomatic-Attribution-for-Deep-Networks/Snipaste_2022-06-23_18-40-31.png)\\n\\n## \u9644\u5f55\\n\\n[integrated_gradients](https://tensorflow.google.cn/tutorials/interpretability/integrated_gradients?hl=zh-cn)\\n\\n[Saliency Maps Picture](https://github.com/wmn7/ML_Practice/blob/master/2019_07_08/Saliency%20Maps/Saliency%20Maps%20Picture.ipynb)"}]}')}}]);